1631763351
Tekk!~tekk@89.45.224.74
Is there any workaround for switching on "characters"? I thought I'd just be able to do case 'A' => ... but the parser rejects that.

1631763367
Tekk!~tekk@89.45.224.74
Like is there some comptime function that'll translate a character literal into its int representation, I guess.

1631766358
Tekk!~tekk@89.45.224.74
Actually I don't think that's what happened but I'm not sure what I've hit

1631766399
Tekk!~tekk@89.45.224.74
https://dpaste.com/GX8PBJNNZ This errors out with "expected token => but found CharLiteral"

1631766403
Tekk!~tekk@89.45.224.74
Or IntLiteral if I use an int

1631766408
Tekk!~tekk@89.45.224.74
What am I doing wrong?

1631767076
discipulus!~discipulu@user/discipulus
Tekk: `case` is not a keyword

1631767767
Tekk!~tekk@89.45.224.74
That'd do it

1631767770
Tekk!~tekk@89.45.224.74
Thanks discipulus c:

1631783969
discipulus!~discipulu@user/discipulus
regarding "inline" I found andrew's issue "...why not to make functions inline" https://github.com/ziglang/zig/issues/3273

1631784134
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
is there a definitive build.zig guide for dependencies

1631784158
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
like, can i expose a build.Pkg from my libraries build.zig? I or is that relative to the applications build.zig?

1631784168
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
im gonna experiment and report back but it'd be nice if this was written up somewhere

1631784479
ifreund!~ifreund@user/ifreund
haze: unless your library needs do do something special like generate source files, it probably doesn't need a build.zig at all

1631784518
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
my library wraps libressl and zig has trouble finding tls.h in the system include paths, so i have functions to use pkg-config to get it

1631784548
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i also have a function to build it from source, and one top level function to just add an option to the builder and setup the step to use libressl (linking the right libraries, adding the right include paths)

1631784554
ifreund!~ifreund@user/ifreund
you could do a similar pattern to what I do for zig-wayland then and provide a function for the user to call from their build.zig: https://github.com/swaywm/zig-wlroots/blob/master/tinywl/build.zig

1631784566
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
is what i just said what you're doing?

1631784590
ifreund!~ifreund@user/ifreund
sounds pretty similar if not exactly the same :D

1631784597
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ah ok

1631784614
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
but it sounds like Pkg is more or less something they setup themselves, since FileSource is relative to the build.zig root 

1631784624
ifreund!~ifreund@user/ifreund
yep

1631784626
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
coolbeans

1631784652
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
why doesn't zig use pkg-config for include path resolution? it only does it for linking

1631784659
ifreund!~ifreund@user/ifreund
note that the current state of things will almost certainly be replaced when an official package manager is designed

1631784674
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
:rolling_eyes:

1631784678
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i refuse to use gyro or zigmod

1631784680
ifreund!~ifreund@user/ifreund
haze: probably because nobody has implemented it yet

1631784708
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
interesado

1631784735
ifreund!~ifreund@user/ifreund
same, I just stick to submodules. Even with their crappy UX they avoid extra dependencies I'd need to rely on

1631784737
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
yeah its always a question of whether or not there was an explicit reason against it or just because nobody has tried it yet

1631784759
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
people swear submodules have crappy ux but ive yet to succumb to them

1631784765
ifreund!~ifreund@user/ifreund
I'm not sure I see the use-case for using system include paths without linking the system library tbh

1631784782
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
wym

1631784813
ifreund!~ifreund@user/ifreund
LibExeObjStep.linkSystemLibrary() uses pkg-config and adds includes paths as well

1631784816
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
oh— in my mind you should just be able to .addPkgConfigPackage and it links and include

1631784824
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
orly

1631784843
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
that wasn't the case for me :(

1631784873
ifreund!~ifreund@user/ifreund
could always be a bug, but I'm pretty sure that's what the intended behaviour is and what I've seen in practice

1631784901
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
it should be, ill investigate afterwards

1631797696
marler8997!~marler899@204.229.3.4
how would I generate a pdb file when using zig cc? or just include debug information in the resulting dll? target is windows

1631797793
marler8997!~marler899@204.229.3.4
for msvc and clang-cl it's /Zi or /Z7 or /ZI, but not sure what that would be for zig cc

1631798003
daurnimator!~daurnimat@vultr.daurnimator.com
Has anyone tracked down the 0.8.1 release failure yet?

1631798010
daurnimator!~daurnimat@vultr.daurnimator.com
like, will we see a 0.8.2?

1631798061
marler8997!~marler899@204.229.3.4
nevermind it looks like Zig generates the pdb in the cache

1631801965
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
daurnimator wym

1631801987
daurnimator!~daurnimat@vultr.daurnimator.com
haze: the tests in the 0.8.1 release never passed

1631801995
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
:shock:

1631801998
noam!~noam@104.232.42.247
ruhroh

1631802067
daurnimator!~daurnimat@vultr.daurnimator.com
it can fail at various points, but e.g.: http://sprunge.us/YKtOwY 

1631802127
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
cosmic rays, avert your eyes

1631803261
flyx[m]!~flyxflyxo@mail.flyx.org
how do I debug my code yielding `terminated by signal SIGBUS (Misaligned address error)` when run?

1631803323
ikskuh!~xq@2a0d:5940:6:163::ad7e
gdb ./mycode

1631803372
ikskuh!~xq@2a0d:5940:6:163::ad7e
but typically SIGBUS is hard to catch

1631803377
ikskuh!~xq@2a0d:5940:6:163::ad7e
maybe valgrind will help you

1631803431
flyx[m]!~flyxflyxo@mail.flyx.org
if I run it with lldb I get `EXC_BAD_ACCESS` but I don't really see what's wrong

1631803472
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
do f

1631803475
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
and look around

1631803480
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
bt for backtrace

1631803489
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
but basically u tried to touch a bad memory location

1631803512
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
maybe set a breakpoint before the crashing line and inspect from there?

1631803517
ikskuh!~xq@2a0d:5940:6:163::ad7e
flyx[m]: what release mode do you use?

1631803524
ikskuh!~xq@2a0d:5940:6:163::ad7e
i assume you run on ARM hardware

1631803527
ikskuh!~xq@2a0d:5940:6:163::ad7e
you sure everything is aligned?

1631803530
flyx[m]!~flyxflyxo@mail.flyx.org
why do you assume that?

1631803541
flyx[m]!~flyxflyxo@mail.flyx.org
it's good ol' x86_64 here

1631803554
ikskuh!~xq@2a0d:5940:6:163::ad7e
because bus error is a thing you typically have on ARM

1631803575
ikskuh!~xq@2a0d:5940:6:163::ad7e
do you use mmap?

1631803588
flyx[m]!~flyxflyxo@mail.flyx.org
no

1631803621
ikskuh!~xq@2a0d:5940:6:163::ad7e
how reproducible is it?

1631803623
flyx[m]!~flyxflyxo@mail.flyx.org
hmm, `&[_]u8{1,2,3}` should work as argument for a `[]const u8` parameter, right?

1631803647
ikskuh!~xq@2a0d:5940:6:163::ad7e
yes

1631803647
flyx[m]!~flyxflyxo@mail.flyx.org
happens every time

1631803665
ikskuh!~xq@2a0d:5940:6:163::ad7e
but only if you don't store a pointer to that value, it's only temporary

1631803688
flyx[m]!~flyxflyxo@mail.flyx.org
yeah, it's not accessed after the call

1631803800
ikskuh!~xq@2a0d:5940:6:163::ad7e
hm

1631803806
ikskuh!~xq@2a0d:5940:6:163::ad7e
can you show us the offending line?

1631803836
flyx[m]!~flyxflyxo@mail.flyx.org
yeah but I don't think it shows much without providing context

1631803950
flyx[m]!~flyxflyxo@mail.flyx.org
the line that crashes is `std.fmt.Formatter(formatItemArr){.data = expected}`, lldb says accessing expected is the problem but I can inspect it just fine inside lldb

1631804078
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
whats formatItermArr

1631804118
flyx[m]!~flyxflyxo@mail.flyx.org
fn formatItemArr(i: []const WrongItemError.ItemDescr, comptime fmt: []const u8,  options: std.fmt.FormatOptions, writer: anytype) @TypeOf(writer).Error!void {…}

1631804206
flyx[m]!~flyxflyxo@mail.flyx.org
error happens before it gets called, lldb never enters it

1631804493
ikskuh!~xq@2a0d:5940:6:163::ad7e
huh, weird

1631804495
freshcoffee!~fresh@user/freshcoffee
daurnimator: I roll my own llvm deps, and 0.8.1 against llvm-12.0.1 and `zig build test` passed in an archlinux vm for me

1631804497
ikskuh!~xq@2a0d:5940:6:163::ad7e
can i clone that repo somewhere?

1631804500
flyx[m]!~flyxflyxo@mail.flyx.org
hm yeah there is something very strange happening. this is within a tuple for formatting, when I extract that expression to a variable the compiler crashes

1631804523
flyx[m]!~flyxflyxo@mail.flyx.org
I am currently unable to publish that code sadly

1631804533
ikskuh!~xq@2a0d:5940:6:163::ad7e
sad

1631804535
daurnimator!~daurnimat@vultr.daurnimator.com
freshcoffee: note that failed in a cross test.

1631804588
daurnimator!~daurnimat@vultr.daurnimator.com
it was also confirmed by e.g. 'jph' on discord

1631804593
flyx[m]!~flyxflyxo@mail.flyx.org
at least I *think* the compiler crashes, I get the output `The following command terminated unexpectedly:yListAlignedUnmanaged(std.array_hash_m...`

1631804616
ikskuh!~xq@2a0d:5940:6:163::ad7e
oh yeah

1631804619
ikskuh!~xq@2a0d:5940:6:163::ad7e
that's a compiler crash

1631804647
ifreund!~ifreund@user/ifreund
daurnimator: have you, uh, opened an issue to report the test failures?

1631804663
flyx[m]!~flyxflyxo@mail.flyx.org
I can try and distill a minimal reproducible example

1631804665
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: nope.

1631804680
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: have pinged andrew about it a few times though. I see others have too

1631804716
daurnimator!~daurnimat@vultr.daurnimator.com
someone pinged me again today about why 0.8.1 wasn't in arch; so checking there was no movement on this side...

1631804722
freshcoffee!~fresh@user/freshcoffee
I assume this i386 cross test is part of `zig build test` 

1631804723
ikskuh!~xq@2a0d:5940:6:163::ad7e
 flyx[m]: that would be nice

1631804729
daurnimator!~daurnimat@vultr.daurnimator.com
freshcoffee: yes

1631804756
ifreund!~ifreund@user/ifreund
I feel like an issue would be a much better way to coordinate on investigating what's happening and fixing if needed than pings on IRC

1631804814
freshcoffee!~fresh@user/freshcoffee
daurnimator: sanity check. I had a 14 GiB VM iirc

1631804840
daurnimator!~daurnimat@vultr.daurnimator.com
freshcoffee: this was on my desktop with 32GB of memory. not virtualized (but in a chroot)

1631804884
daurnimator!~daurnimat@vultr.daurnimator.com
I did try several times (each attempt takes ~15 mins) and got a different but similar error each time

1631805023
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: I guess I can file one now. I originally reported it as the release was being made....

1631805057
freshcoffee!~fresh@user/freshcoffee
can you add which llvm deps are used? arch or zig's ci stuff

1631805090
daurnimator!~daurnimat@vultr.daurnimator.com
freshcoffee: arch

1631805099
daurnimator!~daurnimat@vultr.daurnimator.com
freshcoffee: this is for the official archlinux build.

1631805149
cnx!~cnx@2001:470:69fc:105::61f
hi, is there a way for the source files to access install_path without passing it to build_options in build.zig?

1631805178
daurnimator!~daurnimat@vultr.daurnimator.com
cnx: I don't think so. Why do you need it?

1631805206
freshcoffee!~fresh@user/freshcoffee
daurnimator: I'll try to build against arch pkgs and see if I can duplicate

1631805250
cnx!~cnx@2001:470:69fc:105::61f
daurnimator, i install the data and want to pass to the source at compile time

1631805256
daurnimator!~daurnimat@vultr.daurnimator.com
freshcoffee: if you're on arch, all I'm doing is bumping the pkgver (and checksum: use `updpkgsums`), then doing a clean build (run `extra-x86_64-build`)

1631805377
ifreund!~ifreund@user/ifreund
cnx: build_options or some other code generation mechanism is the only way to do that, yes

1631805421
cnx!~cnx@2001:470:69fc:105::61f
what are other code gen mech?  I feel like build_options is not the right way to do it due to the name

1631805431
cnx!~cnx@2001:470:69fc:105::61f
(as I'm not passing an option)

1631805457
ifreund!~ifreund@user/ifreund
build_options is how I would do this, it's the only one provided by std.build

1631805488
ifreund!~ifreund@user/ifreund
you could certainly implement your own, but I don't see any reason to. build_options is 100% suitable for passing through a single string

1631805502
cnx!~cnx@2001:470:69fc:105::61f
thanks!

1631805521
cnx!~cnx@2001:470:69fc:105::61f
btw is it options on nightly or still build_options?

1631805620
ifreund!~ifreund@user/ifreund
cnx: looks like you get to choose the name as of 311797f68619f3de66cbdecabc2af7d2022e8874

1631805685
cnx!~cnx@2001:470:69fc:105::61f
ah nice thanks

1631805842
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: filed https://github.com/ziglang/zig/issues/9784

1631808154
ifreund!~ifreund@user/ifreund
daurnimator: gotta love it when someone tells an arch linux maintainer that they might have made a mistake while installing arch linux and should probably just reinstall it to fix their issue...

1631808176
flyx[m]!~flyxflyxo@mail.flyx.org
ikskuh: I can't reproduce the error with less code. I did note that I always get `EXC_BAD_ACCESS (code=2, address=0x1000f0080)` on my actual code with the address staying the same in each run, however I am not able to figure out where it does come from as none of the variables in the context have this address

1631808200
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: despite `chroot` in the title

1631808222
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: sometimes I just want to insert a back door to screw with such people :P

1631808222
ifreund!~ifreund@user/ifreund
you assume they know what chroot means :P

1631808731
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ifreund i use freebsd btw

1631808758
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
flyx[m] ive had varying success rewriting the code depending on finnicky parts of zig, have you tried just a different way of the same behavior?

1631808870
flyx[m]!~flyxflyxo@mail.flyx.org
haze: not sure what you mean, what I did was to extract an expression inside a call to a variable, which changed the error from a runtime abortion to a compiler SIGSEGV. I guess that counts as different way

1631808891
flyx[m]!~flyxflyxo@mail.flyx.org
compiler segfault seems to be at `get_pointer_to_type_extra2` according to output

1631808986
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
that would do et

1631809065
flyx[m]!~flyxflyxo@mail.flyx.org
if the compiler gives me `EXC_BAD_ACCESS` there seems to be a garbage pointer somewhere, so it could well be that the actual error is completely unrelated to the part of my code that triggers the segfault

1631809187
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
is the project somewhere up online so that others can try and debug it?

1631809190
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
it's ok if not

1631809207
flyx[m]!~flyxflyxo@mail.flyx.org
sadly I cannot publish it currently for copyright reasons

1631809258
flyx[m]!~flyxflyxo@mail.flyx.org
which is why I tried to recreate it with minimal code. sadly without success

1631809345
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
no worries

1631809523
flyx[m]!~flyxflyxo@mail.flyx.org
oh I think I have something

1631809625
flyx[m]!~flyxflyxo@mail.flyx.org
this crashes the compiler: https://gist.github.com/flyx/0f5abb3c3a59b7fb48a46010ea5e17f1

1631809681
flyx[m]!~flyxflyxo@mail.flyx.org
it works if you uncomment line 98 and replace the `Formatter` constructor in line 99 with `single`

1631809727
flyx[m]!~flyxflyxo@mail.flyx.org
a lot of this code is probably redundant for reproduction, I added more and more stuff until it failed

1631809869
flyx[m]!~flyxflyxo@mail.flyx.org
it does not reproduce my original error, but I discovered that I can make my code compile by extracting both argument to variables, not just the one lldb claims causes the error

1631809992
flyx[m]!~flyxflyxo@mail.flyx.org
so I'm off now, hopefully this helps tracking down some compiler bug

1631810434
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
thank you flyx[m] 

1631810994
pkap!~pkap@185.209.196.150
Helloo, Ihave just a small question: What is the best way to use zig stable and zig master on the same system? I have zig stable installed from the official arch linux repo.

1631811036
pkap!~pkap@185.209.196.150
Now, I want to play around with ratfactor/ziglings and the developement version is necessary.

1631811152
pkap!~pkap@185.209.196.150
And I still need stable to compile stuff eventually.

1631811157
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
symlink the dev zig as zig2 into something in your path

1631811420
pkap!~pkap@185.209.196.150
Ok that easy. Thanks!

1631812372
nightbreak!~nightbrea@168.5.167.218
ikskuh I just grabbed the tar, extracted the binary, and dropped it on my PATH

1631812383
nightbreak!~nightbrea@168.5.167.218
should I do anything else?

1631812500
nightbreak!~nightbrea@168.5.167.218
what's the minimum kernel for zig?

1631812545
Tekk!~tekk@89.45.224.74
Old enough that you don't have to worry about it, I'd imagine.

1631812590
nightbreak!~nightbrea@168.5.167.218
Oops I just found it, it's 3.16

1631812595
nightbreak!~nightbrea@168.5.167.218
I have 3.10 

1631812602
haze!~haze@2603-7000-a300-1741-c5ae-fb36-fab8-2bc8.res6.spectrum.com
based old kernel user

1631812618
nightbreak!~nightbrea@168.5.167.218
my university has not updated this Red Hat server in years

1631812628
nightbreak!~nightbrea@168.5.167.218
i have Git 1.8

1631812633
nightbreak!~nightbrea@168.5.167.218
i feel like a dinosaur

1631812641
Tekk!~tekk@89.45.224.74
Weird. Wonder what zig's doing that cares that deeply about which kernel you're on

1631812670
Tekk!~tekk@89.45.224.74
I mean 3.16 is still 7 years old

1631812672
nightbreak!~nightbrea@168.5.167.218
I'm not sure either Zig just can't find where it's installed

1631812703
nightbreak!~nightbrea@168.5.167.218
have filesystem primitives changed somehow since 3.10?

1631812781
Tekk!~tekk@89.45.224.74
I doubt the syscall interfaces for open(), read(), and write() have changed

1631812802
Tekk!~tekk@89.45.224.74
Maybe 3.16 introduced something DMA-ey for slurping whole files though?

1631812985
nightbreak!~nightbrea@168.5.167.218
maybe it's because my /home directory is on a CIFS drive?

1631813032
Tekk!~tekk@89.45.224.74
That seems inadvisable but I don't see how that'd contribute to zig wanting kernel 3.16

1631813052
ikskuh!~xq@2a0d:5940:6:163::ad7e
nightbreak: not sure, it shouldn't affect this afaik

1631813060
ikskuh!~xq@2a0d:5940:6:163::ad7e
but just copy it to /tmp and try again

1631813144
nightbreak!~nightbrea@168.5.167.218
thanks for the suggestion but i unfortunately still get the same error

1631813439
nightbreak!~nightbrea@168.5.167.218
wait do I need to copy the lib/ folder somewhere too?

1631813472
nightbreak!~nightbrea@168.5.167.218
i think im being dumb...

1631813516
ikskuh!~xq@2a0d:5940:6:163::ad7e
yes

1631813522
ikskuh!~xq@2a0d:5940:6:163::ad7e
that must be side to zig

1631813560
nightbreak!~nightbrea@168.5.167.218
so if my binary is in ~/bin then the lib contents should be in ~/lib?

1631813582
nightbreak!~nightbrea@168.5.167.218
(i ran strace and discovered it was not finding the standard library)

1631813688
luuk!~luuk@user/luuk
If your binary is in ~/bin, then lib should bin ~/bin/lib

1631813713
luuk!~luuk@user/luuk
s/bin/be

1631813852
nightbreak!~nightbrea@168.5.167.218
ahhh I see thank you thank you

1631813870
nightbreak!~nightbrea@168.5.167.218
I apologize for my inexperience

1631813937
luuk!~luuk@user/luuk
No need to apologize :) It's not obvious at first

1631814210
ifreund!~ifreund@user/ifreund
nightbreak, luuk: the lib directory could be in ~/bin/lib or ~/lib, zig will search in parent directories until it finds either ./lib/zig/std/std.zig or ./lib/std/std.zig

1631814231
ifreund!~ifreund@user/ifreund
see also the `zig env` command

1631814264
luuk!~luuk@user/luuk
ifreund: Ah thanks for clarifying :) I thought it had to be next to the binary.

1631814333
ifreund!~ifreund@user/ifreund
see findZigLibDirFromSelfExe() in src/introspect.zig for the implementation :)

1631814436
luuk!~luuk@user/luuk
I should probably check the source before giving an answer :)

1631814500
ifreund!~ifreund@user/ifreund
if you already know where to look, that's not an unreasonable thing to do. Otherwise it's a lot of investment to do so for every question :P

1631814554
luuk!~luuk@user/luuk
Haha that's a good point.

1631820073
h4ze!~haze@2603-7000-a300-1741-c5ae-fb36-fab8-2bc8.res6.spectrum.com
i hate irc so much

1631820174
Tekk!~tekk@89.45.224.74
Why's that?

1631820438
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
discord is just lightyears better

1631820459
Tekk!~tekk@89.45.224.74
...I'm definitely not taking that bait :D

1631820514
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
lmfaooo myfault

1631820529
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i dont hate irc i just hate my bouncer cause it wont try and ghost my nick when i dc

1631820676
Tekk!~tekk@89.45.224.74
I started liking IRC a lot more when I stopped using a bouncer tbh.

1631820700
Tekk!~tekk@89.45.224.74
it tries to make IRC something it's not good at badly.

1631820786
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
id rather a bouncer than a bloated ass matrix client

1631820787
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
portal*

1631820794
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
which is a bouncer with bells and whiestles ill never blow

1631820890
Tekk!~tekk@89.45.224.74
Oh for sure.

1631820902
Tekk!~tekk@89.45.224.74
But the ephemerality of IRC is a benefit imo

1631820965
Tekk!~tekk@89.45.224.74
For longer-lived stuff it really ought to be in a more public, permanent place. Issues or a mailing list.

1631821335
ikskuh!~xq@2a0d:5940:6:163::ad7e
daurnimator: you're arch package maintainer, right?

1631821365
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ephemerality of what? if yall say something and im not here and boom forever lost

1631821374
Tekk!~tekk@89.45.224.74
That's what ephemerality means, yes.

1631821379
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
yeah but how will everyone know that i did a handstand for ifreund 

1631821385
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ACTION does a handstand

1631821407
ifreund!~ifreund@user/ifreund
ikskuh: if you're planning to ask why arch doesn't have 0.8.1, scroll up a bit (tests are failing on 0.8.1)

1631821412
ikskuh!~xq@2a0d:5940:6:163::ad7e
nope

1631821428
ifreund!~ifreund@user/ifreund
but yes he does maintain the arch package

1631821443
ikskuh!~xq@2a0d:5940:6:163::ad7e
question about the views of a package maintainer

1631821447
ifreund!~ifreund@user/ifreund
haze: if you're unhappy with znc, I've been very happy with soju

1631821462
ifreund!~ifreund@user/ifreund
ikskuh: I maintain several packages for void fwiw

1631821467
ikskuh!~xq@2a0d:5940:6:163::ad7e
ah, good to know

1631821470
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
nah znc works i just have to set it up to ghost my nick thats all

1631821474
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
im lazy

1631821478
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
just wish it worked out of the box tm

1631821497
ifreund!~ifreund@user/ifreund
soju's been that level of just works experience for me tbh

1631821532
ifreund!~ifreund@user/ifreund
it's at the very least much simpler to set up, though I don't know if there are any features I'm missing out on I haven't felt the lack of anything yet

1631821673
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
how many networks are you on

1631821682
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
I'm on like 13 and mostly use nickserv/sasl/replay buffer

1631821737
ifreund!~ifreund@user/ifreund
I spend 99% of my time on libera and oftc to be fair

1631821909
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
https://github.com/libressl-portable/portable/issues/237

1631821910
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
2017

1631821913
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
2016*

1631822206
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
damn slices can even bite u when interfacing with a c api

1631823593
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
can anyone else confirms this breaks the compiler https://zigbin.io/97dd0a

1631824282
luuk!~luuk@user/luuk
Yeah that breaks. You could instead do https://zigbin.io/24555f tho

1631824312
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
dope

1631824532
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
whats crazy is that works and then i c+p it into my project and then it doesnt

1631824533
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
zig hates me

1631824543
ikskuh!~xq@2a0d:5940:6:163::ad7e
latest master?

1631824572
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
yeah

1631824929
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ended up biting the bullet and just not using inline for, it was something with break

1631824987
ikskuh!~xq@2a0d:5940:6:163::ad7e
ah yeah

1631824990
ikskuh!~xq@2a0d:5940:6:163::ad7e
you cannot break from inline for

1631824995
ikskuh!~xq@2a0d:5940:6:163::ad7e
make another function and return

1631824997
ikskuh!~xq@2a0d:5940:6:163::ad7e
that will work :D

1631825092
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
but in luuks example it works

1631825093
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
why is that

1631825108
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
was it because i was using a runtime value or something

1631825190
ikskuh!~xq@2a0d:5940:6:163::ad7e
probably

1631825275
ifreund!~ifreund@user/ifreund
you can also work around not being able to break from an inline for by setting some bool when you want to break and then doing nothing on future iterations if that bool is set

1631825286
ifreund!~ifreund@user/ifreund
stage2 will fix things...

1631825339
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
orly

1631825346
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
can i use nested anonymous structs in stage2 yet

1631825371
Tekk!~tekk@89.45.224.74
ifreund said will, not does :p

1631825377
Tekk!~tekk@89.45.224.74
Any fixing at this point is purely coincidental

1631825407
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
lord

