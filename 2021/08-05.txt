1628122114
josias!~mottmatri@2001:470:69fc:105::b6c
When is llvm 13 supposed to be released? 

1628123966
andrewrk!~andrewrk@mail.ziglang.org
check the right hand side of https://llvm.org/

1628123970
andrewrk!~andrewrk@mail.ziglang.org
they always miss the deadline tho

1628132381
noam!~noam@104.232.42.247
andrewrk: "the usual caveats" - so what you're saying is, "The observable behavior must be the same as if each expression was evaluated in increasing order of its offset in the source code"?

1628132395
andrewrk!~andrewrk@mail.ziglang.org
yes

1628132400
noam!~noam@104.232.42.247
gotcha, thanks

1628151787
jacoscaz!~jacoscaz@host-82-48-132-102.retail.telecomitalia.it
What's the GUI toolkit with better compat / support for Zig right now? I got imgui to work via upaya but I feel a toolkit might be better suited for my project as opposed to immediate-mode libraries. 

1628151989
ikskuh!~xq@2a0d:5940:6:163::ad7e
jacoscaz: which target platform?

1628152939
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz: what's your timeline ? for gui ?

1628152980
jacoscaz_!~jacoscaz@5.171.9.64
frett27: no timeline, it's just side project to get familiar with Zig 

1628153237
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz_: i'm currently giving a try to zig-nuklear, still not yet fully complete, but simple. it's not as complete as imgui, but match well zig philosophy

1628153412
jacoscaz_!~jacoscaz@5.171.9.64
Ah yes, I had a look at Nuklear but I ended up using Upaya (and therefore DearImGui) as it seemed more ready-to-use (i.e. comes with its own backends). I'm very, very new to Zig and relatively unexperienced with low-level programming.

1628153541
motiejus!~motiejus@2001:470:69fc:105::38fb
Hi folks. Seems like zig is detecting an incorrect libc version, but `zig builtin` doesn't work for me as outlined in https://github.com/ziglang/zig/issues/4519 ; how can I check which libc zig detects?

1628153555
motiejus!~motiejus@2001:470:69fc:105::38fb
motiejus ~ $ zig builtin -lc 

1628153556
motiejus!~motiejus@2001:470:69fc:105::38fb
info: Usage: zig [command] [options]

1628153575
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz: there is also gtk, which match well.

1628153623
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz: going into sdl, or gl directly gives a lot of work to create forms and other standard widgets

1628153656
ifreund!~ifreund@user/ifreund
motiejus: zig libc will show you the paths it found

1628153670
frett27!~frett27@141.10.92.92.rev.sfr.net
motiejus: have you tries the --verbose options, to see command lines ?

1628153681
ifreund!~ifreund@user/ifreund
zig build-exe --show-builtin -lc 

1628153699
ifreund!~ifreund@user/ifreund
for the new equivalent of that command

1628153738
motiejus!~motiejus@2001:470:69fc:105::38fb
thanks ifreund , that worked

1628153761
motiejus!~motiejus@2001:470:69fc:105::38fb
hm, it's detecting 2.17 :)

1628153777
motiejus!~motiejus@2001:470:69fc:105::38fb
whereas mine is 2.31

1628153804
ifreund!~ifreund@user/ifreund
what zig version?

1628153824
motiejus!~motiejus@2001:470:69fc:105::38fb
nightly. Interesting: the pre-built binary detects 2.17, whereas the zig I've just built detects 2.31

1628153838
motiejus!~motiejus@2001:470:69fc:105::38fb
is that intentional?

1628153850
ifreund!~ifreund@user/ifreund
no, not intentional

1628153874
motiejus!~motiejus@2001:470:69fc:105::38fb
ok, I guess I'll cut a task for this

1628153877
ifreund!~ifreund@user/ifreund
the prebuilt zig binary is statically linked so it cant take the easy path of using it's own dynamic linker to find the libc version

1628153894
motiejus!~motiejus@2001:470:69fc:105::38fb
is this a bug then?

1628153901
ifreund!~ifreund@user/ifreund
I'd say so

1628153903
ifreund!~ifreund@user/ifreund
https://github.com/ziglang/zig/issues/6469

1628153916
motiejus!~motiejus@2001:470:69fc:105::38fb
ah indeed

1628154056
motiejus!~motiejus@2001:470:69fc:105::38fb
ok, I will then assume it's 2.17 (I am building a workaround for https://github.com/ziglang/zig/issues/9485 , where I need to know if it's 2.28 or earlier )

1628154542
jacoscaz_!~jacoscaz@5.171.9.64
frett27: interesting, thank you for mentioning that. Is someone working on GTK bindings for Zig? 

1628154600
motiejus!~motiejus@2001:470:69fc:105::38fb
I may distribute our own copy of dynamically-linked zig in our company to improve this autodetection

1628154777
motiejus!~motiejus@2001:470:69fc:105::38fb
is there a way to see (e.g. with readelf or objdump) which version of glibc an executable is linked against?

1628154863
ifreund!~ifreund@user/ifreund
motiejus: no, all you can see is the soversion (with ldd)

1628154921
ifreund!~ifreund@user/ifreund
motiejus: you can see the logic in lib/std/zig/system.zig in detectAbiAndDynamicLinker()

1628154990
motiejus!~motiejus@2001:470:69fc:105::38fb
thanks! `ldd --verbose <executable>` shows things like `GLIBC_2.27`, which seems to match the glibc version scheme

1628155636
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz_: yes, i've seen some repo

1628155644
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz_: let me check

1628155719
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz_: https://github.com/Swoogan/ziggtk

1628156991
jacoscaz_!~jacoscaz@5.171.9.64
Thank you frett27! I had missed that, somehow.

1628157811
vectorfi1lds!~rik@185.214.220.173
Please can someone help me? This gist (https://gist.github.com/vectorfields/7a78696eccce6d75d5e2e00037a557cf) works when run but not when tested. I suspect there's a UAF but I'm not sure. What am I missing? (I'm also not sure if I need the frees on lines 22, 23 and 31).

1628157956
jacoscaz_!~jacoscaz@5.171.9.64
frett27: ziggtk worked almost out of the box, just had to make a couple of changes to bring it up to date with zig nightly. Thank you for pointing me to that!

1628158757
frett27!~frett27@141.10.92.92.rev.sfr.net
jacoscaz_: great ! i'm glad that helps you

1628159214
frett27!~frett27@141.10.92.92.rev.sfr.net
vectorfields: i'm lookup into your code

1628160264
frett27!~frett27@141.10.92.92.rev.sfr.net
vectorfields: seems you deallocate something that has not been allocated, in the Node.deinit

1628160278
frett27!~frett27@141.10.92.92.rev.sfr.net
the data u8 is on stack and not heap

1628160286
frett27!~frett27@141.10.92.92.rev.sfr.net
to freeing it is not legal

1628160295
frett27!~frett27@141.10.92.92.rev.sfr.net
using the value_ptr

1628160344
ifreund!~ifreund@user/ifreund
using StringHashMap also makes no sense here, just use an AutoHashMap(u8, *Node)

1628160432
dutchie!~dutchie@user/dutchie
also you should use errdefer on line 31

1628160547
frett27!~frett27@141.10.92.92.rev.sfr.net
vectorfields: testing.allocator does not have the same behaviour than arena one, that's because behaviour change between test and using main

1628160658
dutchie!~dutchie@user/dutchie
https://0x0.st/-4yK.zig is a cleaned up version that still uses StringHashMap

1628160734
dutchie!~dutchie@user/dutchie
destroy() is for single items like the *Node you have stored in the hashmap, free() is for the string slice in the key

1628160762
dutchie!~dutchie@user/dutchie
but you have to deref them both because the iterator gives you a pointer to the pointer

1628165179
vectorfields!~vectorfie@185.214.220.162
thanks for your help all! 

1628165202
vectorfields!~vectorfie@185.214.220.162
frett27: thanks for adding a comment to the gist - I wouldn't have seen dutchie's version otherwise

1628165238
vectorfields!~vectorfie@185.214.220.162
ifreund: I'd planned for the nodes to be addressed by strings further down the line, hence the choice

1628165620
ikskuh!~xq@2a0d:5940:6:163::ad7e
for those searching for a UI library, there's a new competitor on the board: https://github.com/ziglibs/positron

1628165643
ikskuh!~xq@2a0d:5940:6:163::ad7e
it's built around another project called "webview" which provides a browser window similar to electron

1628165837
ifreund!~ifreund@user/ifreund
vectorfields: make sense

1628165843
ifreund!~ifreund@user/ifreund
s/make/makes/

1628166338
motiejus!~motiejus@2001:470:69fc:105::38fb
hi all. I am getting `Illegal instruction` from a binary that I compile with `zig cc`; otherwise it works fine with clang, gcc, pcc, musl-gcc. Is there something I can tell/see more besides just that "illegal instruction"?

1628166354
motiejus!~motiejus@2001:470:69fc:105::38fb
for the record, it's google's brotli

1628166408
motiejus!~motiejus@2001:470:69fc:105::38fb
gdb seems to get stuck when I am trying to run it

1628167403
motiejus!~motiejus@2001:470:69fc:105::38fb
nevermind, found https://github.com/ziglang/zig/issues/4830 ; excellent reply from andrewrk

1628177551
amine!~aminechik@li449-221.members.linode.com
I have a really stupid question :) what's the shortest way of reading all content of a file in Zig. I wasn't able to find an example in the docs but maybe I'm just looking at the wrong place

1628177706
ifreund!~ifreund@user/ifreund
amine: get a Reader with std.fs.File.reader() and then do Reader.readAll(), Reader.readAllAlloc(), or whatever

1628177753
dutchie!~dutchie@user/dutchie
file.reader().readAllAlloc(allocator, std.math.maxInt(usize))

1628178235
amine!~aminechik@li449-221.members.linode.com
yay now it works, thanks 

1628178308
amine!~aminechik@li449-221.members.linode.com
btw anyway one could configure `zig fmt` somehow for example to use 80 columns as max line length ?

1628178325
dutchie!~dutchie@user/dutchie
`zig fmt` has no configuration options by design

1628178343
dutchie!~dutchie@user/dutchie
you can encourage it to split lines by breaking them yourself (and adding trailing operators/commas)

1628178390
ifreund!~ifreund@user/ifreund
e.g. foo(a,b,) will be split up over multiple lines by zig fmt

1628178453
amine!~aminechik@li449-221.members.linode.com
ah I see, great

1628180958
Ristovski!~Ristovski@hellomouse/perf/ristovski
I like how one can reap the benefits of Zig without even being proficient in the language. I use `zig cc` very often, and just last night I hacked together a custom GPU temp monitor for my `xmobar` in 30 lines of Zig (to replace the hacky one I had in `xmobar`, which I couldn't extend to cover a new quirk)

1628181115
Ristovski!~Ristovski@hellomouse/perf/ristovski
(for those interested, a amdgpu addition wakes the GPU from suspend when you query the temperature, and I /really/ didn't feel like adding that functionality (suspended/resumed check) via Haskell, which is what native widgets of xmobar are written in, lol)

1628195436
andrewrk!~andrewrk@mail.ziglang.org
would anyone believe me if I told you this code worked first try? https://clbin.com/fRMAS

1628195786
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
right because we can read a black and white diff

1628195920
Flaminator!~Flaminato@ns323457.ip-5-39-76.eu
What is the easiest way to get debug prints and stacktraces working in a gui program on Windows?

1628205222
andrewrk!~andrewrk@mail.ziglang.org
haze, `curl https://clbin.com/fRMAS | cdiff`

1628205297
andrewrk!~andrewrk@mail.ziglang.org
Flaminator, hmm that's a great question. I have 2 suggestions: 1. look into building in console mode for debug builds, so you have a terminal in addition to your gui window

1628205316
jaredmm!~jaredmm@user/jaredmm
c1285a1 (moving fs.Walker to fs.Dir.Walker) broke WalkerEntry.basename by removing the first character when slicing because the old code always had a directory prefix but the new does not. 

1628205331
andrewrk!~andrewrk@mail.ziglang.org
2. std.debug exposes stack traces stuff; you could override the panic handler to use these abstractions to open a debug GUI window

1628205357
jaredmm!~jaredmm@user/jaredmm
I can "fix" it for the cases I use by throwing an `if (dirname_len == 0) 0 else dirname_len + 1` in the WalkerEntry initialization, but I'm sure there's a better way to go about it.

1628205378
andrewrk!~andrewrk@mail.ziglang.org
hmm I never got a chance to review c1285a1

1628205419
Flaminator!~Flaminato@ns323457.ip-5-39-76.eu
Ah thanks for the suggestions I will see if I can get that working.

