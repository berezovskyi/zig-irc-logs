1640528854
Franciman!~Franciman@mx1.fracta.dev
hi, how do I add debug symbols?

1640528928
Dko1905!~Dko1905@37.120.213.164
Franciman: They should be there if you aren't using the --strip and using the -O Debug.

1640528939
Franciman!~Franciman@mx1.fracta.dev
ah I am not

1640528995
Franciman!~Franciman@mx1.fracta.dev
basically I am experiencing this bug

1640529003
Franciman!~Franciman@mx1.fracta.dev
https://bpa.st/RIUA

1640529011
Franciman!~Franciman@mx1.fracta.dev
in the ocmpiler, and I was told to compile with debug symbols

1640529016
Franciman!~Franciman@mx1.fracta.dev
ah maybe debug symbols of the compiler :P

1640529271
Dko1905!~Dko1905@37.120.213.164
Does Zig have any plans for including utilities for properly handling Unicode strings, something like libgrapheme?

1640529321
Franciman!~Franciman@mx1.fracta.dev
i think not

1640529332
Franciman!~Franciman@mx1.fracta.dev
Dko1905: is libgrapheme the one from suckless?

1640529337
Dko1905!~Dko1905@37.120.213.164
yes

1640529346
Franciman!~Franciman@mx1.fracta.dev
it would be nice

1640529349
Franciman!~Franciman@mx1.fracta.dev
it's very small

1640532040
Franciman!~Franciman@mx1.fracta.dev
is there any tutorial about how to build zig?

1640532055
Franciman!~Franciman@mx1.fracta.dev
ah build from source, sorry

1640532561
luuk!~luuk@user/luuk
Franciman: https://github.com/ziglang/zig/wiki/Building-Zig-From-Source

1640532583
Franciman!~Franciman@mx1.fracta.dev
thank, do I just need to build the stage 1 right?

1640532592
luuk!~luuk@user/luuk
Correct

1640532598
Franciman!~Franciman@mx1.fracta.dev
the stage 2 is the zig compiler written in zig?

1640532609
luuk!~luuk@user/luuk
I tend to use Option A myself (with also building LLVM, etc from source)

1640532620
luuk!~luuk@user/luuk
Franciman, yes. 

1640532631
Franciman!~Franciman@mx1.fracta.dev
and what is the stage 3?

1640532651
luuk!~luuk@user/luuk
The Zig compiler, compiled by stage 2

1640532666
luuk!~luuk@user/luuk
So stage2 compiling itself

1640532703
Franciman!~Franciman@mx1.fracta.dev
thanks

1640532707
Franciman!~Franciman@mx1.fracta.dev
o, error

1640532709
luuk!~luuk@user/luuk
You're welcome :)

1640534513
Franciman!~Franciman@mx1.fracta.dev
having an hard time. Has anybody managed to build stage1 on arch linux?

1640534523
Franciman!~Franciman@mx1.fracta.dev
I installed system libraries clang, llvm and llvm-libs and lld

1640534532
Franciman!~Franciman@mx1.fracta.dev
but 

1640534554
Franciman!~Franciman@mx1.fracta.dev
cmake says I don't have clang 13

1640534556
Franciman!~Franciman@mx1.fracta.dev
but i have

1640534611
ifreund!2940d10f8b@user/ifreund
what distro are you on?

1640534623
luuk!~luuk@user/luuk
I use arch Linux, and works fine here. You can also pass -DCMAKE_PREFIX_PATH=<path_to_llvm/clang13>

1640534636
luuk!~luuk@user/luuk
Oh wait, system libraries

1640534641
luuk!~luuk@user/luuk
Arch dynamically links those

1640534669
luuk!~luuk@user/luuk
You could try passing -DZIG_PREFER_CLANG_CPP_DYLIB=ON to CMAKE

1640534680
ifreund!2940d10f8b@user/ifreund
ACTION canâ€™t read

1640534729
ifreund!2940d10f8b@user/ifreund
What luuk said should work on arch, see also the PKGBUIlD used to package zig for arch

1640534861
Franciman!~Franciman@mx1.fracta.dev
the -DZIG_PREFER_CLANG_CPP_DYLIB=ON did the trick

1640534864
Franciman!~Franciman@mx1.fracta.dev
thanks masters

1640535227
Franciman!~Franciman@mx1.fracta.dev
ok now the stack trace doesn't show anything

1640535230
Franciman!~Franciman@mx1.fracta.dev
it's full of ???

1640535239
Franciman!~Franciman@mx1.fracta.dev
i think i must build clang and llvm with debug symbols

1640535241
Franciman!~Franciman@mx1.fracta.dev
this is gonna take ages

1640535264
Franciman!~Franciman@mx1.fracta.dev
is anybody who already has a debug zig so kind to help me with my compiler bug?

1640536200
Franciman!~Franciman@mx1.fracta.dev
https://github.com/ziglang/zig/issues/10413 <-

1640536233
Franciman!~Franciman@mx1.fracta.dev
this bug is a good thing for my school career

1640536237
Franciman!~Franciman@mx1.fracta.dev
so I can focus on studies

1640536247
Franciman!~Franciman@mx1.fracta.dev
solve it with calm :P

1640537624
Dko1905!~Dko1905@37.120.213.164
Is there a cleaner solution to passing a stdout Writer to a function than `fn usage(w: @TypeOf(std.io.getStdOut().writer())) {`?

1640537898
Franciman!~Franciman@mx1.fracta.dev
Dko1905: uhm a stupid one would be to:

1640537908
Franciman!~Franciman@mx1.fracta.dev
const Writer = @TypeOf(std.io.getStdOut().writer());

1640538097
Dko1905!~Dko1905@37.120.213.164
Franciman: Yes, that's right, it even runs at compile time.

1640538114
Dko1905!~Dko1905@37.120.213.164
But I just open the stdOut again.

1640538140
Franciman!~Franciman@mx1.fracta.dev
Dko1905: are you on 0.9.0?

1640538154
Dko1905!~Dko1905@37.120.213.164
No, I'm on 0.10.0-dev...

1640538215
Franciman!~Franciman@mx1.fracta.dev
Dko1905: sorry

1640538217
Franciman!~Franciman@mx1.fracta.dev
what about

1640538222
Franciman!~Franciman@mx1.fracta.dev
std.fs.File.Writer ?

1640538229
Franciman!~Franciman@mx1.fracta.dev
that's the type of std.io.getStdOut().writer();

1640538258
Dko1905!~Dko1905@37.120.213.164
Perfect, I though it was a std.io.Writer.

1640538268
Franciman!~Franciman@mx1.fracta.dev
if you check, it's just a define

1640538274
Franciman!~Franciman@mx1.fracta.dev
    pub const Writer = io.Writer(File, WriteError, write);

1640538277
Franciman!~Franciman@mx1.fracta.dev
over io.Writer

1640538290
Dko1905!~Dko1905@37.120.213.164
What editor do you use?

1640538292
Dko1905!~Dko1905@37.120.213.164
for zig

1640538298
Franciman!~Franciman@mx1.fracta.dev
kakoune + zls

1640538347
Dko1905!~Dko1905@37.120.213.164
I don't know that one, but I'm using VSCodium, and zls is being a bit unstable

1640538353
Franciman!~Franciman@mx1.fracta.dev
same SAME

1640538360
Franciman!~Franciman@mx1.fracta.dev
before 0.9.0 it was pretty ok

1640538364
Franciman!~Franciman@mx1.fracta.dev
now it got very unstable 

1640542091
Dko1905!~Dko1905@37.120.213.164
Currently zig(1) doesn't have any man pages, if I start writing some, how likely are they to be accepted?

1640542184
ifreund!2940d10f8b@user/ifreund
Dko1905: before the language and std are stable, no

1640542192
ifreund!2940d10f8b@user/ifreund
afterwards likely

1640542222
ifreund!2940d10f8b@user/ifreund
we don't want to add increased maintenece work through duplicating documentation at this point

1640542328
Dko1905!~Dko1905@37.120.213.164
The zig command line utility could use a better form of documentation, and shouldn't change too much.

1640542411
Dko1905!~Dko1905@37.120.213.164
s/and\ shouldn't/and it shouldn't/

1640542414
ifreund!2940d10f8b@user/ifreund
ah you mean docs for the toolchain itself, yes those are currently nonexistant asside from --help

1640542429
Dko1905!~Dko1905@37.120.213.164
thanks

1640542463
ifreund!2940d10f8b@user/ifreund
the only problem with a man page is that I don't think it would function on e.g. windows

1640542507
ifreund!2940d10f8b@user/ifreund
I think the way to go would be to start by adding toolchain docs to the main docs page, and eventually duplicate that content to man pages for users on unixy systems

1640542518
ifreund!2940d10f8b@user/ifreund
Dko1905: found this: https://github.com/ziglang/zig/issues/715

1640543193
Dko1905!~Dko1905@37.120.213.164
help2man is a hack, it does an ok job at converting, but there are issues.

1640543242
Dko1905!~Dko1905@37.120.213.164
Call me old fashioned but documentation should primarily be read in man pages and not using --help.

1640543584
ifreund!2940d10f8b@user/ifreund
I agree, man pages are the only documentation for my personal projects

1640543601
ifreund!2940d10f8b@user/ifreund
the problem arises from targeting more than just unixy systems

1640544187
Dko1905!~Dko1905@37.120.213.164
The online documentation is available, and I think it's possible to install man on Windows.

1640544723
Dko1905!~Dko1905@37.120.213.164
help2man can help writing the initial man pages, but help2man shouldn't be responsible for maintaining the manual pages.

1640544930
Dko1905!~Dko1905@37.120.213.164
the --help flag could show the man page.

1640545642
luuk!~luuk@user/luuk
I disagree. --help should show status quo, whereas the manpages have their own 'thing'. 

1640545754
luuk!~luuk@user/luuk
I also agree with ifreund. Implementing manpages for the current state of the Zig project would increase the maintenance burden by a lot. Even the CLI is still changing often.

1640552479
yo!~0xfe0@49.36.186.18
is there any way of getting the zig language reference in pdf?

1640552487
yo!~0xfe0@49.36.186.18
or epub for that matter?

1640552588
ifreund!2940d10f8b@user/ifreund
yo: you can probably just use the print button in your browser no?

1640552748
yo!~0xfe0@49.36.186.18
its cutting the wider code snippets, but its better than nothing 

1640552750
yo!~0xfe0@49.36.186.18
thanks 

1640552798
ifreund!2940d10f8b@user/ifreund
no problem

1640552842
yo!~0xfe0@49.36.186.18
its refreshing to see a reference manual under 250 pages for a programming language 

1640552977
ifreund!2940d10f8b@user/ifreund
:)

1640559475
Franciman!~Franciman@mx1.fracta.dev
now I need to find an alternative to zig

1640559478
Franciman!~Franciman@mx1.fracta.dev
rip

1640559519
Franciman!~Franciman@mx1.fracta.dev
the teacher said he was interested in developing a functional language

1640559527
Franciman!~Franciman@mx1.fracta.dev
so i can't stop the interpreter now :P

