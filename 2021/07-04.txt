1625392912
gmacd!~gmacd3@82-132-227-201.dab.02.net
was spinlock removed from std in 0.8.0?  can't see any sign of it, or any notice of its deprecation

1625393521
gmacd!~gmacd3@82-132-227-201.dab.02.net
I guess this answers my question: https://github.com/ziglang/zig/pull/7785

1625401754
frett27!~frett27@2a01:e0a:58a:6c00:84c3:86aa:17a9:87fd
join #zig

1625402777
noam!~noam@104.232.42.247
Good news: you're already in it! :)

1625406533
lucus!~lucus@relto.u16.nl
Yesterday I thought I was going to fix a simple bug in the size of packed structs

1625406569
lucus!~lucus@relto.u16.nl
Turns out packing structs right while accounting for alignment is actually quite hard

1625407035
ifreund!~ifreund@user/ifreund
lucus: yeah, I don't think solving packed structs in the stage1 compiler at this point is really worth it :/

1625407045
lucus!~lucus@relto.u16.nl
well

1625407053
lucus!~lucus@relto.u16.nl
the hard part is the algorithm

1625407185
lucus!~lucus@relto.u16.nl
it shouldn't be too hard to port it to either stage after we figure out a good algorithm

1625407307
lucus!~lucus@relto.u16.nl
Or is this already solved in the self-hosting compiler?

1625407442
ifreund!~ifreund@user/ifreund
lucus: no, not solved yet

1625407457
ifreund!~ifreund@user/ifreund
the architecture of stage2 is significantly different and improved compared to stage1 though

1625407514
lucus!~lucus@relto.u16.nl
hmm, I suppose stage2 might no longer need to bother with generated host integer fields

1625407570
ifreund!~ifreund@user/ifreund
well, we'll still need to communicate packed structs to llvm somehow

1625407625
ifreund!~ifreund@user/ifreund
but yeah, the implementation might be able to take a very different approach from what stage1 tries to make work

1625407727
daurnimator!~daurnimat@vultr.daurnimator.com
lucus: oh? I couldn't even find *where* the code is in the stage1 compiler for packed structs

1625407735
daurnimator!~daurnimat@vultr.daurnimator.com
last time I delved into it at least....

1625407759
lucus!~lucus@relto.u16.nl
Ah, I spent yesterday evening finding and understanding it

1625407833
daurnimator!~daurnimat@vultr.daurnimator.com
lucus: so where is it? :)

1625407849
lucus!~lucus@relto.u16.nl
https://github.com/ziglang/zig/blob/8a863381d11adcdcb4e0509611af93c61fc89804/src/stage1/analyze.cpp#L2395 and https://github.com/ziglang/zig/blob/8a863381d11adcdcb4e0509611af93c61fc89804/src/stage1/analyze.cpp#L8717

1625407940
daurnimator!~daurnimat@vultr.daurnimator.com
lucus: thanks

1625407962
lucus!~lucus@relto.u16.nl
Though I haven't really found where the read and write instructions are generated

1625407981
lucus!~lucus@relto.u16.nl
The above code just handles the assignments of source fields to generated host fields

1625408213
ifreund!~ifreund@user/ifreund
lucus: grep for ContainerLayoutPacked in codegen.cpp

1625408267
ifreund!~ifreund@user/ifreund
warning, it's pretty messy :/

1625411910
lucus!~lucus@relto.u16.nl
I love I can just put printfs in the middle of the compiler code and nothing breaks

