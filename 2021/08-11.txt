1628668407
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
noam are people supposed to be allowed to check for undefined if the memory isnt set? shouldn't that be a null job

1628668543
ikskuh!~xq@2a0d:5940:6:163::ad7e
haze: branching on undefined is undefined behaviour

1628668544
andrewrk!~andrewrk@mail.ziglang.org
if the application logic needs to be able to detect, it needs to be optional. however it could be useful for safety checking code to detect undefined values

1628668577
andrewrk!~andrewrk@mail.ziglang.org
there are some types for which it would be possible to detect undefined values

1628668582
ikskuh!~xq@2a0d:5940:6:163::ad7e
and in that case, olabian assumed(?) that undefined is a special value (like in JS)

1628668601
ikskuh!~xq@2a0d:5940:6:163::ad7e
andrewrk: I'd love to see hidden bits in certain types in Debug mode

1628669073
andrewrk!~andrewrk@mail.ziglang.org
me too

1628669084
andrewrk!~andrewrk@mail.ziglang.org
we already have such thing in untagged unions 

1628672934
devast8a!~devast8a@2001:470:69fc:105::3f46
What would happen in release mode? Would comparing with undefined always return false?

1628673181
ikskuh!~xq@2a0d:5940:6:163::ad7e
or true

1628673182
ikskuh!~xq@2a0d:5940:6:163::ad7e
or whatever

1628673187
ikskuh!~xq@2a0d:5940:6:163::ad7e
i don't think a comparison would happen

1628675987
devast8a!~devast8a@2001:470:69fc:105::3f46
As in the comparison wouldn't be allowed, or the compiler doesn't emit a comparison?

1628676091
dutchie!~dutchie@user/dutchie
the comparison itself is UB so the compiler is free to assume it's always false/never reached

1628676125
devast8a!~devast8a@2001:470:69fc:105::3f46
Makes sense, though seems like a footgun waiting to happen

1628676154
dutchie!~dutchie@user/dutchie
undefined is definitely a keyword that should set your mental warning lights off

1628676159
dutchie!~dutchie@user/dutchie
(kind of like `unsafe` in rust)

1628676210
dutchie!~dutchie@user/dutchie
as andy said, the proper way to handle "this might actually not be defined for a while" is optional types ?T

1628676254
dutchie!~dutchie@user/dutchie
undefined is more like "give me some scratch space, i promise to define it by hand before it's referred to"

1628676366
devast8a!~devast8a@2001:470:69fc:105::3f46
Oh yeah I'm referring to specifically the hypothetical future scenario in which undefined actually becomes a defined value in debug mode to facilitate safety checking.

1628676474
dutchie!~dutchie@user/dutchie
ah yeah, i guess in that hypothetical scenario there'd be some well-defined interface to handle it which would get skipped in release mode

1628692618
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
andrewrk is there a flag that the compiler uses? sounds like @isUndefined could be a builtin

1628692758
ikskuh!~xq@2a0d:5940:6:163::ad7e
haze: this would *only* work if you are in Debug mode though

1628692837
ikskuh!~xq@2a0d:5940:6:163::ad7e
you cannot detect if integers are "undefined" or just really 0xAAâ€¦AA

1628692972
ifreund!~ifreund@user/ifreund
it wouldn't even work for everything in debug mode necessarily

1628692996
ifreund!~ifreund@user/ifreund
at least not yent

1628693029
ifreund!~ifreund@user/ifreund
and I'm not sure making it possible in all cases in debug mode would be feasible

