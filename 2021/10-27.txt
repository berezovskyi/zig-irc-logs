1635299148
marler8997!~marler899@204.229.3.4
andrewrk, you still going to handmade seattle?

1635299154
andrewrk!~andrewrk@mail.ziglang.org
yep!

1635299169
marler8997!~marler899@204.229.3.4
looking at tickets now, just making sure :)

1635299327
marler8997!~marler899@204.229.3.4
I saw Walter is giving a talk, never met him in person :)

1635299404
andrewrk!~andrewrk@mail.ziglang.org
ah yeah that should be quite fun

1635301027
freshcoffee!~fresh@user/freshcoffee
andrewrk: making some progress. just reworking azure's linux to run off drone. jeez this server is fast. I'll be back in a few hours.

1635301201
marler8997!~marler899@204.229.3.4
fully booked, excited to meet everyone

1635302293
andrewrk!~andrewrk@mail.ziglang.org
exciting stuff :)

1635302301
andrewrk!~andrewrk@mail.ziglang.org
I still need to book my hotel room

1635307633
marler8997!~marler899@204.229.3.4
got mediterranean inn, close and $100 a night

1635308640
andrewrk!~andrewrk@mail.ziglang.org
alright I just booked in the mediterranean too

1635311749
daurnimator!~daurnimat@vultr.daurnimator.com
andrewrk: I see the next release isn't scheduled until january? https://github.com/ziglang/zig/milestone/11

1635311788
andrewrk!~andrewrk@mail.ziglang.org
I'd like to bump it earlier, but been allowing myself to chase my motivations a little bit rather than force myself to work on the release

1635311807
daurnimator!~daurnimat@vultr.daurnimator.com
==> ArchLinux is looking to update everything to LLVM13 and drop LLVM12. We could wait a week or two for zig to make an LLVM13 compatible releaes; otherwise we'll have to backport

1635311828
andrewrk!~andrewrk@mail.ziglang.org
I think it will take longer than two weeks

1635311880
daurnimator!~daurnimat@vultr.daurnimator.com
foutrelis asks: should we cherry pick https://github.com/ziglang/zig/commit/21606339 ?

1635312458
daurnimator!~daurnimat@vultr.daurnimator.com
andrewrk: so I guess a question is: why have we now de-synced from LLVM releases? I thought zig releases were set up to be every couple of weeks after LLVM ones?

1635312526
andrewrk!~andrewrk@mail.ziglang.org
consider it a slipped deadline

1635312581
daurnimator!~daurnimat@vultr.daurnimator.com
okay, so it's not a longer term change in policy/schedule?

1635312598
daurnimator!~daurnimat@vultr.daurnimator.com
i.e. should we treat this as a one off or expect it in future?

1635312603
andrewrk!~andrewrk@mail.ziglang.org
one off

1635312655
andrewrk!~andrewrk@mail.ziglang.org
january was my estimate based on when llvm 13 would release; they released much earlier than anticipated and I have not yet updated the release milestone date

1635312692
daurnimator!~daurnimat@vultr.daurnimator.com
so it's more like LLVM13 un-slipped a deadline? ;)

1635312700
andrewrk!~andrewrk@mail.ziglang.org
ha yes in a way

1635351699
freshcoffee!~fresh@user/freshcoffee
andrewrk: is there a script you run for zig-bootstrap to create final linux tarball artifact? or just manually?

1635351736
freshcoffee!~fresh@user/freshcoffee
ie: zig+llvm+lld+clang-x86_64-linux-musl-0.9.0-dev.1249+210ef5af8.tar.xz

1635351941
marler8997!~marler899@204.229.3.4
there's one for the windows devkit (don't know of one for the other platforms)

1635352008
freshcoffee!~fresh@user/freshcoffee
yeah saw that one. I ended up merging the two install dirs and nuking llvm's lld `bin/*` . looks like that last bit made it match existing ci tarball.

1635352261
marler8997!~marler899@204.229.3.4
you mean like this? https://github.com/ziglang/zig-bootstrap/blob/master/package#L28

1635352346
freshcoffee!~fresh@user/freshcoffee
pretty much

1635352387
freshcoffee!~fresh@user/freshcoffee
26 mins to build zig-bootstrap x86_64-linux-musl :)

1635352407
marler8997!~marler899@204.229.3.4
a challenge huh?

1635352472
freshcoffee!~fresh@user/freshcoffee
yes!

1635352512
marler8997!~marler899@204.229.3.4
ready set go!

1635352526
freshcoffee!~fresh@user/freshcoffee
ACTION rolls for OOM to intervene

1635354676
marler8997!~marler899@204.229.3.4
time! 36 minutes! holy shit how did you get 26 minutes?!?

1635355243
freshcoffee!~fresh@user/freshcoffee
hmmm big factor might be gcc compiler version for first stage of zig-bootstrap. I did it on debian 11.1 which has gcc 10.x, on AMD Ryzen 9 5950X 16-Core, with SSD

1635355261
marler8997!~marler899@204.229.3.4
oh damn the 5950x

1635355304
freshcoffee!~fresh@user/freshcoffee
now if I could just figure out how to squash docker image layers... or stop obessing over it at least

1635355318
marler8997!~marler899@204.229.3.4
squash docker image layers?

1635355331
marler8997!~marler899@204.229.3.4
the docker image layer system is the biggest complaint I have with docker

1635355348
marler8997!~marler899@204.229.3.4
my solution to that is nix

1635355380
freshcoffee!~fresh@user/freshcoffee
yeah so each history (layer) of an image takes a chunk of space. like 30+ MB if one blog was correct

1635355405
marler8997!~marler899@204.229.3.4
hmmm, that doesn't sound right, if it is then that's even worse than I thought!

1635355427
freshcoffee!~fresh@user/freshcoffee
there is a "experimental" --squash but borks on some failure of not finding parent

1635355436
marler8997!~marler899@204.229.3.4
my complain is that it's not scalable.  each layer is dependent on it's parent, so the same tools installed at different points to different layers have to be stored completely independently

1635355458
marler8997!~marler899@204.229.3.4
the reason nix solves this is because every package is installed to it's own directory, so there's no hierarchical dependencies

1635355517
freshcoffee!~fresh@user/freshcoffee
right. And to me I consider docker layers... temporary and final products I want to flatten things. Why this isn't a first-class supported feature I dunno.

1635355549
marler8997!~marler899@204.229.3.4
interesting idea

1635355623
freshcoffee!~fresh@user/freshcoffee
take making docker images for CI. Consider starting from debian. Then I can manually launch a container, add stuff. customize it. and commit to image,

1635355627
freshcoffee!~fresh@user/freshcoffee
this is nice, and only has 2 layers

1635355647
freshcoffee!~fresh@user/freshcoffee
the image contains zig bootstrap, qemu, wasmtime deps

1635355684
freshcoffee!~fresh@user/freshcoffee
then later I launch container on that image. bump zig bootstrap artifact. commit image.

1635355697
freshcoffee!~fresh@user/freshcoffee
I don't care to have 3 layers. I want it just flattened to 1.

1635355764
viashimo!~viashimo@user/viashimo
podman/buildah seems like it supports squashing

1635356110
freshcoffee!~fresh@user/freshcoffee
ah I think I have a winner. something to do with docker export | docker import 

1635356305
freshcoffee!~fresh@user/freshcoffee
marler8997: I think 30 MB must be wrong. I just managed to export/import and flatten. Saved 1 MB.

1635363723
tsmanner!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
Hello!  I'm playing with the `cImport` stuff and a C library that I don't have control over.  The API functions that accept c-strings in this library accept `char *` rather than `char const *`.  I'd like to use `comptime name: []const u8` as the source for strings being passed, but am struggling to understand how to cast the name to a non-const

1635363724
tsmanner!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
c-string.  Is that possible to do, or do I need to go make a mutable copy and pass that somehow?

1635363953
andrewrk!~andrewrk@mail.ziglang.org
freshcoffee, here's something to get you started: https://github.com/ziglang/release-cutter

1635363970
andrewrk!~andrewrk@mail.ziglang.org
my goal was to migrate marler8997's logic to this script and make it work for other targets too

1635364004
andrewrk!~andrewrk@mail.ziglang.org
uh specifically the update-ci-tarballs.zig script

1635364026
andrewrk!~andrewrk@mail.ziglang.org
I've been slowly automating more of the release process with this repo, but there is still a lot of manual intervention left

1635364177
freshcoffee!~fresh@user/freshcoffee
ok; hmm I presume that we *like* making a ci image that has everything extracted (zig+llvm, qemu, wasmtime). I have that pretty much working using debian

1635364187
freshcoffee!~fresh@user/freshcoffee
uh for linux ci, do you have a linux distro in mind?

1635364198
freshcoffee!~fresh@user/freshcoffee
i think azure is ubuntu right now

1635364252
freshcoffee!~fresh@user/freshcoffee
also by using images complete with everything, it will make troubleshooting ci failures easier

1635364286
freshcoffee!~fresh@user/freshcoffee
http://65.21.135.62/mikdusan/zig/54/1/2

1635364337
freshcoffee!~fresh@user/freshcoffee
got the "clone" operation down to 2 seconds. it clonds from local mirror of github zig repo.

1635364343
andrewrk!~andrewrk@mail.ziglang.org
amazing

1635364389
freshcoffee!~fresh@user/freshcoffee
for compare, the github clone on that host would take 22 seconds.

1635364390
andrewrk!~andrewrk@mail.ziglang.org
looks like perhaps there is a chore for me to do regarding domain name / SSL ?

1635364407
freshcoffee!~fresh@user/freshcoffee
oh yeah we'll need to DNS / SSL stuff at some point

1635364480
freshcoffee!~fresh@user/freshcoffee
what I really like is in preparing the docker CI image, it is really a very little amount of work now that I've gone through it

1635364497
andrewrk!~andrewrk@mail.ziglang.org
For Linux CI here is what I am thinking: the base case shouldn't really matter which linux we pick, ultimately the goal will be to use a zig tarball and not depend on system package or even system compiler. so we would just pick a lean linux distro such as alpine for this case. we can decide later whether we want to add more distros such as ubuntu just to test that it builds successfully with the package manager and system compiler

1635364537
freshcoffee!~fresh@user/freshcoffee
andrewrk: yes I have that already. /deps/local has zig+llvm tarball, plus qemu, plus wasmtime in my current "ci/debian:2" local docker image

1635364546
freshcoffee!~fresh@user/freshcoffee
and that's how it's building right now

1635364561
freshcoffee!~fresh@user/freshcoffee
ie: the image doesn't install gcc.

1635364565
andrewrk!~andrewrk@mail.ziglang.org
excellent

1635364650
freshcoffee!~fresh@user/freshcoffee
btw, cannot use alpine. I tried and failed because 2 things so far; wastime, would need to do a custom build for musl. and (2) more importantly, alpine cannot run linux-gnu binaries

1635364660
freshcoffee!~fresh@user/freshcoffee
so that wipes out a huge chunk of zig test

1635364779
andrewrk!~andrewrk@mail.ziglang.org
makes sense

1635368108
andrewrk!~andrewrk@mail.ziglang.org
freshcoffee, suggestions for the subdomain? ci.ziglang.org?

1635368137
freshcoffee!~fresh@user/freshcoffee
I like it

1635368147
andrewrk!~andrewrk@mail.ziglang.org
done

1635368174
freshcoffee!~fresh@user/freshcoffee
while docker is progressing nicely, I'm going to take a peek at what the effort is for hosting our own srht

1635368179
freshcoffee!~fresh@user/freshcoffee
*drone.io

1635368196
freshcoffee!~fresh@user/freshcoffee
I always say docker meaning drone

1635368214
andrewrk!~andrewrk@mail.ziglang.org
yeah. I'd like to move completely away from sourcehut- from what I can tell it is an operational nightmare to self-host

1635368242
freshcoffee!~fresh@user/freshcoffee
oh that's good to know

