1626435588
flyx[m]!~flyxflyxo@2a03:4000:27:3a6::1
assume `T = union(enum) {a: i32, b: i32}`, the following code fails with „panic: access of inactive union field“: `var t = T{.a = 42}; t = .{.b = t.a};` That shouldn't happen, right?

1626435609
ikskuh!~xq@2a0d:5940:6:163::ad7e
ah, you found the RLS problem

1626435623
ikskuh!~xq@2a0d:5940:6:163::ad7e
const n = T { .b = t.a };

1626435624
ikskuh!~xq@2a0d:5940:6:163::ad7e
t = n;

1626435628
ikskuh!~xq@2a0d:5940:6:163::ad7e
resolves that 

1626435642
flyx[m]!~flyxflyxo@2a03:4000:27:3a6::1
yeah I figured, just wanted to check if this is a known bug

1626435653
ikskuh!~xq@2a0d:5940:6:163::ad7e
it's a footgun in result location semantics where your value gets constructed in-place instead of creating a temporary and copy that

1626436886
flyx[m]!~flyxflyxo@2a03:4000:27:3a6::1
damn that hits me in more than one place

1626437893
devast8a[m]!~devast8a@2001:470:69fc:105::3f46
Is this something that's intentional or a bug in the compiler

1626438162
ifreund!~ifreund@user/ifreund
devast8a[m]: it's an unresolved language design issue that needs to be addressed before the language is stabilized

1626438204
ifreund!~ifreund@user/ifreund
though since we don't have a spec yet and this behavior obviously sucks, one could certainly view it as a bug in the stage1 compiler

1626460151
luuk!~luuk@user/luuk
andrewrk: Read you were going to focus on codegen.zig, so figured I'd send a PR that fixes the wasm-backend related compile errors (in case you also build without -Dskip-non-native). Should allow you to blast through it without us having conflicts :)

1626460162
andrewrk!~andrewrk@mail.ziglang.org
looking now!

1626460167
luuk!~luuk@user/luuk
Oh wow, that was quick

1626460194
andrewrk!~andrewrk@mail.ziglang.org
hmm shouldn't resolveInst take inst: Air.Inst.Index and return WValue ?

1626460212
andrewrk!~andrewrk@mail.ziglang.org
oops I mean it should take Air.Inst.Ref

1626460216
luuk!~luuk@user/luuk
Darn, I failed at using my editor

1626460246
luuk!~luuk@user/luuk
You are correct. Though, I can work on that in upcoming PR's

1626460275
andrewrk!~andrewrk@mail.ziglang.org
ah I see what you are going for here, makes sense to me!

1626460282
andrewrk!~andrewrk@mail.ziglang.org
you're not looking for an immediate merge

1626460310
andrewrk!~andrewrk@mail.ziglang.org
yep looks like you're on the right track here :)

1626460316
luuk!~luuk@user/luuk
Correct. I wanted to help compile first, and then I can take a little longer to fix the wasm backend as I may not be able to finish all of it this weekend.

1626463395
luuk!~luuk@user/luuk
andrewrk: Sorry for interrupting again. Am I assuming correctly that it is no longer possible to get the owned_decl from a Payload.Function? Fixing genCall right now, where I use the operand (of type Ref) to get its type, and then castTag it to a .function.

1626463435
luuk!~luuk@user/luuk
The wasm backend uses that decl, to later patch function calls as wasm requires us to call a function by its index.

1626463456
andrewrk!~andrewrk@mail.ziglang.org
are you referring to the `owner_decl` field of `Module.Fn` ?

1626463572
luuk!~luuk@user/luuk
My apologies. Seems `owner_decl` is part of a Value, not a Type.

1626463632
andrewrk!~andrewrk@mail.ziglang.org
we can maybe put a value() method into Air.zig

1626463713
luuk!~luuk@user/luuk
That would be useful :)

1626465271
luuk!~luuk@user/luuk
This is going crazy smooth. Thank you for those well-detailed comments.

1626466884
andrewrk!~andrewrk@mail.ziglang.org
:)

1626470052
luuk!~luuk@user/luuk
andrewrk: Surprisingly enough I managed to 'finish' refactoring the entire wasm backend. Although I can't really test it yet (due to the panic in `getType()`), but it does compile successfully.

1626470070
andrewrk!~andrewrk@mail.ziglang.org
nice work1

1626470073
luuk!~luuk@user/luuk
I can only imagine I most likely made some mistakes, but I'm happy to fix those once we get further :)

1626470073
andrewrk!~andrewrk@mail.ziglang.org
nice work!

1626470107
luuk!~luuk@user/luuk
It's quite a calming task to be honest

1626470121
andrewrk!~andrewrk@mail.ziglang.org
haha

1626470804
andrewrk!~andrewrk@mail.ziglang.org
luuk, if you want something else to do, working on printing more instructions with --verbose-air might be a good task

1626470827
andrewrk!~andrewrk@mail.ziglang.org
most of them just print TODO right now

1626470907
luuk!~luuk@user/luuk
andrewrk: Great - I'm on it. Is this something you're working on as well? I'm not home tomorrow, so don't want to start a particular one and conflict your work.

1626470955
andrewrk!~andrewrk@mail.ziglang.org
luuk, nope I'm focusing only on codegen.zig for now. I might want to work on it after this task though

1626470973
andrewrk!~andrewrk@mail.ziglang.org
ooh but I could do switch expressions in sema first

1626471045
luuk!~luuk@user/luuk
How does this sound: I'll check progress on Sunday, and continue where you left off. It's already 11 pm here, so don't think I'll get much work done anyway

1626471636
andrewrk!~andrewrk@mail.ziglang.org
sounds good!

