1627868373
andrewrk!~andrewrk@mail.ziglang.org
something needs to be comptime known but it is runtime known

1627869489
viashimo!~viashimo@user/viashimo
andrewrk: thanks. i guess it was complaining about an unresolved anytype in a data structure, but was suggesting the problem was the a call to a hash_map_instance.get()

1627876232
andrewrk!~andrewrk@mail.ziglang.org
viashimo, a future improvement will explain why the expression is expected to be comptime known

1627901222
jacoscaz!~textual@5.170.45.196
Hi all! Moving my first steps in zig. I'm trying to capture the output of grep by using ChildProcess.exec() but, although the code does seem to compile, the process appears to crash when invoking exec(). When calling the function at https://pastebin.com/5y9GXsLQ I can see "before" printed to stdout but then I get a "segmentation fault" error. I'm working on a arm64 MacBook using Zig x86_64 via Rosetta2 as the arm64 build crashes when compiling a dependency

1627901222
jacoscaz!~textual@5.170.45.196
 I am using (upaya). How should I approach this? I am under the assumption that I'm doing something wrong but I am not quite sure as to how to go from here.

1627901787
dutchie!~dutchie@user/dutchie
jacoscaz: for one thing, .argv should be `.{ "grep", "-ril", "--include", "*.md", "--include", "*.txt", "pattern", "." }` which saves you all the quoting issues

1627901804
dutchie!~dutchie@user/dutchie
not sure why that would lead to a segfault though

1627901842
dutchie!~dutchie@user/dutchie
wildcard expansion and argument splitting are normally done by the shell before it calls its internal builtin version of exec

1627901866
dutchie!~dutchie@user/dutchie
so when you are directly spawning a command you have to do it by hand

1627901952
ericam!~ericam@pool-98-113-135-30.nycmny.fios.verizon.net
I was just going to point that out too. But also, I'm not getting a segfault

1627902480
jacoscaz!~jacoscaz@5.170.45.196
dutchie, ericam: thank you for taking a look, I appreciate it! Still getting the segfault, unfortunately, but my argv is looking a lot better.

1627902705
jacoscaz!~jacoscaz@5.170.45.196
Interesting that you're not getting a segfault. Perhaps there's something else at play other than me being a complete newbie.

1627902777
dch!sid1310@couchdb/committer/dch
jacoscaz: are you running zig master, or an older version? there are also quite a few relevant issues on github, and some with patches

1627902887
dutchie!~dutchie@user/dutchie
presumably a recent-ish master going by the `_ = result` bit

1627902923
jacoscaz!~jacoscaz@5.170.45.196
I'm using `0.9.0-dev.689+507dc1f2e`, which dates back to yesterday

1627902940
dch!sid1310@couchdb/committer/dch
bleeding fresh

1627903452
dyluck!~dyluck@c-7e9de253.029-6-73746f46.bbcust.telenor.se
It says zig is M:N, shouldn't this piece of code https://pastebin.com/f3wKRVAG hammer 2 cpu cores?

1627905907
daurnimator!~daurnimat@vultr.daurnimator.com
dyluck: 1. you need to set io mode evented. 2. you need to submit your frames to the scheduler. 3. I wouldn't be suprised if its broken

1627909650
viashimo!~viashimo@user/viashimo
is it possible to define a function pointer type that is is bound? eg. something similar to x: bound fn(u32) void ? this is not correct, but to try to illustrate that I want to pass a pointer to a function that is bound to a struct

1627909801
ikskuh!~xq@2a0d:5940:6:163::ad7e
viashimo: no, you can only do that for comptime values

1627909810
ikskuh!~xq@2a0d:5940:6:163::ad7e
otherwise, you need a wrapper struct

1627915144
amine!~aminechik@li449-221.members.linode.com
Hello, I have the following inline asm which is failing to build but not sure if I'm doing something wrong:

1627915145
amine!~aminechik@li449-221.members.linode.com
  asm volatile ("csrr mstatus, %[in]" : : [in] "r" (x));

1627915145
amine!~aminechik@li449-221.members.linode.com
using zig build-obj -target riscv64-freestanding-none, this seems to fail with an LLVM error:

1627915145
amine!~aminechik@li449-221.members.linode.com
<inline asm>:1:16: error: operand must be a valid system register name or an integer in the range [0, 4095]

1627915145
amine!~aminechik@li449-221.members.linode.com
        csrr mstatus, a0

1627915289
amine!~aminechik@li449-221.members.linode.com
the equivalent in C which I'm copying from is `asm volatile("csrw mstatus, %0" : : "r" (x));`

1627916417
daurnimator!~daurnimat@vultr.daurnimator.com
How can I include C headers without linking against libc?

1627916486
ifreund!~ifreund@user/ifreund
daurnimator: I don't think @cImport() implies -lc?

1627916491
ifreund!~ifreund@user/ifreund
what error are you getting?

1627916706
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: `./zig-cache/o/6cf1035e3c3dd71e4154cabeb4b05201/cimport.h:1:10: note: 'lua.h' file not found`

1627916733
ifreund!~ifreund@user/ifreund
and you're doing -llua or whatever?

1627916742
daurnimator!~daurnimat@vultr.daurnimator.com
no; I don't want to link

1627916748
daurnimator!~daurnimat@vultr.daurnimator.com
I just want to inspect the headers

1627916757
daurnimator!~daurnimat@vultr.daurnimator.com
s/inspect/include

1627916769
ifreund!~ifreund@user/ifreund
ah, does -I/path/to/lua.h work?

1627916780
ifreund!~ifreund@user/ifreund
or does zig even expose -I? I forget

1627916792
ifreund!~ifreund@user/ifreund
it does

1627916799
daurnimator!~daurnimat@vultr.daurnimator.com
it does in build-exe.... 

1627916841
ifreund!~ifreund@user/ifreund
but not in zig translate-c?

1627916853
ifreund!~ifreund@user/ifreund
yeah only the "link options" are exposed there iirc

1627916872
ifreund!~ifreund@user/ifreund
which seems kinda weird

1627916911
daurnimator!~daurnimat@vultr.daurnimator.com
so I *can* do e.g. `lib.addIncludeDir("/usr/include/lua5.3");`

1627916931
daurnimator!~daurnimat@vultr.daurnimator.com
but then I get `/usr/include/lua5.3/lauxlib.h:13:10: note: 'stdio.h' file not found`

1627916933
daurnimator!~daurnimat@vultr.daurnimator.com
which makes sense

1627916956
daurnimator!~daurnimat@vultr.daurnimator.com
and hence my question: how can I make libc headers available

1627917011
ifreund!~ifreund@user/ifreund
as in the headers zig ships or the system headers?

1627917016
daurnimator!~daurnimat@vultr.daurnimator.com
headers zig ships

1627917032
daurnimator!~daurnimat@vultr.daurnimator.com
now I know that I can do `lib.linkLibC()`; which makes the headers available.. but I don't want to link against libc; I *just* want the headers

1627917033
ifreund!~ifreund@user/ifreund
I don't think there's any nice way to do so currently, you'd have to addIncludeDir() the path

1627917045
daurnimator!~daurnimat@vultr.daurnimator.com
how do I get the path?

1627917134
ifreund!~ifreund@user/ifreund
daurnimator: see detectLibCIncludeDirs() in src/Compilation.zig for the logic

1627917143
ifreund!~ifreund@user/ifreund
We don't expose any nice way to do this yet though

1627917281
daurnimator!~daurnimat@vultr.daurnimator.com
:/

1627917369
daurnimator!~daurnimat@vultr.daurnimator.com
okay... will workaround that one for now; something to come back to

1627917374
daurnimator!~daurnimat@vultr.daurnimator.com
next problem.... wut `error: call to generic function with Opaque return type 'c_void' not allowed`

1627917382
daurnimator!~daurnimat@vultr.daurnimator.com
how is c_void opaque?

1627917453
ifreund!~ifreund@user/ifreund
c_void has no known size/alignment

1627917459
ifreund!~ifreund@user/ifreund
that's kinda the definition of opaque no?

1627917605
daurnimator!~daurnimat@vultr.daurnimator.com
ah ha; it's coming out of `@import("std").zig.c_translation.cast(c_void, 1);`

1627917654
daurnimator!~daurnimat@vultr.daurnimator.com
(which is a cut down reproducer from @cImport output)

1627917767
daurnimator!~daurnimat@vultr.daurnimator.com
hmm. I think I should open an issue

1627918003
daurnimator!~daurnimat@vultr.daurnimator.com
https://github.com/ziglang/zig/issues/9507

1627918027
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: c_void has known size.... 0

1627918724
ifreund!~ifreund@user/ifreund
daurnimator: no, c_void is only equivalent to C's void when used as a pointer child type

1627918737
ifreund!~ifreund@user/ifreund
the zig equivalent of (void)foo; is _ = foo;

1627918790
ifreund!~ifreund@user/ifreund
c_void will also be renamed to anyopaque per an accepted proposal by the way

1627918862
daurnimator!~daurnimat@vultr.daurnimator.com
ifreund: then translate-c is translating it wrong.... though I'm not sure what it should be doing instead

1627918876
ifreund!~ifreund@user/ifreund
yes, translate-c is definitely translating it wrong

1627918905
ifreund!~ifreund@user/ifreund
I think it should actually do nothing here, it already does _ = foo; for unused variables by another mechanisim iirc

1627918917
ifreund!~ifreund@user/ifreund
s/do nothing/translate that to nothing/

1627921065
Ristovski!~Ristovski@hellomouse/perf/ristovski
I am trying to compile luajit2 with zig cc, works fine but it ends up not finding _Unwind_GetCFA and _Unwind_DeleteException, any ideas?

1627921072
Ristovski!~Ristovski@hellomouse/perf/ristovski
target is x86_64-linux-musl

1627937420
jacoscaz_!~jacoscaz@5.170.229.114
dch, dutchie, ericam: after a few more tries, I got the code to work by dropping the arena allocator passing `c_allocator` straight to the function calling `ChildProcess.exec()`.

1627937447
jacoscaz_!~jacoscaz@5.170.229.114
dch, dutchie, ericam: after a few more tries, I got the code to work by dropping the arena allocator and passing `c_allocator` straight to the function calling `ChildProcess.exec()`.

1627937523
jacoscaz_!~jacoscaz@5.170.229.114
Ops, apologies for the repeated message. It's been forever since my last foray into IRC (and it's so nice to use it again!).

1627938768
ericam!~ericam@pool-98-113-135-30.nycmny.fios.verizon.net
jacoscaz_: I'm running on 0.8.0, and when I wrap an arena around heap_allocator it works fine

1627938790
ericam!~ericam@pool-98-113-135-30.nycmny.fios.verizon.net
I just used it becasue I didn't want to bother to link libc lmao

