1639440047
andrewrk!~andrewrk@mail.ziglang.org
there are alternatives to solving that problem that remove the need for an anytype struct field from the language

1639440070
ifreund!~ifreund@user/ifreund
I'd love to see that happen, anytype fields are really weird

1639440090
ifreund!~ifreund@user/ifreund
much worse than anytype arguments IMO

1639440201
ifreund!~ifreund@user/ifreund
anhow, I really like anytype as the replacement for c_void, I think it makes a lot of sense and is consistent with the other anyfoo keywords. anyopaque feels wrong if I think a bit harder about the literal meaning of the keyword

1639440302
ifreund!~ifreund@user/ifreund
I also kinda wanted to get the usingnamespace -> mixin rename in for 0.9.0 to coincide with the semantics change and maybe ease confusion there, but I realized today that that rename isn't actually accepted yet

1639440308
andrewrk!~andrewrk@mail.ziglang.org
I see what you mean, but anytype makes it seem like this should be possible: `var x: anytype = 1234; x = "hello";`

1639440342
andrewrk!~andrewrk@mail.ziglang.org
I'm not sold on "mixin" yet; I feel that it has extra implications and encourages certain patterns that it's not meant to

1639440353
ifreund!~ifreund@user/ifreund
fair enough

1639440364
andrewrk!~andrewrk@mail.ziglang.org
I have ruby battle scars

1639440381
ifreund!~ifreund@user/ifreund
I've written less than 100 lines of ruby in my life :D

1639440432
andrewrk!~andrewrk@mail.ziglang.org
will see what I can do about making some executive decisions this week so that your PR doesn't have to bit rot

1639440447
andrewrk!~andrewrk@mail.ziglang.org
is it merge-ready? it's still marked as draft

1639440461
ifreund!~ifreund@user/ifreund
right now it is merge ready yeah, I made the zig fmt fix robust

1639440470
andrewrk!~andrewrk@mail.ziglang.org
nice thank you

1639440506
andrewrk!~andrewrk@mail.ziglang.org
I think the 0.10.0 release cycle will have a good chunk of time for language stabilization progress

1639440518
ifreund!~ifreund@user/ifreund
I just marked it as a draft to give an extra button press before merging to make sure it's the right call

1639440525
andrewrk!~andrewrk@mail.ziglang.org
ok got it

1639440562
andrewrk!~andrewrk@mail.ziglang.org
typing up these release notes, I am reminded just how much labor and effort went into self-hosted this cycle

1639440580
andrewrk!~andrewrk@mail.ziglang.org
it's a ton of investment that won't start paying dividends until we ship

1639440622
ifreund!~ifreund@user/ifreund
yeah, it's a quite ambitious compiler and will be awesome once it self hosts

1639440714
ifreund!~ifreund@user/ifreund
I'm flying back to the US for the holidays on saturday by the way and can't build zig on my laptop cause it doesn't have enough RAM

1639440735
andrewrk!~andrewrk@mail.ziglang.org
noooo

1639440737
ifreund!~ifreund@user/ifreund
so any locally tested patches from me will have to happen before then :D

1639440776
andrewrk!~andrewrk@mail.ziglang.org
saturday is 2 days before the release, hopefully by then it will only be release notes left to do :)

1639440793
ifreund!~ifreund@user/ifreund
yeah :)

1639440804
ifreund!~ifreund@user/ifreund
how you doing with release stress by the way?

1639440825
andrewrk!~andrewrk@mail.ziglang.org
pretty well actually because I gave myself a whole month to polish it, and planned out my time in a realistic schedule

1639440844
ifreund!~ifreund@user/ifreund
nice ^^

1639440867
ifreund!~ifreund@user/ifreund
it's also well timed with a nice holiday break afterwards for everyone to relax and update their projects

1639440878
andrewrk!~andrewrk@mail.ziglang.org
also Jakub has been doing excellent work on the linker and macos side of things

1639440887
andrewrk!~andrewrk@mail.ziglang.org
ah nice I hadn't even considered that

1639441341
andrewrk!~andrewrk@mail.ziglang.org
oh btw I'm looking into https://github.com/ziglang/zig/issues/6469 right now

1639441542
ifreund!~ifreund@user/ifreund
andrewrk: oh neat, let me know if you want me to test anything

1639441562
andrewrk!~andrewrk@mail.ziglang.org
I was able to reproduce it easily with a debian buster image

1639441573
ifreund!~ifreund@user/ifreund
nice

1639441582
andrewrk!~andrewrk@mail.ziglang.org
I'm expecting an easy fix- about to find out

1639442602
andrewrk!~andrewrk@mail.ziglang.org
ah I see, we're basically missing 2 pieces of code (1) parsing /etc/ld.so.cache and (2) default fallback to hard coded runpath dirs

1639442634
andrewrk!~andrewrk@mail.ziglang.org
if you do `man ld.so` it shows you the flow chart of how to look up dynamic library dependencies on disk

1639444539
mischief!~mischief@wopr.sciops.net
ifreund: you cant build with swap?

1639444665
ifreund!~ifreund@user/ifreund
mischief: there's a whole list of tricks to use here, I could probably get it working given enough effort: https://github.com/ziglang/zig/issues/6485

1639444791
mischief!~mischief@wopr.sciops.net
indeed

1639444808
mischief!~mischief@wopr.sciops.net
i think the build i did earlier was at about 10GB RSS peak

1639444900
ifreund!~ifreund@user/ifreund
the laptop has 8 GiB ram

1639445071
leah2!~leah@vuxu.org
zram!

1639445403
andrewrk!~andrewrk@mail.ziglang.org
ifreund, can I send you a patch to try re: glibc version detection?

1639445429
andrewrk!~andrewrk@mail.ziglang.org
no zig rebuild needed; apply patch to std lib and run a simple test.zig program

1639445501
ifreund!~ifreund@user/ifreund
andrewrk: I actually just checked my current builtin.zig and it seems the glibc version detection is correct somehow...

1639445529
ifreund!~ifreund@user/ifreund
probably something has changed on my system since then

1639445530
andrewrk!~andrewrk@mail.ziglang.org
ifreund, probably because you are using a dynamically linked zig compiler so it did not have to fall back to inspecting /usr/bin/env

1639445544
ifreund!~ifreund@user/ifreund
ah yeah that's totally it

1639445560
ifreund!~ifreund@user/ifreund
um, I'll just grab a static one from the website to test your patch

1639445562
andrewrk!~andrewrk@mail.ziglang.org
this test will make sure the /usr/bin/env check works on your machine

1639445594
andrewrk!~andrewrk@mail.ziglang.org
std lib patch: https://clbin.com/Jnk4o

1639445600
andrewrk!~andrewrk@mail.ziglang.org
test.zig: https://clbin.com/mGWKX

1639445606
andrewrk!~andrewrk@mail.ziglang.org
`zig run test.zig` with patched std lib

1639445794
Arnavion!arnavion@user/arnavion
Would it make sense for std.BoundedArray to have an infallible `fn initEmpty() Self` ? `.init(0)` requires `catch unreachable` even though that cannot fail, so it would help to not pollute audits with spurious `catch unreachable`s

1639445917
ifreund!~ifreund@user/ifreund
andrewrk: hmm, doesn't seem to have worked with your patch applied on top of 0.9.0-dev.1950+a76910b69 

1639445940
andrewrk!~andrewrk@mail.ziglang.org
interesting. can I see the output of `readelf -l $(which env)` ?

1639445963
ifreund!~ifreund@user/ifreund
oh wait, I may have forgotten the ./

1639445997
ifreund!~ifreund@user/ifreund
ok yeah your test program works with the static zig

1639446010
ifreund!~ifreund@user/ifreund
--show-builtin doesn't though... 

1639446036
ifreund!~ifreund@user/ifreund
which makes sense since I didn't rebuild the compiler

1639446041
andrewrk!~andrewrk@mail.ziglang.org
yeah

1639446052
andrewrk!~andrewrk@mail.ziglang.org
what distro is that?

1639446063
ifreund!~ifreund@user/ifreund
glibc based void linux

1639446068
andrewrk!~andrewrk@mail.ziglang.org
ok so this has been tested on debian buster and glibc based void linux

1639446075
andrewrk!~andrewrk@mail.ziglang.org
I think that's enough for me to push to master

1639446082
ifreund!~ifreund@user/ifreund
:)

1639446259
andrewrk!~andrewrk@mail.ziglang.org
thanks for testing!

1639446328
ifreund!~ifreund@user/ifreund
no problem! off to bed now o7

1639446397
andrewrk!~andrewrk@mail.ziglang.org
good night

1639455916
daurnimator!~daurnimat@vultr.daurnimator.com
mischief: hmm? got some input/output I can validate against?

1639455921
daurnimator!~daurnimat@vultr.daurnimator.com
I only tested with a couple of basic strings

1639455968
mischief!~mischief@wopr.sciops.net
i can try.. not really versed in zig yet and my program is a mess

1639455974
mischief!~mischief@wopr.sciops.net
only day 5 :)

1639456040
mischief!~mischief@wopr.sciops.net
how do you decode a hex string?

1639456836
squeek502_!~squeek502@user/squeek502
mischief, `std.fmt.parseInt` or `std.fmt.parseUnsigned`

1639456914
squeek502_!~squeek502@user/squeek502
or `std.fmt.hexToBytes`

1639456919
mischief!~mischief@wopr.sciops.net
squeek502_: what about an array longer -

1639456936
squeek502_!~squeek502@user/squeek502
yeah std.fmt.hexToBytes for that

1639456963
mischief!~mischief@wopr.sciops.net
ok

1639456983
mischief!~mischief@wopr.sciops.net
does `zig build test` not work with libc?

1639457002
squeek502_!~squeek502@user/squeek502
it should but you'll need to specify that the test step should link libc

1639457002
mischief!~mischief@wopr.sciops.net
i'm using zig build but i just tried to write a test to help daurnimator but now the C import fails

1639457017
squeek502_!~squeek502@user/squeek502
in build.zig

1639457045
mischief!~mischief@wopr.sciops.net
aha

1639457077
mischief!~mischief@wopr.sciops.net
ok, that works

1639457097
mischief!~mischief@wopr.sciops.net
now test fails because i try to read from a file and the test is apparently not run in cwd

1639457118
mischief!~mischief@wopr.sciops.net
i should make my code use a reader i suppose

1639457171
mischief!~mischief@wopr.sciops.net
can i make a reader from a []u8 somehow?

1639457576
squeek502_!~squeek502@user/squeek502
mischief: `std.io.FixedBufferStream`

1639457717
mischief!~mischief@wopr.sciops.net
nice, that works for my test :-D

1639457721
mischief!~mischief@wopr.sciops.net
daurnimator: still around?

