1625445659
powerofzero!~user@pool-108-26-183-210.bstnma.fios.verizon.net
In stage1, is there some simple way to resolve a lazy ZigValue?

1625449830
andrewrk!~andrewrk@mail.ziglang.org
powerofzero, ir_resolve_const

1625451271
powerofzero!~user@pool-108-26-183-210.bstnma.fios.verizon.net
I don't have a AstNode, all I have is a ZigValue. I don't see any way to get one from the other, is that right?

1625452177
andrewrk!~andrewrk@mail.ziglang.org
you need a source location because resolving a lazy value can generate a compile error

1625455628
daurnimator!~daurnimat@vultr.daurnimator.com
Is anyone using prismJS highlighting? https://github.com/PrismJS/prism/pull/2019 might need updating

1625491810
Nulo!~Nulo@user/nulo
Hey, I sent some PRs yesterday for some easy fixes on the language reference. Would it be useful to revise it and expand it?

1625492682
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
andrewrk: nice work with the making stage2 go first and not even call into stage1 stuff!

1625492687
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
that is real progress

1625494551
dutchie!~dutchie@user/dutchie
ooh, i have actually got a reason to write a function signature which takes a pointer-to-array, not a slice, how exciting

1625494667
dutchie!~dutchie@user/dutchie
`fn foo(buf: *[N]T, ...) []T` where foo fills buf with at most N Ts

1625495026
daurnimator!~daurnimat@vultr.daurnimator.com
dutchie: just use a slice; otherwise you have a whole function in your binary for each possible N

1625495054
dutchie!~dutchie@user/dutchie
i only have one N unless geometry changes

1625495107
dutchie!~dutchie@user/dutchie
number of adjacent nodes on a square grid is always going to be at most 8

1625510565
kiedtl!~kiedtl@kisslinux/kiedtl
Is it possible to put a field of type anytype in a struct? i.e., struct { foo: anytype = undefined, }

1625510569
kiedtl!~kiedtl@kisslinux/kiedtl
(the field can't be comptime)

1625510698
noam!~noam@104.232.42.247
anytype is always comptime

1625510700
noam!~noam@104.232.42.247
so, no

1625510712
noam!~noam@104.232.42.247
kiedtl: any value whose type is 'anytype' cannot exist at runtime

1625510738
noam!~noam@104.232.42.247
Well - that's not entirely accurate

1625513579
andrewrk!~andrewrk@mail.ziglang.org
thanks g-w1 

1625514904
anb!~anb@user/anb
hello, for a tagged union with a non-exhaustive enum, how can I have a field in union to match the "_" arm in enum?

1625515101
kiedtl!~kiedtl@kisslinux/kiedtl
anb: 'else => {},'

1625515462
anb!~anb@user/anb
kiedtl: so I cannot have a field in union for this, correct?

1625516451
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
i think there is a proposal for this and maybe a pr

1625516768
anb!~anb@user/anb
good to know, let me try to find a workaround. Thank you guys

1625519326
dutchie!~dutchie@user/dutchie
is there a way to stop zig fmt from folding my `if (reallyLongCondition() or anotherReallyLongCondition() or yetAnotherReallyLongCondition()) {}` lines into one, analagous to putting trailing commas on structs?

1625519337
dutchie!~dutchie@user/dutchie
or should i just give them names

1625519557
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
I think putting the ors on a new line will do it

1625519564
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
or putting the thing after or on a new line

1625519636
dutchie!~dutchie@user/dutchie
nope, tried that

1625519675
dutchie!~dutchie@user/dutchie
oh wait, break after the `or`

1625519724
dutchie!~dutchie@user/dutchie
yeah, that's it. ty 

1625519741
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
np

1625519789
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
andrewrk: with the updated test harness, is there a way to only test stage2 with zig build test-stage2 as the stage1 stuff takes a while? 

1625520576
andrewrk!~andrewrk@mail.ziglang.org
g-w1, -Dskip-compile-errors

1625520745
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
thanks, it was a bit misleading, as I thought it also skipped stage2 compile error tests

1625520809
andrewrk!~andrewrk@mail.ziglang.org
the line is a little bit blurry since with stage2 you can test different stuff in one set of updates

1625520865
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
yeah, I meant I thought it skipped the compile error updates, but some good trial and error proved that wrong :^)

1625520915
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
TIL SASL exists

1625520927
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
hey haze

1625520931
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
hi gw

1625520938
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
nice hand reveal in the showwtime discord

1625521711
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
this can also be closed now https://github.com/ziglang/zig/issues/2206 :)

1625521792
andrewrk!~andrewrk@mail.ziglang.org
done

1625525710
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
would the AstGen IdCat @tagName thing be considered idomatic zig? where you put a string inside an enum tag

1625525784
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
its pretty cool

1625527508
andrewrk!~andrewrk@mail.ziglang.org
that's the first time I did it but I think I like it :)

