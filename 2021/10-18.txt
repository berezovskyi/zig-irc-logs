1634516097
johnLate!~johnlate@lexington.scnr.net
Just came across this: https://news.ycombinator.com/item?id=28897469 "I'm using Zig language full-time to create an indie game. Also, I've created zig-gamedev project to build game development ecosystem for this language. Using DirectX 12 for rendering, Bullet for physics. I'm ex-AAA game developer and graphics programmer."

1634516475
marler8997!~marler899@204.229.3.4
damn I just finished porting my x86 bootloader to at&t syntax so I could assembly it with the Zig toolchain.  Will be nice to go back to the original intel syntax

1634517415
andrewrk!~andrewrk@mail.ziglang.org
self-hosted is passing 247/1050 (24%) behavior tests

1634518172
marler8997!~marler899@204.229.3.4
that's what, 6% per day?  that means it'll be at 100% in 11 days! :)

1634518301
andrewrk!~andrewrk@mail.ziglang.org
hurray!

1634518671
marler8997!~marler899@204.229.3.4
lame, the zig compiler is saying that I need to link in libc for calling the "sendto" function on windows...not sure how hard this new bug is going to be to unwind

1634518793
marler8997!~marler899@204.229.3.4
so weird, why does std now think that sendto is in the "c" library on windows...it's in ws2_32

1634518952
marler8997!~marler899@204.229.3.4
looks like the problem came in at 7884d84315f4080bfe429d3e29f7ebedf9f3f623 with the addition of "is_windows" in std.os when assigning to "system"

1634520844
tgschultz!UserNick@047-034-058-084.res.spectrum.com
speaking of Windows, is there a known issue with release-fast not working right on it? The Windows build of my project is running significantly slower than the Linux build despite being run on vastly superior hardware.

1634520868
andrewrk!~andrewrk@mail.ziglang.org
there is not a known issue

1634520886
andrewrk!~andrewrk@mail.ziglang.org
would be interested to find out what the difference is

1634520904
andrewrk!~andrewrk@mail.ziglang.org
there is a known issue that the file system on window is horribly slow, but that's not something zig can solve

1634520932
tgschultz!UserNick@047-034-058-084.res.spectrum.com
No IO involved. It might still be somewhere in windows specific code.

1634521323
tgschultz!UserNick@047-034-058-084.res.spectrum.com
ok, I'm pretty sure it is some windows calls being slower than anticipated. false alarm.

1634521706
tgschultz!UserNick@047-034-058-084.res.spectrum.com
since you were curious it has nothing to do with zig. I'm just calling the message handler way more often than I need to because I put it in the wrong part of the loop.

1634551158
flux_control!~flux@sourcemage/wizard/flux
andrewrk: Doesn't the LLVM assembler also support intel syntax? The GNU stuff does (though it requires a flag for it).

1634551358
flux_control!~flux@sourcemage/wizard/flux
I'm pretty sure clang supports intel syntax... Unless you mean there are quirks/bugs when dealing with inline assembly in C/C++ files compiled with it?

1634578817
andrewrk!~andrewrk@mail.ziglang.org
flux_control, it purports to but it's too buggy to use

1634582571
greyrat!~greyrat@ip202.ip-51-178-215.eu
It is my understanding that I can write code in zig, and then export it as a C ABI, and this would be usable from other languages via their FFI. Are there any guides/articles on doing this? I have little experience in using C or FFI, so I would appreciate seeing the different steps shown holistically.

1634582743
andrewrk!~andrewrk@mail.ziglang.org
greyrat, have you seen this yet? https://ziglang.org/documentation/master/#Exporting-a-C-Library

1634583540
tgschultz!UserNick@047-034-058-084.res.spectrum.com
whats the story with extern functions with varargs?

1634583541
greyrat!~greyrat@ip202.ip-51-178-215.eu
andrewrk: Yes, but I have so little understanding of linking, objects, shared libraries, etc, that I expect I will waste quite a bit of time if I just jump in with my only guide being those snippets in the docs. Any good references (book chapters, articles, anything) on these topics would be helpful.

1634583724
tgschultz!UserNick@047-034-058-084.res.spectrum.com
oh, `...` still works? is that an extern only thing?

1634583762
greyrat!~greyrat@ip202.ip-51-178-215.eu
In particular, the docs use `zig` to build the C file that imports the exported zig library, and I don't see a `.so` or `.dylib` file being produced, which I will need if I am to use the library from another language such s Perl. (This might be wrong, I am a total newbie on this subject.)

1634583774
greyrat!~greyrat@ip202.ip-51-178-215.eu
as*

1634585972
greyrat!~greyrat@ip202.ip-51-178-215.eu
I found https://dev.to/tonetheman/call-zig-from-python-3fmo, which suggests doing this is really easy. (It basically has three more lines than the official docs.) 

1634593513
andrewrk!~andrewrk@mail.ziglang.org
tgschultz, calling them works fine. exporting them is still to-od

1634593517
andrewrk!~andrewrk@mail.ziglang.org
*to-do

1634593567
andrewrk!~andrewrk@mail.ziglang.org
greyrat, I'm not aware of a great link to share with you on this topic, if you find one let me know so I can share it with other people asking similar questions in the future :)

1634593664
andrewrk!~andrewrk@mail.ziglang.org
tgschultz, I know you've been (rightly) annoyed at the quantity of bugs lately, I hope you'll give me a bit more time to get there. as zig is a small team with a tight budget, I'm making some priority tradeoffs in order to get to 1.0 faster (but to be clear 1.0 means a robust project with very few bugs)

1634593692
andrewrk!~andrewrk@mail.ziglang.org
it really is like an econ building game, where you juggle different resources, only some of which are money

1634596077
tgschultz!UserNick@047-034-058-084.res.spectrum.com
andrewrk: nah, it's all good. I just get frustrated some times.

1634596222
andrewrk!~andrewrk@mail.ziglang.org
I think part of the frustration comes with the dissonance between the upbeat, enthusiastic attitude that the project presents to the outside world, mixed with the reality of dealing with bugs in pre-1.0 software. ultimately it comes down to the fact that we have to attract both collaborators and donors in order to effectively complete the project faster and more robustly, and that's just part of making progress on the project

1634596257
andrewrk!~andrewrk@mail.ziglang.org
my goal is never to deceive anyone, but I'd be a fool to not try to show off what *does* work well in order to attract investment from the outside world in helping the project to completion

1634596561
companion_cube!~simon@user/companion-cube
Contrast to V

1634596624
tgschultz!UserNick@047-034-058-084.res.spectrum.com
most of zig works really well too. the bit packed struct thing just bothered me a lot because I couldn't even work around the strange behavior with it, and I happen to be doing a lot of bit packing stuff in projects lately.

1634596635
tgschultz!UserNick@047-034-058-084.res.spectrum.com
somewhat related: I can make a case that packed structs should not have their in-memory <1byte-aligned field order dependent on endianess. In my current project I have several structs that I have to layout twice. I've considered writing an Endianize fn that does the re-layout for me.

1634596873
andrewrk!~andrewrk@mail.ziglang.org
tgschultz, would you be interested in doing a 1:1 chat with me at some point and share your screen and stuff? it would be helpful for me right before I go in and implement this feature in self-hosted (which is going to be soon)

1634596888
andrewrk!~andrewrk@mail.ziglang.org
I think you're the one with the most interesting use cases for packed structs

1634597094
tgschultz!UserNick@047-034-058-084.res.spectrum.com
sure, my email is on my github profile so you can use that to arrange something. I'll dig up and update some old code that's related too.

1634599139
andrewrk!~andrewrk@mail.ziglang.org
cool will do

1634599149
andrewrk!~andrewrk@mail.ziglang.org
I got a lot going on, might be a couple weeks before you get something 

1634601030
marler8997!~marler899@204.229.3.4
I fucking hate linker scripts, just wanted everyone to know

