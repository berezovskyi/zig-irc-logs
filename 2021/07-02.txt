1625235594
pusewicz!uid2036@id-2036.tooting.irccloud.com
Is SDL the best option for trying to write a simple game in Zig?

1625235926
jaredmm!~jaredmm@user/jaredmm
Highly dependent on your definitions of simple and best, but SDL2 or Sokol is probably what you'd want to use. 

1625236127
jaredmm!~jaredmm@user/jaredmm
Sokol is STB-style cross-platform libraries written in C, but the author experimented with Zig (https://github.com/floooh/sokol-zig).

1625236168
jaredmm!~jaredmm@user/jaredmm
SDL2 is...well, SDL2. There are a couple people who've done SDL bindings in Zig you can find if you look around on Github.

1625236975
pusewicz!uid2036@id-2036.tooting.irccloud.com
Gotcha, thanks!

1625251576
andrewrk!~andrewrk@mail.ziglang.org
hmm would be nice if we had {c} but that outputted \xXX syntax for unprintables

1625251607
andrewrk!~andrewrk@mail.ziglang.org
I guess that's std.zig.fmtEscapes

1625251633
andrewrk!~andrewrk@mail.ziglang.org
I might have some 'opinions' about std lib formatting once I'm no longer distracted by stage2 & package manager

1625251757
ifreund!~ifreund@user/ifreund
I think there are a lot of 'opinions' to be had about the std in general once the language and compiler are stabilized :P

1625251883
andrewrk!~andrewrk@mail.ziglang.org
very true

1625252032
companion_cube!~simon@user/companion-cube
neovim 0.5! ðŸŽ‰

1625252201
andrewrk!~andrewrk@mail.ziglang.org
looks like no release notes?

1625252484
companion_cube!~simon@user/companion-cube
https://github.com/neovim/neovim/releases/tag/v0.5.0 just the tag, seems.

1625252491
companion_cube!~simon@user/companion-cube
not everyone is as thorough as you andrewrk :)

1625252701
noam!~noam@104.232.42.247
andrewrk: wait, package manager? That's a thing now? :)

1625252788
andrewrk!~andrewrk@mail.ziglang.org
it's always been a thing on the roadmap

1625252813
noam!~noam@104.232.42.247
I know, didn't realize you were working on it *now* though :)

1625252826
andrewrk!~andrewrk@mail.ziglang.org
I'm not

1625252955
andrewrk!~andrewrk@mail.ziglang.org
my top priority for 0.9.0 is shipping self-hosted

1625253278
noam!~noam@104.232.42.247
Gotcha

1625263265
andrewrk!~andrewrk@mail.ziglang.org
so, #9219 is an interesting change that I am about to merge

1625263301
andrewrk!~andrewrk@mail.ziglang.org
it makes any AST Lowering compile errors that occur fail fast, rather than prioritizing reporting stage1 compile errors

1625263329
andrewrk!~andrewrk@mail.ziglang.org
in other words it's one tiny step closer to self hosting

1625263369
andrewrk!~andrewrk@mail.ziglang.org
there's another interesting thing here which is that, despite the fact that adding stage2 AST Lowering compile errors as an additional layer on top of stage1, it allowed us to use less stage1 memory

1625263388
andrewrk!~andrewrk@mail.ziglang.org
which might actually net us perf improvement & less memory usage!

1625263403
andrewrk!~andrewrk@mail.ziglang.org
think about that - by adding a layer, we improve perf

1625263448
andrewrk!~andrewrk@mail.ziglang.org
I didn't do the memory reworking changes in this PR, however. this is a prerequisite

