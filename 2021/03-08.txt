1615161804
marijnfs
true the loop over fields is comptime i guess. I mean the infinite loop is then at runtime.

1615161856
marijnfs
msg is a c-type, but could be removed for the example

1615161968
marijnfs
this comptime loop was needed to find the right union, not sure if there is a better way to do it now?

1615169757
arwn
Hey I want to sort an array of `card = struct{rank:i32, suit:i32}`'s how do i create a custom compare function so i can pass it to std.sort.sort()?

1615169916
g-w1
you mean lessThan?

1615169968
brzg
just make an `fn cardLt(ctx: void, a: card, b: card) bool`, which returns true if card a should be considered less than card b

1615169990
brzg
then pass .{} for context and cardLt for lessThan when calling sort

1615169999
g-w1
dont pass .{} just pass {}

1615170012
g-w1
{} is a value of type void

1615170224
arwn
alright i'll try that, thanks.

1615171584
arwn
very cool, it works. if I wanted to figure out what `context` was for where would I go? the ziglang docs don't seem to explain it.

1615171645
g-w1
context is probably what you pass to the compare function

1615171869
brzg
it's in case you'd need data to handle the comparison beyond just the two items to compare

1615173412
arwn
Is there a way to loop over an enum other than converting the last element to an int?

1615173465
g-w1
loop over in what way?

1615173559
arwn
I want to generate a deck of cards. i have two enums representing suit and rank. I want to have two nested for loops that generate every card. like `for (suit in suit) { for rank in rank } append(cards, Card{suit, rank})}} or something.`

1615173583
arwn
my curly braces are wrong but hopefully you get the idea.

1615174112
g-w1
hmm, you can try to use std.meta.fields and iterate through them

1615175251
arwn
am i stupid? is there not a better way to write the makeDeck function?

1615175457
timmydo
has anyone tried packaging zig on guix before? I tried but got an error:

1615178620
arwn
aha the std.meta.fields function almost does what I want and that's goon enough for now.

1615178636
arwn
thanks for the suggestion.

1615191599
tane
howdy

1615192259
ikskuh
heya

1615192354
tane
ikskuh, do you have holidays too? :)

1615192380
ikskuh
nope, just usual morning routine (and hanging out here)

1615202370
ikskuh
i found a critical bug in "zig fmt"

1615202474
ikskuh
somehow some emoji force zig fmt to take up

1615202608
ikskuh
cannot reproduce it though

1615207366
dutchie
is there a way to set std.log's log_level at runtime without writing a custom log function?

1615208299
dutchie
somewhat related nit: std.debug.getStderrMutex but std.io.getStdErr

1615208861
ikskuh
dutchie: no, afaik not

1615209407
tane
dutchie, good point, there's a lot of inconsistencies in the stdlib as of now

1615209445
ikskuh
tane: that might be because a lot of people contribute and change stuff

1615209447
tane
I guess there's a zig-parser in zig by now

1615209448
tane
yes

1615209463
tane
what I wanted to do last year was to export all symbols and look for inconsistencies automatically

1615209471
tane
but back then the only parser was in C-like C++

1615209476
tane
maybe it's a better time now

1615209536
ikskuh
zig std has a zig parser for at least a year

1615209550
ikskuh
zig fmt is based on it already for a long time

1615209562
tane
ok nice, I guess it was around 0.5.0 that I tried this

1615209605
ifreund
std.zig predates 0.5.0

1615209628
tane
ok, whatever - maybe I didn't see it then

1615209657
ifreund
that's also very possible, the std documenation is not exactly a priority

1615209676
tane
I guess I just looked at the compiler and how it parsed its stuff then went with it

1615211045
tnorth
Hey there. I'm trying to debug a Zig program with GDB. I have a struct (foo) with a member bar = ?[]@This(). When breaking in GDB after intialization (bar is allocated with a c_allocator) and printing foo, I get: $1 = {bar = <error reading variable>}. Printing foo.bar says: "That operation is not available on integers of more than 8 bytes". Moreover, I can't index it (print foo.bar[0] for instance). Is that normal? Is

1615211046
tnorth
there a workaround?

1615211191
ikskuh
what about foo.bar.ptr ?

1615211234
tnorth
ikskuh: "There is no member named ptr"

1615211276
tnorth
I expected GDB to find the address to the beginning of bar

1615211749
Raito_Bezarius
has getEnvPosix disappeared in the std.os namespace?

1615211761
Raito_Bezarius
If so, is the canonical way to read from env vars to allocate something?

1615211922
ifreund
Raito_Bezarius: std.os.getenv()?

1615211964
Raito_Bezarius
I was mislead by

1615211966
Raito_Bezarius
Thanks ifreund !

1615212053
Raito_Bezarius
Is it possible to look at a env var at compile-time?

1615212069
Raito_Bezarius
comptime const someFlag = std.os.getenv("xxx") orelse false;

1615212071
Raito_Bezarius
something like this

1615212135
ifreund
no

1615212149
g-w1
that would be unreproducable builds

1615212163
g-w1
use the -Dpattern in the build.zig

1615212163
ifreund
you can look at environment variables in your build.zig and pass the to your program as build_options if you really want

1615212175
Raito_Bezarius
I'm already in the build.zig file in fact

1615212191
Raito_Bezarius
I know this env var will always be some reproducible path

1615212208
Raito_Bezarius
(it comes from the nix store)

1615212215
ifreund
that sounds like it is a build time configuration option

1615212227
Raito_Bezarius
Hm, it has no relation with the code

1615212230
ifreund
what if I want to build your program on my (non-nix) system?

1615212275
Raito_Bezarius
To be precise, this is part of a run command of QEMU with OVMF firmware

1615212284
Raito_Bezarius
the OVMF firmware path is passed as an env var

1615212301
Raito_Bezarius
Because there is no standard way to discover where the firmware is

1615212320
Raito_Bezarius
Nix is a requirement of the project, but there are escape hatches, indeed

1615212562
ifreund
andrewrk: could use your input on which path to take here when have a minute:

1615214867
qbit
++ for not having a hard req on nix :P (there is little to no support in nix for *BSD .. so making your application work there is pain)

1615216269
TheLemonMan
the m68k backend for LLVM is ready to land, noice

1615218843
ikskuh
whooot?

1615218846
ikskuh
seriously?!

1615218849
ikskuh
:O

1615218972
TheLemonMan
ikskuh,

1615218993
ikskuh
may i scream in excitement?

1615219047
TheLemonMan
time to dust off the Amiga ?

1615219163
ikskuh
it's ready to use already

1615221719
clee
having trouble figuring out how to do something pretty basic; using zig 0.6.0, how do I open an absolute path as a directory and walk all of its subpaths?

1615221809
ikskuh
clee: are you a fresh zig user?

1615221813
tane
clee, try std.fs.walkPath

1615221850
clee
ikskuh: yup

1615221874
ikskuh
i heavily recommend using 0.7.1

1615221889
clee
tane: I don't see that std.fs.walkPath on

1615221903
clee
ikskuh: it doesn't appear to be packaged for Debian bullseye yet

1615221933
ifreund
you can get static tarballs from ziglang.org

1615221935
g-w1
dont use those docs, they are very bad

1615221939
clee
hahahaha

1615221952
tane
clee, yeah.. "grep" through the source of stdlib to get ground truth :)

1615221953
clee
okay so what docs should I use to learn the stdlib?

1615221959
tane
the source

1615221960
ifreund
yeah the autogenerated std docs are much worse than reading the source code

1615221963
g-w1
the source code

1615222094
oats
the stdlib code is pretty great, very clean and understandable

1615232336
txdv
`Vector2 ballPosition = { (float)screenWidth/2, (float)screenHeight/2 };` how do I do this in zig?

1615232436
ikskuh
const Vector2 = struct { x: f32, y: f32 };

1615232463
ikskuh
var ballPosition = Vector2 { .x = @intToFloat(f32,screenWidth)/2, .y = @intToFloat(f32, screenHeight)/2 };

1615232490
txdv
`.x =` thanks!

1615232867
txdv
raylib + zig is so simple, easy and fun to use, it should be on the zig playground as one of the default examples

1615235337
andrewrk
what zig playground are you referring to?

1615235798
andrewrk
mikdusan, thanks for looking into zig-bootstrap/macos/CI stuff. hmm so did we regress with llvm12? I think we do use zig-bootstrap for macos CI right now

1615236551
andrewrk
ah right, so what we do is use `zig cc` and `zig c++` only, to build zig, on macos. I think that will still work fine with llvm12, right?

1615239719
s-ol
how does package resolution work for @import()?

1615240067
s-ol
ah, i found build.Pkg.dependencies, which does what I need :)

1615244801
Raito_Bezarius
can we deep initialize a struct?

1615244823
Raito_Bezarius
inst = A { .subinst = B { .x = 0, .y = 1 } }

1615244825
Raito_Bezarius
something like that

1615245011
Raito_Bezarius
nevermind, I was doing something wrong

