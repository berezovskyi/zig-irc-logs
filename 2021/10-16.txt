1634343320
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
const char * == [*]const u8?

1634343377
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
or more appropriately [*:0]const u8?

1634343956
flux_control!~flux@sourcemage/wizard/flux
haze: The sentinel is only appropriate if const char * is a (C) string. If that points at some other data that happens to be char in size, then a sentinel might not be appropriate.

1634343974
flux_control!~flux@sourcemage/wizard/flux
Also, is it really a single char pointer?

1634344014
flux_control!~flux@sourcemage/wizard/flux
The C side you gave is a pointer to a single char. Did you perhaps mean const char *[] or const char **?

1634344022
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
*T is a single item, [*]T is unknown length many item

1634344046
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
the c side returns `const char*`

1634344049
flux_control!~flux@sourcemage/wizard/flux
If not, and it's really a pointer to a single char, then you want a single-item pointer in Zig.

1634344071
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
but yeah it was a c string,

1634344094
flux_control!~flux@sourcemage/wizard/flux
haze: Yeah, be careful of misleading type safety in C.

1634344112
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
im not sure what you meant by single item

1634344120
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
because my definition works

1634344128
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
single item would be *u8

1634344242
flux_control!~flux@sourcemage/wizard/flux
haze: As you said, it was a string in the C side, not a true pointer to a single char, hence it wasn't a single-item pointer (though the C def may have appeared that way).

1634344269
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
oh yeah true there isnt a distinction between single and many item

1634344274
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
pointers

1634344275
flux_control!~flux@sourcemage/wizard/flux
Pointers can be abused in C

1634344278
flux_control!~flux@sourcemage/wizard/flux
Yup

1634344281
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
i c wym now

1634345558
haze!~haze@2603-7000-a300-1741-895b-7c7a-c464-2b4a.res6.spectrum.com
does ptrCasting a fn pointer not let me change how its meant to be used?

1634347680
andrewrk!~andrewrk@mail.ziglang.org
it's supposed to

1634402571
tgschultz!UserNick@047-034-058-084.res.spectrum.com
So... how can I get a runtime floating point exception when my code uses no floating point? I don't even think I'm calling a std function that uses floating point...

1634403979
tgschultz!UserNick@047-034-058-084.res.spectrum.com
yep, code that only has integers in it and no std calls is somehow triggering the issue.

1634404023
Gliptic!~glip@irc.glip.cc
probably division by zero

1634404130
Gliptic!~glip@irc.glip.cc
SIGFPE signal stands for floating point exception, but is raised for all arithmetic exceptions

1634404175
tgschultz!UserNick@047-034-058-084.res.spectrum.com
gotchya. annyoing.

1634404231
tgschultz!UserNick@047-034-058-084.res.spectrum.com
yeah, there was one division where I didn't account for a zero case, so that was it. Thanks.

1634417247
Tekk!~Tekk@cpe-76-182-45-53.nc.res.rr.com
What's the heuristic zig fmt uses to guess whether structs should take up multiple lines or not? I could just force it off with a comment but I'm curious at this point.

1634417318
Tekk!~Tekk@cpe-76-182-45-53.nc.res.rr.com
In a file I've got a struct with 3 fields, which is apparently fine to span across multiple lines, but the struct with 12 fields *has* to be one single line

1634417908
Nulo!~Nulo@user/nulo
Tekk, I believe it has to do with wherever it has a trailing comma or not

1634418007
scj!~scj@m90-129-208-39.cust.tele2.se
is there a way to change the EXEC attribute on linksection without resorting to writing linker scripts?

1634418326
Tekk!~Tekk@cpe-76-182-45-53.nc.res.rr.com
So it does. Interesting.

1634418335
Tekk!~Tekk@cpe-76-182-45-53.nc.res.rr.com
I didn't even notice that I was missing the trailing comma on the 2nd one.

