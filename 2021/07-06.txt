1625531743
cr1901!~William@2601:8d:8600:911:296d:44c:36ee:9deb
marler8997: I owe you a feature for the disk imager :P... I'll try to get to it this week before Saturday. The last few weeks have been... bad for productivity

1625532602
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
this was quite weird, I assume it was for debugging? https://github.com/ziglang/zig/pull/9311

1625532819
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
neuuu without that my complicated 50k loc solution breaks

1625532855
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
ðŸ˜±

1625533136
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
aha "Author: Alexandros Naskos <alex_naskos@hotmail.com> Date:   Mon Jun 15 21:51:53 2020 +0300 UTF16 create process, utf8->utf16 fix" he must have left debugging stuff in

1625533574
marler8997!~marler899@204.229.3.4
cr1901, completely forgot about that, no rush from my side

1625534192
andrewrk!~andrewrk@mail.ziglang.org
thx for the cleanup g-w1 

1625534210
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
no problem

1625573168
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
now that the ci is passing on this, I wouldn't mind someone taking a look at it https://github.com/ziglang/zig/pull/9199

1625585073
Flaminator!~Flaminato@ns323457.ip-5-39-76.eu
Are there currently any known workarounds to get `native-native-msvc` working under Windows 10 without it using mingw?

1625593765
andrewrk!~andrewrk@mail.ziglang.org
Flaminator, I still haven't looked into why that regressed. it's likely a trivial fix

1625596481
marler8997!~marler899@204.229.3.4
hmmmm, so there's a new feature that prevents function param names from conflicting with other declarations?

1625596669
marler8997!~marler899@204.229.3.4
trying to figure out how to handle this new requirement for zigwin32,

1625596837
marler8997!~marler899@204.229.3.4
one idea I have is we could disable this shadow requirement if the function has no implementation.  When a function has no implementation, the name of the parameters is just for documentation, which is the case for all zigwin32 bindings (and would also be for other bindings)

1625596955
andrewrk!~andrewrk@mail.ziglang.org
marler8997, you mean for extern functions? that sounds fine

1625597294
marler8997!~marler899@204.229.3.4
yeah

1625597324
marler8997!~marler899@204.229.3.4
I was trying to find which commit enabled this new shadowing check, was that really recent?

1625597362
andrewrk!~andrewrk@mail.ziglang.org
yeah

1625597385
andrewrk!~andrewrk@mail.ziglang.org
41336acb0bb89dd23ef9c49b15d91a847f6796bc

1625597396
marler8997!~marler899@204.229.3.4
thx, I'll see if I can create a PR

1625597412
andrewrk!~andrewrk@mail.ziglang.org
should be fairly straightforward; the knowledge of whether the current function is extern is available

1625597422
marler8997!~marler899@204.229.3.4
yeah I figured

1625597464
andrewrk!~andrewrk@mail.ziglang.org
I think this is going to be a rocky release cycle and I will be relying on others to find issues like this as I focus hard on getting self-hosted to a shippable state

1625597481
marler8997!~marler899@204.229.3.4
yeah, it will be good though

1625598713
marler8997!~marler899@204.229.3.4
andrewrk, oh I think it already works for extern functions, it's function pointers that I think zigwin32 is having issues with

1625598853
marler8997!~marler899@204.229.3.4
oh no nevermind

1625598876
marler8997!~marler899@204.229.3.4
the problem is with the COM wrapper functions I generate that actually do have function bodies

1625598899
Pistahh!~pistahh@user/pistahh
could someone pls check https://godbolt.org/z/Y1Y7voYPe ? Why does it think the "map" is a const and how to fix it?

1625598923
marler8997!~marler899@204.229.3.4
*Self

1625599088
Pistahh!~pistahh@user/pistahh
bah, thx.

1625600880
marler8997!~marler899@204.229.3.4
there wasn't that many conflicts so for now I'm just hardcoding the list of param names to avoid in each module

1625603748
Flaminator!~Flaminato@ns323457.ip-5-39-76.eu
Andrewrk I renamed the mingw folder it's how I noticed it was actually still using mingw.

