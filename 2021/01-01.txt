1609459583
mikdusan
yeah between 10.15.x Catalina and 11.x Big Sur, Apple has thrown 3 different wrenches at building software from CLI: forcing SDK, OS-version detection, and dlopen-only way to access installed system libraries

1609459982
andrewrk
also another architecture and mandatory code signing

1609461726
g-w1
is it better to make big-ish prs like 7092 or smaller ones like 7628. The latter could have also been included with the try astgen pr, but I don't know which one is easier for the reviewers?

1609462467
squeek502
g-w1, imo its best for PRs to be focused (all changes are related to a single topic/goal); size is secondary to that

1609462508
fraktor
I know I asked about this yesterday, but I'm curious: has anyone done anything with an immediate mode GUI in Zig?

1609462678
g-w1
thx

1609464797
fengb
Is there a way to setup the event loop manually?

1609464812
fengb
Shifting my entire main into async is breaking things :(

1609465218
andrewrk
I break this rule all the time but as a reviewer I prefer smaller PRs

1609465238
andrewrk
oops and by smaller I mean focused, like squeek502 said above

1609465446
fengb
Iâ€™m curious which PRs have beeen the largest

1609468034
fengb
Ah I think I can spin up a separate thread to take care of this fugly recursion. Stopgap until it can be made iterative

1609470818
wilsonk_
fraktor: there is zig-upaya (

1609479114
koakuma
Excuse me, is there any formatting/printing function that can print out a full f128 value?

1609479161
koakuma
AFAICT the ones in std.fmt casts its input to f64 before formatting so it's useless for examining small differences in f128 computation

1609479740
g-w1
check out

1609482693
koakuma
Oh thanks g-w1

1609482742
koakuma
How do I use it? Just import ryu.zig?

1609482771
koakuma
Also, I don't see any f128-taking functions in there, at least in the Zig part

1609485280
koakuma
Oh nvm, casting it to u128 and printing as hex seems to work well enough for my purposes :)

1609509062
daurnimator
andrewrk: you around perchance?

1609512389
oats
hmmm, I don't see the `try` operator in the operator precedence table

1609512429
ifreund
oats: should be the same as orelse and catch

1609512446
oats
ifreund, cheers, thanks :)

1609512452
ifreund
but yeah that's an easy fix if you feel like making a PR

1609512462
ifreund
(try is sugar for catch |e| return e;)

1609514746
daurnimator
huh; when/why did ZIG_SKIP_INSTALL_LIB_FILES become windows only?

1609514990
daurnimator
o.o mikdusan changed it like a year ago

1609521386
kbd
Hi, is there a way to get a function's name through reflection, or are functions anonymous?

1609521417
kbd
Trying to build a hashmap of functions to call and I'm trying to make it nice to build that up.

1609521495
ifreund
kbd: see TypeInfo.Declaration.name

1609521538
kbd
<3

1609521591
kbd
Really really enjoying Zig so far btw!

1609521643
ifreund
same :)

1609521971
daurnimator
ifreund: that works if you have the typeinfo of a struct containing a function; but not if you have just a bare function

1609522019
ifreund
daurnimator: indeed

1609522040
daurnimator
kbd: functions are essentially anonymous at comptime; but at runtime you might be able to inspect debug info to get a name. note this is non-reliable

1609522170
ifreund
that breaks as soon as someone strips your binary

1609522235
daurnimator
> note this is non-reliable

1609522269
kbd
hmm, thanks. This:const info = @typeInfo(@TypeOf(hello));try print("{}", .{info});try print("{}", .{info.Declaration});gives "error: no member named 'Declaration' in union 'std.builtin.TypeInfo'"

1609522277
kbd
oy

1609522292
kbd
hmm, thanks. This:```const info = @typeInfo(@TypeOf(hello));try print("{}", .{info});try print("{}", .{info.Declaration});```gives "error: no member named 'Declaration' in union 'std.builtin.TypeInfo'"

1609522303
kbd
no block code here I guess, sorry.

1609522313
daurnimator
kbd: yeah this is IRC, not discord :p

1609522371
kbd
Figured maybe clients were fancy nowadays.

1609522499
kbd
ok, so sounds like no way to take an array of function pointers and turn it into a map of them.

1609522534
ifreund
no, but you could given a file of function declarations

1609522580
ifreund
call @typeInfo() on the file -> iterate TypeInfo.Struct.decls

1609522635
kbd
Oh, awesome.

1609522672
kbd
also fwiw daurnimator, freenode's webchat did show `code formatting` just not blocks :)

1609522704
ifreund
many of our clients run in a terminal and have nothing of the sort :P

1609522718
kbd
ofc, I should keep that in mind.

1609522724
ifreund
pastebins are the way to go yeah

1609522742
ugla
Can I drive the Zig evented IO event loop manually? I'd like to integrate it with the glib event loop in a GTK program, so I can use Zig async goodness, but I don't know what I'm doing.

1609522747
fengb
At that point, all messages are code blocks :P

1609522763
daurnimator
ugla: not with the current implementation

1609522782
daurnimator
ugla: though funny you bring it up now; I just mentioned it in the zig event loop discord channel

1609522892
ugla
daurnimator: I see, thanks. Is it something that might happen eventually?

1609522895
ugla
Pun intended :)

1609522917
fengb
Zap is a different event loop implementation that works with other languages

1609522934
fengb


1609522954
ugla
ðŸ‘€

1609523063
ifreund
last I heard the ziggo branch was recommended

1609523504
kbd
ifreund: almost there, but getting "error: values of type 'std.builtin.Declaration' must be comptime known, but index value is runtime known". Possible to build a hashmap at comptime for use at runtime?

1609523533
ifreund
kbd: sounds like you need an inline for/while loop

1609523552
ifreund
oh and see std.ComptimeHashMap

1609523568
ifreund
since the allocator interface doesn't work at comptime

1609523705
kbd
amazing, inline for worked.

1609523747
kbd
ty so much, never would have figured out that combination of "put public functions in another file then iterate over the imported object's Struct with an inline for" :)

1609523772
ifreund
no problem!

1609523848
kbd
and now I don't even need to define anything since I'm using an ArrayHashMap and I can put the functions in the file in the order I want.

1609524185
kbd
I have no idea what would be involved in this, but if y'all could make the Zig Software Foundation available for Amazon Smile donations I'll switch from the Python Software Foundation. (Gonna donate anyway tho)

1609524508
ifreund
kbd: I pinged the dude responsible for stuff like that :D

1609529049
andrewrk
kbd, I just signed up ZSF for it, let me know if it works

1609529068
kbd
oh neat, I'll go look and see if it's an option

1609529133
kbd


1609529234
kbd
oh, wrong place

1609529241
andrewrk
I don't think it will be that useful though - it's only 50 cents on a $100 purchase

1609529244
kbd
yeah it's there!

1609529350
kbd
Yeah it's small, but better than 0. FWIW Amazon says the PSF has received 2,556.09 as of Nov 2020.

1609529432
andrewrk
in total?

1609529445
andrewrk
over a period of years?

1609529446
kbd
lol yeah that's what it looks like.

1609529451
andrewrk
tbh that's not much...

1609529494
kbd
It's not.

1609529560
kbd
But, easy way for people to donate. Personally I often forget to order things from smile.amazon.com instead of amazon.com :(

1609529651
g-w1


1609529712
marler8997
is there a decl equivalent for @field?

1609529748
andrewrk
@marler8997, @field is just a.b syntax where b is a comptime string

1609529779
marler8997
ah...so it should work with decls as well

1609530098
marler8997
it worked, but, looks like decl.name isn't declaring that it is null-terminated

1609530247
marler8997
it is guaranteed to be null-terminated correct?

1609531325
andrewrk
you're looking at the compiler source? I see name: [*:0]const u8

1609531345
marler8997
I just assumed they were since string literals are

1609531357
andrewrk
what's "they"?

1609531363
marler8997
the strings inside TypeInfo

1609531370
marler8997
like Declaration.name, StructField.name, etc

1609531387
andrewrk
ah, I thought you were working on stage2 stuff, never mind

1609531420
marler8997
pivoting...should the root.panic handler be called on a null-reference error on windows?

1609531607
andrewrk
you're talking about the segfault handler?

1609531615
marler8997
root.panic

1609531622
marler8997
can you also provide a default segfault handler?

1609531627
andrewrk
what's a null-reference error?

1609531635
marler8997
(@intToPtr(fn() void, 1))();

1609531642
marler8997
almost null :)

1609531642
andrewrk
ok yeah the segfault handler

1609531654
andrewrk
you can disable it and set up your own

1609531658
marler8997
sweet

1609531670
andrewrk
put `pub const enable_segfault_handler = false;` in your root source file

1609531688
marler8997
looks like the default one doesn't do anything for a Windows application (with no console)

1609531790
marler8997
probably should submit a PR to fix that

1609531818
marler8997
there's just so much to do, it's endless

1609531894
andrewrk
we're building a skyscraper by hand

1609531935
marler8997
true, I'm also pretty limited since it takes a while for my PRs to get looked at :)

1609531953
marler8997
any reason why this PR that fixes a truly egregious error hasn't been merged yet?

1609531954
marler8997


1609532003
marler8997
not being able to include ".." in pathnames on windows...I can't believe it's been broken for so long

1609532234
ifreund
oh wow, I saw someone having issues with that and just assumed windows was stupid or something

1609532254
fengb
Why not both ðŸ™ƒ

1609532907
andrewrk
marler8997, the reason is mostly holidays but I'll look now

1609533122
andrewrk
thanks for this btw, you are right this is long overdue

1609536858
marler8997
andrewrk, are you wanting us to duplicate the RtlDosPathNameToNtPathName logic inside the Zig standard library?

1609536868
marler8997
to avoid the heap allocation?

1609536872
andrewrk
yes

1609537313
g-w1
I think right now this

1609538222
g-w1
ah, well I fixed it :P. but still pertains to the future when facing harder issues

1609538241
g-w1
if the compiler is known to be incomplete, does a bug just add to the noise? maybe a comment is better?

1609539924
ifreund
daurnimator: by the way, river now does change where it looks for the system config based on the install prefix used while building

1609539952
ifreund
I think your PKGBUILD will still work, it will just rebuild some things in the install step :/

1609541114
Daimanta
Hi, I'm new!

1609541131
fengb
Hi new, Iâ€™m dad

1609541140
Daimanta
Hi dad :)

1609541164
ifreund
o7

1609541184
Daimanta
If I have a technical question about Zig, is this the place to be?

1609541340
ifreund
yup

1609541378
Daimanta
Nice :)

1609541417
andrewrk
welcome Daimanta

1609541467
andrewrk
I'll be streaming some self-hosted compiler development soon

1609541473
andrewrk
30 min ish

1609541519
Daimanta
So, I'm building my first program and part of the program is reading a password for further processing. Reading stdin is quite easy (yay!) but I want to silently read, that is without echo. Is  this possible

1609541548
andrewrk
I'm not sure how that works

1609541565
andrewrk
I've seen some software do it

1609541575
ifreund
some termios thing

1609541590
ifreund
I think there's a flag you can set to disable echo

1609541638
Daimanta
I'm afraid that the solution is not very portable, but that is something I can accept

1609541693
Daimanta
I know that cmd has "@ECHO OFF" and many linux shells have "stty -echo" but that will probably require some differentiation.

1609541772
ifreund
well the proper way to do thisn on unix-like systems is termios, we have std.os.tcgetattr and std.os.tcsetattr

1609541806
Daimanta
ah, that probably gives me some handles, thanks.

1609541842
ifreund
man termios says the ECHO flag is what you want to unset

1609541848
ifreund
no problem and good luck!

1609541855
Daimanta
Is there any place where you can give input on things like documentation as I have some constructive feedback

1609541908
ifreund
Well, the issue tracker if it's a concrete problem. Be aware that there are other higher priority tasks at this stage in the languages development however

1609541961
Daimanta
ok, I see. I have more than a single issue on this point so I'll probably check back in on a later date

1609542093
ifreund
PRs are always welcome of course

1609542185
Daimanta
Understoord

1609542246
Daimanta
I do want to complement the devs on the creation of this language. It's the first time I'm actually motivated to do low-level langs without being repulsed by the language design decisions.

1609542279
andrewrk
:)

1609542403
Daimanta
I do struggle with the documentation, so that's a major hurdle for me

1609542429
fengb
Have you seen ziglearn.org?

1609542460
Daimanta
I did and it's really helpful but very incomplete at the moment.

1609542517
Daimanta
Major kudos to the people doing the documentation as well. I know it's generally considered not "sexy" but documentation really helps with the onboarding process.

1609542540
ifreund
I think the documentation on the language itself is pretty solid

1609542575
ifreund
documentation for the standard library is quite sparse though, mostly you just want to read the source code

1609542621
ifreund
I could also be biased about the language reference coming from C/C++

1609542648
ifreund
it's probably less accessible if you are coming from, say, javascript

1609542809
Daimanta
I do come from high-level languages so I work with other types of documentation. But I do agree that the automated source code doc is not complete yet.

