1626281800
marler8997!~marler899@204.229.3.4
test

1626281845
luuk!~luuk@user/luuk
pong

1626282069
marler8997!~marler899@204.229.3.4
why does "zig build run" keep the build process around instead of just using "execve"?

1626283762
freshcoffee!~fresh@user/freshcoffee
it checks the exit-status of child and reports error code if any

1626283976
marler8997!~marler899@204.229.3.4
execve would propagate the exit code as well, does zig build do more than that?

1626284007
ifreund!~ifreund@user/ifreund
marler8997: I'm saying zig build run doesn't progagate it, and execve would fix that

1626284068
marler8997!~marler899@204.229.3.4
are you freshcoffee or did I miss a message?

1626284125
freshcoffee!~fresh@user/freshcoffee
I'm confused

1626284145
ifreund!~ifreund@user/ifreund
oh, I just switched networks, I think my messages might have gotten lost

1626284149
marler8997!~marler899@204.229.3.4
maybe ifreund thought he sent a message and it didn't get through?

1626284156
ifreund!~ifreund@user/ifreund
I was agreeing that zig build should execve 

1626284170
marler8997!~marler899@204.229.3.4
now it makes sense

1626284228
freshcoffee!~fresh@user/freshcoffee
yeah the experimental irc logger didn't get the msg either 

1626284334
marler8997!~marler899@204.229.3.4
I've created an issue: https://github.com/ziglang/zig/issues/9376

1626284491
freshcoffee!~fresh@user/freshcoffee
btw `zig build run` returns error if the child errors. So it does 2 things: verbosely indicates that an error happens, and returns an error

1626284531
marler8997!~marler899@204.229.3.4
execve would also return an error, so you mean to say it does 1 thing, verbosely reporting the error?

1626284581
freshcoffee!~fresh@user/freshcoffee
it does 1 thing "extra" when compared to execve. But tbf, I didn't check if it just returns error=1 or propagates the child error-value

1626284664
marler8997!~marler899@204.229.3.4
zig run foo.zig uses execve

1626284831
ifreund!~ifreund@user/ifreund
marler8997: I think changing the RunStep in std.build wouldn't make sense, as that's also used to run commands as part of the build

1626284831
ifreund!~ifreund@user/ifreund
we'd need a new ExecveStep that's only used for running the final binary

1626284831
marler8997!~marler899@204.229.3.4
ah

1626284831
ifreund!~ifreund@user/ifreund
the need for a separate code path is probably why it hasn't been done yet

1626284987
marler8997!~marler899@204.229.3.4
I updated the issue with a comment that explains your suggestions ifreund

1626304645
ifreund!~ifreund@user/ifreund
man, I really want inline switch, it's gonna be so nice

1626306566
andrewrk!~andrewrk@mail.ziglang.org
same ha

1626306601
andrewrk!~andrewrk@mail.ziglang.org
it's going to be much easier to implement with the SSAT we have in stage2 than the messy basic block / phi stuff we have in stage1

