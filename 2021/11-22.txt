1637583929
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
Zig Heil All!

1637583934
Franciman!~Franciman@mx1.fracta.dev
\o

1637584178
ebb!ebb@user/ebb
:/

1637584454
Pistahh_!~pistahh@user/pistahh
umm

1637584458
Pistahh_!~pistahh@user/pistahh
ACTION finds this highly inappropriate

1637584473
ugla!~ugla@2001:470:69fc:105::2b5
Me too

1637584697
earnestly!~earnest@user/earnestly
lol

1637585141
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
?

1637585181
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
Pistahh, what do you mean?

1637585429
dutchie!~dutchie@user/dutchie
a greeting that evokes genocidal regimes is not appropriate for a community that strives to be inclusive

1637585582
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
dutchie, this comes also from gnomes

1637585595
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
for instance if you played tibia

1637585668
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
Hail Durin!

1637585684
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
in German Heil Durin

1637585763
dutchie!~dutchie@user/dutchie
we are speaking english, and at least 4 people found it distasteful

1637585859
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
dutchie, ok ok

1637586103
ikskuh!~xq@v43666.php-friends.de
andrzejku: plz no. it's really inappropiate

1637586133
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
ikskuh, ok

1637586210
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
it is really hard to say what's accepted what's not because there are different countries and cultures and what is accepted by ones is not accepted by others but I fully understand that english world is dominating us

1637586224
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
personally for me is a good joke

1637586258
ikskuh!~xq@v43666.php-friends.de
it's definitly not a joke to use the vocal signature of a regime that is highly racist

1637586313
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
ikskuh, please don't start politics here

1637586330
andrzejku!~andrzejku@45-11-60-125.ip4.greenlan.pl
ACTION prefers to ban heil word on channel

1637586540
earnestly!~earnest@user/earnestly
ikskuh: Is there software written in zig named as ziggurat yet?

1637586584
earnestly!~earnest@user/earnestly
Hm, only https://github.com/johan-bolmsjo/ziggurat

1637586594
ikskuh!~xq@v43666.php-friends.de
we should compile the game Ziggurat with Zig

1637586618
earnestly!~earnest@user/earnestly
lol, yes

1637586667
ikskuh!~xq@v43666.php-friends.de
btw

1637586683
ikskuh!~xq@v43666.php-friends.de
andrew tweeted that the guys from Baba Is You are now using zig cc to compile their game for linux!

1637586861
ikskuh!~xq@v43666.php-friends.de
zonk

1637586897
ifreund!~ifreund@user/ifreund
yeah, we really don't need that here

1637589077
tgschultz!UserNick@047-034-058-084.res.spectrum.com
marler8997: yeah, because if it was 'pub usingnamespace' then 'usingnamespace' alone has no meaning. It is incongruous with every other, annotative, usage of pub. The alternative argument is that `pub` is how we expose things to whoever imports us, so not using pub is the incongruous way, but I think 'usingnamespace' alone is less incongrous.  For the record, I do not feel very strongly one way or the other.

1637590036
ikskuh!~xq@v43666.php-friends.de
tgschultz: there can still be a reason to import symbols into @This() and only access them like this

1637590045
ikskuh!~xq@v43666.php-friends.de
for example, generics need them

1637590698
ifreund!~ifreund@user/ifreund
another example would be a helper mixin that is local to the file

1637592935
tgschultz!UserNick@047-034-058-084.res.spectrum.com
ikskuh, I'm not sure what you mean. Unless I am mistaken `usingnamespace` only allows access of those symbols from outside wherever 'usingnamespace' is used. If you use it in a struct S you cannot use the names directly, but users of S can use them via S. if S is not pub, I'm not seeing how having it be pub/not pub would make a difference.

1637593059
ikskuh!~xq@v43666.php-friends.de
tgschultz: usingnamespace struct{ var i: usize=0;}; pub const i_ptr = &@This().i; 

1637593206
tgschultz!UserNick@047-034-058-084.res.spectrum.com
ikskuh, what is the utility of this? One could just use a name instead of @This() in this case.

1637593446
ikskuh!~xq@v43666.php-friends.de
yeah, but as ifreund said: mixins

1637593459
ikskuh!~xq@v43666.php-friends.de
you can use a local mixin that will only be available in your current file

1637597057
tgschultz!UserNick@047-034-058-084.res.spectrum.com
Ok, I think I got you.

1637597187
guest_bambino64!~guest_bam@p200300c3570c7b00f1dad132b4ea7aed.dip0.t-ipconnect.de
greets. quick question i couldn't find answer to in std or ziglearn - is there a way to parse json without supplying comptime type? basically, i'm trying to solve this: https://adventofcode.com/2015/day/12

1637597384
jcmoyer!~jcmoyer@user/jcmoyer
guest_bambino64: std.json.Parser has a parse method that returns the json tree

1637597411
jcmoyer!~jcmoyer@user/jcmoyer
https://github.com/ziglang/zig/blob/master/lib/std/json.zig#L2632-L2686 example usage

1637598503
guest_bambino64!~guest_bam@p200300c3570c7b00f1dad132b4ea7aed.dip0.t-ipconnect.de
thanks! i also figured out i probably don't need a full json parser to solve this problem.

1637604350
pkap!~pkap@185.209.196.179
Can I somehow compare a '[24]u8' and '[:0]const u8' string?

1637604623
pkap!~pkap@185.209.196.179
Do I need a loop or is there an easier way?

1637604665
ifreund!~ifreund@user/ifreund
pkap: std.mem.eql(u8, &array, slice); should work

1637604690
ifreund!~ifreund@user/ifreund
arrays are values in zig, so you need to use & to get a *[24]u8 which will coerce to a []u8

1637605087
pkap!~pkap@185.209.196.179
Perfect, thanks!

1637606870
pkap!~pkap@185.209.196.179
ifreund: Unfortunetly it does not work as expected. The two arrays look the same when I print them, but `std.mem.eql()` returns `false`.

1637606936
ifreund!~ifreund@user/ifreund
pkap: note that the sentinel 0 isn't included in the .len of a sentinel terminated slice like [:0]const u8

1637606941
ifreund!~ifreund@user/ifreund
perhaps that explains the failure?

1637607009
pkap!~pkap@185.209.196.179
Yes probably. Sentinel is the same as null termination?

1637607054
ifreund!~ifreund@user/ifreund
null termination/0 termination would be a special case of sentinel termination where the sentinel is null/0

1637607064
pkap!~pkap@185.209.196.179
Ah yes of course

1637607088
ifreund!~ifreund@user/ifreund
zig expects that the element at foo[foo.len] is the sentinel for sentinel terminated types

1637607114
ifreund!~ifreund@user/ifreund
and doesn't include the sentinel when coercing e.g. [:0]const u8 to []const u8

1637607138
pkap!~pkap@185.209.196.179
OK so concatinate a \0 should work, right?

1637607178
ifreund!~ifreund@user/ifreund
hard to say without more context :D

1637607482
pkap!~pkap@185.209.196.179
I have something like this in mind: `const equal = std.mem.eql(u8, &node.data.wlr_output.name, args[1] ++ "\0");`

1637607545
pkap!~pkap@185.209.196.179
ah no

1637607560
pkap!~pkap@185.209.196.179
This: `const equal = std.mem.eql(u8, &node.data.wlr_output.name ++ "\0", args[1]);`

1637607598
ifreund!~ifreund@user/ifreund
pkap: ah, pretty sure what you want here is mem.eql(u8, mem.sliceTo(&node.data.wlr_output.name), args[1]);

1637607612
ifreund!~ifreund@user/ifreund
wlr_output.name may not have the terminating 0 at the end

1637607639
ifreund!~ifreund@user/ifreund
shoot, should be mem.sliceTo(&node.data.wlr_output.name, 0)

1637607655
ifreund!~ifreund@user/ifreund
it takes the sentinel as the second argument

1637607678
ifreund!~ifreund@user/ifreund
are you working on a compositor?

1637607690
pkap!~pkap@185.209.196.179
Well, on yours :D

1637607694
ifreund!~ifreund@user/ifreund
:D

1637607766
pkap!~pkap@185.209.196.179
But first dabblings with zig so please don't expect much :D

1637622065
peterhil_!~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi
Hi! I am planning to learn with Advent of Code next month, but is there some interesting new tutorials while waiting for the challenges to be published?

1637622145
peterhil_!~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi
Or maybe I just do the challenges form previous years or port an old log colouring tool of mine from Python to Zig. Any good ANSI colour libraries?

1637624297
_javyre!~javyre@2001:470:69fc:105::2162
peterhil_: i just learned the basics of zig over the weekend using mainly https://zig.news and https://ziglearn.org . Don't know if those sources are considered "new" or not but they were really helpful

1637624355
_javyre!~javyre@2001:470:69fc:105::2162
(the rest i filled in by reading the std library code)

1637624471
peterhil_!~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi
_javyre: zig.news is news for me! :-)

1637624473
_javyre!~javyre@2001:470:69fc:105::2162
* library code + https://ziglang.org/documentation/0.8.1)

1637624493
_javyre!~javyre@2001:470:69fc:105::2162
there's some very approachable posts on there it's great

1637624523
ifreund!~ifreund@user/ifreund
ziglings is also great: https://github.com/ratfactor/ziglings

1637624702
_javyre!~javyre@2001:470:69fc:105::2162
oh wow

