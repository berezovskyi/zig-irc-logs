1635251428
kenran!~kenran@200116b82be34a0057089fd82850b09a.dip.versatel-1u1.de
Can anyone of you point me toward an example (something a little bigger than in the documentation) of how to use allocators? I have no background in systems programming, so despite reading the documentation I'm having a hard time grokking the subject.

1635251779
luuk!~luuk@user/luuk
kenran: There's some more information about it here: https://ziglearn.org/chapter-2/#allocators. If you don't mind watching a video, then this is a great resource: https://www.youtube.com/watch?v=vHWiDx_l4V0

1635252601
kenran!~kenran@200116b82be34a0057089fd82850b09a.dip.versatel-1u1.de
luuk: thanks, that looks promising!

1635252717
luuk!~luuk@user/luuk
You're welcome!

1635266924
marler8997!~marler899@204.229.3.4
is it just me, or does anyone else use 0xff as an exit code instead of 1 because of the possibility of cosmic rays flipping one of the exit code bits?

1635266938
freshcoffee1!~fresh@user/freshcoffee
it's just you :P

1635266990
marler8997!~marler899@204.229.3.4
:P

1635266990
ifreund!~ifreund@user/ifreund
marler8997: if cosmic rays are part of your fault model, that's not going to come close to solving the problem :P

1635267013
ifreund!~ifreund@user/ifreund
you'd need separate, redundant systems and some form of consensus

1635267037
marler8997!~marler899@204.229.3.4
right I understand that, but there's no extra code to returning 0xff rather than 1, so my brain says, might as well make use of all those bits

1635267186
marler8997!~marler899@204.229.3.4
When it comes to choosing a non-zero exit code, I have no reason to choose any value in particular.  So the deciding reason ends up becoming so unimportant that the odds of it ever even mattering are probably almost 0.  I find that funny for some reason

1635267200
ifreund!~ifreund@user/ifreund
I'd argue that deviating from the norm here is not worth it if it doesn't fully solve the problem

1635267212
marler8997!~marler899@204.229.3.4
Is a 1 exit code the norm?

1635267214
ifreund!~ifreund@user/ifreund
many programs document the semantic meaning of different exit codes

1635267221
ifreund!~ifreund@user/ifreund
bash has a whole ton iirc

1635267255
marler8997!~marler899@204.229.3.4
sure if you're going to make use of exit codes that makes sense

1635267284
ifreund!~ifreund@user/ifreund
I'm pretty sure 1  the norm for a non-zero but not otherwise special exit code

1635267309
ifreund!~ifreund@user/ifreund
I'd challenge you to find some posix coreutil program that doesn't use 1 for that

1635267335
marler8997!~marler899@204.229.3.4
I guess that says something about me.  I care so little about "normal" that I find the probablity that a cosmic ray will hit my computer more relevant :)

1635267347
ifreund!~ifreund@user/ifreund
:D

1635267488
marler8997!~marler899@204.229.3.4
My guess is most of us have similar thoughts about "normal".  If we all cared about doing what's normal, we wouldn't be doing Zig

1635267518
ifreund!~ifreund@user/ifreund
I try to make my software be as predictable as possible

1635267541
ifreund!~ifreund@user/ifreund
and use whatever tech I thing best allows me to do that

1635267563
marler8997!~marler899@204.229.3.4
that's a good point.  Your interfaces should not look strange to people

1635267711
ifreund!~ifreund@user/ifreund
without good reason, If I feel like I need to do something a little new/inventive/weird to achieve my goals I will

1635267761
ifreund!~ifreund@user/ifreund
but I won't be divergent without good reason

1635268470
freshcoffee1!~fresh@user/freshcoffee
any docker experts here? I am having trouble limited memory and swap for container `--memory=2g --memory-swap=2g`. memory limit is good, swap (which is mem + swap) is set; behavior with build zig1.o is once 2 GB is hit, the image starts to rapidly page; I want the proc to just die at 2 GB

1635268574
freshcoffee1!~fresh@user/freshcoffee
if I create a malloc.c exe that just loops on `malloc(1024*124);` the process gets killed fast (probably by OOM)

1635277450
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
freshcoffee when are you going to open up your github sponsorships

1635285927
freshcoffee!~fresh@user/freshcoffee
I don't think my coffee is good enough to receive funds :)

1635286110
marler8997!~marler899@204.229.3.4
ifruend, I'm looking at various ways we could servce our device display remotely. (i.e. rdp/vnc).  We're running weston, do you know if wayland supports a way to capture the screen?  I'm not finding too much on this topic

1635286161
ifreund!~ifreund@user/ifreund
marler8997: the core protocol doesn't, wlroots based compositors tend to implement wlr-screencopy as the wlroots library makes it trivial 

1635286170
ifreund!~ifreund@user/ifreund
gnome has  some dbus thing

1635286186
marler8997!~marler899@204.229.3.4
ah, that must be what WayVNC uses (says it only works with wlroots based compositors)

1635286206
ifreund!~ifreund@user/ifreund
yep

1635286228
marler8997!~marler899@204.229.3.4
apparently weston supports an rdp backend...?!?

1635286229
ifreund!~ifreund@user/ifreund
marler8997: weston seems to have a pipewire plugin: https://gitlab.freedesktop.org/wayland/weston/-/blob/main/pipewire/pipewire-plugin.c

1635286269
marler8997!~marler899@204.229.3.4
ah, pipewire is what gnome remote desktop server uses

1635286272
ifreund!~ifreund@user/ifreund
which is how screensharing through webrtc in firefox and chrome works these days on wayland

1635286325
marler8997!~marler899@204.229.3.4
I've got something working that just grabs the screen from DRM through the framebuffer, but we're wondering if there's an off-the-shelf solution that would be easier

1635286409
ifreund!~ifreund@user/ifreund
you're probably better off asking in #wayland on oftc, I'm really not that familiar with weston tbh

1635286425
marler8997!~marler899@204.229.3.4
good idea, I'll do that thanks

1635287665
marler8997!~marler899@204.229.3.4
ifreund, does that GNOME dbus interface require support from the compositor?

1635287884
ifreund!~ifreund@user/ifreund
yup, see the files with screen-cast in their name here: https://gitlab.gnome.org/GNOME/mutter/-/tree/main/src/backends

