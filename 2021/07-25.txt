1627172805
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
test

1627172812
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
is daurnimator awake?

1627173389
eltonpinto!~1ntEgr8@2601:c8:c000:3090:b599:ff61:44c0:383
hello!

1627173419
jaredmm!~jaredmm@user/jaredmm
How should `x += ( x == 0 );`, where x is an unsigned int, be c-translated? Right now it ends up being `x +%= @bitCast(c_uint, @boolToInt(x == @bitCast(c_uint, @as(c_int, 0))));`, which fails because c_uint has size 4 and u1 has size 1.

1627175605
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
eltonpinto hello :D

1627177469
andrewrk!~andrewrk@mail.ziglang.org
hmm it occurs to me that we call LLVMInitializeAllTargets() but we could be maybe not doing that for targets that are not being used

1627177537
andrewrk!~andrewrk@mail.ziglang.org
jaredmm, the @boolToInt needs to get wrapped in an @as to coerce it to the appropriate type

1627177559
andrewrk!~andrewrk@mail.ziglang.org
in this specific case the outer @bitCast could be an @as

1627181830
cot!~kiedtl@kisslinux/kiedtl
Any plans for allowing string literals of types other than []const u8?

1627181844
cot!~kiedtl@kisslinux/kiedtl
for example, it'd be useful to have []const u21

1627181852
cot!~kiedtl@kisslinux/kiedtl
For UTF-32 strings

1627185162
andrewrk!~andrewrk@mail.ziglang.org
you can implement that pretty easy with a function that wraps string literals

1627185194
andrewrk!~andrewrk@mail.ziglang.org
const u = foo.yourFunction;  bar(u("string"))

1627217995
Ristovski!~Ristovski@hellomouse/perf/ristovski
hmmm, `zig test lib/std/fs/watch.zig --test-evented-io` on 0.9.0-dev.339+81bf05bf6 makes the test fail with `watch.zig:618:43: error: expected type '*std.hash_map.HashMapUnmanaged([]const u8,void,std.hash_map.StringContext,80)', found '*const std.hash_map.HashMapUnmanaged([]const u8,void,std.hash_map.StringContext,80)'`

1627218259
ifreund!~ifreund@user/ifreund
Ristovski: probably just needs this patch: https://0x0.st/-Wqh.diff

1627218306
ifreund!~ifreund@user/ifreund
though is looks like that's not the only error

1627218322
jaredmm!~jaredmm@user/jaredmm
andrewrk: thanks. I've yet to successfully modify c-translate, but there's a first time for everything.

1627218323
Ristovski!~Ristovski@hellomouse/perf/ristovski
yeah, there are more :/

1627218482
ifreund!~ifreund@user/ifreund
jaredmm: the test suite makes working on translate-c pretty nice :)

1627219099
koakuma!~koakuma@user/koakuma
So, let's say that I have this piece of code:

1627219099
koakuma!~koakuma@user/koakuma
const thread = try std.Thread.spawn(.{}, aFunction, .{});

1627219099
koakuma!~koakuma@user/koakuma
thread.detach();

1627219099
koakuma!~koakuma@user/koakuma
Then the child thread wouldn't call `std.Thread.ThreadCompletion.freeAndExit` if `aFunction` finished before the main thread does the detach, is that correct?

1627225140
h4ze!~haze@cpe-68-174-134-17.nyc.res.rr.com
thank u lucus 

1627225141
h4ze!~haze@cpe-68-174-134-17.nyc.res.rr.com
luuk

1627225145
luuk!~luuk@user/luuk
<3

1627226434
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
https://github.com/ziglang/zig/issues/9451

1627226435
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
there

1627226923
ifreund!~ifreund@user/ifreund
added my thoughts

1627227271
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
thank u ifreund i agree

1627227292
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
i just dont want to add a stringify proxy for every enum i have when working with tvdb api >_>

1627231085
olabian!~olajaro@ool-4576796d.dyn.optonline.net
Hi, for some reason the ncurses macros dont' seem to be working. Specifically the attributes e.g. `c.attron(A_BOLD);` gives an error. Any way around this?

1627231728
faisal[m]!~faisalm]@static.151.131.203.116.clients.your-server.de
> <ifreund> less state that you need to keep in your head, especially when doing stuff you'd use macros for in vim

1627231728
faisal[m]!~faisalm]@static.151.131.203.116.clients.your-server.de
The whole target before command in kakoune concept (vim is the opposite for those that don't know) is really nice. I just can't get myself to leave Vim - too comfortable :)

1627232248
ifreund!~ifreund@user/ifreund
faisal[m]: and I can't go back to vim :P

1627232333
ifreund!~ifreund@user/ifreund
olabian: you can always translate the macro manually

1627236125
olabian!~olajaro@ool-4576796d.dyn.optonline.net
for some reason I"m getting an error ./src/curses.zig:14:27: error: expected type 'u6', found 'usize'

1627236169
olabian!~olajaro@ool-4576796d.dyn.optonline.net
in my function:     return mask << (shift + @intCast(usize, c.NCURSES_ATTR_SHIFT)); where mask and shift are usize

1627236240
ifreund!~ifreund@user/ifreund
olabian: the right hand operand of the << operator needs to be a u6 if the left hand operator is a 64 bit type

1627236268
ifreund!~ifreund@user/ifreund
shifting by some number that can't be represented by a u6 would be a bug

1627236327
olabian!~olajaro@ool-4576796d.dyn.optonline.net
oh I see, thanks

1627243999
cot!~kiedtl@kisslinux/kiedtl
What's the idiomatic way of getting a []const u8 out of an enum variant (i.e., the 'opposite' of @field())

1627244110
ifreund!~ifreund@user/ifreund
cot: @tagName()

1627245247
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
hello

1627245309
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
g-w1: did anyone ever figure out why LTO outputting to /dev/null was breaking?

1627245320
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
sorry, I am not on IRC a lot

1627249067
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
jwinnie he is on a camping trip

1627250175
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
does anyone know how to pass linker args to zig cc?

1627250195
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
i tried `zig cc -z --static` and `zig cc -Wl,--static` but neither worked

1627250255
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
it keeps saying the linker argument is not valid, even though --static should be a valid ld.lld arg (?)

1627250272
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
i'm targeting x86_64-linux-musl, is zig using its own linker instead of LLD in this case?

1627250620
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
@andrewrk

1627250891
ifreund!~ifreund@user/ifreund
jwinnie: the arguments following -Wl there are not passed to ld.lld but rather interpreted by zig

1627250932
ifreund!~ifreund@user/ifreund
zig uses ld.lld to implement linking, but that is an implementation detail and not part of the public interface

1627250987
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
thanks ifruend :)

1627250991
ifreund!~ifreund@user/ifreund
I don't see why we shouldn't support --static there though

1627250998
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
so i can't pass args to the linker through zig cc?

1627251004
ifreund!~ifreund@user/ifreund
it's just that nobodies implemented it yet

1627251029
ifreund!~ifreund@user/ifreund
you can, but only the args that zig knows how to parse into something it understands

1627251062
ifreund!~ifreund@user/ifreund
jwinnie: this is implemented in this for loop: https://github.com/ziglang/zig/blob/b87105c9217e41cb39c09d9a569ac8bc006c2eef/src/main.zig#L1305

1627251083
ifreund!~ifreund@user/ifreund
adding support for --static would be pretty easy if you want to give it a try

1627251119
ifreund!~ifreund@user/ifreund
(just check if the argument is "--static" and if it is set `link_mode = .Static`)

1627251420
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
thank you sooo much ifreund you just made my day

1627251598
uggwar!~uggwar@user/uggwar
trying to write a double while-loop, but the outer loop is only executed once: https://pastebin.com/Mz4jzKqc

1627251604
uggwar!~uggwar@user/uggwar
anyone know why? :-)

1627251616
ifreund!~ifreund@user/ifreund
jwinnie: no problem, feel free to send that patch as a PR :)

1627251640
ifreund!~ifreund@user/ifreund
uggwar: you don't reset x to 0

1627251651
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
damnit if

1627251652
ifreund!~ifreund@user/ifreund
move the `var x = ...` into the outer while

1627251661
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
always beatin me

1627251666
ifreund!~ifreund@user/ifreund
haze: :P

1627251673
uggwar!~uggwar@user/uggwar
haha :-D

1627251685
uggwar!~uggwar@user/uggwar
thanks!

1627251741
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
ifreund: no real need since `zig cc` itself supports `--static` i think

1627251753
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
i was just trying to understand the API since i'm scripting it :)

1627251821
jwinnie!~jwinnie@096-041-034-224.res.spectrum.com
hopefully it will not change very much in the future haha

1627251847
ifreund!~ifreund@user/ifreund
jwinnie: cool, well glad my explanation was useful :)

