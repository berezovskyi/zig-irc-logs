1633480186
andrewrk!~andrewrk@mail.ziglang.org
hmmm what's up with all these aliases in compiler-rt? I think it would be better to use comptime logic to only export the needed names for the given target

1633480196
andrewrk!~andrewrk@mail.ziglang.org
not sure where this information exists though.

1633484401
andrewrk!~andrewrk@mail.ziglang.org
oof today is not going well. been working on two different things, both have been like stepping on a field of rakes

1633495457
discipulus!~discipulu@user/discipulus
stay strong andrewrk

1633495875
discipulus!~discipulu@user/discipulus
Neat, this job listing is tagged with Zig (though, the description doesn't mention it) https://remoteok.io/remote-jobs/105426-remote-senior-software-engine-architect-c-img-ly

1633495967
Tekk!~tekk@89.45.90.10
Sounds fun

1633499319
Tekk!~tekk@89.45.90.10
Hey, I see an old bug about C callbacks saying you've got to cast them to *c_void. Is it possible to declare C function pointers when explicitly binding now?

1633499324
Tekk!~tekk@89.45.90.10
The bug I saw was from 2016 or so

1633500633
Tekk!~tekk@89.45.90.10
nvm, passing the function seems to have just worked.

1633502052
andrewrk!~andrewrk@mail.ziglang.org
hhgghhh finally got the test passing that has been plaguing me all day

1633502266
Tekk!~tekk@89.45.90.10
Congrats

1633502275
andrewrk!~andrewrk@mail.ziglang.org
https://github.com/ziglang/zig/commit/e16ddad49f1b3e4ce10ce8fb653e48f24a9d4837#diff-2de8897299365085cc10c9dad91100028b6b42ad822b026265faa7da80e51803

1633502286
andrewrk!~andrewrk@mail.ziglang.org
so much just for 12 lines of red diff

1633502770
Tekk!~tekk@89.45.90.10
hey andrewrk is there a proposal out for, for lack of a better word, renaming functions on export that you know of? / would you be interested in one. Doing these manual bindings has me thinking of it.

1633502802
Tekk!~tekk@89.45.90.10
Doing an awful lot of sdl.SDL_Foo, which would read a bit nicer in the export layer if I could just do "pub fn Foo = extern fn SDL_Foo(...) ...;"

1633504881
torque!~tachyon@user/torque
can't you just do `pub const Foo = SDL_Foo`

1633504949
Tekk!~tekk@89.45.90.10
After defining it, you mean?

1633504968
Tekk!~tekk@89.45.90.10
ACTION tries

1633505132
Tekk!~tekk@89.45.90.10
Much better. Thanks torque 

1633505158
Tekk!~tekk@89.45.90.10
I have no idea why I thought that C-abi funcs would be treated differently

1633518099
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
andrewrk: thanks for fixing https://github.com/ziglang/zig/issues/9804

1633540123
tgschultz!UserNick@047-034-058-084.res.spectrum.com
andrewrk: I'm updating packed_int_array.zig and I notice all of the tests are disabled because of stage1 memory stuff. Is that only necessary for the ones that create hundreds of types or is there some other issue? Because I'd like to remove that skip for the basic tests.

1633546483
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
How would you go by debugging 'Instruction does not dominate all uses!'?

1633546629
freshcoffee!~fresh@user/freshcoffee
there are quite a few open issues; some suggest an easy workaround but not sure if this is the specific case you are hitting:

1633546631
freshcoffee!~fresh@user/freshcoffee
https://github.com/ziglang/zig/issues/7966

1633546909
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
now if only i could find where its coming from ;-;

1633547818
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
freshcoffee one of my issues was a switch, transforming it to simple if's fixed it

1633547874
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
seems like complex while unwrapping/switches have trouble in async

1633551461
andrewrk!~andrewrk@mail.ziglang.org
tgschultz, yes I think it's the hundreds of instances of function body code that is (for now) problematic

1633551467
andrewrk!~andrewrk@mail.ziglang.org
basic tests should be fine

1633551521
andrewrk!~andrewrk@mail.ziglang.org
haze, step 1 is try to simplify the test case. there is probably already a simplified test case for such a problem filed on github. next step is to examine the LLVM IR and see how there is a %foo being used before it is declared. next is to figure out why stage1 is generating LLVM IR that way

1633551571
andrewrk!~andrewrk@mail.ziglang.org
if your goal is simply to work around the issue in your project, it's simpler: step 1 is to get an LLVM IR dump, step 2 is to use the debug info in the module to find out file and line number 

1633555832
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
andrewrk I had actually fixed this using freshcoffee's issue link! I just had to simplify some code that was rough around the edges in async mode

1633555848
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
it was a switch case, and the logic in the while (cond): (expr) {} thing

1633555866
andrewrk!~andrewrk@mail.ziglang.org
nice glad you got it working

1633555873
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
If I have enough free time after yak shaving today I'll try and see if I can reduce it further to add to the issue

1633555892
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
yeah, I got everything to compile but loris' bork has some special stuff with async that doesn't play well with my library

1633556860
jcmoyer!~jcmoyer@user/jcmoyer
is there a way to print the exact commands zig cc uses when building libc for the first time?

1633556971
cCCCCcccccCCc!~b@user/ccccccccccccc
I don't know, but that'd be one I'd be interested in knowing, too. 

1633556990
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
im sure you would cCCCCcccccCCc 

1633557003
cCCCCcccccCCc!~b@user/ccccccccccccc
Oh?

1633557089
cCCCCcccccCCc!~b@user/ccccccccccccc
haze: Why's that?

1633557102
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
because your name is full of c's

1633557129
cCCCCcccccCCc!~b@user/ccccccccccccc
It is, was a terrible keyboard accident. 

1633557142
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
im quite fond of it

1633564347
andrewrk!~andrewrk@mail.ziglang.org
jcmoyer, --verbose-cc

1633564351
andrewrk!~andrewrk@mail.ziglang.org
there is also an environment variable

1633564354
andrewrk!~andrewrk@mail.ziglang.org
ZIG_VERBOSE_CC I think

1633564425
jcmoyer!~jcmoyer@user/jcmoyer
Perfect, thanks. I tried --verbose-cc but it seems to be incompatible with zig cc

