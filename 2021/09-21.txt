1632182786
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Whew, my accelerometer driver got an extra 25 lines of const declarations. I think I'm done updating to the latest Zig now though. Time to see if the code still works.

1632183116
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
looking good...randomness tests all pass

1632183695
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Hooray, I really did not want to try to debug compiler problems.

1632187556
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
wow atomics_stage1.zig is getting tiny :D

1632187837
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
oh nice it was deleted (read later commits)

1632188341
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
ok cool the plan9 debuginfo ci is passing

1632188700
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I didn't know people still used plan9.

1632188846
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
they do! (i'm writing a zig backend for it)

1632189501
brocolis!~chatzilla@user/brocc
I'm trying to create an array of functions... const ftype = fn(x:anytype) @TypeOf(x); var A = [2]ftype {std.math.sin, std.math.cos};

1632189509
brocolis!~chatzilla@user/brocc
error: use of undeclared identifier 'x'

1632189563
brocolis!~chatzilla@user/brocc
I need help

1632189633
brocolis!~chatzilla@user/brocc
context.. I'm trying to solve this task in Zig: http://rosettacode.org/wiki/First-class_functions

1632195790
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
brocolis: does "fn(comptime T: type, x: T) T" get you where you need to go?

1632196841
brocolis!~chatzilla@user/brocc
leeward: thanks.. I'll try that

1632196914
brocolis!~chatzilla@user/brocc
my current version is ... https://dpaste.com/9FBR7D4AH

1632198811
andrewrk!~andrewrk@mail.ziglang.org
stage2 just gained `@cImport` support

1632204070
powerofzero!~user@c-73-25-102-38.hsd1.or.comcast.net
Are there a set of conventions for what safety rules should be spelled out in documentation. For instance, if I have a function that takes a pointer, should I specify in the docmentation in the case that the value is required to be valid, or should I sepcify in the documentation in the case where they value may be unitialized. What if it is a const pointer? As well as similar situations.

1632209514
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
powerofzero: most of those things can be inferred from the type. If a value may be uninitialized, why not pass a pointer to an optional? If it's a const pointer, say so in the type. Then you can say what the function does with its arguments in the documentation instead of talking about what the arguments' values are.

1632209517
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
andrewrk: \o/

1632234231
noam!~noam@104.232.42.247
leeward: some of use plan9 more than anything else ;)

1632235654
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
noam u and gw are the only ones!

1632235716
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
?

1632235730
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
?

1632235767
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION just joined, so missed the context and possibly the description of an equivalence class

1632235784
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
maybe i have join messages disabled idk but noam was talking about actually using plan9

1632235894
noam!~noam@104.232.42.247
haze: false :)

1632235898
noam!~noam@104.232.42.247
I know of numerous others

1632235903
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
they are figments of ur imagination

1632235904
noam!~noam@104.232.42.247
and by numerous I mean "a few dozzen" :P

1632235906
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
they arent real noam

1632235907
noam!~noam@104.232.42.247
dozen*

1632235921
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
smh we need to pull u out the mirror house

1632235923
noam!~noam@104.232.42.247
Oh? Interesting, lemme just check the 9front commit log real quick ;)

1632235933
noam!~noam@104.232.42.247
It's weird how many other names are there!

1632235935
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
committing under different addresses and pgp keys doesn't mean different people

1632235939
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i too can fakenamegenerator.com

1632235946
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
open ur eyes

1632235950
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
real eyes realize real lies ...

1632235955
noam!~noam@104.232.42.247
hahahaha

1632235971
noam!~noam@104.232.42.247
haze: I needed that laugh, thanks <3

1632235980
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
yw, &* have a good day

1632236019
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION doesn't get why mainstream *n*x's don't have a /http, /https, etc.

1632236054
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
what are those

1632236100
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
i thought they were from plan9. 

1632236115
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
idk anything about plan9 tbh other than "everything is a file"?

1632236131
ifreund!~ifreund@user/ifreund
but even more everything than unix

1632236131
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
"everything" includes network protocols

1632236227
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
hot take, nothing should be files

1632236231
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
we shouldn't even have computers

1632236296
ifreund!~ifreund@user/ifreund
haze: everything can still be files even without computers, the files just wouldn't be digital :P

1632236313
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
im actually fighting the gods because

1632236319
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
analog audio has its downsides (interference)

1632236329
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I like triangular files, fwiw

1632236330
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
and digital audio is better for routing but hardware isnt there yet :(

1632236343
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
e.g limited to 48khz on adat or 96khz w/ spidf

1632236349
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
thats backwards*

1632236365
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
spidf doesn't have a sample rate limit but interfaces usually only have 1-2 inputs

1632236382
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
are those hw limitations broadly, or just on easy-to-get consumer audio?

1632236407
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
there's probably some $9000 interface that i could by that doesn't have the limit but I guess it's just market fit

1632236427
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
for example, only the top line scarlett interface has tosline spidf input and thats already at $600

1632236455
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
so the latter i guess

1632236464
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
but both adat and spdif are old

1632236499
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION not an audio file (sorry, bad callback) but is given to understand that "it's good enough for the rubes, but not for me" is a common complaint among that set.

1632236550
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I can still tell a 441 A from a 440 A, which is mostly just an annoyance now that I'm not tuning a violin daily

1632236567
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
im not musically inclined but i enjoy high quality music

1632236635
ifreund!~ifreund@user/ifreund
I like my record player not because suff sounds better in analog but because stuff sounds different in analog and physical copies of albums are fun

1632236641
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
having "absolute perfect pitch" did help me find a bug in some hardware when I was studying gases in p-chem lab, but that was a very long time ago

1632236651
kurtis!~kurtis@user/kurtis
I've seen a lot of random comments on the internet, but in general, what are your thoughts around Zig vs. Rust for someone who prefers simple syntax? e.g. C over C++, and Rust gets ugly/complicated quick. From the little bit I've played with Zig, it has been a nice experience but it does ave a lot of syntactical sugar over C (as an example)

1632236674
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
it's good

1632236700
ifreund!~ifreund@user/ifreund
kurtis: I haven't found zig's syntax to be complex in the same way C++/Rust's can be at time

1632236715
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
aiui, zig has strong jfdi energy, and trusts you to care for things that the rust compiler might preclude

1632236747
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
wtf is jfdi

1632236753
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
"just do it"

1632236772
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i agree to co-exist with ig programmers as long as they stop calling allocator "ally"

1632236785
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ig?

1632236787
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
zig

1632236796
kurtis!~kurtis@user/kurtis
Maybe a better question is -- should I expect the syntax to explode as new features are added? Or is it relatively complete as-is?

1632236797
ikskuh!~xq@2a0d:5940:6:163::ad7e
The allocator is called allocator

1632236801
ikskuh!~xq@2a0d:5940:6:163::ad7e
who the heck does use ally?

1632236804
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
LMAO

1632236806
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
you'd be surprised

1632236809
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
maybe it's just auguste XD

1632236819
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
.oO(take off every zig)

1632236820
ikskuh!~xq@2a0d:5940:6:163::ad7e
kurtis: you should expect things to disappear from the syntax 

1632236828
ikskuh!~xq@2a0d:5940:6:163::ad7e
but new syntax is very seldom added

1632236830
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
what about the multi-for proposal?

1632236836
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
and the new function syntax

1632236845
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
linky?

1632236858
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i dont have internet atm sorry

1632236858
ikskuh!~xq@2a0d:5940:6:163::ad7e
"new" function syntax is "less" syntax, not more :D

1632236867
ifreund!~ifreund@user/ifreund
kurtis: there may be some edges of the language (e.g. SIMD) where syntax may grow/change slightly. I don't expect the core syntax to grow/change significantly at this point though

1632236867
ikskuh!~xq@2a0d:5940:6:163::ad7e
it's just a change

1632236877
ikskuh!~xq@2a0d:5940:6:163::ad7e
but yeah, what ifreund says

1632236878
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
+1 on whatever ifreund says

1632236887
ikskuh!~xq@2a0d:5940:6:163::ad7e
i think most of the core people are already quite satisfied with the zig experience

1632236891
kurtis!~kurtis@user/kurtis
That's good to hear!

1632236899
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
til i add the bruh keyword

1632236920
ifreund!~ifreund@user/ifreund
davidfetter_work: issue #1717

1632236920
ikskuh!~xq@2a0d:5940:6:163::ad7e
ACTION slaps haze around a bit with a large trout

1632236925
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ACTION slaps ikskuh around a bit with a large trout

1632236945
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
wait i wonder if this works here

1632236946
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
I am in 36 channels while connected to 8 networks. I have 0 o:lines, 0 ops, 1 halfop, and 0 voices with power over 88 unique users.

1632236950
ifreund!~ifreund@user/ifreund
basically make function declaration syntax consistend with all other decls

1632236985
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
I think I saw somewhere in lithdew's code him using if () with an error using and using else with the error

1632236986
kurtis!~kurtis@user/kurtis
My personal goal is to find a "safer" C with generics (instead of templating). So far, Zig seems to fill that gap and more. I appreciate the work the core team has done!

1632237001
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
error union*

1632237043
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION confused at the distinction between "passing anonymous functions as arguments" and "closures," but this may reflect his vast ignorance of things CS

1632237067
ikskuh!~xq@2a0d:5940:6:163::ad7e
kurtis: you have found what you were looking for

1632237068
ifreund!~ifreund@user/ifreund
davidfetter_work: closures would include data along with the function pointer

1632237074
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
thanks :)

1632237085
ikskuh!~xq@2a0d:5940:6:163::ad7e
and "lambda" is just whatever the language thinks lambda means

1632237088
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
does anyone know what the pokemon zig person is up to 

1632237092
ikskuh!~xq@2a0d:5940:6:163::ad7e
because nobody understands what that concept actually is :D

1632237121
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION got as far as "the letter before mu"

1632237122
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
oh nvm thats komari

1632240543
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I think most people use lambda to refer to anonymous functions.

1632240745
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
can you believe top of the line android phones have 12 gb of ram

1632240750
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION ponders pseudonymous functions and k-anonymity

1632240759
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
ACTION ponders /me's

1632240845
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I still have my first computer, and Apple //e. One of these days, I'll dust it off and try to get it working.

1632240856
kurtis!~kurtis@user/kurtis
Not being even remotely a compiler expert, would Zig be useful to target tiny boards like the SiFive risc-v which only has (iirc) 16kb memory? Obviously, one would be throwing stdlib out the window in that scenario. But are there other considerations using Zig to target that platform?

1632240904
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
kurtis: I've been working on a Zig project that runs on a chip with 4k of flash. It's totally viable.

1632240940
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
the tradition for constrained systems like that is to give up on compilers, but I suspect that projects like llvm have made that obsolete

1632240957
kurtis!~kurtis@user/kurtis
Oh nice! Did you compile to C and use an existing toolchain? Or some other magic that I haven't yet figured out? 

1632241021
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I compiled directly to the target architecture with Zig. It took some fiddling to get the linker working, and I have a working C toolchain but that was mostly used to compare outputs while getting Zig up and running.

1632241049
kurtis!~kurtis@user/kurtis
that is really cool!

1632241062
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I believe riscv is at least somewhat supported, so it ought to be doable.

1632241116
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION wonders how to get his hands on risc-v hardware, having tried and failed a few times via vendors

1632241134
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I was hoping to port PostgreSQL to it :)

1632241146
kurtis!~kurtis@user/kurtis
haha, sifive offers a much larger board but it's like $600

1632241200
kurtis!~kurtis@user/kurtis
davidfetter_work https://www.sifive.com/boards/hifive-unmatched (99 in stock at Mouser)

1632241259
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
davidfetter_work: assemblers are fine, but I'd modern C compilers are pretty good.

1632241271
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
er, s/I'd//

1632241297
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
thanks!

1632241344
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION heads out, he hopes briefly, to drop kid[1], kid[2], and kid[3] off at school, kid[0] having gone to a different school a couple of hours ago

1632242451
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
2/3 ain't bad. :)

1632242501
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Wait, isn't len(kid) 4?

1632242564
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Or are you not counting 0 because that was already done?

1632242566
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
yes, but this took kid+(sizeof)kid as input

1632242569
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
right

1632242609
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
nerds...

1632242668
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Thanks haze. You're a nerd too in my book.

1632242670
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
being a nerd really does help me when dealing with my kids

1632242722
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
youngest just turned 6, but I got some really important insights from "explain it to a 5-year-old," which I didn't understand until I actually tried it

1632242750
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
my experience of that is, "explain it to someone a lot smarter than you who doesn't know all the words you're using yet."

1632242766
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
I'm 20 years old, physically incapable of being a nerd 

1632242786
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
um, what would prevent that?

1632242818
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
gen z gets immunity

1632242852
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
...and in thinking so, is showing its similarity to previous gens ;)

1632242859
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Okay, zoomer.

1632242884
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION probably an early gen x, as he was born in late 1968

1632242897
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Ooh, ooh, haze, I'm testing a hypothesis. Have you seen The Princess Bride?

1632242927
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
no but im a bad subject because i dont watch tv/movies

1632242935
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION curious about H0, Ha, and how sampling is arranged here

1632242960
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
That's fine. It keeps the rate for Gen Z at 0%.

1632242983
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I didn't seen The Princess Bride until I was past 40, and I suspect that accounts for my not having any special attachment to it

1632242999
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
let your bias flow ...

1632243016
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
what am I, and op amp?

1632243054
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
davidfetter_work: It's about separating millennials from zoomers. Gen X is not in the model. Like with most things.

1632243093
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Better be careful if you are. They don't respond well to positive feedback.

1632243120
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I just wish I'd thought of calling "sloppy descriptive statistics" AI and pitching it to VCs

1632243154
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
It's ok, you still can. VCs haven't caught on yet.

1632243160
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Whoops, food time.

1632243165
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
bon appetit!

1632244388
ifreund!~ifreund@user/ifreund
kurtis: there's actually nothing in the zig standard library that would be particularly problematic when targeting such a system. Only the parts of the std that you use get compiled into the final binary

1632244412
ifreund!~ifreund@user/ifreund
you probably would want to disable the default panic handler though to save a bit on code size

1632244435
ifreund!~ifreund@user/ifreund
but that's a well supported use-case for the std

1632244524
ifreund!~ifreund@user/ifreund
leeward: Hmm, I don't actually know if I'm gen Z or whatever came before that (1998) but I've seen and read the princess bride and my younger siblings have as well

1632245824
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
ifreund: the year puts you solidly in gen Z, but it sounds like you're an honorary millennial. Either that or you've broken my model. Go away, bad data!

1632246072
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
Honorary millennial??

1632246098
ifreund!~ifreund@user/ifreund
haze: jealous?

1632246133
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
hell no

1632246138
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
love being gen z

1632246163
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
everyone i work with is like 2.5-3x my age lol

1632246211
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
sometimes, age brings wisdom. others, it arrives alone :)

1632246269
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
what does it tell u when i am the lead pr reviewer

1632246273
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
haze: Fun fact: that's what it was like for me when I was new at adulting. Now all my good references have retired.

1632246305
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
i turn 21 in 75 days

1632246308
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
aint that somethn

1632246371
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
it might mean they stuck the new person with the drudgery they didn't want to deal with ;)

1632246422
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
reviewing PRs can be tedious and kinda thankless, even in healthy organizations

1632246445
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
mayhaps

1632246457
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
but enough to write about my thorough eyes in your end of week recap??

1632246555
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Code reviews are also good at getting people familiar with large codebases. Or at least some people think they are.

1632246576
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
code review on greenfield projects tho?

1632246579
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
B)

1632246609
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
std.debug.bruh...

1632246610
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
afaik, there's no such thing as green field. just "stuff we're gonna use and not mess with."

1632246626
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
greenfield as i understand it are new projects

1632246630
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
v2 of a library, etc

1632246634
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
(or more accurately, "hope we don't have to mess with.")

1632247072
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION struggles to understand how a thing that builds to an existing specification and needs to be compatible with stuff that's already out there could be seen as "new" in any meaningful sense.

1632247195
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
dont look at me im just the se

1632247197
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
swe

1632254571
ifreund!~ifreund@user/ifreund
heh, i386 is the only cpu arch that is also an integer literal

1632254648
ikskuh!~xq@2a0d:5940:6:163::ad7e
i486

1632254653
ikskuh!~xq@2a0d:5940:6:163::ad7e
i686

1632254654
ikskuh!~xq@2a0d:5940:6:163::ad7e
:D

1632254831
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
-Dcpu=haze

1632256158
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Oh hey, is the async stuff stable yet? Last time I looked it was in the do-not-use bin.

1632256221
ifreund!~ifreund@user/ifreund
leeward: nope, not much has changed there since I last saw you around

1632256238
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
ok, good to know

1632256240
ifreund!~ifreund@user/ifreund
the self hosted compiler has been the main focus of development

1632256249
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
That's probably a good thing.

1632256276
ifreund!~ifreund@user/ifreund
yeah, it's coming along quite nicely and is going to be sooo much better than what we currently have

1632256283
ifreund!~ifreund@user/ifreund
both to work on and use

1632256410
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
So much better.

1632257047
andrewrk!~andrewrk@mail.ziglang.org
not only that, but it's not just vaporware; we're seeing many benefits already

1632257135
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I feel like the language can't really stabilize until this project is done, too.

1632257246
ifreund!~ifreund@user/ifreund
yeah, the language spec is definitely blocked on self hosted being complete and good

1632257251
ifreund!~ifreund@user/ifreund
leeward: you may be interested to read https://github.com/ziglang/zig/issues/9646

1632257275
ifreund!~ifreund@user/ifreund
which is one example of language clarifications that have come about through work on self hosted

1632257303
ifreund!~ifreund@user/ifreund
no more corners being cut like in stage1 :D

1632257348
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
ifreund: I am indeed interested.

1632258410
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
andrewrk what are you seeing early on o-o

1632258443
andrewrk!~andrewrk@mail.ziglang.org
the zig compiler everyone is using is already more zig than c++ at this point

1632258458
andrewrk!~andrewrk@mail.ziglang.org
it's just that backend that needs to go

1632258672
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
.oO( exeunt c++ )

1632258906
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
andrewrk who says im not using stage0

1632258907
haze!~haze@cpe-68-174-143-88.nyc.res.rr.com
...

1632259725
Piraty!~irc@user/piraty
hy andrewrk , i heard your interview with coroutines podcast latetly, nice one, i liked it!

1632259741
andrewrk!~andrewrk@mail.ziglang.org
thanks Piraty 

1632260085
viashimo!~viashimo@user/viashimo
Piraty: do you have a link? 'coroutines podcast' didn't show up well in searches :/

1632260110
Piraty!~irc@user/piraty
oops. search for "corecursive"

1632260140
viashimo!~viashimo@user/viashimo
Piraty: ah great. thank you :)

1632260166
Piraty!~irc@user/piraty
if you hear a guy say 'oot' instead of out, that's the one (canadian)

1632260170
Piraty!~irc@user/piraty
:p

1632260440
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
corecursive is a lot of fun. it's how I learned about zig, among other things :)

1632260639
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
A thing I don't understand: https://godbolt.org/z/jx5qdbova always prints "pass" even when I feed it /dev/zero.

1632260781
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
actually, this is a better example: https://godbolt.org/z/o7hbdcqzv

1632260830
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
What the heck is going on? Do ternaries not work the way I think they do?

1632261191
ifreund!~ifreund@user/ifreund
leeward: oh, you probably don't want to put control flow inside the .{} argument passed to print()

1632261195
ifreund!~ifreund@user/ifreund
stage1 doesn't like that at all

1632261216
ifreund!~ifreund@user/ifreund
especially tenraries

1632261309
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Ok, so that's a bug right? Because I'm pretty sure that ought to be valid Zig.

1632261354
ifreund!~ifreund@user/ifreund
yes, 100% abug

1632261365
ifreund!~ifreund@user/ifreund
and a nasty one at that

1632261407
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Cool. I can go back to feeling only moderately insane.

1632261500
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION queues up a suitable Cypress Hill track

1632265226
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Ooh, porting some C code to Zig I found a bug in the C implementation.

1632265366
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Wow, I just saw the zig-out directory for the first time. Such an improvement.

1632265689
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
which C code?

1632265713
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Something I wrote a few days ago. Nothing anyone else is using.

1632265713
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION has been noodling around occasionally with getting PostgreSQL to compile with zig c**

1632265812
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Bit bashing awkwardness: var byte ...; var bit: u4 = 0; while (bit < 8) : (bit += 1) { const val: u1 = @truncate(u1, (byte >> @truncate(u3, offset)) & 0x1); }

1632265874
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
The >> is higher priority than the &, so I could get rid of some ()s but I don't think that would make it more readable.

1632265916
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION , not being very clever, tends to spend time getting stuff readable

1632265941
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
(mostly so if I happen to be debugging it at 4am, I don't have to be clever)

1632265945
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
davidfetter_work: That is a solid approach.

1632265986
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
There's also the proof (DMR?) that it's impossible to debug the cleverest code you can write.

1632266022
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
yeah, I think his estimate that debugging is only twice as hard as writing is low by at least an order of magnitude

1632266098
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
How much harder doesn't matter for the proof, as long as debugging is harder than writing, which I don't think anyone will contest.

1632266100
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
me: printf(...). profiler: *shows sprintf where I can see it*

1632266194
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
you might imagine that the problem of taking a sequence of 32 bits representing an unsigned integer and outputting human-readable digits at a good clip was a solved problem

1632266211
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Anyway, I'm trying to figure out a less terrible way to iterate over the bits in a series of bytes. The loop variable has to be bigger than a u3 because I care about bit 7, so I need both @truncates in there.

1632266237
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I really might imagine that, yes.

1632266241
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I don't suppose there's a way to do it with intrinsics

1632266320
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
sorry, I'm new to zig. what bit bashing is the above code doing?

1632266357
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
It's just getting each bit out of the byte in a loop. It doesn't do anything with the u1 (for brevity).

1632266512
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I suppose I could do "while (byte != 0) : (byte >>= 1)" but that drops significant zeroes. "var shifty: u9 = 0x10 | byte; while (shifty != 1) : (shifty >>= 1)" would work, but it feels a little too clever.

1632266531
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
hrm. so you can get the first n out with CLZ. what are the individual bits in aid of?

1632266564
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
first n 0s*

1632266572
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
In this particular case, I'm counting sequences of 1s and 0s in a long stream of bytes.

1632266686
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I need to know how many 1s in a row occur, and how many times each count of 1s occurs in the whole sequence. Same for 0s.

1632266774
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
so 0xf3 0x82 has 4 1s, then 2 0s, then 3 1s, then 5 0s, then a 1 then a zero. Each of those goes in a counter so I can generate a histogram.

1632266797
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
hrm. you can get the total with popcount, but that doesn't tally up sequence lengths

1632266804
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
yep

1632266835
ifreund!~ifreund@user/ifreund
what about @ctz() or @clz(), shifting, and negation

1632266848
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
And sequences can cross byte boundaries, so I have to keep track even if there's fancy bit magic that could help with individual bytes.

1632266888
devast8a!~devast8a@2001:470:69fc:105::3f46
It's a single byte right? Could just use a lookup table.

1632266890
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Though you're right that those 4 operations could make things go a bit faster.

1632266897
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
It's a sequence of thousands of bytes.

1632267037
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
The shifty-negation-ctz approach bumps into some complication with the type of bits that get shifted in, but that's a problem with a solution.

1632267054
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
I'm not sure it would be clearer than looping across bits and counting them.

1632267067
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
And I don't care about execution speed. It's only about 2k of data.

1632267762
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
lessee. for a given uintN_t, the next one will end whichever sequence the lsb is part of when lsb is 1 and msb is 0, or /vice versa/

1632267802
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
i.e. you only need to worry about continuing a sequence when they're the same

1632267946
ifreund!~ifreund@user/ifreund
you can probably make things faster by processing the bytes a word at a time

1632267969
ifreund!~ifreund@user/ifreund
especially if you go the ctz/shift/negate approach

1632267977
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Sure, but I don't care about speed.

1632267979
ifreund!~ifreund@user/ifreund
(I know you don't care about speed, but speed is fun)

1632267984
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
hehe

1632267999
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Speed is fun, but readability is important.

1632268018
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION queues up the first line of Kickstart My Heart

1632268020
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Heck, I could make it faster by processing them a cache line at a time if I really wanted to go fast.

1632268032
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
That hurts portability a bit though.

1632268150
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
I don't suppose there's a way to figure out how long a cache line is at runtime...

1632268181
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
One could always take the experimental approach.

1632268188
ifreund!~ifreund@user/ifreund
you can read /proc/cpuinfo if you have an OS

1632268206
ifreund!~ifreund@user/ifreund
I have a hunch that leeward doesn't have an OS though

1632268233
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Well, this stuff is running on an OS. It's analyzing data from my logic analyzer.

1632268265
devast8a!~devast8a@2001:470:69fc:105::3f46
You'll probably know the cache line size just from the architecture you target.

1632268291
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Sacrifice OS portability for architecture portability. Seems like a fair trade.

1632268305
devast8a!~devast8a@2001:470:69fc:105::3f46
eg. x86 is practically always 64 bytes.

1632268352
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
My CPU's 5th core claims its cache size is 9M

1632268372
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Doesn't say anything about L1

1632268510
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
For that matter, it doesn't say anything about individual lines.

1632268600
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
devast8a's right though. 64 bytes is super common.

1632268724
Tekk!~tekk@cpe-76-182-45-53.nc.res.rr.com
Hey, what's the best way to print a C string? I'm not seeing a format specifier in print. Is it best to convert to a zig string, use stdio.h, something else I'm not thinking of?

1632268746
Tekk!~tekk@cpe-76-182-45-53.nc.res.rr.com
Just the equivalent of print("{s}\n", .{variable}), so no worries about formatting

1632268797
davidfetter_work!~davidfett@c-73-241-222-148.hsd1.ca.comcast.net
ACTION heads off to cook dinner for offspring

