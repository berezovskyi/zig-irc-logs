1633412273
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
[161/164] Building self-hosted component /Users/haze/src/zig/build/zig1.o

1633412646
andrewrk!~andrewrk@mail.ziglang.org
my favorite part of the build process ðŸ¥°

1633412845
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
when you're explicitly building it on my fast machine? I know!!!

1633412858
discipulus!~discipulu@user/discipulus
Mine shows percent

1633412892
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
wym?

1633412989
andrewrk!~andrewrk@mail.ziglang.org
I believe this is make vs ninja

1633413259
discipulus!~discipulu@user/discipulus
I see. I'm running zig-bootstrap (make)

1633413323
bgiannan!~bgiannan@2a01:4f8:141:1272::2
-DCMAKE_PREFIX_PATH doesn't seem to be enough for cmake to use llvm13 i built in a directory

1633413340
bgiannan!~bgiannan@2a01:4f8:141:1272::2
it still tries to use my system installation of llvm

1633413388
bgiannan!~bgiannan@2a01:4f8:141:1272::2
should i do -DLLVM_LIBDIRS, etc. ?

1633413431
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
no

1633413443
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
`cmake -G Ninja -DCMAKE_PREFIX_PATH=/opt/llvm-macos11.0-arm64-13.0.0-release/ ..`

1633413445
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
thats what i ran

1633413462
bgiannan!~bgiannan@2a01:4f8:141:1272::2
ah didn't use -G ninja

1633413479
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
im not sure that would've changed much

1633413516
bgiannan!~bgiannan@2a01:4f8:141:1272::2
yes doesn't change anything

1633413564
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
does that llvm path work for you?

1633413568
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
like does it exist?

1633413577
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
did you make sure to ninja install after you built llvm?

1633413591
bgiannan!~bgiannan@2a01:4f8:141:1272::2
yes it exists but cmake tries to use my system installation of llvm

1633413610
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
show me a long including the cmd u ran

1633413613
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
i aint buyin it!!

1633413686
bgiannan!~bgiannan@2a01:4f8:141:1272::2
http://sprunge.us/a5MkDN

1633413779
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
oh hey ur the guy bnehind bolt

1633413792
bgiannan!~bgiannan@2a01:4f8:141:1272::2
bolt?

1633413798
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
delete ur build folder and try again

1633413807
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
buzz sorry not bolt idk

1633413808
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
its late

1633413831
bgiannan!~bgiannan@2a01:4f8:141:1272::2
that works

1633413833
bgiannan!~bgiannan@2a01:4f8:141:1272::2
thanks

1633413837
bgiannan!~bgiannan@2a01:4f8:141:1272::2
yeah buzz

1633413868
bgiannan!~bgiannan@2a01:4f8:141:1272::2
i'm trying to update zig everyday to avoid the pain of upgrading

1633413877
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
dont worry

1633413880
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
all of the pain is over now

1633413885
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
now you just git pull && ninja -C build

1633413898
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
only pain is recompiling llvm when they upgrade but that wont be for a while now

1633413940
bgiannan!~bgiannan@2a01:4f8:141:1272::2
btw bolt would have been a great name too

1633416668
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
building cmake 56%

1633416679
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
i just did `sudo port install ffmpeg-devel +darwinssl` and its been running for ages

1633416688
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
im glad im building from source though and not eating bew binaries

1633416827
bgiannan!~bgiannan@2a01:4f8:141:1272::2
building llvm took 2hours

1633416899
andrewrk!~andrewrk@mail.ziglang.org
sounds about right

1633416984
bgiannan!~bgiannan@2a01:4f8:141:1272::2
actually 4 because i started building master insteand of v13 :D

1633417004
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
llvm took like 40m for me

1633419057
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
https://cdn.discordapp.com/attachments/394923373605421059/894841634657828894/FA6sqA_WQAABm0g.png

1633438370
bgiannan!~bgiannan@2a01:4f8:141:1272::2
will a switch statement be slower if each case have a large block? or does it not have any effect?

1633439384
Gliptic!~glip@irc.glip.cc
what are you comparing it against?

1633441279
bgiannan!~bgiannan@2a01:4f8:141:1272::2
one statement cases vs 10-20

1633444341
ane!ane@nikita.tnnet.fi
how do I cast/coerce a []const u8 into a [*c]const u8 expected by some C API, as a const char*?

1633444399
ane!ane@nikita.tnnet.fi
using @ptrCast([*c]const u8, &str) it doesn't get null terminated

1633444512
ifreund!~ifreund@user/ifreund
ane: if you want to add a 0 byte to the end, you need to allocate a new slice of greater length and copy the data into that

1633444518
ifreund!~ifreund@user/ifreund
see std.mem.Allocator.dupeZ()

1633444587
ane!ane@nikita.tnnet.fi
right

1633444727
ane!ane@nikita.tnnet.fi
yes, that worked

1633444734
ane!ane@nikita.tnnet.fi
though it looks... a bit odd

1633444754
ane!ane@nikita.tnnet.fi
basically I have allocPrint -> dupeZ -> ptrCast

1633444758
ane!ane@nikita.tnnet.fi
feels dirty

1633445098
ifreund!~ifreund@user/ifreund
ane: allocPrintZ

1633445136
ifreund!~ifreund@user/ifreund
and there shoudl be no @ptrCast() needed, use `my_0_terminated_slice.ptr` which will coerce to a [*c] pointer

1633447864
haze!~haze@2603-7000-a300-1741-a983-c2ed-7c90-0da5.res6.spectrum.com
boo!

1633455927
yeti!~username@user/yeti
eeek

1633458201
bfiedler!~bfiedler@2a0d:d740:107::3
are slices passed by reference or value?

1633458231
ifreund!~ifreund@user/ifreund
bfiedler: you can think of slices as a `struct { ptr: [*]T, len: usize }`

1633458257
andrewrk!~andrewrk@mail.ziglang.org
by value

1633458257
ifreund!~ifreund@user/ifreund
this is also how they're currently implemented in the compiler

1633458280
bfiedler!~bfiedler@2a0d:d740:107::3
ifreund: ah that makes sense, thanks

1633458296
bfiedler!~bfiedler@2a0d:d740:107::3
andrewrk: the underlying data isn't copied though if I understand ifreund correctly

1633458307
ifreund!~ifreund@user/ifreund
nope

1633458313
bfiedler!~bfiedler@2a0d:d740:107::3
perfect, thanks you two

1633462897
flux_control!~flux@sourcemage/wizard/flux
We've been HAD! (sorry for the pun) --> https://github.com/ziglang/zig/pull/9882

1633462915
flux_control!~flux@sourcemage/wizard/flux
Oops, wrong link: https://hackaday.com/2021/10/05/need-a-new-programming-language-try-zig/

1633464074
andrewrk!~andrewrk@mail.ziglang.org
is this a popular website?

1633464664
earnestly!~earnest@user/earnestly
It's one of the foundational websites of the old internet, like slashdot

1633464684
flux_control!~flux@sourcemage/wizard/flux
andrewrk: That depends on your interests I guess. It's popular among the "maker" crowd.

1633464745
andrewrk!~andrewrk@mail.ziglang.org
I see

1633464746
andrewrk!~andrewrk@mail.ziglang.org
fun

1633464753
earnestly!~earnest@user/earnestly
And zig would likely suit them since they tend to work with arduino/teensy type microcontrollers

1633464793
earnestly!~earnest@user/earnestly
43 comments is quite a lot for an average given article though heh

1633465000
flux_control!~flux@sourcemage/wizard/flux
earnestly: Like this? --> https://kevinlynagh.com/rust-zig/

1633465045
flux_control!~flux@sourcemage/wizard/flux
It's a write-up of replacing a custom kbd firmware written in Rust with one written in Zig.

1633465047
earnestly!~earnest@user/earnestly
Hm, qmk rewrite in zig?

1633465056
earnestly!~earnest@user/earnestly
(next)

1633465090
flux_control!~flux@sourcemage/wizard/flux
It's maybe good as additional comparison of Rust and Zig?

1633465137
earnestly!~earnest@user/earnestly
They do mention qmk in one of their articles, at least

1633465309
geranim0!~geranim0@modemcable242.171-178-173.mc.videotron.ca
"Not impressed. It is interesting to me, that we just keep trying to re-invent the wheel so to speak. We have perfectly good and validated languages that can help us solve (have solved) real world problems that have been with us for many years. It really gets annoying :D"

1633465315
geranim0!~geranim0@modemcable242.171-178-173.mc.videotron.ca
hahahahahahha

1633466080
andrewrk!~andrewrk@mail.ziglang.org
meanwhile, https://handmade.network/jam there is an ongoing "wheel reinvention jam" 

1633466492
earnestly!~earnest@user/earnestly
These are nice ideas

1633466503
earnestly!~earnest@user/earnestly
Competitive itch scratching

