1615508659
LewisGaul
Ok, created

1615508895
LewisGaul
The exclamation mark got munged into the URL, should've been

1615515011
jah
Is there an idiomatic way to add signed/unsigned integers together (eg. u16 + i16)? I'm currently casting up to a larger signed int width (i32), adding, bitCasting (u32), and truncating down to original int width (u16). Am I'm missing something obvious?

1615518926
g-w1
andrewrk: you would reconsider

1615519190
jah
andrewrk: yes, thank you. that's much more concise

1615519523
andrewrk
g-w1, yep. posted a review

1615519655
andrewrk
g-w1, btw how's your elf thingie coming along?

1615519684
g-w1
very nice, im writing a blog post too! see a draft here

1615519760
g-w1
trying to learn about negative numbers in x64 to write some jumps for the loops in brainfuck. then im done

1615520141
andrewrk
ooh that's really neat how you can do the elf header in nasm

1615520200
g-w1
yeah, it helped me understand it a lot

1615520579
g-w1
andrewrk: it seems they are already tested in tokenizer.zig:1744

1615520591
andrewrk
brilliant, then we can delete all those files

1615520601
andrewrk
and the corresponding line in behavior.zig

1615520606
g-w1
ok cool

1615520860
g-w1
andrewrk: stage2 fails to parse test/stage1/behavior/syntax.zig:26:1: error: expected ';' or '{', found 'fn'

1615520908
g-w1
is this a regression, or just a weird/outdated case?

1615520959
andrewrk
time to consult the spec

1615521104
g-w1
the spec likes it, so ig its a regression

1615521377
andrewrk
let me double check with martin on this one, I recall discussing possibly introducing a rule to simplify the grammar here

1615521392
andrewrk
e.g. maybe you need parens on the return type when it's a complex expression like this

1615521429
g-w1
ah, I will make the pull request anyways (I had to make a new one since I force pushed, and I can always delete that test case)

1615521563
g-w1


1615524021
andrewrk
thanks!

1615530359
mikdusan
andrewrk: I'd like to commit #8194 now that 12.0.0-rc3 is out. ok?

1615532162
andrewrk
mikdusan, yep

1615532514
mikdusan
closing #8130. perhaps update

1615532541
mikdusan
actually I'll let you close #8130 once upstream bug report is closed.

1615537184
daurnimator
andrewrk, jah: `@as(i32, the_u16) + the_i16` that should be `%+` rather than `+`

1615537386
andrewrk
daurnimator, I don't think so - why?

1615537482
daurnimator
andrewrk: 0x7fffffff + 5 ==> will happily fit in the result of a u32; but with your code from before would have an overflow error

1615537518
daurnimator
oh wait, you upcasted to i32 not i16

1615537520
daurnimator
doh

1615537555
daurnimator
I thought this was a case of

1615538194
forgot-password
Is there any case in which it is safe to return a stack allocated buffer from a function?

1615538257
daurnimator
forgot-password: yes.... when its called at comptime

1615538659
forgot-password
Thanks :)

1615538712
daurnimator
which is quite dangerous :(

1615538930
txdv
pub fn(buf: [36]u8) void { buf[0] = 'a'; }  //cannot assign to c onstant, how do I tell the compiler that this is should be not const?

1615539241
txdv
I am passing 36 bytes by value I guess, need to pass it by ref

1615539245
Nypsie
parameters are constant by default, you'll have to pass a pointer to it

1615545524
txdv
Can i cross compile win32 apps on macosx ?

1615545767
txdv
I just did zig c++ -target x86_64-windows-gnu main.cpp and it just compiled

1615545878
ikskuh
yes.

1615545916
txdv
We need more andrews to code software like this

1615546290
ikskuh
you can also build macos software from windows :)

1615546483
txdv
Calling objective C might be difficult

1615546503
ikskuh
true

1615553682
forgot-password
When I alloc a list of an optional type, are all values automatically initialized to null?

1615553704
g-w1
no

1615553735
forgot-password
That makes sense to me, but when I print all elements I get null for every single index

1615553760
ifreund
forgot-password: try it in a safe build mode

1615553767
g-w1
it

1615553780
forgot-password
Isn't debug supposed to be a safe build mode?

1615553809
g-w1
yes

1615553815
ifreund
indeed, how are you allocating?

1615553833
ifreund
the memory you get back from any allocator is undefined

1615553860
ifreund
in safe build modes I think it should be therefore initialized to 0xaa

1615553992
forgot-password
I have to admit. I had a different implementation yesterday, which has since changed.

1615554009
forgot-password
However, I am at the same point as yesterday and decided to ask.

1615554019
forgot-password
But I just used `try allocator.alloc(?f32, n);`

1615554094
g-w1
maybe 0xaa is just interpreted by the printer as a null value?

1615556636
TheLemonMan
marler8997, I think I fixed the problem with the terminal clearing, give it a spin when you have some time

1615556652
FireFox317
if marler8997 isn't here, i'm currently on windows too

1615556695
TheLemonMan
cool! then give #8174 a try

1615556703
FireFox317
also hey TheLemonMan! You have also access to that aarch64 32-core server right? Are you able to use sudo on that? (sourceware.org is not being resolved somehow, and i want to add a entry to /etc/hosts xd)

1615556725
TheLemonMan
hmm let me check

1615556797
FireFox317
i guess the dns server that is configured somehow doesnt like sourceware, i'm able to ping to the ip, however all the glibc stuff use sourceware.org in their scripts

1615556827
TheLemonMan
sudo is asking for a password so I guess I can't use that

1615556837
FireFox317
indeed, had the same problem

1615556860
TheLemonMan
I really hate nixos on this server :\

1615556867
FireFox317
TheLemonMan, well thanks for trying xd

1615556876
FireFox317
yeah i'm not used to nixos either

1615556897
mikdusan
i know right!

1615556904
FireFox317
brb, switching os's

1615556924
g-w1
nixos doesn't use /etc/hosts, it uses networking.extraHosts in /etc/nixos/configuration.nix

1615557087
FireFox317
g-w1, oh well, but then im probably still not allowed to change that

1615557245
TheLemonMan
FireFox317, the only two users with sudo powers are andrewrk and daurnimator

1615557269
dimenus
trying to get LLVM on Serenity so we can get Zig on Serenity

1615557269
dimenus
time to learn a few things

1615557288
FireFox317
dimenus, oh nice, that was on my todo list too (in the far future lol)

1615557418
dimenus
this is my first time working with LLVM, so no promises. but there are examples online of people adding targets for new oses (same platform of course)

1615557519
g-w1
serenity uses elf right?

1615557533
dimenus
yep

1615557545
dimenus
should be fairly straight forward

1615557577
FireFox317
dimenus, well llvm is a pretty annoying beast to build, maybe zig-bootstrap can help you with it

1615557676
dimenus
good point

1615557810
FireFox317
TheLemonMan,

1615557846
FireFox317
tldr: integer overflow -> const fill_chars = window_width * (window_width - @intCast(windows.DWORD, info.dwCursorPosition.Y - info.srWindow.Top)) -

1615557877
FireFox317
this is powershell btw

1615557883
TheLemonMan
... the second window_width should be window_height

1615557901
TheLemonMan
that's what you get when you test stuff with square terminals

1615557917
FireFox317
cmd works fine

1615557933
FireFox317
okay let me try that

1615558052
TheLemonMan
wait what the fuck have I committed

1615558073
FireFox317
i dont know xd

1615558197
TheLemonMan
welp try now

1615558407
FireFox317
TheLemonMan, integer overflow here: lib\std\Progress.zig:217:58

1615558435
FireFox317
it works

1615558446
FireFox317
but

1615558486
FireFox317
it panics when the terminal is 17 columns width

1615558490
FireFox317
bigger works

1615558523
FireFox317
on powershell btw

1615558548
TheLemonMan
damn it, I only tested that with cmd.exe

1615558577
FireFox317
sorry :( cmd works indeed

1615559018
FireFox317
TheLemonMan, maybe the cursor somehow stays offscreen?

1615559150
TheLemonMan
one sec, powershell is somehow installing between one UAC popup and another

1615559551
TheLemonMan
weird, no overflow here

1615559854
qbit
:D "lib/libc/include/aarch64-macos-gnu/AvailabilityInternal.h |  10 +--" oh boy

1615559884
FireFox317
TheLemonMan, debug build?

1615559890
TheLemonMan
yep

1615559910
FireFox317
hmm, sometimes it works

1615559910
TheLemonMan
I'm running Progress.zig test.exe

1615559995
FireFox317
okay it works fine, somehow my powershell session was borked

1615560049
FireFox317
except for another unreachable :(

1615560082
FireFox317
at Progress.zig:293

1615560091
FireFox317
apparantly SetConsoleCursorPosition can fail xd

1615560221
FireFox317
and the height can be 0 too, which causes another bug at Progess.zig:213

1615560247
FireFox317
but overall it works fine now :)

1615560304
TheLemonMan
let's ship it™ then

1615560315
TheLemonMan
what a shitty API :(

1615560417
FireFox317
Yup indeed

1615560505
txdv
FireFox317 are you coding win32 apis with zig on windows?

1615560537
FireFox317
txdv, nah, i was just helping a friend ;)

1615560548
txdv
what friend

1615560556
FireFox317
TheLemonMan xd

1615560733
sundbp
TheLemonMan, I've got my glibc-2.33 multi build done. About to start trying to get all the files included.

1615560804
TheLemonMan
sundbp, great! the missing files are a constant source of problems when cross-compiling

1615561141
sundbp
TheLemonMan, any guidance to where the logic for not missing files needs to be changed? process_headers.zig ?

1615561244
TheLemonMan
good question, where's the sysdep folder located?

1615561340
TheLemonMan
FireFox317, when you shrink too much the powershell window the .Top property becomes greater than the .Bottom one

1615561358
TheLemonMan
that's why we can't have nice shit in Detroit

1615561404
sundbp
TheLemonMan, in terms of the glibc git repo, the sysdeps dir is at the root. However, in the multis/install/glibc tree there is none at all

1615561501
sundbp
TheLemonMan, so just the stupid instinct knowing nothing about glibs suggests that the build-many-glibcs.py would be at fault as the input that the zig stuff has to work with has no sysdeps. Or the assumption of that that script gives is incorrect from the zig end at least.

1615561540
FireFox317
sundbp, that script is not the problem

1615561630
sundbp
FireFox317, ok - so then the zig side has bad assumptions, right? e.g. the search-path given to process-headers is a dir that for sure has no sysdeps

1615561665
TheLemonMan
sundbp, the sysdeps folder is not installed

1615561678
TheLemonMan
namely the crt*.S files and their dependencies

1615561711
TheLemonMan
process_headers seems to be focused on the include-able and stuff that's installed

1615561712
sundbp
TheLemonMan, gotcha. ok, so then it's starting to look like process-headers needs to take another arg to somewhere where it has a chance to pickup required sysdeps pieces from?

1615561719
TheLemonMan
yep

1615561809
TheLemonMan
sundbp, keep an eye on start_asm_path in src/glibc.zig

1615561826
sundbp
under the multis dir the location of sysdeps is multis/src/glibc/sysdeps - nothing on a per arch in that dir that I can find

1615561881
FireFox317
you also ran this command right? ´python3 ~/glibc/scripts/build-many-glibcs.py . glibcs´

1615561911
sundbp
FireFox317, yep

1615561995
TheLemonMan
the install command may filter the sysdeps files to leave out only the ones related to the target architecture

1615562039
TheLemonMan
what's the content of that folder? can you paste it somewhere?

1615562056
sundbp
which folder? src/glibc/sysdeps?

1615562086
TheLemonMan
yep

1615562118
FireFox317
i guess TheLemonMan means multis/src/glibc/sysdeps

1615562161
FireFox317
or thats the one we are talking bout

1615562317
sundbp


1615562455
sundbp
if I check e.g. x86_64 I see crti.S and crtn.S

1615562484
TheLemonMan
looks good

1615562494
FireFox317
yeah that seems similar to what is currently in lib/libc/glibc/sysdeps

1615562499
FireFox317
looks*

1615562542
FireFox317
but it also seems like that all the files in lib/libc/glibc havent been updated since 2.31

1615562559
FireFox317
all the folders*

1615562674
sundbp
do we understand how the selection of files in lib/libc/glibc/sysdeps was made?

1615562687
FireFox317
sundbp, i guess you can just copy all the folders from src/glibc into lib/libc/glibc

1615562728
sundbp
FireFox317, that doesn't make sense to me - that'd bring a TON of stuff compared to what is in that dir at the moment

1615562737
FireFox317
oh hmm

1615562742
TheLemonMan
sundbp, check glibc.zig

1615562750
sundbp
check the pastebin and you see what I mean

1615562760
TheLemonMan
check start_asm_path callsites

1615562775
TheLemonMan
that gives you the base set of files you need

1615562816
TheLemonMan
then start adding all the #include'd files that are only present in the sysdeps folder

1615562819
TheLemonMan
and voilá

1615562901
FireFox317
TheLemonMan, but what about the folders in zig/lib/libc/glibc ? These probably have to be updated too?

1615562980
TheLemonMan
yep, but let's start from sysdeps

1615563026
sundbp
TheLemonMan, when you say #include'd - included from where?

1615563054
TheLemonMan
from the handful of files you've collected in the first step

1615563161
sundbp
TheLemonMan, you're going a bit fast for me I'm afraid :) First step being? (there's a lot of steps..)

1615563185
TheLemonMan
1) open src/glibc.zig

1615563281
sundbp
yep. looking at that. buildCRTFile refers to some files - you mean those? I'm guessing that's the endgame build requiring the crti.S and friends

1615563339
TheLemonMan
2) read start_asm_path and its 3-4 callsites

1615563410
sundbp


1615563460
TheLemonMan
that's your base set of sysdeps files

1615563506
TheLemonMan
now collect a list of #include from those files

1615563527
sundbp
TheLemonMan, gotcha.

1615563603
TheLemonMan
do that recursively until the queue is empty or you find something better to do :P

1615563634
sundbp
TheLemonMan, my goal is to automate this - will be slightly more complex zig code than I had in mind :)

1615563680
TheLemonMan
this list doesn't change that often (if ever), I wouldn't bother automating everything

1615563701
sundbp
it's a different chain for each arch

1615563747
sundbp
I might cheat and write a little tool in clojure to produce the list of files - will likely take me ages in zig coming in with about 0 lines :)

1615563841
TheLemonMan
nothing you can cobble together with some grep and bash

1615564023
sundbp
I'm not a fan of writing anything non-trivial in bash. It always seems like it'll be quick and then I waste hours on really simple stuff in the end.

1615564105
sundbp
but I guess it would have the benefit of being something that can be committed. I guess these steps already require python, unfortunately not a language I've used. bash it is I guess..

1615564334
TheLemonMan
keep in mind that andrewrk will rewrite it in Zig while you're not looking heh

1615564358
companion_cube
have you never heard of oil shell? 🙃

1615564392
sundbp
TheLemonMan, I'd be very happy with that :)

1615564842
ifreund
companion_cube: bash compatibility is not something I'm looking for in a replacement scripting language

1615564859
ifreund
you have to break from the legacy to get something simpler and better

1615564878
g-w1
ifreund: the ci fail on my pr is on purpose, andrewrk is looking into if it is correct zig; see the irc link i posted

1615564901
ifreund
companion_cube: my hopes for sane scripting lie in

1615564963
ifreund
g-w1: I see, guess I didn't read your PR description :P

1615564971
companion_cube
looks like a lisp-ish thing

1615565011
ifreund
not really, there are no macros or quoting

1615565044
companion_cube
shoulda said tcl

1615565047
companion_cube
anyway

1615565065
companion_cube
I find fish much ncier as a language than bash, but I still don't script in it

1615565104
ifreund
yeah it's meant for interactive usage primarily

1615565111
ifreund
stitch explicitly isn't

1615565115
companion_cube
the line editor is super cool

1615565141
ifreund
anyhow, #stitch if you want to continue this discussion :P

1615565191
vent
companion_cube: Holy crap, I've been looking for something like Oil. I love shell scripting, but hate the language. Never heard of Oil before. It even has braces!

1615565235
companion_cube
vent: ahahah the author is very vocal about it on HN and lobsters

1615565242
companion_cube
ifreund: is that

1615565257
tnorth
Hey there, playing with function pointers now. Any hints on why Zig can't infer the parameter type here:

1615565262
ifreund
companion_cube: marler8997's, I'm responsible for bouncing some ideas

1615565354
fengb
"stitch's primary purpose is to call other programs, when this is not the primary purpose of a script, another language like Python is better suited." :o

1615565369
fengb
Finally, a shell language that realizes the point of a shell language

1615565411
ifreund
tnorth: you'd need to make Foo.bar() take anytype as well

1615565435
ifreund
fengb: my thoughts exactly

1615565489
companion_cube
but often you need a bit of control flow … :/

1615565524
fengb
I'm mostly annoyed at new shells that try to be better Bash but they turn into worse Python

1615565534
fengb
Like PowerShell >_>

1615565655
tnorth
ifreund: thanks. Still a bit confused: "error: parameter of type 'fn(anytype) anytype' must be declared comptime" not sure how to do that?

1615565664
tnorth


1615565702
ifreund
comptime func: fn (anytype) void,

1615565731
ifreund
what I really meant though was this:

1615565790
ifreund
generic functions (those that take an anytype paramerter) have some special rules that aren't well documented. I wish they worked more normally

1615565828
tnorth
ifreund: that's a way more generic func argument :) Cool that it works... doesn't tell why my version doesn't, but that's fine, it covers all cases

1615565861
ifreund
well you can't have a pointer to a generic function at runtime

1615565878
ifreund
you can only have a pointer to a function with a specific signature

1615565917
tnorth
yes, I thought that the compiler would follow the calls and find out which print function to generate at compile time

1615565957
ifreund
it probably could if it were smarter

1615565962
marler8997
yeah I actually think Python is great for the space it's in.  However, there seems to be a space where sometime Python is a bit overkill, when you just want to call other programs and "stitch" them together.  That's what BASH is for and now stitch as well

1615565983
ifreund
this part of the langauge is underspecified so far IMO

1615565996
TheLemonMan
FireFox317, I think I've fixed the remaining problems (beside the unreachable one I couldn't reproduce)

1615566005
tnorth
ifreund: ok, thank you very much again!

1615566014
ifreund
no problem!

1615566430
yyp
Is there a tutorial or somewhat extended documentation on binding C functions and structs into Zig? I know there's "C" section in the docs but sadly, it doesn't apply to libraries

1615566658
g-w1
what do you mean binding?

1615566670
g-w1
they should Just Work, but heres a guide

1615567017
yyp
I want to include a C library (say, OpenSSL), how to link it together in build.zig or whatever and then export functions from it as a package?

1615567064
yyp
There's @cImport thing but it doesn't seem to work when you're targeting a library (.addStaticLibrary instead of .addExecutable)

1615567087
g-w1
exe.linkSystemLibrary("libssl")

1615567110
g-w1
@cImport should work anyways

1615567125
ifreund
yyp: are you writing a zig library exporting a C API or a zig package exporting a zig api?

1615567141
yyp
A zig library exporting C API

1615567173
ifreund
should work fine then, what error do you get?

1615567204
yyp


1615567214
ifreund
yyp: you need to link libc

1615567237
yyp
I actually do .linkLibC() in my build.zig

1615567243
yyp
This doesn't seem to help

1615567256
ifreund
can you paste your build.zig?

1615567309
yyp
Sure:

1615567322
yyp
It's basically default from zig init-lib

1615567340
g-w1
still the same error?

1615567372
ifreund
yyp: and do you get the error when building the lib or the main_tests thing?

1615567384
ifreund
because you aren't linking libc into the tests

1615567424
yyp
Ah, that was the issue. Thanks!

1615567464
yyp
I thought tests step would inherit configuration from the library

1615568076
Nypsie
ifreund, small nitpick and not really part of your IO_Uring PR but from what I can tell `submitted` can be const instead of `var`, right?

1615568204
yyp
Agree, it doesn't need to a var

1615568241
ifreund
Nypsie: sure, might as well fix that while I'm there

1615568284
Nypsie
Sweet, thanks! My mind is relaxed now :P

1615570031
TheLemonMan
annnd the LLVM Xtensa backend is going to be upstreamed too

1615570066
FireFox317
TheLemonMan, nice!

1615570121
sundbp
TheLemonMan, think I'm giving up on automating it. Gotta have the knowledge of the include path of the compiler to actually be able to find things properly, without that one ends up missing stuff or needing heuristics etc. shame.

1615570147
TheLemonMan
told you :P

1615570177
sundbp
TheLemonMan, indeed you did. at least I did an attempt in clojure first instead of banging head on bash. made it clearer to me quicker.

1615570237
dimenus
LLVM, Y U need so much space to link

1615570248
dimenus
mem / swap

1615570272
TheLemonMan
dimenus, -DLLVM_PARALLEL_LINK_JOBS=1

1615570306
TheLemonMan
and -DLLVM_USE_LINKER=gold gives a small speed-up too

1615570460
dimenus
TheLemonMan: thanks

1615570613
TheLemonMan
sundbp, find . -regex '.*/\(crt[in]\|start\).S' -exec grep '#include' "{}" \; | sort -u

1615571065
sundbp
TheLemonMan, yeah, figuring out the "1 step" results is easy. It is then resolving those "level 2" files into actual paths to then find level 3 etc, that's where it gets icky.

1615571079
sundbp
(without knowing include paths)

1615571160
kevinsjoberg
I'm doing some Ziglings and currently doing exercise 38. The exercise asked me to check what happens if I don't create the second character. On my machine I get the output 2863311530, 170, 2863311530 for the types u32, u8 and u32. Are these numbers arbitrary?

1615571180
TheLemonMan
sundbp, most of the interesting ones are prefixed with sysdeps/

1615571182
Nypsie
They look like 0xaaaaaaaaa to me

1615571187
Nypsie
(undefined)

1615571219
g-w1
yep in python do hex(2863311530) and its 0xaaaaaaa

1615571227
ifreund
so yeah essentially arbitrary, try a release-fast or release-small build

1615571233
mipri
"In Debug mode, Zig writes 0xaa bytes to undefined memory. This is to catch bugs early, and to help detect use of undefined memory in a debugger."

1615571260
g-w1
in release they are just what was on the stack before

1615571265
kevinsjoberg
Makes sense. Thanks for clarifying. I thought it had to be undefined, but wasn't entirely sure. :)

1615571695
sundbp
TheLemonMan, it's the "most" part that makes this whole thing a massive pain in the a** :)

1615571875
ifreund
sundbp: you should try the musl update sometime to compare, it's SOOO much easier

1615571907
ifreund
makes me motivated to swtich to a musl based distro

1615572173
fengb
Doesn't Void offer musl?

1615572176
kevinsjoberg
Why dl we

1615572195
kevinsjoberg
Oops, fat fingered. Why don't we have to dereference a pointer to a struct to access its fields?

1615572229
ifreund
fengb: indeed, though when I did this install I had not yet implemented dynamic linking support for musl so river could only build on glibc

1615572231
TheLemonMan
to avoid the . vs -> duality

1615572246
ifreund
kevinsjoberg: because the pointer can't be null

1615572253
ifreund
dereferencing it is safe

1615572326
kevinsjoberg
So it's basically dereferencing it for us? Sorry if that question is stupid, but I'm new to Zig (my first day) and low-level languages in general. I'm coming from a Ruby background.

1615572332
ifreund
note than when dereferencing [*c] pointers zig requires foo.*.bar

1615572348
ifreund
kevinsjoberg: yeah you can think of it as sugar for foo.*.bar

1615572351
g-w1
not stupid

1615572362
ifreund
and welcome to zig!

1615572367
kevinsjoberg
ifreund thanks! Make sense.

1615572378
kevinsjoberg


1615572599
kevinsjoberg
Am I right in understanding that variable names are snake_case, functions camelCase and structs and enums are PascalCase?

1615572660
TheLemonMan
types in general are PascalCase

1615572672
TheLemonMan
9beside the builtin ones)

1615572677
Nypsie
Enum tags are snake_case

1615572681
kevinsjoberg
Gotcha!

1615572777
ugla
PascalCase also for functions that return types (anything with return type of `type`)

1615572796
kevinsjoberg
"One way to do this is to THREATEN IT with the 'orelse' statement." I really enjoy the writing in the Ziglings.

1615573151
kevinsjoberg
Am I right in believing that b.zig is equivalent to a.zig? See

1615573182
kevinsjoberg
a.zig was provided as the example, b.zig was my "rewrite" of the example. Both seem to pass.

1615573190
g-w1
yes

1615573318
ifreund
b.zig is much nicer :)

1615573346
ifreund
though this code looks kinda weird tbh

1615573880
kevinsjoberg
are all built-in functions prefixed with @?

1615573894
ifreund
yes

1615573903
kevinsjoberg
Such a wonderful decision. Love it.

1615573907
tdeo
yeah. they're not really functions necessarily because they can do some special things that functions can't

1615573917
tdeo
like @field can be assigned to

1615573928
oats
could they be thought of as "compiler directives" then?

1615573933
g-w1
a lot of them are llvm intrinsics too

1615573935
kevinsjoberg
tdeo: I see. In any case, it's nice having distinction.

1615573950
ifreund
"builtins" is what I'd call them, drop the "function" part

1615574893
hexaflex
I am having some issues wrapping my head around what happens here: `fn zero() T { return comptime T.init(0); }` The comptime bit tells me that init() is called at compile-time. and whatever is returned by it, is stored in the programs data section and then simply returned whenever zero() is called?

1615574926
hexaflex
If that's the case, than two invocvations of zero() should yield the same instance of T. But comparing pointers shows me that is not true

1615574983
hexaflex
actualy, now that I read it.. the returned values are copies, since zero() doesnt return a pointer. I am an idiot.

1615575004
hexaflex
Still curious if my interpretation of comptime here is correct

1615575038
ifreund
yep, that matches my understanding of the current semantics

1615575165
hexaflex
I just tested it by making zero return a pointer. It's still not showing two invocations to return the same object

1615575249
g-w1
iirc its stored on the stack, not sure though

1615575403
hexaflex
mm if that's the case, Im not sure how the comptime bit is relevant there. Since the stack is unique to each invocation of zero()

1615575413
ifreund
hexaflex:

1615575415
ifreund
works for me

1615575425
ifreund
is your pointer const?

1615575427
kevinsjoberg
I've just completed the ziglings. What would be a good next step? I'm thinking a small project or something but not really what to build or where to start.

1615575495
hexaflex
Nope. I'll try that

1615575515
g-w1
kevinsjoberg: I always like to make projects based on what I am curious about or what annoys me, maybe you could do the same? a cli tool is pretty easy and fun

1615575551
ifreund
yeah, just pick something you're interested in and roll with it

1615575614
ifreund
hexaflex: sorry, I pasted the wrong thing:

1615575636
hexaflex
hah I was getting a bit confused by that first one

1615575799
kevinsjoberg
g-w1 that's not bad idea. I might try port some Ruby CLIs to Zig.

1615575837
g-w1
they will be faster :)

1615575868
hexaflex
ifreund: ok, that helps understand things a bit more.

1615576027
kevinsjoberg
g-w1I sure hope so.:)

1615577549
hexaflex
Is there a convention when it comes to the location of tests? Should they be in a separate file or in the same file as the code they cover?

1615577585
g-w1
usually near the code they cover for maximum readability

1615577775
hexaflex
ok

1615579439
ifreund
for unit tests yeah

1615579480
ifreund
though that doesn't really make as much sense for larger test suites testing doing something closer to integration testing

1615579837
hexaflex
I'm guessing when mockup types have to be created for tests, it is ok to use separate files? Mixing that code together in the same scope feels icky.

1615580086
hexaflex
Also, is there a stdlib function to test for float equality? testing.expectEqual just does a straightup a == b test on floats, which is not really ok

1615580132
txdv
hi guys

1615580148
g-w1
hexaflex: why is it not ok?

1615580162
TheLemonMan
hexaflex, there's math.approxEq{Abs,Rel} and expectWithinEpsilon and expectWithinMargin

1615580182
TheLemonMan
read the docs to understand the small differences between them

1615580182
hexaflex
TheLemonMan: ah great

1615580211
g-w1
oh, I guess I just don't know how floats work, ignore me

1615580239
TheLemonMan
exact comparison is asking for trouble

1615580373
hexaflex
g-w1: if you have some spare time, it's worth reading up on. Especially on why floating point comparison can be a bit of a hassle, It's a rabbit hole though.

1615580409
hexaflex
Bring cokies and coffee

1615580417
g-w1
ok, cool; i dont really know how floats work so that will be interesting

1615580418
hexaflex
and cookies

1615580918
evs-chris
was just watching the jt learns zig stream

1615581079
evs-chris
can I motion to rename detectable illegal behavior to detectable aberrant behavior, or dabbing?

1615581396
fengb
bruhavior

1615581447
evs-chris
even better

1615581582
oats
does the default expression for a struct field need to be comptime?

1615581592
g-w1
yes

1615581971
ifreund
hexaflex: you can probably put your test types in your test blcok

1615585048
mikdusan
andrewrk: in `clang_options_data.zig` how is it decided if both pd1/pd2 = true ? for example .name="shared" has .pd1=true, .pd2=true

1615585067
mikdusan
was that gleaned from .td ?

1615585675
hexaflex
How can I get something like a `[2]f32` type to play nice with std.mem.eql ? I tried the slice operator [0..] and I tried the addres-iof operator. neither seem to work/

1615585748
ifreund
they should both work, could you paste code?

1615585799
hexaflex
Let me whittle it down to the essentials. sec

1615586026
hexaflex
mm weird. if I declare the arrays as standalone values, it works fine with the slice operator. In my code though, the arrays are part of a struct.

1615586060
hexaflex
when passing them to mem.eql, the compiler gives "error: expected type '[]const f32', found '*align(1) const [16]f32'"

1615586088
hexaflex
Used as: expect(std.mem.eql(f32, c.values[0..], m.values[0..]))

1615586157
ifreund
the align(1) is the problem there, where is that coming from?

1615586176
ifreund
alse testing.expectEqualSlices(f32, a, b)

1615586281
hexaflex
not sure where that's coming fromn. The struct is packed. But removing the packed keyword doesnt remove the align bit

1615586307
hexaflex
actually, it does.

1615586322
hexaflex
Seems to be that the packed struct changes the types of the fields

1615586333
dimenus
god damn does llvm run a lot of tests in cmake

1615586352
tdeo
yeah, the compile error you're getting is there for a reason, in c you'd just have silent undefined behaviour

1615586362
tdeo
not sure how to compare unaligned values in zig though

1615586369
fengb
Yeah packed forces all the fields to be align(1)

1615586370
ifreund
yes, making a struct packed will definitely have an impact on the alignment of the fields

1615586387
mikdusan
dimenus: probe city :)

1615586416
dimenus
mikdusan: working on Zig for SerenityOS

1615586426
dimenus
but LLVM wants a lot of things

1615586432
mikdusan
python3

1615586434
g-w1
does cmake work on serenity?

1615586475
dimenus
g-w1: yes there is a port for cmake

1615586535
g-w1
nice

1615587040
hexaflex
So I'm guessnig there is no convenient way to get an aligned array to behave like a slice?

1615587464
TheLemonMan
for one don't compare floating point numbers using mem.eql

1615587493
TheLemonMan
you can compare the two slices by writing a for loop

1615587551
TheLemonMan
there's also mem.sliceAsBytes

1615587614
hexaflex
handy

1615588565
fengb
You can coerce it into []align(1) f32, but these helpers don't allow you to change the alignment

1615588624
sundbp
TheLemonMan, just getting back to my glibc. outside of sysdeps in the lib/libc/glibc lib - what are all those files and do they not also need updating for new versions?

1615588704
TheLemonMan
yes, those are some special-cased files that provide some symbols not exported by the libc .so

1615588858
sundbp
TheLemonMan, do I dare ask if there's any logic there? how did the list of files get collated the first time around?

1615589345
TheLemonMan
some object files are linked together and are statically linked against every program

1615589370
TheLemonMan
those files produce the symbols in that library

1615589530
TheLemonMan
(grep the makefiles for static-only-routines)

1615589678
sundbp
hm. this is starting to feel very error prone.. the chance I'll get this correct in an ad-hoc manner seems pretty slim.

1615590248
TheLemonMan
updating the glibc files is a form of art

1615590602
g-w1
TheLemonMan: someone on discord is reporting a regression on m1 silicon with the progress

1615590735
TheLemonMan
that doesn't tell me much, what terminal emulator are they using?

1615590743
g-w1
its on the default apple terminal

1615590983
TheLemonMan
no idea if Terminal.app supports DECSC/DECRC

1615591016
g-w1
ah, i think they are going on to irc now

1615591140
g-w1
nvm

1615591268
TheLemonMan
ah I think I've found the problem

1615592662
TheLemonMan
g-w1, #8229

1615593455
dimenus
zig-bootstrap really is magical

