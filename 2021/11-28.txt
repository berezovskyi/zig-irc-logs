1638125196
Franciman!~Franciman@mx1.fracta.dev
zig coding going on

1638125198
Franciman!~Franciman@mx1.fracta.dev
\o/

1638134119
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
\o/

1638135229
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
hello zig

1638135282
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
I'm a total newcommer. Does zig have something better for the problem that the C 'restrict' keyword tries to solve to get better optimisations?

1638135326
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
maybe as simple as default-restrict.

1638135346
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
because it's a pain in C/C++.

1638136304
ikskuh!~xq@v43666.php-friends.de
viric: we don't have a good aliasing control yet

1638136720
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ok

1638136880
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
no const cast at least, if I read correctly

1638136891
ikskuh!~xq@v43666.php-friends.de
will be required at one time though

1638136899
ikskuh!~xq@v43666.php-friends.de
you just need it sometimes

1638136910
ikskuh!~xq@v43666.php-friends.de
but we have "noalias" as a keyword afaik

1638137026
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
if there is const cast then all assumptions the compiler can take from 'const' are gone I guess

1638137034
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
I mean the optimizer

1638137042
ikskuh!~xq@v43666.php-friends.de
only if constCast is actually used

1638137048
ikskuh!~xq@v43666.php-friends.de
the thing is:

1638137057
ikskuh!~xq@v43666.php-friends.de
you can *always* go through ptr‚Üíint‚Üíptr

1638137068
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
oh. ok.

1638137076
ikskuh!~xq@v43666.php-friends.de
but you lose provenance information (meaning: the compiler will then lose all information about the memory)

1638137084
ikskuh!~xq@v43666.php-friends.de
while constCast allows to keep the info

1638137111
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
clear.

1638137121
ikskuh!~xq@v43666.php-friends.de
and someimes apis force you to do so

1638138221
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
https://ziglang.org/documentation/master/#noreturn    the 1st example doesn't say 'noreturn'... is it correct?

1638138272
ikskuh!~xq@v43666.php-friends.de
yes, as "return" has the return type "noreturn"

1638138295
ikskuh!~xq@v43666.php-friends.de
so the else branch has a value noreturn which peer-type-resolves into u32 with b

1638138298
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
aah thank you

1638138306
ikskuh!~xq@v43666.php-friends.de
:)

1638138313
ikskuh!~xq@v43666.php-friends.de
are you learning zig via langref? 

1638138348
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
no

1638138352
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
I don't know what that is

1638138361
ikskuh!~xq@v43666.php-friends.de
the document you linked above

1638138364
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ah you mean the language reference? ok

1638138364
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
yes

1638138372
ikskuh!~xq@v43666.php-friends.de
üëç cool, did so too :)

1638138389
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
well I can't say it's "learning". I want to know what does it bring to the table

1638138406
ikskuh!~xq@v43666.php-friends.de
a lot of good ideas

1638138413
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
I thought that was "the manual" more than the language reference

1638138501
ikskuh!~xq@v43666.php-friends.de
well it's the "official documentation"

1638138504
ikskuh!~xq@v43666.php-friends.de
so it's kinda both

1638138740
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ok

1638138803
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
afaik zig "works" because all code is compiled together. It doesn't have any file representation for compiled code to be later incorporated into a program, right?

1638138813
ikskuh!~xq@v43666.php-friends.de
yeah

1638138822
ikskuh!~xq@v43666.php-friends.de
well

1638138826
ikskuh!~xq@v43666.php-friends.de
except for object files via C ABI

1638138836
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
in my computer I don't have enough RAM to compile at link time, let's say, chrome.

1638138854
ikskuh!~xq@v43666.php-friends.de
sure? :)

1638138857
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
If I had a chrome in zig I'd be hitting such compile-all-at-once limit

1638138871
ikskuh!~xq@v43666.php-friends.de
right now, stage2 seems promising on ram usage

1638138884
ikskuh!~xq@v43666.php-friends.de
andrew is really working a lot of bringing the RAM usage down to a minimum

1638138923
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
well to me chrome is the easy example how such things can get big. Or firefox.

1638138976
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
Maybe zig could incorporate some kind of offloading data to disk instead of relying on the sysadmin allowing for so much process memory use.

1638139006
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
keep the compile-all but with tricks to use disk for some structures.

1638139028
ikskuh!~xq@v43666.php-friends.de
note that zig already does incremental linking

1638139036
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ah I didn't know

1638139044
ikskuh!~xq@v43666.php-friends.de
and every compilation step is cachable in stage2 (the new unfinished zig compiler)

1638139058
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
what example is there of a big zig program?

1638139060
ikskuh!~xq@v43666.php-friends.de
so if you have the source code parsed, next time you won't load the source ever into RAM

1638139069
ikskuh!~xq@v43666.php-friends.de
the stage2 compiler

1638139069
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ah ok

1638139081
ikskuh!~xq@v43666.php-friends.de
or the zig compiler itself right now (which is partially in Zig and C++)

1638139096
ikskuh!~xq@v43666.php-friends.de
and the stage1 compiler (the one you get from the website) is horribly inefficient and memory hungry

1638139104
ikskuh!~xq@v43666.php-friends.de
takes up 8-12 GB to link zig 

1638139116
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ah really?

1638139119
ikskuh!~xq@v43666.php-friends.de
yeah

1638139124
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
then I can't link zig either :D

1638139135
ikskuh!~xq@v43666.php-friends.de
the next milestone is making stage2 be "usable enough"

1638139155
ikskuh!~xq@v43666.php-friends.de
so we can reduce memory usage to a minimum

1638139164
ikskuh!~xq@v43666.php-friends.de
and reduce build times to seconds

1638139191
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ok. Did I came in a date close to having that usable enoguh?

1638139211
ikskuh!~xq@v43666.php-friends.de
i mean, you still can use the stage1 compiler from the website :)

1638139224
ikskuh!~xq@v43666.php-friends.de
you probably just can't work on the compiler itself

1638139327
ikskuh!~xq@v43666.php-friends.de
i got to go, but feel free to ask questions

1638139339
ikskuh!~xq@v43666.php-friends.de
there are a lot of other competent people here that can answer your questions :)

1638139905
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
thank you ikskuh.

1638139926
viric!~viric@static-253-33-60-95.ipcom.comunitel.net
ikskuh: I'm on NixOS so I get andrew's zig packages.

