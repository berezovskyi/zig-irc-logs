1624155451
kprotty[m]!~kprotty@2001:470:69fc:105::834
I got a std.Thread rewrite coming up

1624155471
freshcoffee!~fresh@user/freshcoffee
oh that's all /s

1624156066
pagnol!~user@014198154145.ctinets.com
kprotty[m]: what's what goal of the rewrite?

1624158217
kprotty[m]!~kprotty@2001:470:69fc:105::834
primarily, detached thread support. secondary to spawn options (stack size, affinity, etc.), finally versatile calling/spawning (similar to @call() builtin)

1624158223
kprotty[m]!~kprotty@2001:470:69fc:105::834
pagnol: 

1624161097
kiedtl!~kiedtl@kisslinux/kiedtl
Interesting, when returning '.{ .foo = bar, ... }' from a function returning ?MyType Zig infers the '.{ ... }' as ?MyType instead of MyType, and gives the error '?MyType doesn't support struct initialization syntax'. This is a bug, no?

1624161114
kiedtl!~kiedtl@kisslinux/kiedtl
(I'm on v7.0.1 sorry, unable to test on the latest version :v)

1624161366
freshcoffee!~fresh@user/freshcoffee
kiedtl: on master that is still an error; however #3663 is an accepted proposal

1624181401
TheLemonMan!~lemonboy@irssi/staff/TheLemonMan
freshcoffee, does nanosleep compile on Dragonfly?

1624188399
gmacd!~gmacd3@cpc1-bmly10-2-0-cust207.2-3.cable.virginm.net
How do I pass a generic type as a function argument?  Let's say I create a List as in https://ziglang.org/documentation/0.8.0/#Generic-Data-Structures - if I want to create a function with a node as an argument, do I need to declare the specific Node struct?

1624188763
ifreund!~ifreund@user/ifreund
gmacd: you can also do either fn (comptime T: type, node: Node(T)) void or fn (node: anytype) void

1624188820
ifreund!~ifreund@user/ifreund
er, I didn't actually read the link you sent so the type I used doesn't match the example in the docs but I think you get the idea

1624189140
kprotty[m]!~kprotty@2001:470:69fc:105::834
TheLemonMan: ping?

1624189361
gmacd!~gmacd3@cpc1-bmly10-2-0-cust207.2-3.cable.virginm.net
ifreund: thanks - that does the trick.  i could actually use a specialisation in this case, but good to know about the generic case.

1624189593
ifreund!~ifreund@user/ifreund
no problem!

1624194871
TheLemonMan!~lemonboy@irssi/staff/TheLemonMan
kprotty[m], pong

1624215494
freshcoffee!~fresh@user/freshcoffee
TheLemonMan: yes

1624215516
freshcoffee!~fresh@user/freshcoffee
std.time has a test that covers it

