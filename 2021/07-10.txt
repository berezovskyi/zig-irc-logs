1625880651
kurufu!~kurufu@user/kurufu
Im looking to add out-implib/IMPLIB to zig cc, threading through the command to coff linker was pretty trivial. But it adds an additional output file, the rub is it seems zig is too clever with its caching and outputs just the dll and not the new implib when rerun.

1625880666
kurufu!~kurufu@user/kurufu
How do i make the cache aware of this new output?

1625880714
kurufu!~kurufu@user/kurufu
(im not sure where the typical output file is added to cache even)

1625892262
kurufu!~kurufu@user/kurufu
One more question, it seems that when using the zig toolchain some symbols end up missing when cross compiling glib (libgio) for windows which doesnt occur using the mingw32 toolchain. I'm not particularly sure how to debug this, but these symbols (http://paste.debian.net/1203954/) are presumably provided by ws2_32 (or something) though in zig they dont resolve.

1625892308
kurufu!~kurufu@user/kurufu
swapping to the mingw-ld linker doesnt fix this so I think its on the compiler side?

1625937136
andrewrk!~andrewrk@mail.ziglang.org
zig showtime is live: https://www.twitch.tv/kristoff_it

1625940109
kiedtl!~kiedtl@kisslinux/kiedtl
oh looks like I missed it? :V

1625940311
andrewrk!~andrewrk@mail.ziglang.org
kiedtl, it's still going. we're at the Q&A of the first talk, and there is still another talk coming up

1625940555
freshcoffee1!~fresh@user/freshcoffee
I missed the clock choice -- was `CLOCK_BOOTTIME` the recommended linux choice?

1625940624
andrewrk!~andrewrk@mail.ziglang.org
freshcoffee1, the answer in the talk was CLOCK_BOOTTIME counted time being suspended, however audience member slimslag pointed out a linux kernel commit that made them the same, which I think the tigerbeetle folks aren't yet aware of

1625940665
freshcoffee1!~fresh@user/freshcoffee
CLOCK_MONOTONIC_RAW looks even more correct - "not adjusted for frequency scaling."

1625940692
andrewrk!~andrewrk@mail.ziglang.org
mmm I don't think that's the right way to go. I forgot why but I came to this strong conclusion when I investigated years ago

1625941584
ifreund!~ifreund@user/ifreund
andrewrk: that commit was revert cause it broke userland iirc

1625941625
ifreund!~ifreund@user/ifreund
andrewrk: https://0x0.st/-OBm.txt

1625941875
andrewrk!~andrewrk@mail.ziglang.org
very interesting

1625941879
andrewrk!~andrewrk@mail.ziglang.org
so the man pages are correct, then?

1625941904
andrewrk!~andrewrk@mail.ziglang.org
> Seems userspace _is_ relying on the documented behaviour despite our hope that it wont

1625941920
freshcoffee!~fresh@user/freshcoffee
for macos/*bsd `CLOCK_MONOTONIC` are defined as "will continue to increment while the system is asleep"

1625941923
andrewrk!~andrewrk@mail.ziglang.org
seems pretty reasonable that userspace would rely on documented behavior xD

1625942107
freshcoffee!~fresh@user/freshcoffee
oh scratch that. man, openbsd's man pages:

1625942128
freshcoffee!~fresh@user/freshcoffee
CLOCK_BOOTTIME   The uptime clock.

1625942133
freshcoffee!~fresh@user/freshcoffee
CLOCK_UPTIME     The runtime clock.

1625942136
freshcoffee!~fresh@user/freshcoffee
lol

1625942766
freshcoffee!~fresh@user/freshcoffee
from here https://github.com/ziglang/zig/pull/933#discussion_r182606628 I went down the rabbit hole a bit and found this cool link:

1625942767
freshcoffee!~fresh@user/freshcoffee
https://www.python.org/dev/peps/pep-0418/#id47

1625945115
andrewrk!~andrewrk@mail.ziglang.org
ifreund, tiger beetle uses -OReleaseSafe is that right?

1625945815
ifreund!~ifreund@user/ifreund
andrewrk: yep, that's what we recommend

1625945832
ifreund!~ifreund@user/ifreund
though it's open source so if someone wants to run release-fast in production we can't stop them :D

1625945841
andrewrk!~andrewrk@mail.ziglang.org
ah yeah that makes sense

1625945852
andrewrk!~andrewrk@mail.ziglang.org
I guess my question is what does coil do

1625945889
ifreund!~ifreund@user/ifreund
coil isn't using it in production yet and won't be for many months still, when it does come time though I'm sure they'll listen to our recommendation

1625945943
ifreund!~ifreund@user/ifreund
the point about assertions having the power to turn a correctness bug potentially leading to data loss into a liveness bug is too good to ignore

1625945995
ifreund!~ifreund@user/ifreund
and because zig preforms so many of its own safety checks, I feel like there's a decent chance of one of those catching a correctness bug if we've missed something

1625946770
andrewrk!~andrewrk@mail.ziglang.org
that makes sense

1625955550
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
regarding https://github.com/ziglang/zig/issues/9346 , is there any place where return is valid outside a function scope?

1625955898
andrewrk!~andrewrk@mail.ziglang.org
c

1625955901
andrewrk!~andrewrk@mail.ziglang.org
oops

1625955911
andrewrk!~andrewrk@mail.ziglang.org
g-w1, nope, `return` is only valid inside a function scope

1625958639
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
thanks

1625958825
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
astgen makes it so easy to fix stuff like this

1625959177
andrewrk!~andrewrk@mail.ziglang.org
yeah I think we landed in a pretty nice place with astgen

1625959275
andrewrk!~andrewrk@mail.ziglang.org
oh I should share a screenshot of tracy sampling astgen

1625960587
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
pls :)

1625960649
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
I saw you put up the air mem layout pr, I should be able to help a little with that I think. I'll wait for a few examples to come in first though.

1625960852
andrewrk!~andrewrk@mail.ziglang.org
sounds good :)

1625961095
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
ah, test "" { } can have return

1625961219
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
but that counts as a function :^)

1625961306
andrewrk!~andrewrk@mail.ziglang.org
https://imgur.com/RQSWXBm.png

1625961380
g-w1!~g-w1@pool-96-232-174-225.nycmny.fios.verizon.net
is the 2nd "zig" thread just waiting around for a long time becuase it has finished, and theres nothing else to do?

1625961407
andrewrk!~andrewrk@mail.ziglang.org
all the threads are working on astgening files

1625961441
xackus_!~xackus@7-131.w.knc.pl
zig zig zig zig zig zig zig zig zig zig zig zig

1625961510
andrewrk!~andrewrk@mail.ziglang.org
here's a zoomed out screenshot. I could only fit 6 out of 16 threads. https://imgur.com/ZbP5rWV.png

