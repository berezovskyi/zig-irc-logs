1612145113
dvaun
hm

1612187234
zags
is io_mode = .evented a global decision, or is it possible to have blocking mode for parts of the application?

1612189799
ifreund
it's a global decision currently if you use the std

1612189839
ifreund
you can of course bypass the std abstractions that behave differently depending on root.io_mode and make blocking syscalls directly

1612189844
ifreund
zags: ^

1612190177
zags
alright, thanks

1612190244
zags
so I guess setting io_mode, or depending on a certain setting, is not something libraries will ever do (if even possible), otherwise they wouldn't compose

1612190403
ifreund
indeed

1612190455
ifreund
though there's a difference here between "packages" and standalone libraries exporting a C ABI

1612190490
ifreund
the former do not have a root file so they cannot set stuff like io_mode

1612190555
ifreund
the latter may do whatever they want as they are in their own compilation unit and the root.io_mode setting won't affect code they are linked against

1612191660
g-w1
first class acme support on the way! (#7931 and #7932)

1612194535
dutchie
ooh, that might also improve how build logs look when done in nix

1612202408
pixelherodev
g-w1: not sure why you cced me :P

1612202432
pixelherodev
g-w1: I don't use zig upstream anymore - and couldn't, since I exclusively use 9front these days - so it's not really relevant to me

1612202450
pixelherodev
It is nice to see, though :)

1612204460
g-w1
i cced you because you use acme

1612204471
g-w1
oh ok

1612205239
pixelherodev
g-w1: I use acme on Plan 9, not on Linux ;)

1612205441
g-w1
ah, I use acme (some kakoune for more text editing heavy stuff until I learn sam) in linux and wanted to improve the compat

1612205850
pixelherodev
:)

1612207907
mmurd
I'm trying to cross-build for the rpi from a build.zig, how can I set mcpu to arm1176jzf_s like I would on the CLI?

1612208295
ifreund
mmurd: standardTargetOptions() returns an std.zig.CrossTarget

1612208324
ifreund
you can modify this before passing it to LibExeObjStep.setTarget()

1612208727
andrewrk
if your target is always the rpi, this is a good use case to not call standardTargetOptions

1612208755
andrewrk
so you could just call setTarget() and then look at the params for that function - I believe it has an mcpu field that you can set to "arm1176jzf_s"

1612209023
mmurd
I'll give setTarget a try.  I guess this

1612209127
andrewrk
mmurd, that's something else, I think. You want setTarget(std.zig.CrossTarget.parse(...))

1612209150
andrewrk


1612209161
andrewrk
arch_os_abi is -target, cpu_features is -mcpu

1612210070
mmurd
andrewrk, That's great thanks.  Seems to be building :)

1612211218
mmurd
`/home/overfl0w/workshop/zig-gpio-tree/libgpiod-1.6.2/lib/core.c:1:1: error: unable to build C object: FileNotFound` What does this mean?

1612211223
mmurd
(the core.c file does exist!)

1612211576
mmurd
ah, I might have figured it out.  A `-include` flag has to be a full path for my use.

1612212214
mmurd


1612213047
andrewrk
mmm the easiest path forward might actually be fixing whatever issues zig is hitting here

1612213116
mikdusan
(side note: glibc has a history of 2 releases/year in Feb/Aug... so 2.33 might be the time to fix)

1612213290
ifreund
LemonBoy's comment made it sound like the fix might be as simple as adding some missing headers to the sysdeps folder

1612213339
mikdusan
heh 2.33 was tagged 3 hours ago

1612213344
ifreund
lol

1612213357
ifreund
I guess you

1612213374
ifreund
*you're psycic

1612213713
andrewrk
ooh it's time to spend ~20 hours with all 16 cpu cores spinning

1612213754
andrewrk
idk what I would do without this 1TB hard drive

1612213778
mikdusan
ha is that what it blows up to?

1612213896
andrewrk
currently my 2.32 glibc checkout after building it for all architectures is taking up 84G

1612213952
mikdusan
not on mirrors yet. but here.

1612213958
andrewrk
eighty four jiggy biggies

1612213983
andrewrk
I use the git clone so I don't need a tarball

1612214009
andrewrk
what's with the glibc-2.33.9000 tag?

1612214020
mikdusan
that's their work branch until 2.34 I believe

1612214043
andrewrk
ah

1612214093
mikdusan
I think their logic is they'll never have 9000 patches. and also it sounds like hal9000

1612214108
mmurd
For now, I'm "working around" it by running the libraries own `make install` into a dummy directory and then linking against the .a object file.

1612214136
andrewrk
in about 10 min I'm going to live stream some of the work I'm doing today, on the topic of the ast memory layout, updating zig fmt to work with it.

1612214662
ifreund
sweet

1612215446
leah2
is it on?

1612215464
mikdusan
resetting wifi router: it's obviously not implemented in .zig

1612215477
leah2
ah ok :)

1612215548
mikdusan
he's back now

1612215574
leah2
works now, thx

1612219085
motiejus
Meta question:

1612219221
ifreund
motiejus: the milestone assignment means that it should be considered before 0.8 and either accepted/rejected/postponed to 0.9 or later

1612219270
ifreund
if it is accepted it will be given the accepted label

1612220865
motiejus
ifreund: thanks, will be looking forward. Is there a cadence when these proposals are reviewed (days/weeks/months)?

1612221053
ifreund
in general, whenever the people doing the reviewing have time/interest

