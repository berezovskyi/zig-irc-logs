1632964823
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
andrewrk: thanks for the review!

1632964865
andrewrk!~andrewrk@mail.ziglang.org
np

1632965883
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
pushed.

1632966098
g-w1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
once this is merged I can get to doing the optimisation with `**` that motivated implemeting array init ðŸ˜ˆ

1632971452
da_lorax!~kvirc@97-113-165-234.tukw.qwest.net
how do I turn a string I get from allocPrint to a pointer I can pass to a C func (specifically, std.c.syslog)

1632975078
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Does https://ziglang.org/documentation/master/#ceil have a typo? I think it's supposed to be the smallest integral value.

1632977732
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Well, if it's not a typo, say so on PR #9867.

1632978179
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
da_lorax: allocPrint returns a slice of u8. If you want a pointer to its first element, do `slice.ptr`

1632978194
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Make sure you also pass `slice.len` to the C function, so it knows how much memory it has to play with.

1632978241
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Or...it looks like you actually want a sentinel-terminated slice from a regular slice.

1632978255
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
You might have to copy it.

1632978318
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Or...extend it a byte with the allocator?

1632978340
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Or, use allocPrintZ instead!

1632978366
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
Yeah, do that. Call allocPrintZ instead of allocPrint and it will solve all your C-interoperability problems.

1632978683
da_lorax!~magus@138.68.44.178
does zig use pascal strings?

1632979224
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
da_lorax: No, a slice is a struct with a pointer and a length. The length isn't part of the data.

1632979257
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
At least, it doesn't have to be. It's probably possible to make a Zig implementation that does.

1632979283
da_lorax!~magus@138.68.44.178
ah

1632981797
CrystalGamma[m]!~crystalga@2001:470:69fc:105::1011
leeward: I don't think it is possible to sanely implement the language while storing the length as part of the data, since you can subslice the slice without changing the address of the elements

1632982839
leeward!~Ashes@c-76-19-143-101.hsd1.ma.comcast.net
 That's a good point.

1632989155
nmeum!~nmeum@barium.8pit.net
I have a function which registers a callback and I would like to pass a generic additional caller-specified argument to that callback when invoking it

1632989182
nmeum!~nmeum@barium.8pit.net
I am currently using a *c_void for this purpose and then cast it in the callback using @ptrCast is there any better way to do this?

1632998420
bw!sid2730@user/betawaffle
can i use `void` inside an `extern struct` to effectively remove a field based comptime information?

1633009878
daurnimator!~daurnimat@vultr.daurnimator.com
bw: yes

1633009888
bw!sid2730@user/betawaffle
thanks

1633009891
daurnimator!~daurnimat@vultr.daurnimator.com
we do that in the standard library in a few places

