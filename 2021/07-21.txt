1626826763
olabian!~olabian@ool-4576796d.dyn.optonline.net
ifreund: very cool, thanks for explaining all of this!

1626834345
andrewrk!~andrewrk@mail.ziglang.org
luuk, I hope you don't mind if I disable the wasm test case for switch for now and wait for your update to make it use br_table

1626837177
andrewrk!~andrewrk@mail.ziglang.org
#9353 has all tests passing now

1626837880
andrewrk!~andrewrk@mail.ziglang.org
now that this branch is done, I'll do a few days of merging PRs and helping other people in various ways, then it's off to the next self-hosted compiler implementation task

1626837886
andrewrk!~andrewrk@mail.ziglang.org
which will be making `zig test` work I think

1626843514
discipulus!~discipulu@user/discipulus
andrewrk :thumbsoup: good job. Which issue is related to making `zig test` work?

1626843613
andrewrk!~andrewrk@mail.ziglang.org
I don't think I have an issue open for it. but if you run `zig test` in the self hosted compiler, it currently does not work

1626844166
discipulus!~discipulu@user/discipulus
thanks

1626847926
tsujp!~tsujp@sourcehut/user/tsujp
ziggy wiggy

1626851552
luuk!~luuk@user/luuk
andrewrk: Yes, that's totally fine! I will make the br_table PR outside of the stage2-air branch once it's finished :)

1626853450
haze!~haze@cpe-68-174-134-17.nyc.res.rr.com
ziggy wiggy

1626876002
kevinsjoberg!sid499516@id-499516.tooting.irccloud.com
Who should I ping to get some attention to the following pull requests? https://github.com/ziglang/sublime-zig-language/pulls/kevinsjoberg.

1626876037
kevinsjoberg!sid499516@id-499516.tooting.irccloud.com
I'm using TextMate as my main editor and these would be really great getting in. I'd be up for maintaining the TextMate-side of the bundle if anyone would have me. I'm doing the same for the Crystal TextMate bundle (https://github.com/crystal-lang-tools/Crystal.tmbundle).

1626876192
ifreund!~ifreund@user/ifreund
kevinsjoberg: looks like emekoi on github is the primary maintainer of that repo, I don't think they're on IRC though unfortuneately

1626876211
kevinsjoberg!sid499516@id-499516.tooting.irccloud.com
ifreund: I see. I cross-posted to Discord as well. :)

1626881237
motiejus!~motiejus@2001:470:69fc:105::38fb
another likely race condition when invoking `zig c++` in parallel: https://github.com/ziglang/zig/issues/9431 ; note I will have the computer with the "fresh" build directory lying around on my desk if you need any of those files for inspection.

1626881362
motiejus!~motiejus@2001:470:69fc:105::38fb
correction: not fresh, but "just failed without any other touches"

1626883020
olabian!~olabian@ool-4576796d.dyn.optonline.net
hi how can I compare [*:0]const u8 to a "string". I tried mem.eql(author, "John") but I get an error expected type '[]const u8', found '[*:0]const u8'

1626884212
dutchie!~dutchie@user/dutchie
you can use std.mem.span to convert [*:0]const u8 to []const u8 (in O(n) time)

1626884732
olabian!~olabian@ool-4576796d.dyn.optonline.net
dutchie: thanks that worked!

1626886169
olabian!~olabian@ool-4576796d.dyn.optonline.net
is there a way to check for memory leaks when using @cImport and calling functions that allocate memory?

1626886226
ifreund!~ifreund@user/ifreund
olabian: you can use valgrind

1626886247
ifreund!~ifreund@user/ifreund
which also works very well for zig code if you use the libc allocator

1626886271
olabian!~olabian@ool-4576796d.dyn.optonline.net
ok, great

1626894557
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
Hey, I'm currently on my first dive into the zig build settings and I'm wondering where the zig-out folder can be configured. Using exe.setOutputDir doesn't seem to be it.

1626894644
ifreund!~ifreund@user/ifreund
LostKobrakai: zig-out is the default install prefix, you can tell the zig build system to use a different one with -p/--prefix

1626894654
ifreund!~ifreund@user/ifreund
what's your use-case?

1626894785
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
I'm trying to integrate with an elixir project and static files would need to go into /priv, therefore I'm trying to make `zig build` put things in that folder

1626894961
ifreund!~ifreund@user/ifreund
I assume you've seen https://github.com/ityonemo/zigler?

1626894994
ifreund!~ifreund@user/ifreund
anyhow, does zig build --prefix /priv work for you?

1626895030
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
I know of zigler, this is however more using zig aside of elixir instead of within elixir.

1626895053
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
I would've thought I could set that up in build.zig as well, but it not that's fine with me

1626895172
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
What is `setOutputDir` for if not for setting where the binary is to be put?

1626895176
ifreund!~ifreund@user/ifreund
LostKobrakai: the default should probably be made configurable from within the build.zig eventually, that hasn't been implemented yet though

1626895205
ifreund!~ifreund@user/ifreund
LostKobrakai: I don't acutually have any use-case for setOutputDir() aside from debugging the compiler/build system

1626895233
ifreund!~ifreund@user/ifreund
it causes the intermediate artifacts to be put in the "output dir" instead of somewhere in the zig-cache

1626895282
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
That explains why the .o file landed there as well. Thanks for the explanation

1626895321
ifreund!~ifreund@user/ifreund
no problem, the name is not great and it should probably just be removed tbh

1626895358
ifreund!~ifreund@user/ifreund
std.build is one of the cruftier parts of the std currently

1626895365
LostKobrakai!~LostKobra@2001:16b8:2dba:e300:d46f:7f1e:b163:7786
It really sounded like what I was looking for in the autocomplete :D

1626903895
olabian!~olabian@ool-4576796d.dyn.optonline.net
hi, I have field in my struct `authors: [*][*:0]u8`, how can I check if it is null so I can allocate memory for some items

1626903938
olabian!~olabian@ool-4576796d.dyn.optonline.net
I want authors to be a collection of [*:0]u8

1626904492
ifreund!~ifreund@user/ifreund
olabian: that type is not nullable, you could use ?[*][*:0]u8 instead if you want a nullable type

1626904535
olabian!~olabian@ool-4576796d.dyn.optonline.net
ifreund: is there a better alternative for what I"m trying to do?

1626904580
ifreund!~ifreund@user/ifreund
I don't have enough context to know :P

1626904604
ifreund!~ifreund@user/ifreund
do you want a growable list of items? if so std.ArrayList()

1626904612
olabian!~olabian@ool-4576796d.dyn.optonline.net
yes

1626904637
olabian!~olabian@ool-4576796d.dyn.optonline.net
perfect

1626904745
olabian!~olabian@ool-4576796d.dyn.optonline.net
would I put it as:     authors: std.ArrayList([*:0]u8), in my struct

1626904772
ifreund!~ifreund@user/ifreund
yep

1626904807
ifreund!~ifreund@user/ifreund
note that you are still responsible for managing the memory for the [*:0]u8 elements yourself

1626904834
olabian!~olabian@ool-4576796d.dyn.optonline.net
I see, so I should free everything and then deinit it

1626904926
olabian!~olabian@ool-4576796d.dyn.optonline.net
wait does the append move my [*:0]u8 or make a copy of it

1626904996
ifreund!~ifreund@user/ifreund
it may copy the pointer if the allocation for the ArrayList needs to grow

1626905018
ifreund!~ifreund@user/ifreund
the [*:0]u8 pointer will still point to the same memory though

1626905066
olabian!~olabian@ool-4576796d.dyn.optonline.net
ok I think I understand

1626905836
andrewrk!~andrewrk@mail.ziglang.org
ifreund, I'm interested to hear your candid take on unused parameters, once you start experiencing it with river and tiger beetle

1626906232
ifreund!~ifreund@user/ifreund
andrewrk: once I have an experience-based opinion on them I'll be sure to let you know :)

