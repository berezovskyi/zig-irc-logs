1620526270
kiedtl
What's the proper way to coerce a string literal to a '*const []u8' when initializing a struct? Just putting the string there `.field = "foo",` leads to the error "pointer type child '[10:0]u8' cannot cast into pointer type child '[]u8'"

1620526358
waleee-cl
@as ?

1620526444
g-w1
uhh, you probably dont want *const []u8

1620526453
g-w1
that is a constant pointer to a mutable slice of u8

1620526459
g-w1
you probably want []const u8 :)

1620526482
g-w1
wait, its a pointer to a constant slice to mutable u8s

1620526483
g-w1
fun!

1620526545
kiedtl
welp, you're right

1620526650
kiedtl
thanks

1620526705
g-w1
np :D

1620535465
antaoiseach
Hello folks, I have worked through the lang ref and ziglearn code (most of them), and am thinking of doing some small toy projects. With this in mind, I have a couple of questions about project layouts.

1620535644
antaoiseach
In ziglearn, I found an example of how to make a project a dependency of another - in the dependency, I didn't find a build.zig, but found a zig.mod file. Is this a supported feature of Zig?

1620535704
antaoiseach
If so, is this the recommended way? In any case, how would the general way of structuring a library and/or a binary project look like? I know about `zig init`. If you guys could point me to a representative example, that'd be great!

1620536148
noam
antaoiseach: the zig.mod file there isn't needed for the dependency

1620536158
noam
That's for use with an unofficial package manager, I believe

1620536164
antaoiseach
noam: aha

1620536173
noam
addPackage in build.zig does everything you need

1620536187
antaoiseach
So zig init-lib along with addPackage in the client project?

1620536192
noam
Yep

1620536209
antaoiseach
noam: Nice! Thank you. I'll try it out.

1620536247
noam
np :)

1620537106
antaoiseach
noam: Hey, that worked rather nicely! :-).. I have a few more questions about that, if you don't mind!

1620537138
noam
Shoot :)

1620537138
antaoiseach
So in addPackage, in the path, we should always point to the root source file for the project, right?

1620537155
noam
I believe so, yeah

1620537184
antaoiseach
Also, `pub` is needed for the symbols to be visible directly from other modules, but `export` is sufficient if I'm going to be linking agains the library (static/dynamic)? Is this correct?

1620537195
noam
Not

1620537196
antaoiseach
other Zig modules*

1620537203
noam
Pub is needed for @import, export is needed for

1620537216
antaoiseach
noam: right, exactly!

1620537218
noam
Or for e.g. declaring it extern in C

1620537235
noam
addPackagePath just causes build.zig to invoke zig with --pkg-begin NAME PATH --pkg-end

1620537238
antaoiseach
That makes sense

1620537249
noam
(and with dependencies)

1620537257
antaoiseach
Ah, so we could actually invoke it from the command line itself, huh?

1620537306
antaoiseach
Cool! However, suppose I generated a dylib/so in a project, and wanted to use that in my client Zig project, then I don't really need the build.zig file?

1620537327
antaoiseach
Or can I link it in build.zig so that I don't build the other project?

1620537364
antaoiseach
I could simply link it and use it like any other native lib (-I. -libfoo), right?

1620537373
noam
Yeah

1620537389
noam
build.zig is never

1620537393
antaoiseach
Aha

1620537394
noam
it just makes life a

1620537399
noam
it's like using makefiles with a C project

1620537405
noam
Could you write out the compilation command yourself? Sure

1620537411
noam
Do you want to? No. No, you don't. :)

1620537434
antaoiseach
hahaha, okay, that makes sense!

1620537448
antaoiseach
Just find the steps a bit quirky, but I think I'll get used to it! :D

1620537468
noam
Yeah, it can take a bit to wrap your head around it :)

1620537471
antaoiseach
(inside the build.zig file that is - it's generated, so that makes life easier for me)

1620537479
antaoiseach
noam: hehe, yeah.

1620537501
antaoiseach
Okay, that makes things so much clearer now. Thank you so much for your help, noam. Appreciate it! :-)

1620537518
noam
No problem :)

1620537522
antaoiseach
cheers!

1620550073
TheLemonMan
can anyone replicate the CI error in #8705? on my system ld manages to correctly bind the symbol, no idea about what's so special about Azure's environment

1620550468
mikdusan
booting up a vm...

1620550757
mikdusan
also do a cat/proc/meminfo - never know how close we are with OOM on ci

1620550846
TheLemonMan


1620550866
TheLemonMan
there's no i386 libc?

1620550892
mikdusan
some distros don't have it

1620550919
mikdusan
and some as optional pkg

1620550940
TheLemonMan
I wonder how it's even running the i386 tests...

1620550979
mikdusan
do i386 tests use system libc? or syscall 32-bit ?

1620551012
TheLemonMan
this is i386-linux-gnu, it's using the system libc in theory

1620551026
TheLemonMan
I'm now afraid it's using the x86_64 libc.so.6

1620551073
mikdusan
hahaha i checked out your master branch. llvm 7!

1620551093
TheLemonMan
hah, I'm a looong time contributor

1620551339
mikdusan
btw this command: `zig build-exe hello.zig -lc -target i386-linux-gnu` produces:

1620551345
mikdusan
hello: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.0.0, with debug_info, not stripped

1620551395
mikdusan
and since I don't have /lib/ld-linux.so.2 on archlinux I can't `ldd hello` or anything

1620551433
mikdusan
running that test

1620551539
TheLemonMan
add LD_DEBUG=all before the test invocation (not the test harness), that'll tell you more about the symbol binding phase

1620551557
mikdusan
I got a failure. hope it's related

1620551734
mikdusan
ugh what's markdown to create a collapsed code block

1620551760
TheLemonMan
<details> iirc

1620551774
mikdusan
thx

1620551965
TheLemonMan
FileNotFound? wat

1620552028
mikdusan
trying to make sense of this thing...

1620552106
TheLemonMan
the FileNotFound errors are brutal, you're forced to strace the compiler to understand

1620552124
mikdusan
we really really gotta do something about this unrelated error crap

1620552215
TheLemonMan
pushed another commit, let's see if installing the right libc fixes the problem

1620552226
mikdusan
sanity check: success with `zig test lib/std/std.zig -lc -target x86_64-linux-gnu`

1620552524
mikdusan
oh wait i think it's this error; here's what happen when I run the test.exe (renamed it to yeehaw):

1620552585
mikdusan
zsh: no such file or directory: lib/std/zig-cache/o/a1017f51bdde1b46a77d9b9ce337bcfe/yeehaw

1620552610
mikdusan
shouldn't builder be shunting this through qemu ?

1620552626
mikdusan
oh never mind.

1620552628
TheLemonMan
i386 is native for x86_64

1620552639
mikdusan
i see. I think this means I am not duplicating the issue

1620554145
mikdusan
ok I see what's happening;

1620554163
mikdusan
the 2 i386 test targets existing before your branch were abi=none and abi=musl

1620554323
mikdusan
when `-target ARCH-linux-musl -lc` is used, it's still a static exe

1620554354
mikdusan
and I think your branch enables this to produce something now where it didn't before: `-target i386-linux-gnu -lc` and it produces a dynamic exe

1620554375
mikdusan
and while we can run a static i386, running a dynamic i386 on x86_64 linux is problematic

1620554521
mikdusan
the reason why I don't get that GLIBC error is because archlinux doesn't even provide /lib/ld-linux.so.2 (the 32-bit ldso)

1620554543
mikdusan
different 64-bit linux distro. different results.

1620554638
mikdusan
... deleting my comment in your PR. it's pure noise to the real issue

1620557300
TheLemonMan
don't you just need to install lib32-glibc to get the whole 32bit package?

1620565143
LewisGaul
Hey all, I've just been having problems getting set up with llvm-12 for building zig master branch, and realised I think it's the same problem I had with llvm-11. I solved it thanks to Andrew's answer on this issue from 2017:

1620565144
LewisGaul
aren't listed on

1620565264
LewisGaul
Wondering if it would make sense for me to add something to the zig wiki (e.g. on a troubleshooting page) since

1620567815
LewisGaul
I added a note on

1620568878
mikdusan
eghads. dragonflybsd poll is broken yaay.

1620569178
mikdusan
do we have an abstracted select/poll/epoll/kqueue event thing for zig std?

1620569269
TheLemonMan
broken?

1620569291
TheLemonMan
there's always select if you don't need that many fds

1620569332
mikdusan
yeah the code you wrote for child_process.collectOutputPosix() exposes it

1620569345
mikdusan
works for linux, openbsd, netbsd, freebsd but not dragonfly.

1620569360
mikdusan
so I reduced it and rewrote it in .c and sure enough same thing

1620569395
mikdusan
here's the reproduction.c: (one sec. pasting)

1620569564
mikdusan


1620569588
mikdusan
on anything but dragonfly, main.c this works cleanly and quickly

1620569656
TheLemonMan
what happens when it's run on dragonfly?

1620569725
mikdusan
gets POLLIN event on one or both stdout/stderr in a loop, and read always returns 0 bytes

1620569763
mikdusan
well read succeeds, but then keeps getting PILLIN anyways afterwards

1620569774
mikdusan
and there is no delivery of POLLHUP

1620569866
mikdusan
udpated gist to show sample outputs

1620569990
mikdusan
dragonfly 5.8.3 and 6.0.0 both manifest; I'm about to try 5.0.0 for shits and giggles

1620570073
TheLemonMan
ah that's extra weird, have you tried asking in their irc channel / ML

1620570079
mikdusan
oh ignore the double "pipes" print. I put that after fork(). duh.

1620570116
mikdusan
not yet. I just got the .c working

1620570215
mikdusan
macos joins the group that main.c works fine

1620570223
mikdusan
and linux too

1620571104
mikdusan
oh 5.0.0 bad too

1620571937
antaoiseach
Hello folks, I was experimenting with hashmaps a bit and wanted to simulate a globally shared static map, and I managed to get it working, but I have some questions (as comments in the code itself). Could someone please have a look, and 1). Have a look at the questions, if they make sense, etc.?, and 2). Give suggestions to better design this idiomatic Zig?

1620571958
antaoiseach
Here is the link to the file (around 50 SLOC)

1620571968
antaoiseach
Thanks!

1620572098
antaoiseach
Also, I don't like the way I have `catch unreachable` inside the map creation - any way to get rid of it? I get compile errors if I remove them - I would indeed want it to fail if the map insert fails for some reason!

1620572331
g-w1
make the function return an error union to remove catch unreachable

1620572405
mikdusan
TheLemonMan: technically I can change the code to respond when `read()` == 0, which indicates file has been closed. that works on dragonfly.

1620572411
mikdusan
but is it right thing to do?

1620572499
antaoiseach
g-w1: Hmmm, I had thought of that, and wondered if I should make the "constructor" return an error union, but yes, that does work indeed.

1620572562
g-w1
its fine to do that

1620572603
antaoiseach
g-w1: Okay, cool! :-) ... yes, I think it makes sense - if the object creation fails, might as well exit immediately. Thank you!

1620572675
g-w1
you might want an errdefer kws.deinit(); after you init it so that if any of the keys fail, you deinit the map to not cause a memory leak

1620572698
TheLemonMan
mikdusan, that's perhaps a good way of detecting the eof condition... but I fear this is more a bug on the kernel's end

1620572726
mikdusan
yeah more I think about it the bug is simply: why isn't kernel sending POLLHUP

1620572751
mikdusan


1620572770
mikdusan
if I subscribe to POLLOUT then it loops a lot more but eventually gets POLLHUP !

1620572778
mikdusan
makes no sense

1620572897
TheLemonMan
try adding a sleep() call in the child process, there may be a race condition between the poll and the close() calls in there

1620572979
mikdusan
I think what I'll do after some precursor commits for crt0 stuff is open a zig issue to track dragonfly issue, and put the workaround for read() == 0 conditional on dragonfly

1620572988
mikdusan
tried the sleep. didn't help

1620573012
mikdusan
... and mark that workaround with reference to zig issue

1620573086
TheLemonMan
we're hitting a lot of bugs in a lot of sw, that's nice

1620573148
mikdusan
ugh. now I have to rebase some general *bsd stuff

1620573167
mikdusan
challenge: get all 4 bsds passing tests

1620573172
mikdusan
before upcoming release

1620573199
mikdusan
(openbsd is done)

1620573206
TheLemonMan
bonus points for each system added to the CI heh

1620573210
mikdusan
pending a PR that I have

1620573225
TheLemonMan
NetBSD was relatively ok last time I checked

1620573254
mikdusan
I forget what was stopping a full pass now but I'll hit it again soon enough

1620573287
mikdusan
it's harder right now. because the VM size I used to be able to get away with 6 GB building zig and ci

1620573303
mikdusan
so having 4 or 5 vms to flip between, compare things, made it a lot easier.

1620573335
mikdusan
now I can max 2 vm if not running a bunch of stuff on my desktop

1620573347
mikdusan
zig stage1 leak go brrrrrrrr

1620573422
TheLemonMan
lucky you, I have to log out and drop to tty to compile stage1

1620573430
mikdusan
that... that.... sucks

1620573436
mikdusan
laptop?

1620573449
TheLemonMan
yeah

1620573478
g-w1
i used to have to do that too :(

1620573481
TheLemonMan
pretty old, 8y and counting, so I'm a bit torn on upgrading it

1620573603
TheLemonMan
and don't get me started on LLVM, every git pull forces a nearly-full rebuild taking ~50m

1620573665
mikdusan
wait. 8y laptop, don't tell me it's a spinning disk?

1620573691
mikdusan
can't build anything without SSD these days

1620573769
TheLemonMan
yessir

1620573826
mikdusan
dragonfly is funny. It has a hammer2 filesystem which by default dedupes. So it is by-far the most compact for space use. I set it up for 40GB and it's around 6.5 GB used. other bsds and linux ~15 GB average

1620573859
mikdusan
dedupe has a slight perf cost though but I think worth it for dev stuff. wouldn't enable dedupe on a production system though.

1620573921
mikdusan
take the plunge. find a 32GB laptop with 1TB SSD. your life will be changed forever.

1620580199
semarie
hum. I am seeing that zig-bootstrap version switched from 0.8.0-dev.1939+5a3ea9bec to 0.8.0-dev.1813+88d40fc00 3 days ago. is it expected that the "number of commits" field decreased ? or do I miss something ?

1620580346
andrewrk
semarie, if I did a re-sync now it would get bumped to 0.8.0-dev.2168+2d1196773. not sure where jakub got that version number from. it's fine though; really only the git tags of that repository are important. I can sync master branch for you upon request

1620580460
andrewrk
TheLemonMan, ZSF will purchase you hardware, just let me know what you want and your address in a private message :)

1620580466
koakuma
TheLemonMan, I just noticed something with the SPARC syscall6 code

1620580467
koakuma
I don't see anything fishy in the IR generated by Zig, so looks like this is another LLVM issue?

1620580467
koakuma
When compiled with -OReleaseSafe, it does a load to %o5 before it starts to move other values to its proper place so the original %o5/arg5 is lost

1620580471
semarie
if the number decrease enough semver test will fail :) -

1620580647
andrewrk
semarie, I'll do a sync now since I want to try jakub's new x86_64-macho improvements too :)

1620584798
TheLemonMan
andrewrk, is a Ferrari considered as hardware? :P

1620584832
TheLemonMan
koakuma, damn, is that happening with the other LLVM patch applied?

1620584880
andrewrk
TheLemonMan, sure, but will have to cap the hardware cost at um let's say 4000 USD. think you can find a used one for that amount? :P

1620584924
TheLemonMan
I can probably buy a rearview mirror or two heh

1620584932
noam
Can you program the mirror in zig?

1620584943
noam
I'm not sure stage1 supports the fermion target yet

1620596003
koakuma
TheLemonMan, D101694? Yeah it happens with it applied too. Correctly generated an ldx, but it places it in the wrong place, ahah

1620596003
koakuma


1620596859
mikdusan
Dell xps 17 w/ 64GB, 2TB, UHD isplay, Windows Pro. $3650. but does it run linux well?

1620602747
noam
... that's like 32x as expensive as my laptop XD

1620602753
mikdusan
TheLemonMan, I did a few quick tests on netbsd; don't have time to address these right now but thought I'd share how far it gets:

1620602761
mikdusan
- netbsd91-amd64:

1620602763
mikdusan
- lib/std/std.zig fails with missing os.SOL_SOCKET stuff

1620602765
mikdusan
- standalone/shared_library fails:

1620602767
mikdusan
¦   - can't find the .so, but using system linker with same args passed to ld.lld works

1620602769
mikdusan
¦   - also `ldd test.exe` errors with `invalid ELF class 2; expected 1`

1620602798
mikdusan
the ELF class thing I'm guessing because netbsd is glacial and uses old everything

