1731331087
vpol!~vpol@178.62.123.80
using discord makes me cry. but i'll try, thanks

1731342519
hadronized!~hadronize@2001:41d0:a:fe76::1
is there an idiomatic way to express tuples as parameters / return types?

1731342548
hadronized!~hadronize@2001:41d0:a:fe76::1
for instance, I’m using ioctl() to get the terminal size, and I don’t want to leak the winsize info, so I’d rather return a tuple (width, height)

1731342770
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
fn winsize() struct { width, height} {…}

1731342810
hadronized!~hadronize@2001:41d0:a:fe76::1
you mean struct { u32, u32 }?

1731342815
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
lol yes

1731342826
hadronized!~hadronize@2001:41d0:a:fe76::1
okay, I was trying with .{ u32, u32 }

1731364825
hadronized!~hadronize@2001:41d0:a:fe76::1
is it idiomatic to turn an allocated []u8 into a []const u8 and free that?

1731366146
clevor!sid649024@id-649024.hampstead.irccloud.com
Should the Zig compiler include a Nix flake?

1731366930
squeek502!~squeek502@user/squeek502
hadronized, yep that's totally fine

1731367007
hadronized!~hadronize@2001:41d0:a:fe76::1
hm, I’m not completely used to the fs API

1731367012
hadronized!~hadronize@2001:41d0:a:fe76::1
I’m used to the PathBuf one of Rust

1731367024
hadronized!~hadronize@2001:41d0:a:fe76::1
which is, I have to admit, pretty easy to work with

1731367043
hadronized!~hadronize@2001:41d0:a:fe76::1
here, given a Dir, I can’t get its path without doing some kind of IO

1731367050
hadronized!~hadronize@2001:41d0:a:fe76::1
so I have to keep in sync a Dir and a []const u8

1731367137
squeek502!~squeek502@user/squeek502
yeah, passing a dir around is the way to go imo

1731367335
andrewrk!~andrewrk@mail.ziglang.org
it's more portable to avoid trying to convert an open dir handle to a string

1731367375
andrewrk!~andrewrk@mail.ziglang.org
there's std.Build.Cache.Path which is an abstraction that I've started using more lately

1731367852
hadronized!~hadronize@2001:41d0:a:fe76::1
andrewrk: I’m not sure to understand; I’m making a small TUI that actually displays those paths and allows to select them; I do need to get the actuall file names / file paths

1731368401
andrewrk!~andrewrk@mail.ziglang.org
why do you need to get the string from a directory file descriptor?

1731368445
hadronized!~hadronize@2001:41d0:a:fe76::1
I’m basically building a file browser; for files in a given directory, it’s pretty trivial, since I get that while iterating

1731368457
hadronized!~hadronize@2001:41d0:a:fe76::1
but for the current dir, I need to glue that value next to the Dir

