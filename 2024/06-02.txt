1717356085
freshcoffee!~fresh@user/freshcoffee
andrewrk: `It's a race condition if you try to close file descriptors between fork() and exec()`

1717356116
freshcoffee!~fresh@user/freshcoffee
if child does close(45) so what? the parent will stil have fd=45 open

1717356331
freshcoffee!~fresh@user/freshcoffee
likewise, after fork, if parent does close(45), child stil has it open

1717356349
andrewrk!~andrewrk@mail.ziglang.org
I don't understand your question. here is an example: https://github.com/ziglang/zig/commit/389181f6be8810b5cd432e236a962229257a5b59

1717356482
lxsameer!~lxsameer@Serene/lxsameer
hey folks, it's kind of a silly question, but does zig provide any type safety and memory safety features?

1717356581
andrewrk!~andrewrk@mail.ziglang.org
lxsameer: https://ziglang.org/documentation/0.12.0/ feel free to ask any questions after you have read this

1717356665
lxsameer!~lxsameer@Serene/lxsameer
thank you

1717356971
freshcoffee!~fresh@user/freshcoffee
andrewrk: ah I see, you mean if we try to mimic CLOEXEC and do the close in child, that parent-fd (without CLOEXEC flag) can be fork'd to another child which most likely won't be aware that fd needs to be closed

1717357333
andrewrk!~andrewrk@mail.ziglang.org
freshcoffee: right

1717358833
bblack!~bblack@wikimedia/bblack-WMF
yeah my general takeaway from running into related things in the past is that really O_CLOEXEC should've been the default, and you should use it everywhere unless you have a specific reason not to.

1717360125
andrewrk!~andrewrk@mail.ziglang.org
I agree, and even if you have a specific reason not to, you should probably still do it, and use dup2()

