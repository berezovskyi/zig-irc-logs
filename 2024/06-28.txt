1719585874
noam!81879d1ffa@2a03:6000:1812:100::dfc
torque: haha :)

1719585878
noam!81879d1ffa@2a03:6000:1812:100::dfc
> a lot of water will have flowed under the bridge before C and C++ will be replaced

1719585881
noam!81879d1ffa@2a03:6000:1812:100::dfc
People still use COBOL :P

1719586517
Nightwulf!~totto@p200300db0f2bae002ef05dfffea2cb51.dip0.t-ipconnect.de
...and for many old systems, people even don't dare to replace them because nobody is still there knowing that crap ;-)

1719586717
ilikeorangutans!~ilikeoran@user/ilikeorangutans
hello friends of zig; writing some zig and i'm stumbling on something that i think should be easy and i would appreciate some pointers (no pun intended): a function decode(buf: []u8) which i'm trying to feed a bunch of bytes in a test: const input: = [_]u8{ 1, 2, ... };. Now if i slice my array and invoke my function: decode(input[0..4])  the

1719586718
ilikeorangutans!~ilikeoran@user/ilikeorangutans
compiler is not happy: expected type '[]u8', found '*const [4]u8'

1719586718
ilikeorangutans!~ilikeoran@user/ilikeorangutans
i feel like i'm missing something fundamental but rereading the docs hasn't helped me much so far. any suggestions what i should look at?

1719586917
Gliptic!~glip@irc.glip.cc
ilikeorangutans: `input` is const

1719586930
Gliptic!~glip@irc.glip.cc
but the parameter takes a non-const slice

1719586962
Gliptic!~glip@irc.glip.cc
you probably want `buf: []const u8`

1719587187
ilikeorangutans!~ilikeoran@user/ilikeorangutans
hmmm; so decode(buf: []const u8) and then pass a slice: decode(input[0..4])? that does work. ok i think my confusion is that i _thought_ function params are const. i guess what's the case here is that only refers to the pointer, right?

1719587200
ilikeorangutans!~ilikeoran@user/ilikeorangutans
btw, thanks so much, Gliptic

1719587211
Gliptic!~glip@irc.glip.cc
the parameter is const, it's not a slice to const data

1719587229
Gliptic!~glip@irc.glip.cc
no problem

1719587412
ilikeorangutans!~ilikeoran@user/ilikeorangutans
now if i wanted to do the reverse, pass in a non-const slice, i.e. []u8. can i do that coming from a statically initialized array? or would i have to create a variable buffer first?

1719587450
Gliptic!~glip@irc.glip.cc
you can do `var input = [_]u8{ 1, 2, ... };` and pass that in

1719587476
Gliptic!~glip@irc.glip.cc
arrays can be mutable

1719587824
ilikeorangutans!~ilikeoran@user/ilikeorangutans
changing between the diffent array and slice types is probably the most confusing thing about zig for a beginner. ¬_¬

