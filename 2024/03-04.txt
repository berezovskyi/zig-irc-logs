1709516013
andrewrk!~andrewrk@mail.ziglang.org
Batzy, what's an example of a graphics lib?

1709516783
andrewrk!~andrewrk@mail.ziglang.org
random tip of the day: zig test --dep foo -Mroot=example.zig -Mfoo=/path/to/fixture

1709516795
andrewrk!~andrewrk@mail.ziglang.org
then you can put `@embedFile("foo")` in example.zig in a unit test

1709516816
andrewrk!~andrewrk@mail.ziglang.org
just to quickly test some code against a file you have handy

1709525798
remiliascarlet!~remiliasc@user/remiliascarlet
Was able to compile Zig for both FreeBSD and OpenBSD, except that with the OpenBSD one I got greeted with a "make[2]: *** [CMakeFiles/stage3.dir/build.make:73: stage3/bin/zig] ã‚¨ãƒ©ãƒ¼ 1", "make[1]: *** [CMakeFiles/Makefile2:196: CMakeFiles/stage3.dir/all] ã‚¨ãƒ©ãƒ¼ 2", and "make: *** [Makefile:136: all] ã‚¨ãƒ©ãƒ¼ 2" after a weekend long compilation.

1709531803
freshcoffee!~fresh@user/freshcoffee
remiliascarlet: try bumping proc's stack: `limit stacksize 32m` and build again

1709533633
remiliascarlet!~remiliasc@user/remiliascarlet
I'll try.

1709537141
remiliascarlet!~remiliasc@user/remiliascarlet
freshcoffee: Got the same errors again, but this time I got additional information: zig build-exe zig ReleaseFast native: this step declares an upper bound of 7000000000 bytes of memory, exceeding the available 4018360320 bytes of memory

1709537169
remiliascarlet!~remiliasc@user/remiliascarlet
Guess I simply can't compile on a system with fewer RAM.

1709539378
mortmann!~mortmann@p57b29ba8.dip0.t-ipconnect.de
where do i report errors in doc (https://ziglang.org/documentation/master)? as regular github issues?

1709539508
remiliascarlet!~remiliasc@user/remiliascarlet
As I already said multiple times before, I don't have a Github account.

1709539540
remiliascarlet!~remiliasc@user/remiliascarlet
Not that hard to understand!

1709540339
mortmann!~mortmann@p57b29ba8.dip0.t-ipconnect.de
im new to this chan. so i report such errors directly to you?

1709541621
torque!~tachyon@user/torque
github issues should be fine, though if they're easy fixes, I'm sure opening a pull request would be more than welcome

1709541737
torque!~tachyon@user/torque
if it's something you're not sure about, discussing it in here first would also be fine, though there's not necessarily always someone around with the expertise to answer

1709545939
Batzy!~quassel@user/batzy
andrewrk: i mean to make a gui for an application. Qt for example works

1709545961
Batzy!~quassel@user/batzy
although I would also be interested in graphics for like animations or something too

1709545978
Batzy!~quassel@user/batzy
i'd like to do a graphical project in zig is all

1709548359
belst!~belst@user/belst
Batzy: You can probably just use any C graphics library and go from there, cimgui, raylib, or if u for example just want to support windows, u can also just use winapis directly

1709548462
ifreund!2940d10f8b@user/ifreund
there are some good imgui bindings for zig around I believe

1709557240
bblack!~bblack@wikimedia/bblack-WMF
hi :) I'm running a "stage3/bin/zig build test-std -Dskip-release -fqemu" (using the static qemu stuff linked from instructions) to test a future pull req for std/os.zig ... while the other arches built and tested ok in "reasonable" time, the riscv64-linux-none and riscv64-linux-musl targets seem to be taking a very long time to compile tests.  Last time I waited ~45 minutes before giving up.  Is it normal 

1709557246
bblack!~bblack@wikimedia/bblack-WMF
that these targets take significantly longer, or known issue, or?

1709559384
bblack!~bblack@wikimedia/bblack-WMF
(from looking at process details, in both cases they're stuck in "LLVM Emit Object" with an open write handle on /.../test.o, churning CPU.

1709559387
bblack!~bblack@wikimedia/bblack-WMF
)

1709559457
bblack!~bblack@wikimedia/bblack-WMF
perf shows them looking like they're running a fairly tight infinite loop somewhere in llvm::MCExpr::findAssociatedFragment().  guess maybe some bug with my llvm for riscv64 (debian trixie latest).

1709559691
bblack!~bblack@wikimedia/bblack-WMF
ah, probably roughly the same issue as: https://github.com/ziglang/zig/issues/18872

1709562572
jacobly0!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
bblack: yeah llvm has some naughty O(n^2) code for some targets, so we will probably end up having to drop them to a lower tier and remove them from testing

1709581379
cancername!~cancernam@user/cancername
Is `std.builtin.AtomicOrder.Unordered' equivalent to C++ `std::memory_order::relaxed'?

1709583401
bblack!~bblack@wikimedia/bblack-WMF
cancername: my assumption/guess (I'm no authority) is that Zig is following LLVM's definitions, where Monotonic is the equivalent of relaxed, and Unordered is even weaker.

1709583412
bblack!~bblack@wikimedia/bblack-WMF
https://llvm.org/docs/Atomics.html

1709583428
bblack!~bblack@wikimedia/bblack-WMF
cancerna`: ^

1709583553
cancername!~cancernam@user/cancername
Thanks, bblack! It didn't occur to me that LLVM had docs on this ðŸ˜…

1709583568
bblack!~bblack@wikimedia/bblack-WMF
np!

1709592807
andrewrk!~andrewrk@mail.ziglang.org
in about 15 minutes I'm going to do some live coding on an autodocs reboot: https://www.twitch.tv/andrewrok/

1709596065
Batzy!~quassel@user/batzy
I've also seen stuff where people pass the GUI off to html5, but im not really sure i want to do that

1709596429
mips64el!~mips64el@45.134.213.205
hi :)

