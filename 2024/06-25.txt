1719323764
gpanders!5ac6a0797e@user/gpanders
am I able to access metadata from build.zig.zon from build.zig? Specifically I want to get the version field. Looks like importing .zon files isn't supported yet (https://github.com/ziglang/zig/issues/14531), so is this information exposed somewhere else?

1719325357
ifreund!2940d10f8b@user/ifreund
gpanders: unfortunately not, we have to wait until @import("build.zig.zon") works

1719325488
Earnestly!~earnest@user/earnestly
ifreund: Would it be difficult to parse it directly?

1719325676
ifreund!2940d10f8b@user/ifreund
it would be pretty hacky and not worth your time imo

1719325696
ifreund!2940d10f8b@user/ifreund
the proper implementation doesn't seem too far away: https://github.com/ziglang/zig/pull/20271

1719325868
gpanders!5ac6a0797e@user/gpanders
ifreund: thanks, will just set it manually in build.zig for now then

1719328795
Earnestly!~earnest@user/earnestly
ifreund: Hm, I was angling more towards asking whether zig can parse .zon using some library as it could json

1719328824
Earnestly!~earnest@user/earnestly
standard library*

1719328966
ifreund!2940d10f8b@user/ifreund
Earnestly: the PR i linked adds zon parsing to the standard library as well

1719329004
ifreund!2940d10f8b@user/ifreund
it's currently parsed in a kinda ad-hoc way using the same parser as for normal zig code plus some special casing

1719329013
ifreund!2940d10f8b@user/ifreund
which is all internal to the package mananger

1719329014
Earnestly!~earnest@user/earnestly
Oh thanks, I somehow was literally blind to that link. It sort of blended in

1719333826
rockorager!2bbd732aa1@irc.pico.sh
I assume that this is a bug: https://zigbin.io/

1719333837
rockorager!2bbd732aa1@irc.pico.sh
lol woops...https://zigbin.io/bafd56

1719333852
rockorager!2bbd732aa1@irc.pico.sh
truncate = false should result in appending to the file, right?

1719333909
rockorager!2bbd732aa1@irc.pico.sh
It doesn't seem that truncate = false is setting O.APPEND

1719334424
Gliptic!~glip@irc.glip.cc
no, it just means it won't truncate it

1719334466
rockorager!2bbd732aa1@irc.pico.sh
Yeah I was just reading that...seems I have to go a bit lower to open in APPEND mode

1719334567
Gliptic!~glip@irc.glip.cc
(actually seems like truncate is ignored right now)

1719354457
gcarlos8!~gcarlos@37.218.246.133
Hi guys, I'm developing a kind of TCP proxy. It basically listen to a port and when something connect it create a connection to another host and then forward everything from either side to another. The problem I'm facing is: when one of the hosts closes the connection, the another one will remain open, but I want it to be closed too. Each

1719354457
gcarlos8!~gcarlos@37.218.246.133
connection "forwarder" is running on separate threads and I tried to maintain a shared bool to track connection status (protected with a mutex of course) but beside I can check it on the forwarder loop, it didn't solve the problem, cause the forwarder may be blocked trying to perform a read on the stream (it read from a stream and write on the

1719354457
gcarlos8!~gcarlos@37.218.246.133
another). Does anyone have an idea of how could do what I wanna?

1719354634
gcarlos8!~gcarlos@37.218.246.133
also closing the steam manually didn't work too, it seems that the forwarder will keep blocked trying to read it anyway

1719355175
rockorager!2bbd732aa1@irc.pico.sh
gcarlos8: can you write to the port to kick it out of it's read loop?

1719356482
gcarlos8!~gcarlos@37.218.246.133
rockorager: humm, not at all, cause it's an tcp stream so the only way I could write on it would be if the connected host do it

