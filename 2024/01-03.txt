1704286752
motiejus!~motiejus@88.223.107.21
andrewrk: thanks for 6b2709616e22e7651f16293034cc0d25f0e9be0a (AccessDenied mitigation). It has been quite annoying to MacOS users. Before I update zig from 0.11 to nightly in hermetic_cc_toolchain, may I kindly ask to bump #17702 in your priority queue?

1704287445
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
fyi that mitigation is only for windows

1704288711
motiejus!~motiejus@88.223.107.21
we see nontrivial number of AccessDenied on MacOS when running `zig build-exe` with an empty zig cache dir

1704288729
motiejus!~motiejus@88.223.107.21
(very hard to reproduce, enough daily anecdotes at scale)

1704288826
motiejus!~motiejus@88.223.107.21
maybe not daily. a couple reports a month perhaps, across a few thousand devs

1704288894
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
Well, for better or worse, if it's related to `builtin.zig` like the windows one, it will happen much more often on master and be easier to diagnose.

1704288996
motiejus!~motiejus@88.223.107.21
compared to 0.11?

1704289092
motiejus!~motiejus@88.223.107.21
datapoint: anecdotes spike with macos upgrades

1704289183
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
As compared with yesterday, so yes.

1704289301
motiejus!~motiejus@88.223.107.21
i am looking at the commit and can't understand why it would happen more often. can you help me understand?

1704289415
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
Sorry, I mean the PR it was part of increased the amount of caching, which forced us to make that fix.

1704289436
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
Well, number of cache hits I mean

1704290463
motiejus!~motiejus@88.223.107.21
ah, ok.i thought recurrences. :) thanks.

1704303749
andrewrk!~andrewrk@mail.ziglang.org
motiejus, yes, #17702 is at the top of my priority queue

1704303758
andrewrk!~andrewrk@mail.ziglang.org
as well as the universal headers update

1704303820
andrewrk!~andrewrk@mail.ziglang.org
motiejus, what jacobly is referring to is that now the builtin.zig file is always cached globally and uses a file path based on its contents hash

1704303836
andrewrk!~andrewrk@mail.ziglang.org
so the inter-process file system code has to be more spot on

1704305607
motiejus!~motiejus@88.223.107.21
excellent.

1704320160
motiejus!~motiejus@88.223.107.21
arghhh the complaints/anecdotes I've been getting are for `FileNotFound`, not `AccessDenied`.

1704320166
motiejus!~motiejus@88.223.107.21
Just got pinged by someone in sourcegraph, turns out they use zig and bazel to build their main product

1704320875
andrewrk!~andrewrk@mail.ziglang.org
wow

1704321370
motiejus!~motiejus@88.223.107.21
andrewrk: is a report acceptable for FileNotFound if it can be reproduced easily enough, but on a huge system (sourcegraph itself), which has bazel, go, rust in the mix? I refrained until now, because all code that I could reproduce it on was proprietary, and I was never able to make a smaller repro case.

1704321407
andrewrk!~andrewrk@mail.ziglang.org
sure, let's get the issue started and then we can try to narrow it down

1704321599
motiejus!~motiejus@88.223.107.21
Great! As soon as CI builds a new-ish commit (the current one does not include your latest merge with caching changes), I'll ask them of they can file one to zig.

