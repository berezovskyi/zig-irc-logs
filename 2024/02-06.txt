1707205551
remiliascarlet!~remiliasc@user/remiliascarlet
Is .addStaticLibrary the static linking version of .linkSystemLibrary?

1707207717
ii8!~ii8@45.63.97.131
remiliascarlet: No, it's the static linking version of .addSharedLibrary

1707207920
remiliascarlet!~remiliasc@user/remiliascarlet
Oh.

1707207991
remiliascarlet!~remiliasc@user/remiliascarlet
As an experiment, I tried to see if translate-c could help reduce the amount of libraries being dynamic linked, but turned out it only added more libraries it's dynamically linking to.

1707210534
ii8!~ii8@45.63.97.131
remiliascarlet: linkSystemLibrary has an option .preferred_link_mode that you can set to Static

1707210552
ii8!~ii8@45.63.97.131
it'll only work if a static version of the library is installed on your system

1707210727
remiliascarlet!~remiliasc@user/remiliascarlet
I have static versions installed for both SDL2 and GLUT on both Linux and OpenBSD. On Linux I had to explicitely compile them, but OpenBSD seems to install them by default.

1707210765
remiliascarlet!~remiliasc@user/remiliascarlet
By default if you install the packages, not the OS.

1707210917
remiliascarlet!~remiliasc@user/remiliascarlet
Although OpenBSD includes all the OpenGL (libGL, libGLES*, libGLU, and libGLw) libraries and headers out of the box, both static and dynamic ones.

1707217627
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
How do I add header directories to zig build on the cli? "Unrecognized argument: -I"

1707217640
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
I have non-standard locations for some libraries and their include dirs

1707217687
remiliascarlet!~remiliasc@user/remiliascarlet
Same as with C compilers. -I/usr/include

1707217716
remiliascarlet!~remiliasc@user/remiliascarlet
Notice there's no space inbetween.

1707217822
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
tried it, no bueno

1707217836
remiliascarlet!~remiliasc@user/remiliascarlet
What is the full command?

1707217858
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
zig build -Ic:\path\to\include

1707217867
remiliascarlet!~remiliasc@user/remiliascarlet
build-exe

1707217931
remiliascarlet!~remiliasc@user/remiliascarlet
`zig build` will make use of build.zig, `zig build-exe` will compile directly, although you will need to add all the source files.

1707217940
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
I have a build.zig

1707217943
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
that I want to use

1707217963
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
I just need to add an additional include dir that's non-system

1707217967
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
and not in project

1707217967
remiliascarlet!~remiliasc@user/remiliascarlet
Ah, in that case: `exe.addIncludePath(.{ .path = "/usr/include" });`

1707217988
remiliascarlet!~remiliasc@user/remiliascarlet
Change the path to whatever it needs to be.

1707218003
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
what if someone has that lib in system?

1707218022
remiliascarlet!~remiliasc@user/remiliascarlet
exe.addLibraryPath(.{ .path = "/usr/lib" });

1707218046
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
no, I mean, on *my* machine it's in a non-standard location, on *others* machine it's standard lib

1707218049
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
e.g. glfw

1707218066
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
without modifying build.zig

1707218122
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
so, I have glfw installed in c:/users/username/scoop/apps/glfw, someone else might have it in /usr/include on linux

1707218180
remiliascarlet!~remiliasc@user/remiliascarlet
On Linux and most of the non-BSD Unix systems, it's most likely stored in /usr/lib and /usr/include. On FreeBSD and some (of the lower quality) Linux distro's it's always stored in /usr/local/lib and /usr/local/include. On OpenBSD it's in /usr/X11R6/include and /usr/X11R6/lib. I have no idea about Windows or Mac.

1707218185
ifreund!2940d10f8b@user/ifreund
fengshaun: --search-prefix

1707218198
ifreund!2940d10f8b@user/ifreund
see zig build --help

1707218242
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
I tried it and it's not finding it, addIncludePath works for now, I'll figure out why it doesn't work

1707218248
remiliascarlet!~remiliasc@user/remiliascarlet
Also, you can add multiple addIncludePaths and addLibraryPaths.

1707218306
remiliascarlet!~remiliasc@user/remiliascarlet
I've put /usr/{include,lib} and /usr/X11R6/{include,lib} in the same build.zig file, and it compiles just fine on both Linux and OpenBSD.

1707218356
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
nope, --search-prefix c:/path/to/include doesn't find it

1707218357
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
weird

1707218410
dutchie!~dutchie@user/dutchie
i think you'd want to strip the last /include off. the --help for it suggests that it'll also look there for libs and things so presumably it wants a higher-level path

1707218449
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
dutchie, oh!

1707218451
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
doh

1707218457
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
maybe I shouldn't be doing this at 4am

1707218460
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
thanks a lot! ^_^

1707218521
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
I'm guessing `--search-prefix` would look for `bin` `lib` and `include` then

1707218821
dutchie!~dutchie@user/dutchie
yep: https://github.com/ziglang/zig/blob/master/lib/std/Build.zig#L1644-L1647 / https://github.com/ziglang/zig/blob/master/lib/std/Build/Step/Compile.zig#L1532-L1546

1707219141
fengshaun!~fengshaun@d75-155-79-139.abhsia.telus.net
perfect, thanks!

1707243265
bubuche87!bubuche87@gateway/vpn/protonvpn/bubuche87
Hello.

1707243354
bubuche87!bubuche87@gateway/vpn/protonvpn/bubuche87
I know there is no such thing as a type hierarchy in C (even if one can emulate that by putting the parent struct as the first field of the child struct). Is there something like that in Zig ?

1707243605
ifreund!2940d10f8b@user/ifreund
bubuche87: are you talking about inheritance?

1707243644
ifreund!2940d10f8b@user/ifreund
no, Zig does not have inheritance as a language feature

1707243779
bubuche87!bubuche87@gateway/vpn/protonvpn/bubuche87
Inheritance in the sense that a child class would have all the attribute of the parent class and a pointer to a child class could be converted automatically to a pointer to a parent class. But no methods or anything like that.

1707243856
bubuche87!bubuche87@gateway/vpn/protonvpn/bubuche87
(I know zig isn't OOP. But inheritance (especially only of data) is not specific to OOP and appears in some functional programming language also afaik)

1707247627
helene!~helene@user/helene
i'm noticing that @log2 doesn't accept comptime_int (even if they're powers of two), is there an alternative for comptime_int -> comptime_int?

1707247783
helene!~helene@user/helene
ah, noticing the stdlib has that case handled; should solve my problem :)

1707249932
Earnestly!~earnest@user/earnestly
bubuche87: They tend to prefer composition

1707249951
Earnestly!~earnest@user/earnestly
(But you are right that it's not unique to oop (such that it has a tangible definition at all))

1707250049
voroskoi!924a802ee9@2a03:6000:1812:100::15c
can You point me to a minimal example build.zig where one module depends on an other so you can @import it?

1707250132
voroskoi!924a802ee9@2a03:6000:1812:100::15c
the new structure is even more confusing for me, no idea where is the connection between a Module and a Step.Compile

1707250337
ifreund!2940d10f8b@user/ifreund
voroskoi: you might be looking for Compile.root_module.addImport()

1707250501
voroskoi!924a802ee9@2a03:6000:1812:100::15c
ifreund: Yeah, I was. It took me 2 hours to not find it :-(

1707252525
Trel!~Trel@159.223.223.182
Someone suggested I look at using 'zig cc' for something.  When I compiled it with just CC="/usr/bin/zig cc", everything worked fine, but when I tried to use a target I get this

1707252527
Trel!~Trel@159.223.223.182
Checking for suitable working C compiler ... /usr/bin/zig cc -target x86_64-linux-gnu.2.34 does not work

1707252533
Trel!~Trel@159.223.223.182
on the configure step

1707252547
Trel!~Trel@159.223.223.182
Is there something additional I need to do prior to that working?

1707252674
Amun-Ra!~amun-ra@retro.rocks
I have shell script zigcc: "#!/bin/sh\nzig cc $@\n"

1707253090
Earnestly!~earnest@user/earnestly
"$@"

1707255785
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
hi. Is it possible to debug a zig program with gdb ? 

1707256216
helene!~helene@user/helene
yes

1707256335
helene!~helene@user/helene
haven't encountered any difficulties doing so

1707256416
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
is there any option of flag I have to pass to zig build?

1707256442
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
nicos: zig build --help

1707256464
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
when I try to set a breakpoint it doesnot find the names

1707256477
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
ah

1707256507
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
The names of your locals because they're optimized out, or the names of the functions because they're hidden in a namespace?

1707256549
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
the function's names such as main

1707256583
helene!~helene@user/helene
which optimization level are you building with?

1707256622
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
I am not passing any option just zig build

1707256656
helene!~helene@user/helene
you can run `info func` in your gdb shell

1707256674
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
I dont find any mention to debug levels in zig build --helo

1707256676
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
p

1707256699
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
To break in main, `b main.main`

1707256771
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
I think the default optimization level is usually debug, but `-Doptimize=Debug` gets you there if it's not.

1707256786
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
main.main worked

1707256797
nicos!~nsm@2800:2131:5400:883:1487:279d:8407:5193
ok, thanks

1707257257
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
So I'm hacking away at a project, and it's taking 20 ms to iterate over an array of around 1,000 items. Normal lookup stuff, all O(1). Callgrind says it's spending all its time in memcpy. I change the `get` method to return a `*const Thing` and it slows down to 40 ms. Then I turn on ReleaseSafe and now it's 0 ms. But of course, now I have an alignment error in my HashMap. I guess this is what I get for running master.

1707257373
jacobly0!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
that usually means that the memory storing the hash map was corrupted or not initialized

1707257594
leeward!~Ashes@2001:1c00:b1e:2b00:25d1:f85b:1387:faf6
It works fine in Debug, which is unnerving.

