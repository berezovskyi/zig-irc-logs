1715138691
R2COM!~r2com@ip98-177-189-79.ph.ph.cox.net
video with Zig = cool, but ..primagean? really? lol

1715153563
Amun-Ra!~amun-ra@retro.rocks
I like him

1715153588
Amun-Ra!~amun-ra@retro.rocks
plus, he can really boost popularity

1715164457
j`ey!~joey@user/jey/x-2681904
does zig ignore unused values or something? confused why: var a: void = 1; , compiles

1715164731
j`ey!~joey@user/jey/x-2681904
I added a function and tried to return a, and it complained, so yes I guess it does

1715197339
andrewrk!~andrewrk@mail.ziglang.org
j`ey: you probably didn't call the function so it wasn't being type checked

1715197419
j`ey!~joey@user/jey/x-2681904
it was a global, so I was expecting it to be type checked, but it wasnt used

1715197657
andrewrk!~andrewrk@mail.ziglang.org
zig is designed so that the type of something could be decided at compile-time and likewise whether to call something can be decided at compile-time. it's more flexible to only analyze those things that are referenced

1715199543
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
ACTION still didn't understand what the big advantage of comptime is

1715199680
j`ey!~joey@user/jey/x-2681904
meta programming

1715199822
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
is that some sort of alternative to code generation through C's preprocessor?

1715199849
j`ey!~joey@user/jey/x-2681904
yeah

1715199861
andrewrk!~andrewrk@mail.ziglang.org
if you want to write software that targets more than one platform, you need conditional compilation to make it work for the different operating systems

1715199878
andrewrk!~andrewrk@mail.ziglang.org
that is universally true in all programming languages

1715199906
andrewrk!~andrewrk@mail.ziglang.org
you could either push that logic backwards into the build system, or forwards into the language

1715199920
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
or you write more code ;p

1715199933
andrewrk!~andrewrk@mail.ziglang.org
?

1715199953
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
andrewrk, write a version for x86, one for arm64, one for windows...

1715199976
andrewrk!~andrewrk@mail.ziglang.org
I just said that. "push the logic backwards into the build system"

1715200017
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
ah, you meant conditionally compiling different versions. K, ack

1715200072
andrewrk!~andrewrk@mail.ziglang.org
pushing it forwards into the language is a form of semantic compression (https://caseymuratori.com/blog_0015)

1715200142
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
> We all know how to program in C++, donâ€™t we?

1715200161
jemius!~imperator@2001:9e8:32d2:bc00:1552:ffaa:3786:7861
ahm... "we all know how to juggle running chain saws, don't we?"

1715200196
j`ey!~joey@user/jey/x-2681904
jemius: also debug/release modes

1715200226
j`ey!~joey@user/jey/x-2681904
or other optional features

1715201689
jrl!~jrl@46.23.89.141
I have recently upgraded from 0.11.0 to 0.12.0 and having an issue with my build.zig. I'm attempting to build as wasm freestanding with addSharedLibrary. My target is  .target = b.resolveTargetQuery(.{ .cpu_arch = .wasm32, .os_tag = .freestanding }) but I am getting an error `error: dynamic linking unavailable on the specified target`. I see in the docs -dynamic is removed and -fno-entry is needed.

1715201691
jrl!~jrl@46.23.89.141
I'm not initially adding the dynamic flag and unsure how to update the build to remove it.

1715202206
Gliptic!~glip@irc.glip.cc
jrl: I've only built wasm with addExecutable in 0.12.0

1715202402
andrewrk!~andrewrk@mail.ziglang.org
jrl: I'm using addExecutable in my wasm project as well

1715202884
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
oh nice, zig has community on IRC

1715202942
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I have been using Odin for the past two weeks and am interested in zig because it looks similar and I hear the build tools are really nice

1715202960
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
like I can use zig as build tool for my C projects?

1715202975
rockorager!2bbd732aa1@irc.pico.sh
m257: yes you can

1715203005
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
What advantages does Zig have over Odin? They look similar enough despite Odin's Pascal like syntax

1715203069
andrewrk!~andrewrk@mail.ziglang.org
debating the merits of different languages isn't really on topic here, but I'm happy to provide assistance using zig

1715203093
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I once spent 8 hours trying to figure out how to port my opengl program to windows and so I am very interested in a better build system.

1715203147
andrewrk!~andrewrk@mail.ziglang.org
https://ziglang.org/learn/build-system/

1715203149
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I am curious, how do dependencies work with zig as C build system? Do I provide the path to a shared object / dll in the build.zig?

1715203159
andrewrk!~andrewrk@mail.ziglang.org
there are a lot of real world example projects to look at

1715203211
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
ok thanks, I will go through the docs

1715203249
andrewrk!~andrewrk@mail.ziglang.org
typically you find the library already ported to zig build, or you package it yourself, then you can depend on that package. the end result is a static executable that you can cross compile for any target

1715203388
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
Is there any sort of preference for spaces over tabs as a standard in zig? zls seems to keep changing my tabs to spaces after I save the file. I think its trying to auto indent everything.

1715203412
rockorager!2bbd732aa1@irc.pico.sh
m257: zls uses `zig fmt` which is 4 spaces

1715203421
rockorager!2bbd732aa1@irc.pico.sh
which is the standard

1715203445
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
oh ok, I will use spaces instead. I am used to tabs but it doesn't matter since I use 4 space tabs anyways.

1715203460
rockorager!2bbd732aa1@irc.pico.sh
andrewrk: have you heard of anyone trying to build xapian with zig? I don't know enough C++ to port the build myself and my googling has come up with nothing

1715203536
andrewrk!~andrewrk@mail.ziglang.org
never heard of xapian

1715203604
rockorager!2bbd732aa1@irc.pico.sh
There's my answer then :). It's a search engine library

1715203632
rockorager!2bbd732aa1@irc.pico.sh
They foolishly don't provide C headers

1715203705
andrewrk!~andrewrk@mail.ziglang.org
it's such a bummer to have libc++ in your dependency tree. I recently eradicated that in my music player side project by porting libchromaprint to zig. it's now 10% faster, uses an order of magnitude less memory, and is 600 lines of zig instead of 6,000 lines of c++

1715203726
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
Following along with the build system docs, I get this error: https://paste.mozilla.org/1pK2y0Kg

1715203735
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
Any idea what this means?

1715203763
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I ran "zig build --summary all"

1715203764
andrewrk!~andrewrk@mail.ziglang.org
the website is using zig 0.12.0. perhaps you are using an older version

1715203789
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I am on 0.11

1715203807
andrewrk!~andrewrk@mail.ziglang.org
there's not really a valid reason to be on 0.11

1715203816
rockorager!2bbd732aa1@irc.pico.sh
andrewrk: yeah, I've considered a zig-xapian type clone. It's a language stemmer (which has a complete C implementation) and a KV store. The icing is their query language but that's easily reproduced

1715203828
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
its been awhile since I last ran "pacman -Syu"

1715203835
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
let me update it and try again

1715203870
andrewrk!~andrewrk@mail.ziglang.org
the upstream-provided tarballs are trivial to download and run

1715203893
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
it worked now, thanks

1715203961
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
oh the zig compiler is written in zig already?

1715203979
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
dang thats very nice for a language that hasn't even reached 1.0 yet

1715204002
rockorager!2bbd732aa1@irc.pico.sh
It's been a thorn in my side how `notmuch` does some things, and the way I would want to change it is all breaking changes that I wouldn't expect the project to take on. So I'd love to build a new email indexing lib with the learnings of notmuch

1715204019
rockorager!2bbd732aa1@irc.pico.sh
(notmuch is built on xapian)

1715204056
tusf!cb6c78d75e@user/TUSF
m257: means your community can more easily contribute, speeding up development (and  probably speeding up breaking changes lol)

1715204076
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
tusf: yeah I think its very cool

1715204256
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
also having an official IRC gathering place is nice to have as someone who dislikes discord

1715204978
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
wait it can auto generate documentation based on my build.zig? very cool.

1715205890
andrewrk!~andrewrk@mail.ziglang.org
yeah there are some ergonomics needed to make that truly shine but you can see an example of it in action with the standard library documentation (https://ziglang.org/documentation/master/std/)

1715206009
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
wait it can also generate html docs?

1715206031
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I was just talking about the help it gives when you run `zig build --help`

1715206054
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
but that is even cooler

1715206054
andrewrk!~andrewrk@mail.ziglang.org
it's more like an interactive, searchable documentation application

1715206086
andrewrk!~andrewrk@mail.ziglang.org
some people don't like it but I personally use the search feature all the time

1715206107
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
why would people be against search?

1715206120
andrewrk!~andrewrk@mail.ziglang.org
well they want it to be optimized for google search

1715206133
andrewrk!~andrewrk@mail.ziglang.org
but personally the less time I spend on google.com, the better my day is

1715206144
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
agreed

1715206156
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
google frustrates me

1715206168
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I can never find what I am looking for

1715206195
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
well technically I use duckduckgo.com nowadays but its all the same

1715206227
andrewrk!~andrewrk@mail.ziglang.org
same

1715206426
tusf!cb6c78d75e@user/TUSF
didn't it use to generate the documentation as json, or something? or does it still do that?

1715207317
erock!8a023a9e4a@pico/erock
kagi search has been working great for me, i'm completely off google services as a result

1715207350
erock!8a023a9e4a@pico/erock
has there been any work on a zig ssh library?  something similar to golang's ssh impl?

1715207383
erock!8a023a9e4a@pico/erock
eg: https://pkg.go.dev/golang.org/x/crypto/ssh

1715207389
m257!~maaz@bras-base-hspron0502w-grc-15-174-92-92-146.dsl.bell.ca
I want to use kagi but I am kind of poor. I am sometimes using marginalia.nu as pseudo replacement for it

1715207725
andrewrk!~andrewrk@mail.ziglang.org
tusf: now, instead of preprocessing docs into json format, it ships a tarball of unmodified source code, and a wasm module generates the docs on the fly based on the source files, and bits of the zig compiler compiled to wasm

1715207818
tusf!cb6c78d75e@user/TUSF
Gotcha. I figured if it output as json or something, people could just make their own frontend for their docs, if they happen to not like the default.

1715207909
rockorager!2bbd732aa1@irc.pico.sh
Just hit my first stdlib blocker...https://github.com/ziglang/zig/issues/19521

1715207932
rockorager!2bbd732aa1@irc.pico.sh
The TLS client can't connect to irc.libera.chat because of this

1715208024
andrewrk!~andrewrk@mail.ziglang.org
tusf: well, they can still do that, using exactly the same strategy the wasm module uses to generate documentation

1715208225
andrewrk!~andrewrk@mail.ziglang.org
is json easier to digest than source code AST? perhaps. perhaps not.

1715210331
mischief!~mischief@2601:646:100:23:2efd:a1ff:feba:38aa
erock: implementing the most basic bits should not be too hard

1715210424
mischief!~mischief@2601:646:100:23:2efd:a1ff:feba:38aa
it's done in a few hundred loc in c here https://github.com/9front/9front/blob/front/sys/src/cmd/ssh.c

1715210548
erock!8a023a9e4a@pico/erock
mischief: thanks!

