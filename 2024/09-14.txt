1726273205
RussianNewbie69!~RussianNe@user/RussianNewbie69
Sup. Sorry for not being able to provide the code atm, but I have a question. If there are more appropriate places for general questions, feel free to say so. I have a simple project with a wrapper dependency that requires 3rd-party C headers (raylib). For some reason zig fails to build the project, although the path to said headers is present

1726273206
RussianNewbie69!~RussianNe@user/RussianNewbie69
among arguments of the resulting build-exe command. When I put the `-I /path/to/.zig-cache/o/hash` part of the command at the end manually, it then builds successfully.

1726273206
RussianNewbie69!~RussianNe@user/RussianNewbie69
Can somebody point me in the right direction? I want to understand these two:

1726273207
RussianNewbie69!~RussianNe@user/RussianNewbie69
- how to solve the initial issue (what could lead to incorrect order of arguments for resulting build-exe command)

1726273207
RussianNewbie69!~RussianNe@user/RussianNewbie69
- and where I can read about the importance of said order of arguments generally

1726273208
RussianNewbie69!~RussianNe@user/RussianNewbie69
The resulting command itself looks like so (fails due to `-I ...` part not being put in the right place relative to other arguments):

1726273208
RussianNewbie69!~RussianNe@user/RussianNewbie69
```

1726273209
RussianNewbie69!~RussianNe@user/RussianNewbie69
```

1726320857
rootkill!~rootkill@2406:b400:b4:ed1c:720e:b4fd:325e:253b
Hello is there a zigonomicon out there yet??

1726322202
phaleth!~phaleth@user/phaleth
hello, there isn't a zigonomicon, there is not even a zig book, those are specific to rust I guess, but there are guides about zig being written in a few places

1726322229
phaleth!~phaleth@user/phaleth
for instance https://zig.guide/working-with-c/abi, not sure what are you looking for

1726322887
rootkill!~rootkill@2406:b400:b4:ed1c:720e:b4fd:325e:253b
@phaleth: Thanks just wanted to know if the stuff existed, want to understand zig better.

1726323361
phaleth!~phaleth@user/phaleth
no problem, but yeah, guides exist, most of them are pretty basic

1726323589
phaleth!~phaleth@user/phaleth
have a look into these https://codeberg.org/dude_the_builder/zig_in_depth https://codeberg.org/dude_the_builder/zig_master

1726324345
jemius!~imperator@2001:16b8:3d50:1400:d474:e7dd:7eb7:667e
Recently I was told that the async is not a priority currently. What are the current priorities?

1726324683
phaleth!~phaleth@user/phaleth
jemius: I guess it's still a priority but here's one other priority https://github.com/ziglang/zig/issues/21165

1726327336
jemius!~imperator@2001:16b8:3d50:1400:d474:e7dd:7eb7:667e
btw: was definitely a good idea to give Zig a unique name. Searching through my package managers is adventorous with names like Go

1726327414
Franciman!~Franciman@mx1.fracta.dev
jemius: did you utry golang?

1726327490
jemius!~imperator@2001:16b8:3d50:1400:d474:e7dd:7eb7:667e
Franciman, ah, I get along. Still, it's a nice convenience :)

1726327637
Franciman!~Franciman@mx1.fracta.dev
ACTION nods

1726331235
cryptocode!~zy@user/zy
I have a build file where I'm creating a wasm blob, using addExecutable with .entry = .disabled; It complains about a missing symbol. Adding export fn __main_void() i32 { return 0;} fixed the compile error. Someone else encountered this, but I haven't found any docs/issues. Zig 0.13 on macOS. Anyone know if this is a regression of sorts?

1726342177
dy!sid3438@user/dy
Working on the perf site, but the (free) box I have idle for this is an OCI Ampere, so I can’t currently build any Zig. Working on the frontend (with fake data) until #20038 which seems to be related to #20511 resolves.

1726342240
dy!sid3438@user/dy
Don’t have to use it as an actual perf testing box in the long run anyhow, but it would be nice to have Zig working where I’m hosting a Zig perf regression tracker haha

1726351828
tiuna!~tiuna@user/tiuna
hi everyone, I am struggling to find info on this, and i didn't want to open an issue on github.. Basically I would like to use the zig build system to compile a wasm module which exports some functions to be imported in a js script. Is it possible? If yes, how are you supposed to do this using std.Build? ( for context I managed to do it via the

1726351829
tiuna!~tiuna@user/tiuna
build-exe CLI, but not through the build system)

1726354170
andrewrk!~andrewrk@mail.ziglang.org
tiuna, there are examples for you to look at. here's one: https://codeberg.org/andrewrk/player/src/branch/main/build.zig

