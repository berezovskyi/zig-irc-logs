1716948449
smlavine!~smlavine@sourcehut/user/smlavine
Hello -- is there an easy way to turn a std.fs.File into a *c.FILE for C interop?

1716948579
smlavine!~smlavine@sourcehut/user/smlavine
I can see a way to sortof do it is to read all the data into a buffer and then call c.fmemopen

1716950298
freshcoffee!~fresh@user/freshcoffee
I suppose you need fdopen which isn't present in std.c currently. You can decl it yourself and see how it works out

1716950364
freshcoffee!~fresh@user/freshcoffee
something like `pub extern "c" fn fopen(fd: c.fd_t, noalias modes: [*:0]const u8) ?*FILE);`

1716950371
freshcoffee!~fresh@user/freshcoffee
oops I mean fdopen()

1716951703
smlavine!~smlavine@sourcehut/user/smlavine
Huh, the solution I'm shocked I didn't think of yet is just calling c.fopen directly with my filename

1716951708
smlavine!~smlavine@sourcehut/user/smlavine
*facepalm*

1716958259
daurnimator!~daurnimat@vultr.daurnimator.com
smlavine: `fdopen` takes a file descriptor

1716998658
andrewrk!~andrewrk@mail.ziglang.org
somebody deleted the "contributing" page from the wiki and it went unnoticed for 2 days

1716998754
freshcoffee!~fresh@user/freshcoffee
and more - see Community.md

1716999098
freshcoffee!~fresh@user/freshcoffee
or maybe not. I just assumed because that commit has a similar email "number+name" pattern

1716999149
andrewrk!~andrewrk@mail.ziglang.org
I verified that the contents were unchanged when that page was restored by the same user that deleted it. I blocked them nonetheless for being careless

1716999168
andrewrk!~andrewrk@mail.ziglang.org
better would probably be to lock the wiki, set up a repo for it like ifreund does, and then have a CI job push to it

1717001746
freshcoffee!~fresh@user/freshcoffee
why do people have to be such dbags

1717001802
andrewrk!~andrewrk@mail.ziglang.org
because they develop coping mechanisms overfitted to past trauma

1717002096
bblack!~bblack@wikimedia/bblack-WMF
"coping mechanisms overfitted to past trauma" explains a whole lot of human misbehavior, nice summary!

1717006965
rockorager!2bbd732aa1@irc.pico.sh
andrewrk: Any examples of what the future IO implementation will look like? You mentioned it some time ago and I keep forgetting to ask

1717006974
brettgilio!a35ba67324@2a03:6000:1812:100::260
Hey all, I noticed that Ziglings broke with the most recent nightly. Something about the build file. Sadly, I am not knowledgable in Zig enough yet to fix it myself.

1717007079
andrewrk!~andrewrk@mail.ziglang.org
brettgilio: I suggest to check out the v0.12.0 tag and use zig 0.12.0

1717007089
brettgilio!a35ba67324@2a03:6000:1812:100::260
That is what I am doing now, yeah.

1717007093
brettgilio!a35ba67324@2a03:6000:1812:100::260
Thank you for the tip, though.

1717007114
brettgilio!a35ba67324@2a03:6000:1812:100::260
I am enjoying, Zig.

1717007190
brettgilio!a35ba67324@2a03:6000:1812:100::260
However, kind of a question. When collaborating with people on Zig projects, do people generally vendor a specific zig build, or do people just use different versions?

1717007196
brettgilio!a35ba67324@2a03:6000:1812:100::260
Like, what is the typical case here.

1717007244
rockorager!2bbd732aa1@irc.pico.sh
brettgilio: IME since zig 0.12.0, projects are staying on 0.12.0

1717007283
rockorager!2bbd732aa1@irc.pico.sh
Prior to that, it seemed most were using master or mach nominated versions (https://machengine.org/about/nominated-zig/)

1717007364
brettgilio!a35ba67324@2a03:6000:1812:100::260
Interesting.

1717007365
brettgilio!a35ba67324@2a03:6000:1812:100::260
Thank you.

1717007723
brettgilio!a35ba67324@2a03:6000:1812:100::260
How commonly used is zigup?

1717010414
smlavine!~smlavine@sourcehut/user/smlavine
Anecdotally, not by me; I use the zig package provided by Arch Linux

1717010613
andrewrk!~andrewrk@mail.ziglang.org
I recommend to either build from source or use the files from ziglang.org/download

1717010660
andrewrk!~andrewrk@mail.ziglang.org
I have written my recommendation into the "Installation" section of README.md

1717011358
rockorager!2bbd732aa1@irc.pico.sh
I download from ziglang.org and use stow if I need to change versions 

1717012180
gpanders!5ac6a0797e@user/gpanders
rockorager: oh nice, that's a smart use of stow

1717012508
brettgilio!a35ba67324@2a03:6000:1812:100::260
@rockorager good idea

1717012517
brettgilio!a35ba67324@2a03:6000:1812:100::260
I have been using asdf

1717012524
brettgilio!a35ba67324@2a03:6000:1812:100::260
which fetches from download

1717023668
brettgilio!a35ba67324@2a03:6000:1812:100::260
On the line I commented out, what is the preferred way to achieve this functionality? https://paste.centos.org/view/af5b3276

1717023808
rockorager!2bbd732aa1@irc.pico.sh
brettgilio: std.net.tcpConnectToHost

1717023824
brettgilio!a35ba67324@2a03:6000:1812:100::260
thank you

1717023838
brettgilio!a35ba67324@2a03:6000:1812:100::260
there has to be a way to find these things easily lol

1717023839
rockorager!2bbd732aa1@irc.pico.sh
or std.net.tcpConnectToAddress since you've already parsed

1717023869
rockorager!2bbd732aa1@irc.pico.sh
https://ziglang.org/documentation/0.12.0/std/

1717023939
brettgilio!a35ba67324@2a03:6000:1812:100::260
Thats what I am looking in yeah, I just didn't see it :)

1717023972
brettgilio!a35ba67324@2a03:6000:1812:100::260
doh https://ziglang.org/documentation/0.12.0/std/#std.net

1717023975
brettgilio!a35ba67324@2a03:6000:1812:100::260
literally right there

1717024527
brettgilio!a35ba67324@2a03:6000:1812:100::260
how about DNS resolution? Does the stdlib support that?

1717024877
brettgilio!a35ba67324@2a03:6000:1812:100::260
probably getAddressList hmm

