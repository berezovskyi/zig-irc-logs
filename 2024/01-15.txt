1705285873
Tekk!~danny@157.245.82.116
Hey, it's possible that I didn't find it in my searches but does the package manager support grabbing from git like the Go one does?

1705285881
Tekk!~danny@157.245.82.116
All the examples I found were grabbing tarballs

1705285903
Tekk!~danny@157.245.82.116
Trying to give ifreund's zig wayland/wlroots bindings a try but they don't have a release tagged

1705287097
torque!~tachyon@user/torque
you can use github generated tarballs for any commit

1705287144
torque!~tachyon@user/torque
but I think basic git fetching has been added in the dev versions of zig as well

1705287230
torque!~tachyon@user/torque
for example: https://github.com/swaywm/zig-wlroots/archive/aae7f237e270ed8fc2ff10f3a661ced618c527cf.tar.gz

1705287237
torque!~tachyon@user/torque
note you can use any specific commit hash there

1705287250
Tekk!~danny@157.245.82.116
Huh

1705287254
Tekk!~danny@157.245.82.116
I'll give that a shot. Thanks torque 

1705287376
torque!~tachyon@user/torque
if you have a new enough version of zig, see also this if you want to pull from git directly https://github.com/ziglang/zig/pull/17277. I assume the example here is still accurate, i haven't tried it myself

1705287397
Tekk!~danny@157.245.82.116
Nah, I'm more than happy using releases

1705305508
mountaingoat!~mountaing@user/mountaingoat
i'm not fond of anytype... really wish i could just do `fn doit(x: Foo | Bar) void {`. i know i could `const Variant = union(enum) { .foo: Foo, bar: Bar, }`, but it's so clunky to call with `doit(Variant{.foo = foo})`. anybody know if it's on the roadmap to have simple comptime union types in the future?

1705332340
Tekk!~danny@157.245.82.116
Okay, so I'm sure I've done something stupid but I really can't get this figured out. I put zig-wlroots into my build.zig.zon, put it into my build.zig, but on zig build it claims there's no dependency named wlroots in build.zig.zon

1705332348
Tekk!~danny@157.245.82.116
http://paste.debian.net/1304174/

1705332396
Tekk!~danny@157.245.82.116
Any clue what's going on there?

1705332451
Tekk!~danny@157.245.82.116
I'm not sure if it's weirded by the zig-wlroots submodules or someting

1705332587
Tekk!~danny@157.245.82.116
Wait. Is it that zig-wlroots doesn't include a build.zig.zon which declares its name and version?

1705361028
rom1504!rom1504@rom1504.fr
out of curiosity is anyone doing distributed processing with zig?

