1715766931
tau-dev!~tau-dev@user/tau-dev
Hi! Does anyone know the current situation of type based aliasing in Zig? I kind of assumed it was strict because LLVM loads and stores are still typed, but I just found out that LLVM doesn't do alias analysis with those types, only with extra metadata for some passes. Is Zig planning to go for stronger or weaker aliasing rules than that?

1715794216
txdv!~txdv@78.56.38.107
I am doing linkSystemLibrary("pthread"), yet its not appearing when I ldd, what am I missing

1715794869
ifreund!2940d10f8b@user/ifreund
txdv: it's all in libc.so these days and libpthread.so is empty so it doesn't really matter if the latter is actually linked or not

1715795488
txdv!~txdv@78.56.38.107
Heh, i am trying to compile async-profiler with zig build, once I run the artifact with java -agentpath:zig-out/lib/libasyncProfiler.so=start,event=cpu,file=profile.html Hello -> it complains: Could not find agent library zig-out/lib/libasyncProfiler.so in absolute path, with error: zig-out/lib/libasyncProfiler.so: undefined symbol: _ZN12ThreadFilterC1Ev

1715795626
txdv!~txdv@78.56.38.107
I guess I need to understand how java handles this

1715796037
lordmzte!~LordMZTE@user/lordmzte
Is there any particular reason that @byteSwap does not accept floats?

1715799211
txdv!~txdv@78.56.38.107
its doing ::dlopen(filename, RTLD_LAZY) and failing 

1715799267
txdv!~txdv@78.56.38.107
best part: Since glibc 2.1.1, this flag is overridden by the effect of the LD_BIND_NOW

1715799282
txdv!~txdv@78.56.38.107
No lazyness allowed anymore 

1715799396
txdv!~txdv@78.56.38.107
_ZN12ThreadFilterC1Ev is not pthread though, its c++, i am missing some kind of c++ lib 

1715799452
txdv!~txdv@78.56.38.107
and I missed a source file that i did not add

