1721779318
fengshaun!~fengshaun@d198-166-106-219.abhsia.telus.net
invalid format string 's' for type 'struct{comptime comptime_int = 104, comptime comptime_int = 101, comptime comptime_int = 108, comptime comptime_int = 108, comptime comptime_int = 111}'

1721779368
fengshaun!~fengshaun@d198-166-106-219.abhsia.telus.net
I'm trying to do std.debug.print("{s}", .{ @typeInfo(@TypeOf(a_tuple)).Struct.fields[0].name })

1721779444
fengshaun!~fengshaun@d198-166-106-219.abhsia.telus.net
uh oh

1721779709
fengshaun!~fengshaun@d198-166-106-219.abhsia.telus.net
nvm

1721779717
fengshaun!~fengshaun@d198-166-106-219.abhsia.telus.net
I'm looking at the wrong thing

1721793297
andrewrk!~andrewrk@mail.ziglang.org
ACTION learns about locality-sensitive hashing

1721831271
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Do I have to do anything special in build.zig to get apvapi32.dll on windows?

1721839185
grayhatter!~grayhatte@user/grayhatter
what have you tried?

1721843697
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
grayhatter: nothing, Iâ€™m not sure what *to* try

1721845900
andrewrk!~andrewrk@mail.ziglang.org
rockorager: foo.linkSystemLibrary("apvapi32")

1721845932
andrewrk!~andrewrk@mail.ziglang.org
are you sure that's not a typo?

1721845947
andrewrk!~andrewrk@mail.ziglang.org
(of "advapi32")

1721845980
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Ah, yeah advapi32

1721845982
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
THanks

1721846044
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
That's not linked by default, right?

1721846071
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I mean, unlike kernel32 I need to explicitly link it - correct?

1721846260
andrewrk!~andrewrk@mail.ziglang.org
when using zig code, dependencies on it can be detected

1721846266
andrewrk!~andrewrk@mail.ziglang.org
when using C/C++, that is not the case

1721846286
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
perfect, thanks!

1721849281
tsmanner!~tsmanner@69.167.103.252
I'm struggling to find the solution to the TlsInitializationFailed error on `zig fetch --save` with a `https://github.com` archive .tar.gz URI (with zig 0.13.0).  I've gotten past it before, but am setting up a new machine and lost it.  Does anyone here know?

1721849558
andrewrk!~andrewrk@mail.ziglang.org
tsmanner: there has been a TLS fix merged subsequently to the 0.13.0 release

1721849738
tsmanner!~tsmanner@69.167.103.252
Gotcha, there's a high chance that I worked around it before by using the build.  Thanks!

1721849800
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
windows problem are gone, I think my time lib is just about complete

1721856244
sewn!f6c66e284f@irc.pico.sh
is it possible to add a non-zig dependency in build.zig.zon and be able to access it from build.zig? i can only seem to access Zig targets but not a C target..

1721856985
andrewrk!~andrewrk@mail.ziglang.org
sewn: yes

1721857312
sewn!f6c66e284f@irc.pico.sh
andrewrk: do i have to access std.build.LazyPath.sub_path to use std.Build.pathJoin?

1721858016
andrewrk!~andrewrk@mail.ziglang.org
I feel like that question is trivially answered by looking at the function signature

1721858182
sewn!f6c66e284f@irc.pico.sh
thanks, im using only (drwl.path(""));

1721858190
sewn!f6c66e284f@irc.pico.sh
with (drwl.path(""));

1721858195
sewn!f6c66e284f@irc.pico.sh
sorry, bad pasting

1721858199
sewn!f6c66e284f@irc.pico.sh
exe.addIncludePath

