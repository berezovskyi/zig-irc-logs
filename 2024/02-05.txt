1707092762
remiliascarlet!~remiliasc@user/remiliascarlet
andrewrk: Just wondering, is Zig glibc specific, or does it work fine with musl as well? https://www.bleepingcomputer.com/news/security/new-linux-glibc-flaw-lets-attackers-get-root-on-major-distros/

1707092841
andrewrk!~andrewrk@mail.ziglang.org
you can choose glibc or musl with -target

1707092852
remiliascarlet!~remiliasc@user/remiliascarlet
Ah, I see.

1707092877
andrewrk!~andrewrk@mail.ziglang.org
glibc is dynamic linked, so unless that security issue is in the static bits (unlikely) then glibc distros likely have it patched already and it's not really an issue for application developers to care about

1707092890
andrewrk!~andrewrk@mail.ziglang.org
just do a system update and you're fine

1707092956
remiliascarlet!~remiliasc@user/remiliascarlet
Yeah, I'm compiling the patched version, since I'm on a source-based distro.

1707148989
motiejus!~motiejus@88.223.107.21
anyone interested in guinea-pigging their project in nixos, so it is built with the native backend by default?

1707150000
motiejus!~motiejus@88.223.107.21
let me clarify: my initial idea was to ship a "non-llvm" zig that some packages can choose, but a better time for this will come when projects themselves will do this choice in their build.zig.

1707153587
helene!~helene@user/helene
motiejus: does zig work currently without llvm?

1707153941
ifreund!2940d10f8b@user/ifreund
helene: the x86_64 backend and C backend are both quite far along, neither of which require llvm

1707153965
helene!~helene@user/helene
ah, well, i don't own a x86 machine so that solves that :p

1707154200
ifreund!2940d10f8b@user/ifreund
helene: in theory the C backend + plus a C compiler should allow you to use zig without llvm

1707168067
ii8!~ii8@45.63.97.131
So `std.Build.addStaticLibrary` creates archives that contain filenames like "/home/user/lmao/zig-cache/o/f55537448690c4a6cea5919fd5b820fb/liblmao.a.o"

1707168110
ii8!~ii8@45.63.97.131
Is there a way to make it create normal archives with the filenames just "lmao.o" inside as you would normally expect?

1707168215
ii8!~ii8@45.63.97.131
My ar is complaining: `arm-none-eabi-ar: illegal pathname found in archive member: ...`

1707169265
ifreund!2940d10f8b@user/ifreund
ii8: that sounds like a bug for the issue tracker

1707169706
Ankhers!e99e97ef8e@2a03:6000:1812:100::2a2
It kinda sounds like a hash of the contents/end result?

1707170201
ii8!~ii8@45.63.97.131
It's just the absolute path of the object file that got put in the archive.

1707170301
ii8!~ii8@45.63.97.131
ifreund: ah, ok

1707173605
andrewrk!~andrewrk@mail.ziglang.org
ii8, yes please open an issue. there's a chance this has to do with debug info working properly

