1735258808
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
does linkLibC always follow what's specified via the --libc flag?

1735258868
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
if so, building helper binaries that are meant for host, with .target = build.host, and then using linkLibC on that is doomed to fail

1735258919
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
not sure if that's a known thing, found it out when building ghostty for voidlinux cross target

1735259212
hadronized!~hadronize@2001:41d0:a:fe76::1
ffffffffff

1735259220
hadronized!~hadronize@2001:41d0:a:fe76::1
oopss sorry

1735259884
grayhatter!~grayhatte@user/grayhatter
tranzystorekk: helper binaries, meaning binaries you'd compile and then run to help prepare the build process?

1735259895
grayhatter!~grayhatte@user/grayhatter
the build env*

1735259896
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
yeah

1735259913
grayhatter!~grayhatte@user/grayhatter
you have helper binaries that need to link libc?

1735259933
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
in case of ghostty in this case, a binary generates unicode lookup tables

1735260042
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
might just be a simple oversight on their side, but still worth noting

1735260902
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
Can someone help me understand the error raised testing this fairly simple code? https://bpa.st/KVUQ

1735260912
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
gc.zig:70:14: error: expected type 'type', found 'gc.Object'

1735261089
grayhatter!~grayhatte@user/grayhatter
is it line 76 now?

1735261121
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
LOL, my bad. yes. 

1735261127
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
sorry - it's late

1735261146
Gliptic!~glip@2a01:4f8:c012:91f3::1
ob1.*

1735261151
grayhatter!~grayhatte@user/grayhatter
you're totally fine, I'd do the same thing at any point in the day

1735261156
Gliptic!~glip@2a01:4f8:c012:91f3::1
*ob1 is a type

1735261180
Gliptic!~glip@2a01:4f8:c012:91f3::1
although, I think you want neither

1735261197
grayhatter!~grayhatte@user/grayhatter
I think it's `&ob1` no Gliptic?

1735261203
Gliptic!~glip@2a01:4f8:c012:91f3::1
yes, &op1

1735261221
Gliptic!~glip@2a01:4f8:c012:91f3::1
ob

1735261237
grayhatter!~grayhatte@user/grayhatter
TIL, you can use `*object` to get `@TypeOf()`

1735261261
Gliptic!~glip@2a01:4f8:c012:91f3::1
you can't though?

1735261268
Gliptic!~glip@2a01:4f8:c012:91f3::1
or what do you mean

1735261304
grayhatter!~grayhatte@user/grayhatter
oh, I'm stupid

1735261309
grayhatter!~grayhatte@user/grayhatter
sorry - it's late

1735261312
grayhatter!~grayhatte@user/grayhatter
:D

1735261395
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
ofc, *ob1 is a type

1735261417
grayhatter!~grayhatte@user/grayhatter
I was reading the error in reverse order, I thought the error reported was that the compiler was *detecting* `*ob1` as a type, and not that it was *demanding* that it needed to be a type

1735261456
Gliptic!~glip@2a01:4f8:c012:91f3::1
well, no, *ob1 _is_ a type, just a nonsensical one as ob1 isn't a type

1735261487
Gliptic!~glip@2a01:4f8:c012:91f3::1
pointer to a non-type

1735261509
Gliptic!~glip@2a01:4f8:c012:91f3::1
I'm not sure why that isn't the first error

1735261570
grayhatter!~grayhatte@user/grayhatter
the pointer symbol `*` requires the token following to be a type `ob1`, because it's not it explodes, before the compiler attempts to determine if a type would be a valid argument to supply

1735261608
Gliptic!~glip@2a01:4f8:c012:91f3::1
ah, so yeah, it is the first error

1735261633
grayhatter!~grayhatte@user/grayhatter
Gliptic: because in theory `vm.push(usize)` would be a valid line, that could be tokenized correctly, before it was validated

1735261644
Gliptic!~glip@2a01:4f8:c012:91f3::1
it's not about tokenization

1735261655
Gliptic!~glip@2a01:4f8:c012:91f3::1
or even parsing

1735261673
grayhatter!~grayhatte@user/grayhatter
yeah, I knew that was the wrong word to use

1735261686
grayhatter!~grayhatte@user/grayhatter
but, I couldn't remember the correct one

1735262202
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
thanks guys. that clears it up and i'm working through some other errors now.

1735322742
cpradog!~cpradog@user/cpradog
hi

1735326366
coleman!~coleman@static.87.86.161.5.clients.your-server.de
hello

1735327956
barusu!~barusu@104.46.44.175
So, I added this module to my project: https://github.com/zigtools/zig-lsp-codegen

1735327986
barusu!~barusu@104.46.44.175
I get this error when I try `zig test src/main.zig`. https://dpaste.org/AEiwt

1735328007
barusu!~barusu@104.46.44.175
For some reason, the "lsp" module is not accessible during the tests

1735328037
barusu!~barusu@104.46.44.175
zig build does work fine

1735328109
BratishkaErik!fd46852e72@user/BratishkaErik
you probably forgot adding import like `exe_unit_texts.root_module.addImport(..., ...)`

1735328159
barusu!~barusu@104.46.44.175
BratishkaErik: I have it

1735328166
barusu!~barusu@104.46.44.175
    exe_unit_tests.root_module.addImport("lsp", lsp_codegen.module("lsp"));

1735328180
BratishkaErik!fd46852e72@user/BratishkaErik
ah wait nvm

1735328193
BratishkaErik!fd46852e72@user/BratishkaErik
sorry I thought you ran `zig build test` not `zig test`, try first

1735328229
barusu!~barusu@104.46.44.175
Doesn't give any output

1735328238
BratishkaErik!fd46852e72@user/BratishkaErik
`zig build test --summary all`

1735328242
BratishkaErik!fd46852e72@user/BratishkaErik
it probably just succeeded

1735328291
barusu!~barusu@104.46.44.175
Can I not have the "All tests passed" printed out like before?

1735328304
barusu!~barusu@104.46.44.175
This is a bit difficult to parse

1735328333
barusu!~barusu@104.46.44.175
Build Summary: 3/5 steps succeeded; 1 failed; 0/1 tests passed; 1 failed

1735328333
barusu!~barusu@104.46.44.175
test transitive failure

1735328333
barusu!~barusu@104.46.44.175
└─ run test 0/1 passed, 1 failed

1735328333
barusu!~barusu@104.46.44.175
   └─ zig test Debug native cached 19ms MaxRSS:116M

1735328333
barusu!~barusu@104.46.44.175
      └─ run lsp-codegen (lsp_types.zig) cached

1735328334
barusu!~barusu@104.46.44.175
         └─ zig build-exe lsp-codegen Debug native cached 22ms MaxRSS:115M

1735328334
barusu!~barusu@104.46.44.175
error: the following build command failed with exit code 1:

1735328440
BratishkaErik!fd46852e72@user/BratishkaErik
>Can I not have the "All tests passed" printed out like before? honestly IDK

1735328600
barusu!~barusu@104.46.44.175
Also, is there any preferred naming convention for zig projects? camelCase, snake_case, etc?

1735328660
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
barusu: the only preference is to not name it `zig-<project>`

1735328677
barusu!~barusu@104.46.44.175
found the style guide: https://ziglang.org/documentation/master/#toc-Style-Guide

1735328682
barusu!~barusu@104.46.44.175
rockorager: thanks

1735328709
barusu!~barusu@104.46.44.175
still it's pretty funny that zig itself doesn't follow it: https://github.com/zigtools/zig-lsp-codegen

1735329407
andrewrk!~andrewrk@mail.ziglang.org
barusu: "zig itself" is https://github.com/ziglang/

1735329421
andrewrk!~andrewrk@mail.ziglang.org
you linked to a third party repository

1735329431
andrewrk!~andrewrk@mail.ziglang.org
zig does not offer a LSP

1735329468
andrewrk!~andrewrk@mail.ziglang.org
the LSP project that many people enjoy is provided by an independent group of volunteers

1735329545
barusu!~barusu@104.46.44.175
Oh, didn't know about that

1735329602
barusu!~barusu@104.46.44.175
Btw, is there a way to tell `zig test` to consider an external module for the test. I kind of like how quick it is with the tests.

1735329634
barusu!~barusu@104.46.44.175
I added this really nice module but can't use it in the tests

1735329702
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
barusu: you need to do that via zig build <test-runner>

1735330572
netvor!~netvor@2a00:ca8:a1f:cd0:c3b1:dcd7:e218:2336
do i understand it correctly that a reader from ArrayList, File, Stream, etc.. they can all be used interchangeably?  i mean, i can have a `fun read_and_parse(reader: ??) !MyThing { ... }` where I can then pass a generalized reader from any of those (and more) places?

1735330605
netvor!~netvor@2a00:ca8:a1f:cd0:c3b1:dcd7:e218:2336
if so, how to type the `reader` argument?

1735330735
barusu!~barusu@104.46.44.175
Is there a good book or guide for understanding zig? I did do ziglings but I feel I need a bit more

1735330967
netvor!~netvor@2a00:ca8:a1f:cd0:c3b1:dcd7:e218:2336
barusu: i found eg. this set of articles pretty useful:  https://www.openmymind.net/ and https://www.openmymind.net/learning_zig/

1735331073
netvor!~netvor@2a00:ca8:a1f:cd0:c3b1:dcd7:e218:2336
there's also https://zig.guide/

1735331200
Gliptic!~glip@2a01:4f8:c012:91f3::1
netvor, if you use AnyReader, yes

1735331237
netvor!~netvor@2a00:ca8:a1f:cd0:c3b1:dcd7:e218:2336
nice, thanks

1735334203
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
andrewrk: you're a audio guy right? Do you know non-daw? http://non.tuxfamily.org/ Unfortunately not maintained anymore: source code: https://github.com/linuxaudio/non/tree/master

1735334368
andrewrk!~andrewrk@mail.ziglang.org
flower_: sure, although I haven't been giving much time to that interest of mine lately. have not heard of this project until now

1735334443
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
andrewrk: It's a cool project. C++ (with a C mindset?). 

1735334461
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
andrewrk: maybe it needs a zig build system and then ported to zig :) 

1735334490
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
andrewrk: fltk though, yep there are zig bindings for it. 

1735334543
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
I'm interested in audio stuff, but I don't want to dive into C++ ... :) No way to escape it seems. 

1735337468
motiejus!~motiejus@88.223.107.21
FUD about ReleaseFast/ReleaseSafe in ghostty packaging request for NixOS: https://github.com/NixOS/nixpkgs/pull/368404#discussion_r1898693036 ; do we have anything like "official guidelines" to counter this? I've seen much discussion, but not much in terms of an approachable summary that could be linked

1735337585
motiejus!~motiejus@88.223.107.21
(I'm off to bed, if anyone wants to chime in, please do)

1735337800
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
writing zig is so much fun 

1735337815
WilhelmVonWeiner!~dch@cpc115020-bour7-2-0-cust904.15-1.cable.virginm.net
i just don't enjoy rust like this, espcially being a noob

1735338193
andrewrk!~andrewrk@mail.ziglang.org
motiejus: done

1735338502
grayhatter!~grayhatte@user/grayhatter
andrewrk: there was a discussion for that topic somewhere right? [re: the negoatiation, and setting a preference/order for optimization]

1735339413
motiejus!~motiejus@88.223.107.21
 andrewrk: excellent, thanks! grayhatter : I recall Andrew talking (or writing) about this in terms of "use ReleaseSafe, unless it's a fuzzed encoder loop where profiling shows significant wins without safety checks". can't find a reference now.

1735339432
motiejus!~motiejus@88.223.107.21
in the meanwhile, found https://lobste.rs/s/ineb98/ghostty_1_0_is_coming#c_ro3yws , which I will link there.

1735339581
grayhatter!~grayhatte@user/grayhatter
> StandardOptimizeOptionOptions

1735340488
andrewrk!~andrewrk@mail.ziglang.org
motiejus: I don't think I would have said that

1735340932
motiejus!~motiejus@88.223.107.21
andrewrk: maybe that's why I can't find a reference. Was pretty sure about it though :)

1735341080
andrewrk!~andrewrk@mail.ziglang.org
I think it depends on deployment context as well - if the code is facing the internet for example, then I think that would certainly be the case

1735341124
andrewrk!~andrewrk@mail.ziglang.org
another use case however would be shipping a game that runs on the player's computer, ReleaseFast for that is probably the best even for relatively poorly tested code

1735343743
cpradog!~cpradog@user/cpradog
hi, it is possible to define a "default" options module? I'm building a package of modules with compile time options, but I realised that every user must provide the options module with all configuraiton variables, even if they don't want to change anything at all

