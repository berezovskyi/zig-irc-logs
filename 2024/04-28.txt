1714294338
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
is anyone here aware of other (past) projects since ~2000 which had similar goals as Zig?

1714294374
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
I was just wondering why it apparently took so long after C's invention for someone to search for a more robust / simpler C

1714295082
phaleth!~phaleth@user/phaleth
it takes a lot of effort to dethrone C as there is historically too much important code written in C, here's a lenghty article that holds hope for Zig and mentions similar projects https://medium.com/@john_25313/c-isnt-a-hangover-rust-isn-t-a-hangover-cure-580c9b35b5ce, that article also mentions COBOL

1714295396
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
ah yes, I've read that one recently

1714295415
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
COBOL was not an attempt to be a C successor, though.

1714295470
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
From my subjective perspective it seems that only since ca. 2015 serious efforts are undertaken to improve on C (Zig, Hare, (very) arguably Rust) â€“ as if no one had recognized the problem until recently

1714295877
ifreund!2940d10f8b@user/ifreund
I think there have been many lesser-know attempts before 2015

1714295951
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
ifreund, yup, and I asked for names, because I couldn't really identify any :D

1714295955
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
Ada, maybe?

1714296008
ifreund!2940d10f8b@user/ifreund
sure, that probably counts

1714296020
ifreund!2940d10f8b@user/ifreund
started 2012: http://c2lang.org/

1714296280
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
seems that failed to gain traction

1714296350
phaleth!~phaleth@user/phaleth
ah, cool, and yeah, COBOL is totally different, it's just an example of old tech totally not going away

1714296377
phaleth!~phaleth@user/phaleth
new langs do not gain traction cause the old ones already have foots in doors

1714296465
jemius!~imperator@2001:9e8:32d9:c600:cd42:ea7d:843a:3ed8
I think it's deeper than that. To make people switch from C, you have to provide significant advantages. But if you provide them, you quickly alien yourself from the simple and dangerous efficiency of C, where you can do whatever you like

1714298064
nikita!~nikita@netbsd/developer/nikita
freshcoffee: so, what did you want to chat about wrt #19756 ?

1714300247
zy!~zy@user/zy
jemius: an early example of a "better C" is Cyclone which appeared in 2002, but it's no longer developed. Rust took some of the ideas according to devs. It had an interesting region analysis thing to prevent dangling pointers. https://cyclone.thelanguage.org/wiki/User%20Manual/

1714315734
gastus!~gastus@185.6.123.157
|

1714325848
freshcoffee!~fresh@user/freshcoffee
nikita: I'd like to figure out how the `zig2` command line is determined. I see application.mk but where is `ZIGBUILDARGS` defined?

1714325996
nikita!~nikita@netbsd/developer/nikita
that file is irrelevant to zig itself, it's used by packages built with zig

1714326069
nikita!~nikita@netbsd/developer/nikita
everything zig itself does is via the Makefile, and if patches exist, that. then there's standard cmake options I'd have to ask other people about, but those didn't interfere in the previous versions of zig

1714326142
freshcoffee!~fresh@user/freshcoffee
is there a verbose option to see the full pbulk session. see the cmake command line, etc?

1714326197
nikita!~nikita@netbsd/developer/nikita
does zig provide the way to build with more verbose output? then I'd add that in

1714326213
nikita!~nikita@netbsd/developer/nikita
I have logs from the last run, but it doesn't show very much

1714326473
freshcoffee!~fresh@user/freshcoffee
ninja is being used, a `-v` would help on that command line

1714326498
freshcoffee!~fresh@user/freshcoffee
oh wait. that's not ninja. that's make.

1714326559
nikita!~nikita@netbsd/developer/nikita
http://netbsd.org/~nikita/

1714326564
nikita!~nikita@netbsd/developer/nikita
there are the logs

1714326602
nikita!~nikita@netbsd/developer/nikita
cmake can be instructed to use ninja though

1714326627
freshcoffee!~fresh@user/freshcoffee
pass `VERBOSE=1` to make command-line should do it

1714326652
nikita!~nikita@netbsd/developer/nikita
ok

1714326679
freshcoffee!~fresh@user/freshcoffee
is it terribly difficult to setup pbulk and just iterative on the zig pkg?

1714326708
nikita!~nikita@netbsd/developer/nikita
it'll be a bit until my bulkbuild gets there.. no, the pbulk process is documented, with mksandbox

1714326755
nikita!~nikita@netbsd/developer/nikita
https://wiki.netbsd.org/tutorials/pkgsrc/pbulk/ might need an additional line for the ssl certs, I'm not sure. and then you can have a limited_list file which just lists lang/zig

1714327067
freshcoffee!~fresh@user/freshcoffee
ok perhaps that approach will be easier. I'll give it a shot. May take me a few hours while I do other things concurrently.

1714327072
nikita!~nikita@netbsd/developer/nikita
a head checkout of pkgsrc would be something like "cvs checkout -A -P pkgsrc" iirc

1714327080
nikita!~nikita@netbsd/developer/nikita
alright

1714327104
nikita!~nikita@netbsd/developer/nikita
or download a snapshot from the ftp and cvs up from there

1714327259
nikita!~nikita@netbsd/developer/nikita
it pulls in lld, llvm, and clang as dependencies, so dependending on your machine it might take quiet a while to build

