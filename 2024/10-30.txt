1730259187
andrewrk!~andrewrk@mail.ziglang.org
neat!

1730281161
Franciman!~Franciman@mx1.fracta.dev
hi what is the largest zig codebase, outside zig compiler?

1730281306
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
there's bun

1730283191
daurnimator!~daurnimat@vultr.daurnimator.com
Franciman: tigerbeetle?

1730285532
Franciman!~Franciman@mx1.fracta.dev
thanks, i will check it out

1730308535
andrewrk!~andrewrk@mail.ziglang.org
Franciman: probably ghostty will be the best answer to this question when it is open sourced in December. 130K lines of zig

1730308668
andrewrk!~andrewrk@mail.ziglang.org
I would recommend against looking at bun source code for inspiration. it does a lot of patterns that I think users should avoid, such as copious use of usingnamespace and reimplementing their own assert instead of using the standard library assert (for a bad reason)

1730309156
bblack!~bblack@wikimedia/bblack-WMF
I'm surprised usingnamespace is still alive!

1730309389
sjb!~sjb@user/sjb
cd

1730313310
grayhatter!~grayhatte@user/grayhatter
I'll believe ghostty will be open sourced when I see it

1730313422
grayhatter!~grayhatte@user/grayhatter
I see everyone praising it for things it *will* do, eventually, probably, just wait a bit longer... which is a very frustrating to see

1730313811
andrewrk!~andrewrk@mail.ziglang.org
that's the right attitude to have

1730314144
grayhatter!~grayhatte@user/grayhatter
would zap be a good repo to look at?

1730314159
andrewrk!~andrewrk@mail.ziglang.org
no, it's a wrapper around a C library

1730314180
grayhatter!~grayhatte@user/grayhatter
zig zap is a wrapper around C?

1730314213
andrewrk!~andrewrk@mail.ziglang.org
you're talking about https://github.com/zigzap/zap ?

1730314233
andrewrk!~andrewrk@mail.ziglang.org
ugh such a cringy readme

1730314269
andrewrk!~andrewrk@mail.ziglang.org
anyway here's a list of projects: https://github.com/ziglang/zig/wiki/Community-Projects

1730314281
grayhatter!~grayhatte@user/grayhatter
lol, that's what I get for scanning over the intro of the readme (for that exact same reason)

1730314477
grayhatter!~grayhatte@user/grayhatter
well... in that case, I'll shamefully self promote and mention srctree, which eventually will be a code sharing site, it's about 40k lines of zig. Not sure I'd suggest it as something to admire, perhaps more as a warning (I've been expermenting with a number of different zig patterns, trying to decide what I like.) 

1730314515
grayhatter!~grayhatte@user/grayhatter
eventually it'll be a complete reimplementation git, and a web framework with, ideally, the ergonomics of flask

1730314722
andrewrk!~andrewrk@mail.ziglang.org
sounds neat

1730316727
grayhatter!~grayhatte@user/grayhatter
I'm especially proud of the templating engine, that will fail to compile if you don't supply all the required dynamic page variables 

1730316760
grayhatter!~grayhatte@user/grayhatter
where, the html also isn't ruined by the template directives 

1730317099
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
grayhatter: do you have a demo site up anywhere?

1730317110
grayhatter!~grayhatte@user/grayhatter
srctree.gr.ht

1730317132
grayhatter!~grayhatte@user/grayhatter
the actual repo is https://srctree.gr.ht/repo/srctree

1730317156
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
srctree.gr.ht sounds like opposite git.sr.ht :P

1730317168
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
looks cool though

1730317172
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
Yeah looks cool

1730317183
grayhatter!~grayhatte@user/grayhatter
cheers, thank you :)

1730322950
andrewrk!~andrewrk@mail.ziglang.org
thanks for sharing!

1730327576
motiejus!~motiejus@88.223.107.21
Hi folks. Did anyone try to compile zig from stage1 (the c++ implementation) to the first `zig.wasm`? I successfully built `zig.c` from 28514476ef8c824c3d189d98f23d0f8d23e496ea , but I can't compile that file, as it's declaring `zig_L_u8` on lines 5 and 11 with different types.

1730327735
motiejus!~motiejus@88.223.107.21
I am going through https://github.com/ziglang/zig/pull/13560: I built the "last" stage1-zig in 28514476ef8c824c3d189d98f23d0f8d23e496ea~1 (one commit before stage1 is removed), then I build "-Dwasi-bootstrap" in db023b98a4deef527d4c70d146009f754e9b168d (the commit that adds -Dwasi-bootstrap), which panics.

1730327774
motiejus!~motiejus@88.223.107.21
if anyone has a blog post or a script handy that does all this, you would save quite a bit of effort. Otherwise once Andrew reads this message, I'll appreciate pointers. :)

1730328481
motiejus!~motiejus@88.223.107.21
I guess this is a good question for a forum. :) https://ziggit.dev/t/building-self-hosted-from-the-original-c-implementation/6607

1730331972
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
If you switch on a tagged union but only want to do stuff for some of the tag types, do people tend to use else => {} or explicitly do .tag_type => {}, for each type they want to ignore?

1730332532
torque!~tachyon@user/torque
that's definitely what `else` is for

1730332761
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
torque: yeah, I guess I more meant like is it bad practice? I guess? If I were to add another member to the union that needed something done to it in the switch, but I forgot about it, else would say it's okay anyways

