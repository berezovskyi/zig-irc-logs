1720397933
smlavine!~smlavine@sourcehut/user/smlavine
squeek502: I see, yeah that'd be nice

1720398054
smlavine!~smlavine@sourcehut/user/smlavine
if not a switch, is there a way to detect membership of an error in an error set more generally?

1720401787
gcoakes!~Thunderbi@2603:8082:2000:72:8dd4:37ad:af:59bf
Am I able to tell the linker to use a different start address from a build script? I am trying to build my kernel with a fixed, non-standard start address.

1720401828
gcoakes!~Thunderbi@2603:8082:2000:72:8dd4:37ad:af:59bf
I already have a linker script which does this, but I would rather just change the start address rather than replace the default linker script. I don't know what all sections should be included for debugging purposes.

1720407140
andrewrk!~andrewrk@mail.ziglang.org
gcoakes: it's a good question. I think we will move towards that in the future - declarative properties for linking rather than relying on linker scripts. related: https://github.com/ziglang/zig/issues/3206

1720427127
squeek502!~squeek502@user/squeek502
smlavine, https://github.com/ziglang/zig/pull/19092

1720459531
freshcoffee1!~fresh@user/freshcoffee
git grep on 30K commits let's go

1720477061
hadronized!~phaazon@2001:41d0:a:fe76::1
hello; I have a question; I read in several places that “Zig doesn’t have UB” and/or “Uses UB to its advantage” and I don’t really understand

1720477072
hadronized!~phaazon@2001:41d0:a:fe76::1
I tried making a small thing that would be a UB in e.g. C and to me that’s also a UB in Zig

1720477078
hadronized!~phaazon@2001:41d0:a:fe76::1
(or maybe I didn’t understand something)

1720477097
andrewrk!~andrewrk@mail.ziglang.org
hadronized: https://ziglang.org/documentation/0.13.0/#Undefined-Behavior

1720477135
hadronized!~phaazon@2001:41d0:a:fe76::1
https://paste.sr.ht/~hadronized/d04635cfda954985f241dd3192992e3be91c145d

1720477147
hadronized!~phaazon@2001:41d0:a:fe76::1
thank you Andrew; I’m reading that

1720477256
hadronized!~phaazon@2001:41d0:a:fe76::1
hm, I don’t understand then; my snippet is definitely an UB and is not detected either at comptime nor runtime, right?

1720477265
andrewrk!~andrewrk@mail.ziglang.org
your paste demonstrates "undetected illegal behavior" and is tracked by this issue: https://github.com/ziglang/zig/issues/3180

1720477380
hadronized!~phaazon@2001:41d0:a:fe76::1
hm, interesting

1720477390
hadronized!~phaazon@2001:41d0:a:fe76::1
I’m interested to see how you can dodge the lifetime bullet of Rust there

1720477399
hadronized!~phaazon@2001:41d0:a:fe76::1
I wonder whether ASan can do that

1720477401
hadronized!~phaazon@2001:41d0:a:fe76::1
(probably)

1720478068
andrewrk!~andrewrk@mail.ziglang.org
it's not too hard to catch at runtime

