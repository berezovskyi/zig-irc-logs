1730332804
torque!~tachyon@user/torque
I think that's a pretty edge case, but yes

1730332804
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
Obviously, I should just not forget :P but hopefully you get what I mean

1730332859
torque!~tachyon@user/torque
however, having a ton of empty prongs can hurt readability a lot, so there's a tradeoff

1730333259
torque!~tachyon@user/torque
in my experience though, if you're adding a member to a tagged union or enum, it's for a specific feature and it's usually pretty easy to remember to implement the thing you were adding it for

1730333286
torque!~tachyon@user/torque
another good reason to develop with version control

1730333528
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
I will list them explicitly if my switch is more like a categorical switch - ie I have multiple in each branch doing the same thing. then I want to have to decide which category a new tag falls into rather than defaulting to an else

1730362919
hakanrw!~hakanrw@user/hakanrw
hello folks

1730362974
hakanrw!~hakanrw@user/hakanrw
i was wondering if there is any work out there for a GCC frontend for Zig. i havent found much information on the web

1730362986
hakanrw!~hakanrw@user/hakanrw
is there any plans for this?

1730363047
hakanrw!~hakanrw@user/hakanrw
could be experimental/broken, i just want to test

1730364136
Amun-Ra!~amun-ra@retro.rocks
zig is LLVM based

1730364614
ifreund!2940d10f8b@user/ifreund
hakanrw: not that I know of

1730364653
ifreund!2940d10f8b@user/ifreund
there is a non-llvm debug backend for x86_64 and a C backend though

1730364668
ifreund!2940d10f8b@user/ifreund
you could use GCC to compile the output of the C backend I guess

1730364688
hakanrw!~hakanrw@user/hakanrw
interesting, thanks!

1730364809
hakanrw!~hakanrw@user/hakanrw
Amun-Ra: since ppl are working on a rust frontend for GCC which works partially, i thought maybe Zig could have one too

1730364845
Amun-Ra!~amun-ra@retro.rocks
hakanrw: as a final stage compiler only?

1730364935
hakanrw!~hakanrw@user/hakanrw
what is a final stage compiler?

1730364972
Amun-Ra!~amun-ra@retro.rocks
do they use it only for compiling the final code?

1730364998
Amun-Ra!~amun-ra@retro.rocks
it's offtopic, I'll check that out in my free time

1730365040
hakanrw!~hakanrw@user/hakanrw
im not very knowledgeable about that neither, sorry. it's called gccrs, fyi

1730365047
Amun-Ra!~amun-ra@retro.rocks
thanks

1730374559
sintheta!~src@user/src
noob question https://dpaste.com/8QL8BFGMA

1730376505
Gliptic!~glip@2a01:4f8:c012:91f3::1
src, an array of arrays is not easily converted to a slice of slices. Think about how [][]type would have to look in memory. A slice is just a pointer to the first element and a length.

1730376630
Gliptic!~glip@2a01:4f8:c012:91f3::1
of course that doesn't make it "incorrect", you just need to allocate a slice of slices and initialize it properly with each sub-array

1730377290
Gliptic!~glip@2a01:4f8:c012:91f3::1
ok, but it's also incorrect, because you're passing a slice of slices of types at comptime

1730377327
Gliptic!~glip@2a01:4f8:c012:91f3::1
I expect you wanted anytype instead of type, and not comptime

1730382130
ToxicFrog!~ToxicFrog@174-138-206-236.cpe.distributel.net
Amun-Ra: gccrs is meant to be a full compiler, frontend and backend, with the goal of eventually upstreaming it to gcc proper -- so, rust source in, object code out, entirely in gcc

1730382132
ToxicFrog!~ToxicFrog@174-138-206-236.cpe.distributel.net
That said, AFAIK it's still experimental and doesn't support the entire language

1730401630
grayhatter!~grayhatte@user/grayhatter
is there a clean way to coerce one type into another if their fields match exactly?

1730402306
grayhatter!~grayhatte@user/grayhatter
src: you should never *want* to do that. There are better ways to express that idea. That looks like you're trying to fight zig's type system. Which is to be avoided, generally.

1730414229
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
If I want to do something like const a = if (condition1) { thing1 } else if (condition2) {thing2} else {thing3}, how would I do that?

1730414235
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
actually, I'll say *should* instead of would

1730414844
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
https://zig.godbolt.org/z/G6aPb46r6 these are what I thought of

