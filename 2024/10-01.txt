1727800331
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
hi !

1727800571
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
I tried Zig in April and since then they greatly improved some things about arithmetics, for instance to divide u64 by u64 you can now just write `x / y` without something crazy like ` @as(f64, @floatFromInt(x)) / @as(f64, @floatFromInt(y))`

1727800613
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
so my question is: are there any plans regarding the the build system?

1727800675
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
I can't make myself like these overly-verbose build.zig files. It feels like Emacs' init.el but for every single project. It's an overkill for 99% of the apps.

1727800851
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
and Andrew Kelly showed at conferences how Zig can just build a bunch of .c files without any makefile! Can't we have the same for Zig itself?

1727801057
bigs!~bigs@user/bigs
evocatus: https://ziglang.org/learn/build-system/

1727801064
bigs!~bigs@user/bigs
I will say what helped me the most was just reading through a few libraries on GitHub

1727801085
bigs!~bigs@user/bigs
The verbosity is honestly a really nice tradeoff for being very explicit about what get stuck in where. I've come to really love it.

1727801347
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
Yeah, I would prefer build.zig to configure/make/make install

1727801408
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
but for hello world applications the size and complexity of build.zig is ridiculous

1727801469
evocatus!~evocatus@2a02:a210:20c2:d600:70e2:1402:e545:6b53
in Clojure the smallest valid deps.edn is two bytes: `{}`. And it works for simple programs. Once you have the need you can go down the rabbit hole, create custom commands, test dependencies, debugger configs, etc., etc.

1727802747
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
evocatus: https://0x0.st/Xg3H.zig

1727802764
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
You can get one line less by not using const exe =

1727802768
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
This doesn't seem to ridiculous to me

1727802953
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
That said, for small things you don't need a build.zig - just use zig build-exe or zig run directly

1727822252
torque!~tachyon@user/torque
heaven forbid a build system should be scrutable

1727822751
andrewrk!~andrewrk@mail.ziglang.org
evocatus's comment about arithmetic is completely incorrect. I don't even know any relevant facts that could be a reference to

1727823759
grayhatter!~grayhatte@user/grayhatter
his other take is wild too... comparing zig to clojure, complaining that build.zig is too complicated, when I looked up the new user guide on clojure.org

1727823772
grayhatter!~grayhatte@user/grayhatter
> That means that a Clojure program is not just something you compile and run, but something with which you can interact. 

1727823965
grayhatter!~grayhatte@user/grayhatter
you can't even compile, execute, test clojure without a full IDE editor with builtin support. My read is it's impossible to compile clojure at all, no matter how simple or complicated, or verbose a build script you might have

1727825176
andrewrk!~andrewrk@mail.ziglang.org
idk, I'm not here to talk crap about clojure

1727825499
grayhatter!~grayhatte@user/grayhatter
I don't mean to talk smack, I'm actually super interested in it as an idea and language. But my point is that it's neither simple nor easy. There's much less complexity in build.zig. But it also isn't a REPL

1727826602
ToxicFrog!~ToxicFrog@66-49-221-211.cpe.distributel.net
"you can't even compile, execute, test clojure without a full IDE editor with builtin support" -- this is entirely false, and I have no idea how you ended up there

1727826627
ToxicFrog!~ToxicFrog@66-49-221-211.cpe.distributel.net
(there's two different build tools for it, clj and lein, and you can also just kick it old-school and invoke the compiler, interpreter, or REPL directly)

1727826674
grayhatter!~grayhatte@user/grayhatter
how I ended up there was clojure.org -> guides -> getting started

