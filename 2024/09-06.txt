1725584040
The_Buhs!~The_Buhs@user/The-Buhs/x-5080862
I might have to try Caddy out to replace nginx on my NAS/server 

1725584804
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I personally use tlstunnel over Caddy because Caddy won't proxy some protocols (namely IRC)

1725585885
companion_cube!~simon@user/meow/companion-cube:68572
It does work with weechat's websocket though

1725593828
torque!~tachyon@user/torque
yo computed goto also landed? damn 0.14 going to be huge

1725593926
torque!~tachyon@user/torque
er, labeled switch statements

1725593939
torque!~tachyon@user/torque
branch name strikes again

1725629822
cowsay-moo!~cowsay-mo@47.188.53.54
test

1725629844
cowsay-moo!~cowsay-mo@47.188.53.54
hi. I'm trying to get environment set up for zig development version (so I can try ziglings learning tools) and instructions are a little unclear on what to do. i am on artix with arch repos available.  there is a zig-dev-bin package, which is unmaintained, a zig-nightly package, or I can download .tar.gz from website. but in all cases I am having

1725629845
cowsay-moo!~cowsay-mo@47.188.53.54
trouble finding a compatible corresponding zig language server package or zigmod package for the dev version.  I would prefer updatable method through package manager (vs tarball). assistance would be appreciated

1725629997
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
cowsay-moo: use the 0.13.0 tag of ziglings and download (or use package manager if that is the version they have) zig 0.13.0

1725630031
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
https://codeberg.org/ziglings/exercises/src/tag/v0.13.0

1725630048
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
And then you can also use the 0.13.0 tag of zls

1725630156
cowsay-moo!~cowsay-mo@47.188.53.54
I would actually prefer to use the unstable version because I plan to poke around with some of the zig gamedev tools and everything is in an early and very active development state.. I suspect I will be hitting some walls with the stable build

1725630229
cowsay-moo!~cowsay-mo@47.188.53.54
for reference https://github.com/zig-gamedev/zig-gamedev

1725630342
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Little confused on which version that repo uses. They say 0.13.0-dev.351 in main branch and 0.14.0 in a separate branch

1725630373
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
0.13.0 is the last tagged version though so not sure why they are on a dev build of it in main

1725630413
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Anyhow, if you want to stay on zig#master you will have to manually check versions of everything you are using to make sure you find a goldilocks version

1725630430
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
There is zigup to help with downloading / managing versions https://github.com/marler8997/zigup

1725645300
gluon!~gluon@2a01:4f8:c0c:e2da::1
rockorager: zeit's strftime() comes in handy!

1725645695
gluon!~gluon@2a01:4f8:c0c:e2da::1
i was formatting the time adhoc in some code and actually thinking about suggesting doing it within the library. you read my mind :)

1725646122
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
gluon: I just added that like an hour ago

1725646132
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I’m working on go formats too

1725646156
gluon!~gluon@2a01:4f8:c0c:e2da::1
yup, i was checking github and noticed it :D

1725646163
gluon!~gluon@2a01:4f8:c0c:e2da::1
oh great

1725655593
ekaitz!~Ekaitz@94.73.34.227
andrewrk: i'm finding non-standarities in your peg syntax for guix, would you accept a pr that simplifies that?

1725656004
andrewrk!~andrewrk@mail.ziglang.org
ekaitz: yes

1725656014
ekaitz!~Ekaitz@94.73.34.227
good, working on it

1725656028
ekaitz!~Ekaitz@94.73.34.227
it's mostly " is not standard

1725656034
ekaitz!~Ekaitz@94.73.34.227
' is the way to go

1725656045
ekaitz!~Ekaitz@94.73.34.227
and for "'" it should be [']

1725656056
andrewrk!~andrewrk@mail.ziglang.org
I see

1725656096
andrewrk!~andrewrk@mail.ziglang.org
sorry for the problems. it's tested occasionally but not all the time

1725656123
ekaitz!~Ekaitz@94.73.34.227
it's probably ok for the parser we have, but i'm using one in guile that is simpler

1725656135
ekaitz!~Ekaitz@94.73.34.227
it doesn't support underscores in the nonterminals, for example

1725656886
andrewrk!~andrewrk@mail.ziglang.org
as a reminder, you don't need it to be perfect - just good enough to interpret the zig compiler codebase with build_options.env set to .bootstrap, which greatly limits the amount of code that will be observed by the interpreter

1725656931
andrewrk!~andrewrk@mail.ziglang.org
heh, funny that it even has the most appropriate enum tag name for your use case :)

1725657046
andrewrk!~andrewrk@mail.ziglang.org
it's a bit confusing to think about, but you interprete the codebase with build_options.dev == .core assuming -target wasm32-wasi, compiling the same codebase that you are interpreting with build_options.dev == .core, outputting .c code. then you have converged to the same build process as upstream

1725657055
andrewrk!~andrewrk@mail.ziglang.org
gahh! I typo'd it in my explanation

1725657063
andrewrk!~andrewrk@mail.ziglang.org
it's a bit confusing to think about, but you interprete the codebase with build_options.dev == .bootstrap assuming -target wasm32-wasi, compiling the same codebase that you are interpreting with build_options.dev == .core, outputting .c code. then you have converged to the same build process as upstream

1725657112
ekaitz!~Ekaitz@94.73.34.227
yep!

1725657126
ekaitz!~Ekaitz@94.73.34.227
andrewrk: i think i have corrected the peg syntax

1725657139
ekaitz!~Ekaitz@94.73.34.227
:)

1725659658
ekaitz!~Ekaitz@94.73.34.227
andrewrk: pr sent!

1725659681
ekaitz!~Ekaitz@94.73.34.227
i still need to patch it a little bit for my PEG parser because we still use some not-supported things

1725659694
ekaitz!~Ekaitz@94.73.34.227
but i wouldn't remove those, because they make the file easier to read

1725659731
ekaitz!~Ekaitz@94.73.34.227
also, some tests don't pass!

1725659739
ekaitz!~Ekaitz@94.73.34.227
but i didn't make them worse :)

1725661668
andrewrk!~andrewrk@mail.ziglang.org
ekaitz: thanks!

1725661701
ekaitz!~Ekaitz@94.73.34.227
ifreund: made me review this in detail, it happens that it's the Guile parser that claims to be very good but supports only half of the whole thing

1725661711
ekaitz!~Ekaitz@94.73.34.227
but the changes won't hurt i think

1725661808
andrewrk!~andrewrk@mail.ziglang.org
I'm going to merge in good faith, if ifreund wants to get involved he's welcome to revert and guide the process from that point

1725662110
ekaitz!~Ekaitz@94.73.34.227
thank you mate, i'm going to go fix Guile's PEG parser in the meantime, if they let me do so

1725662488
andrewrk!~andrewrk@mail.ziglang.org
good luck!

1725662519
ifreund!2940d10f8b@user/ifreund
oh I didn't see the discussion here and was missing context for the PR

1725662580
andrewrk!~andrewrk@mail.ziglang.org
I incepted your lua idea into ekaitz's head except he swapped lua for guile :D

1725662611
ekaitz!~Ekaitz@94.73.34.227
in fact i want to do lua, but also lisp is what an og would do

1725662632
ifreund!2940d10f8b@user/ifreund
scheme seems like a perfectly good choice to me :)

1725662639
ekaitz!~Ekaitz@94.73.34.227
:)

1725662688
andrewrk!~andrewrk@mail.ziglang.org
I think the key insight on top of your lua idea ifreund is to interpret while hard-coding -target wasm32-wasi

1725662696
andrewrk!~andrewrk@mail.ziglang.org
s/hard-coding/assuming/

1725662811
ifreund!2940d10f8b@user/ifreund
yeah, that should allow making the interpreter far simpler

1725662849
ekaitz!~Ekaitz@94.73.34.227
my plan is to get an ast and use scheme's tree reducing facilities to interpret it

1725662857
ekaitz!~Ekaitz@94.73.34.227
pattern match for the win

1725662898
ekaitz!~Ekaitz@94.73.34.227
but the AST goes first

1725662915
ekaitz!~Ekaitz@94.73.34.227
also the zig-spec fails some tests using zig@0.13

1725662922
ekaitz!~Ekaitz@94.73.34.227
is that expected?

1725662961
ifreund!2940d10f8b@user/ifreund
there may have been grammar changes since 0.13.0 was tagged

1725663043
ifreund!2940d10f8b@user/ifreund
or it may just be out of sync with the upstream Zig repository. we dont do a great job of keeping it in sync with the actual parser as there's no CI that yells at us

1725663097
ifreund!2940d10f8b@user/ifreund
I can have a look tomorrow, off to bed now though

1725663121
ekaitz!~Ekaitz@94.73.34.227
(y)

1725666877
andrewrk!~andrewrk@mail.ziglang.org
there have indeed been grammar changes since 0.13.0 was tagged

1725666937
andrewrk!~andrewrk@mail.ziglang.org
you should be able to find them with the "release notes" label: https://github.com/ziglang/zig/pulls?q=is%3Apr+is%3Aclosed+label%3A%22release+notes%22+sort%3Acreated-desc

1725667023
andrewrk!~andrewrk@mail.ziglang.org
oh even better, you can do `git log --first-parent 0.13.0..master -- lib/std/zig/Parse.zig`

1725667083
andrewrk!~andrewrk@mail.ziglang.org
are you targeting master or 0.13.0? I think I would probably suggest 0.13.0 and I suspect it will be fairly straightforward to update to 0.14.0 once that works and once that release is tagged

1725667113
andrewrk!~andrewrk@mail.ziglang.org
it's still 2+ months until release 

