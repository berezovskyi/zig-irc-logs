1723165192
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
andrewrk: Do I have this right: if I launch a child process from zig (with the proper options), it will get a ZIG_PROGRESS env var and from that child process (let's assume a zig program), I can grab std.Progress.start(.{}) and report progress to the parent?

1723165234
andrewrk!~andrewrk@mail.ziglang.org
rockorager: correct

1723165243
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
perfect, thanks

1723165279
andrewrk!~andrewrk@mail.ziglang.org
all you need to do is set the `progress_node` field of std.Process.Child before calling spawn

1723165317
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I'm going to add a std.Progress aware progress bar widget to libvaxis

1723165342
andrewrk!~andrewrk@mail.ziglang.org
cool

1723208929
tavare!~tavare@user/tavare
Hi, done with basics, where can I start next ? and is @CodeGuilde here ?

1723211188
ashie!~ashie@user/ashie
I have a very simple stack machine which uses `[*]u8` as a stack to push/pop to/from, if I want to push a u16 for example do I have to align it, i.e. add padding?

1723220056
ifreund!2940d10f8b@user/ifreund
ashie: the alignment is only necessary if directly reading the memory as a u16

1723220091
ifreund!2940d10f8b@user/ifreund
its always valid to copy any type with any alignment to an arbitrary place in memory

1723220132
ifreund!2940d10f8b@user/ifreund
you may have to copy it back to a place in memory matching the alignment in order to use the stored value though

1723222814
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
Is .zon its own format?

1723222839
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
oh wait, it's just .zig right

1723222897
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
does it differ at all?

1723222900
torque!~tachyon@user/torque
it's "zig object notation"

1723222912
torque!~tachyon@user/torque
it has a few differences in what is allowed

1723222918
torque!~tachyon@user/torque
it's more restrictive than plain zig

1723222930
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
ah okay, I notice that sublime text has no support for it right now

1723222939
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
maybe I'll write something and upstream it today

1723223028
Earnestly!~earnest@user/earnestly
aidenfoxivey: Maybe follow https://github.com/ziglang/zig/pull/20271

1723223060
torque!~tachyon@user/torque
you can just tell sublime to associate .zon with the zig syntax

1723223071
torque!~tachyon@user/torque
that's what I did

1723223096
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I'd love to have it do that by default I suppose

1723223111
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
but if .zon is just a subset of .zig then shouldn't be a big deal

1723223120
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
oh no wait

1723223124
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
not a strict .zig subset

1723223129
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
there's some divergences

1723223133
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
thanks Earnestly

1723223244
torque!~tachyon@user/torque
syntactically, I think it is a strict subset except for the Inf/NaN literals

1723227279
ashie!~ashie@user/ashie
ifreund: I see, that makes sense

1723227416
ashie!~ashie@user/ashie
what would be the most elegant way to copy two u8s into a u16 tho? because not being able to directly use it means I cannot just cast the pointer to u16 and dereference, right?

1723227449
ifreund!2940d10f8b@user/ifreund
ashie: @bitCast() a [2]u8 to a u16

1723227504
ifreund!2940d10f8b@user/ifreund
if you're getting the u8s from a larger slice, then `const foo: u16 = @bitCast(slice[index..][0..2].*);`

1723227595
ashie!~ashie@user/ashie
thanks a lot

1723228566
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
looks like I got sublime zon support working!

1723228572
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
including nan and inf

1723228615
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I just want to make sure I strip out some of the non necessary things

1723228627
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I just copied the sublime syntax for zig and added 

1723229178
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
https://github.com/ziglang/sublime-zig-language/pull/73

1723235009
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
It kinda seems like there's not much going on with this repo

1723235026
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
who has jurisdiction over the ziglang organization and its repos?

1723235303
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
on github I should add

1723235338
ashie!~ashie@user/ashie
ifreund: can I @bitCast the other way too and it will be safe? for example if I have `slice: []u8` could I `slice[i..][0..2].* = @bitCast(v);` where `v` is u16?

1723235392
ashie!~ashie@user/ashie
it works and doesn't crash and burn, but I am not sure if it is undefined behaviour or not

1723238800
andrewrk!~andrewrk@mail.ziglang.org
aidenfoxivey: nobody, it's unmaintained

1723238862
andrewrk!~andrewrk@mail.ziglang.org
oh, are you asking about all of the ziglang org? I was just talking about the sublime-zig-language repository

1723238919
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
andrewrk: mostly the sublime-zig-language repository

1723238930
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
is there any way I could help with getting it back together?

1723238987
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I could alternatively just do everything from my fork, but it sounds like there might be benefits in having someone sorting out the issues with the package

1723239054
andrewrk!~andrewrk@mail.ziglang.org
I suggest to maintain your fork. if it's still active in one year from now you can upstream your work and become a maintainer in the ziglang org if you want

1723239079
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
that makes sense

1723239100
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I'll take a look at the issues people seem to be filing

1723239378
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
andrewrk: is it acceptable to place my fork on the sublime package registry?

1723239388
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I'd ideally like if people could use it to tell me what's wrong with it

1723239397
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
but I don't want to name squat the official package

1723239484
andrewrk!~andrewrk@mail.ziglang.org
I don't know why you would ask permission to do that

1723239491
andrewrk!~andrewrk@mail.ziglang.org
are you going to pretend to be the official one?

1723239580
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
no I don't want to pretend to be that

1723239587
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I'm honestly just really unsure

1723239595
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
and I don't want to upset anyone

1723239969
andrewrk!~andrewrk@mail.ziglang.org
I would only be upset if you were trying to trick people into thinking it was the official one

1723239994
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
that sounds reasonable

1723240012
andrewrk!~andrewrk@mail.ziglang.org
the code is liberally licensed precisely so that you have the freedom to fork it and do whatever you want

1723241106
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
I'm gonna call it Zig Unofficial

1723241317
aidenfoxivey!08de0355d2@2a03:6000:1812:100::e41
thanks for your guidance on this one

1723243067
ifreund!2940d10f8b@user/ifreund
ashie: its fine to do that

