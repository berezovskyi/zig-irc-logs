1717680627
lechner-!~lechner@debian/lechner
Hi, I would like to rewrite in Zig a small dynamic module (.so) that I wrote in C.  It currently builds with Automake/Libtool but also with 'zig cc'.  What's my best way to get from A to B, please?

1717690966
andrewrk!~andrewrk@mail.ziglang.org
lechner-, I'd start with porting it to the zig build system

1717691801
Palanix!~palanix@dynamic-077-181-033-095.77.181.pool.telefonica.de
lechner: to repeat what andrew said while you were gone: He would start with porting it to the zig build system

1717691834
lechner!~lechner@debian/lechner
Palanix / thanks!  i had a power outage.  is there channel log?

1717691864
Palanix!~palanix@dynamic-077-181-033-095.77.181.pool.telefonica.de
There are but they seem broken

1717691908
lechner!~lechner@debian/lechner
would you mind sending andrew's message again?  pm or here

1717691918
fuel!~fuel@pcbox/developer/fuel
lechner, they already did lol

1717691923
fuel!~fuel@pcbox/developer/fuel
<Palanix> lechner: to repeat what andrew said while you were gone: He would start with porting it to the zig build system

1717692439
lechner!~lechner@debian/lechner
okay, that's presumably different from 'zig cc'.  I'll read    https://ziglang.org/learn/build-system/

1717692482
rockorager!2bbd732aa1@irc.pico.sh
lechner: https://zig.news/kristoff/series/3

1717700934
lechner!~lechner@debian/lechner
rockorager / thanks!

1717711901
ifreund!2940d10f8b@user/ifreund
0.13.0 tagged!

1717711951
ifreund!2940d10f8b@user/ifreund
andrewrk: may I humbly request that the FreeBSD x86_64 binary return to ziglang.org/download for 0.13.0?

1717712012
freshcoffee!~fresh@user/freshcoffee
if that can't be arranged, I can roll one quite easily

1717712206
andrewrk!~andrewrk@mail.ziglang.org
ifreund: sure

1717712223
andrewrk!~andrewrk@mail.ziglang.org
there's no return btw - I just need to do the work of renting a server, running the commands, signing & uploading

1717712244
ifreund!2940d10f8b@user/ifreund
"return" since it was missing from 0.12.0 :P

1717712250
andrewrk!~andrewrk@mail.ziglang.org
understood :)

1717712259
andrewrk!~andrewrk@mail.ziglang.org
it's the only target that we provide that zig doesn't support cross-compiling for 

1717712268
ifreund!2940d10f8b@user/ifreund
ah, I see

1717712299
andrewrk!~andrewrk@mail.ziglang.org
afaik there's nothing preventing that from working other than that someone has to roll up their sleeves and do it

1717712363
andrewrk!~andrewrk@mail.ziglang.org
I'll save some time and do 0.12.0, 0.13.0, and 0.12.1 freebsd uploads all at once

1717712371
GreaseMonkey!greaser@user/greasemonkey
0.13.0 tagged... wait hot damn alright looks like i need to update

1717712384
GreaseMonkey!greaser@user/greasemonkey
...maybe a *little* bit later but yes

1717712410
ifreund!2940d10f8b@user/ifreund
I recently learned that it's OK to statically link FreeBSD libc and that they have a stable syscall interface: https://lobste.rs/s/2f29df/i_m_forking_ladybird_stepping_down_as#c_etehgn

1717712487
andrewrk!~andrewrk@mail.ziglang.org
oh that's very nice

1717712496
andrewrk!~andrewrk@mail.ziglang.org
let's reflect this in zig immediately

1717712549
andrewrk!~andrewrk@mail.ziglang.org
there's a function called osRequiresLibCForSyscalls or something like that that returns true and should instead return false

1717712696
ifreund!2940d10f8b@user/ifreund
I don't think we have syscall implementations for FreeBSD in the standard library yet, we currently use libc for everything

1717712772
ifreund!2940d10f8b@user/ifreund
andrewrk: looks like you mean Target.requiresLibC()

1717712875
ifreund!2940d10f8b@user/ifreund
I guess making that function return false for FreeBSD without first adding syscall implementations in the standard library wouldn't do anythng bad though, it just wouldn't compile unless one explicitly linked libc

1717712890
ifreund!2940d10f8b@user/ifreund
which is the same as the status quo just with a different error message

1717713272
andrewrk!~andrewrk@mail.ziglang.org
well, someone's going to have a fun time getting the std lib tests passing without -lc for that target

1717713278
andrewrk!~andrewrk@mail.ziglang.org
and by someone I mean freshcoffee of course ;)

1717713636
freshcoffee!~fresh@user/freshcoffee
haha maybe 

1717714805
gcarlos8!~gcarlos@37.218.246.133
why can't I call a function inside a struct init? I tried `const s = myStruct { .field = function() };` but I get error. Is there a more elegant way to init structs without having to assign function return values to temporary variables?

1717716048
siaal!~Siaal@user/Siaal
gcarlos8, you should be able to - https://dpaste.com/AVMFGR4E4

1717716103
siaal!~Siaal@user/Siaal
if you're still having trouble, a code snippet would help

1717716258
gcarlos8!~gcarlos@37.218.246.133
siaal: ahh ok, I found the mistake now

1717716322
gcarlos8!~gcarlos@37.218.246.133
I was trying to use anonymous struct without putting a dot before {}

1717716354
gcarlos8!~gcarlos@37.218.246.133
And by the error message I thought that I couldn't call functions inside the struct init

1717716741
siaal!~Siaal@user/Siaal
ahh, a classic

