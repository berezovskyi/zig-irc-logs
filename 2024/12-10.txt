1733803548
ezzieyguywuf!~Unknown@user/ezzieyguywuf
is std.meta.eql the canonical way to compare structs, or is there a different/better way?

1733803741
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
ezzieyguywuf: that's the canonical way

1733804534
ezzieyguywuf!~Unknown@user/ezzieyguywuf
cool thanks :)

1733810527
ksynwa!~kartik@2405:201:600a:f9b8:8067:ce61:10ce:c454
Looking at https://zig.guide/standard-library/hashmaps. Is this quote correct? "If having your elements backed by an array is wanted behaviour, try std.ArrayHashMap and its wrapper std.AutoArrayHashMap."

1733810552
ksynwa!~kartik@2405:201:600a:f9b8:8067:ce61:10ce:c454
I don't understand what "backed by an array" means.

1733810591
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
ksynwa: order is preserved

1733810935
ksynwa!~kartik@2405:201:600a:f9b8:8067:ce61:10ce:c454
Ah okay. I thought it meant that the key or the element would be an array of some sort.

1733810939
ksynwa!~kartik@2405:201:600a:f9b8:8067:ce61:10ce:c454
Thanks.

1733833543
ksynwa!~kartik@2405:201:600a:f9b8:8067:ce61:10ce:c454
Is there a way to have `zig fmt` split this into multiple lines? (warning long line incoming)

1733833550
ksynwa!~kartik@2405:201:600a:f9b8:8067:ce61:10ce:c454
return (equal(u8, this.package.creator, that.package.creator) and equal(u8, this.package.name, that.package.name) and this.version == that.version);

1733833760
ifreund!2940d10f8b@user/ifreund
ksynwa: zig fmt will preserve line breaks after binary operators (e.g. and)

1733833798
ifreund!2940d10f8b@user/ifreund
which is probably what you want here, you could also add a trailing comma to either of the function argument lists but that might look ugly

1733852899
piero_libero!~piero@user/piero-libero:64896
how do I split this in two lines, one with the declaration of the var, the second with the init?   var map = std.AutoHashMap([]u8, []u8).init(some_allocator);

1733853103
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
var map: std.AutohashMap([]u8, []u8) = undefined;

1733853121
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
I'm not sure why you would want to do this though

1733853212
piero_libero!~piero@user/piero-libero:64896
I cannot give an allocator to a global variable

1733853879
rockorager!~rockorage@2600:3c06::f03c:94ff:fea6:1f08
Ah, you are making it global

1733855180
piero_libero!~piero@user/piero-libero:64896
or even passing it as an arg in a function

1733862181
grayhatter!~grayhatte@user/grayhatter
is setEvalBranchQuota scoped to the current block?

1733862807
grayhatter!~grayhatte@user/grayhatter
is there a bug in compileLog where it ignores slice offsets?

