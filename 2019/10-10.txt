1570674682
marler8997_
Hey, does zig document somewhere that the windows binary require VCRUNTIME140_1.dll?

1570677636
tgschultz
marler8997_ see #3391

1570677679
marler8997_
thanks

1570693340
FireFox317
andrewrk: I solved the struct field names, but I have one more question about the function parameter names. Because to my understanding there is no AstNode available in the ZigTypeFn or in any of its members. How would you solved it then?

1570693372
FireFox317
I can read the answer when I'm not online through irclog :)

1570698576
bgiannan
on macOS catalina:

1570698883
daurnimator
bgiannan: oooo, I saw this being discussed the other day

1570698902
daurnimator
bgiannan: have a look at the extended attributes on the file with `xattr -l` I think it was

1570698948
daurnimator
bgiannan: also IIRC someone said you only get that if you download with a browser; more specifically: safari. you can probably download with curl and have it work

1570698955
daurnimator
(or just delete the extended attributes?)

1570698982
bgiannan
`com.apple.quarantine: 0081;5d9ef4cb;Chrome;DA882937-764C-4360-9245-2B444CB0095B`

1570698992
daurnimator
bgiannan: otherwise you're the first person to actually hit the supposed upcoming "must be signed" problem that we thought wasn't hitting until next year

1570699032
bgiannan
doing `xattr -d com.apple.quarantine zig`

1570699035
bgiannan
works

1570699076
bgiannan
daurnimator, the required code-signing comes with catalina

1570699114
mikdusan1
bgiannan: yes that's the quarantine sillyness. manually downloading from commandline via curl or wget or whatever circumvents the browser tagging downloads with quarntine flag

1570699142
bgiannan
btw downloaded with chrome not safari

1570699158
mikdusan1
chrome probably uses the same system libs to fetch urls

1570699206
mikdusan1
and double-clicking the .xz file then uses a .app that is quarantine-aware and puts that bit on each extracted file

1570699250
bgiannan
huh they removed Availability.h now i can't import sdl anymore

1570699341
mikdusan1
did you upgrade xcode by chance?

1570699360
bgiannan
yeah i think i'm missing a `xcode-select --install`

1570699374
mikdusan1
first try nuking zig-cache dir

1570699388
mikdusan1
it has a path setting to xcode in there.

1570699417
bgiannan
ok

1570699445
bgiannan
did both now it works

1570699449
bgiannan
thx mikdusan1

1570699470
mikdusan1
yw. this exact thing bit me a week ago

1570699501
bgiannan
funny i had none of those issue on catalina beta

1570699644
mikdusan1
it's pretty clear macOS is moving towards sanboxing model just like iOS, iPadOS, etc.

1570699821
bgiannan
yes, quite sad

1570700496
mikdusan1
my only real gripe: where is 24-bit (true color) xterm color support for Terminal.app :(

1570700519
bgiannan
you use the stock terminal app?

1570700540
mikdusan1
yes i really like it

1570700594
bgiannan
what do you like about it vs iTerm ?

1570700703
mikdusan1
i don't use it

1570709971
rifkik
FINALLY

1570709981
rifkik
I FINISHED THE 65816 Emulator

1570710022
rifkik
Now, onto PPU

1570710334
mq32
neat!

1570714067
FireFox317
andrewrk: #3420 is ready for review. I'm pretty sure that this is the solution you talked about yesterday

1570714092
FireFox317
Maybe the naming of some variables can be a bit better.

1570715649
fengb
rifkik: if SNES is anything like the Gameboy, the PPU is the hardest part to get right :P

1570715679
daurnimator
fengb: I think emulating the snes was plagued with timing issues

1570715710
daurnimator
like; there's 4 clock domains or something; and some games take advantage of slightly out of sync clocks

1570715729
fengb
Oof really?

1570715736
fengb
That sounds awful

1570715816
daurnimator
there used to be really good articles about it on byuu.org but the author deleted them.

1570715827
daurnimator
you can probably find them in the wayback machine....

1570715922
fengb
"But run a game like Air Strike Patrol, which writes to the display brightness register multiple times per scanline, and you must synchronize after every clock cycle if you want full accuracy."

1570716220
fengb
Hardware limitations are quite amazing at pushing devs to do really crazy things

1570716244
pixelherodev
True enough

1570716786
n_1-c_k
'@cImport(@cInclude("sqlite3.h"))' fails with 'file not found'. '@cImport(@cInclude("/usr/include/sqlite3.h"))' succeeds, as does '#include <sqlite3.h>' in C. Is expected that the full path is required in zig?

1570716913
mq32
n_1-c_k, no, but you have to add system include paths in the build.zig file

1570716914
daurnimator
n_1-c_k: you need to pass the include dirs

1570716916
mq32
at least that's what i needed

1570716918
mq32
<fengb> Hardware limitations are quite amazing at pushing devs to do really crazy things

1570716925
daurnimator
n_1-c_k: (to zig build*)

1570716928
mq32
oh yeah, and it's really fun to do that!

1570716947
daurnimator
n_1-c_k: if you use .addSystemLibrary or whatever it is from your build.zig, it should set up include paths for you

1570716968
n_1-c_k
mq32, daurnimator, thanks.

1570717113
andrewrk
mikdusan, I wonder how it would affect memory and perf if we started doing string interning

1570717151
andrewrk
I could add some instrumentation to measure how it would affect memory

1570717354
daurnimator
I haven't had a look at the new docs yet. Are they online anywhere?

1570717409
andrewrk
daurnimator, I wanted to wait until end of today before making an announcement with a link, but here's a sneak preview:

1570717471
daurnimator
andrewrk: cool :)

1570717485
daurnimator
andrewrk: I guess target will be selectable?

1570717507
andrewrk
daurnimator, nope, I have a plan to merge multiple dumps into one, so the target will be a multibuild

1570717531
daurnimator
k

1570717562
andrewrk
having a selectable target is an ok hack to solve a difficult problem, but we can do better

1570717572
daurnimator
I think this is already showing us lots of std fixes we need to make :P

1570717576
andrewrk
yep!

1570717607
andrewrk
this is really contributor friendly too, it's just 1 page of js rendering based on a json dump of semantic analysis

1570717614
daurnimator
hmmm the http and valgrind structs seem to be empty right now?

1570717705
andrewrk
daurnimator, yes there's still lots to do. in this case the thing to do is to display the text: "this struct is not referenced or tested"

1570717711
daurnimator
also leaving the parameter name out seems to be a not-great default choice. e.g.

1570717751
andrewrk
I'm right about to merge FireFox's PR to fix that. I think it would be better to hold off feedback until a couple more days

1570717759
daurnimator
k, no problem :)

1570717762
andrewrk
unless you want to get involved in developing it :)

1570717781
daurnimator
I'm still traveling for a bit and am rather limited in capabilities

1570717797
daurnimator
I should be back to normal in 2 weeks

1570717838
andrewrk
fair enough. try this use case: use the keyboard shortcuts to search for std.io.readFileAlloc and have a look at the error set description

1570718569
companion_cube
this stdlib docs is already better than anything C hasâ€¦

1570718789
mq32
companion_cube, cppreference.com is actually quite good, also for C functions:

1570718826
companion_cube
yeah but look at

1570718845
companion_cube
it looks like an ugly wiki, it's not particularly nice

1570718869
mq32
yeah but the content is quite well made, that's imho the important part

1570718997
companion_cube
fair enough. maybe it's also that zig is more readable.

1570719070
fengb
"it looks like an ugly wiki, it's not particularly nice" so made by programmers for programmers ðŸ™ƒ

1570719433
companion_cube
well, I've been spoiled by rust's stdlib docs ^^

1570719461
mq32
companion_cube, i don't really like the rust docs

1570719476
mq32
i find it rather confusing

1570719522
presiden
rust's stdlib docs is nice

1570719572
presiden
the ability to search item is a good feature

1570719582
presiden
and the local copy

1570719626
companion_cube
and the [src] button, and the global organization

1570719630
companion_cube
mq32: what's confusing  about it?

1570719677
mq32
i really had problems finding the functions i need or even understand how to use different functions

1570719745
companion_cube
oh? I find it super easy to search. the only tricky part is that sometimes you need to look for a trait, not a function

1570719750
companion_cube
(like std::io::Read)

1570719848
mq32
example where i had problems:

1570719850
presiden
for a longer indepth local doc, info page + emacs is a good combo

1570719862
mq32
presiden: on windows? :D

1570719901
mq32
companion_cube: my problem was that i didn't understand that i could just do "map.insert("Foo", "bar");" and be happy with that

1570719913
presiden
maybe, if emacs can detect where the infopages installed?

1570719917
companion_cube
ah well, that's not the stdlib :D

1570719930
companion_cube
mq32: right, HashMap has some cool magic

1570719949
mq32
<companion_cube> ah well, that's not the stdlib :D

1570719952
companion_cube
I mean, it's nice to be able to do `map.insert("a", "b")` and not have to do `map.isnert("a".to_string(), "b".to_string())`

1570719955
mq32
yeah i know, but it's the example i can remember

1570719960
companion_cube
:)

1570719967
companion_cube
From/Into are pretty classic

1570719978
mq32
yeah, if you know it, which i didn't

1570720001
mq32
and Rust is kinda hard to grasp with all the implicit stuff going on

1570720029
andrewrk
that might be a limitation of the complexity of the language rather than the organization of the docs

1570720030
presiden
ah, and also for the old days, Delphi and it's docs is quite good too

1570720066
companion_cube
yeah, although it's not exactly implicits

1570720072
companion_cube
it makes `?` much more usable

1570720085
companion_cube
(and also, indeed, conversion between borrowed and owned)

1570720259
presiden
I love languages that provides local copy of it's documentation

1570720287
mq32
presiden: please stop! i have to work with those on a daily basis and the docs are just good for "i want to hack something together", but not for "i want to know who owns the memory" ^^

1570720308
mq32
there is TBytes, which is a "byte array thingy"

1570720334
mq32
it has no documentation at all if bytes are guaranteed sequential in memory, so i am copying them manually one-by-one instead of using memcpy or similar

1570720407
presiden
mq32, I think that's more of the quality of the docs, and unrelated to whether the docs available locally or not

1570720494
mq32
yeah, that's true. i was commenting on "Delphi and it's docs is quite good too"

1570720527
mq32
but i also love local readable docs

1570720560
mq32
best case is readable in a terminal which doesn't fit zigs docs right now, but could be done by statically generating HTML

1570721662
Cadey
andrewrk: you might find this interesting:

1570721903
companion_cube
in a terminal you can also generate manpages

1570723317
mq32
companion_cube, yeah, but i think the info format would be better suitable, as it is hyperlinked

1570723357
companion_cube
but it's mostly an emacs thing -_-

1570723553
mq32
so gnu info is actually an emacs module?

1570723609
companion_cube
ah, right. I just never could figure out the key bindings -_-

1570723687
mq32
now i'm a bit confused :D

1570723733
companion_cube
man uses my pager (less) which has vim like keybindings

1570723735
companion_cube
info isâ€¦ weird :p

1570723877
mq32
yeah, info is weird, but actually quite logical

1570723892
mq32
also, you can always press "h" for help :D

1570723940
companion_cube
thanks, will try it again I guess :)

1570723970
companion_cube
although most of the stuff I care about is available as manpages anyway

1570724020
mq32
yeah, but gcc for example has the full documentation available

1570724031
companion_cube
gnu stuff, heh

1570724036
mq32
all flags, all attribute, ld has full linker script documentation and everything :)

1570724190
mq32
my small game project is having some good progress in the last days. if i find time in the hackerspace today, i'll probably have some basic gameplay implemented later :)

1570727195
daurnimator
presiden: indeed. we'll need a docs => man page thing too

1570730501
gustav_o
hi everyone

1570730528
gustav_o
how do I go about debugging the following: broken LLVM module found: Call parameter type does not match function signature! [LLVM IR] ... Unable to dump stack trace: debug info stripped'

1570730903
andrewrk
hi gustav_o. the debug process for that looks like using cli flags to enable dumping LLVM IR of the module, finding out what is wrong, and then trying to produce a minimal zig test case. there is probably already an issue open for this which has already done this work

1570731125
gustav_o
andrewrk ah ok, so reduce example then --verbose-llvm-ir and try to find out what's wrong? I see that there are a few issues with the same llvm error, I'll investigate!

1570731272
gustav_o
keep up the good work by the way :)

1570731292
gustav_o
I'm starting a small game engine in zig, going to be fun

1570731495
gustav_o
So one strange thing I encountered when trying to debug this was that if I comment out a while loop in the middle of a function (the meat of the function), I get a type error ("use of undeclared identifier 'Self'") because I forgot to declare it. The strange thing is that zig seems to skip that error when the while expression is there and proceed

1570731495
gustav_o
to the code generation step (which later causes the llvm error). Shouldn't type checking be deterministic and always pass before code gen, or am I missing something with how zig has structured its compiler?

1570731568
gustav_o
Or is this related to comptime maybe?

1570731580
andrewrk
gustav_o, you might be experiencing how zig does not even semantically analyze branches known to be dead at comptime

1570731701
gustav_o
Ah yes, that was the reason.. so zig saw that the while never terminated so the code below did not get analyzed then. So in that case there should be an "unreachable code" error?

1570731745
gustav_o
(I hope I'm not notifying "so" every time I write the word, the webchat does it automatically)

1570731882
andrewrk
gustav_o, hmm yes there appears to be a regression in the "unreachable code" error for a loop that never terminates

1570732237
gustav_o
Is there an issue for it that you know of?

1570732297
andrewrk
gustav_o, this is related:

1570732415
gustav_o
mhm, here is an old one that hasn't been updated it seems:

1570732464
gustav_o
oh it's newer.. the wording in it sounded like there was no concept of unreachable code

1570733589
FireFox317
andrewrk: Thanks for merging my PR, the docs are really coming together!

1570733735
andrewrk
FireFox317, yeah! thanks for your contribution

1570733748
andrewrk
I have an idea to do multi-target docs, gonna try to do that today

1570733806
andrewrk
this is why we have done the ast nodes thing, because this is how you "join" multiple analysis dumps together - first you merge primitive types & ast nodes together, then you can start trying to merge the rest of the types together

1570733856
FireFox317
Ah yeah indeed, by just refering to the already existing astNodes!

1570733857
andrewrk
you end up with some things being additive, and some things having a

1570734038
FireFox317
And these docs can be generated by running them on the different CI's and with the help of the qemu thing right?

1570734227
gustav_o
looking forward to the std docs, is there any eta?

1570734366
gustav_o
hmm.. my problem relates to me trying to write to a slice that is passed as argument to a function as a pointer, ie. "parseIdent(self: Recognizer, allocator: *Allocator, result: *[]const u8)", and I feel I'm doing something wrong here. How do I pass an output-argument to a function that allocates memory and assigns it?

1570734385
andrewrk
gustav_o, eta is today or tomorrow

1570734390
gustav_o
wow :)

1570734753
n_1-c_k
After much effort I achieved the triumph of printing "SQLITE_ABORT is 4." using this program, <

1570734874
daurnimator
n_1-c_k: `var db: *c.sqlite = undefined` ?

1570734922
daurnimator
n_1-c_k: though I'd expect there is some `open` function.... so you'd do something like `const db = c.sqlite_open(someargs)`

1570734967
Sahnvour
andrewrk: could you remind me where's the code finding libc ? the sys_include_path has a typo it seems

1570734972
n_1-c_k
daurnimator, thanks, I now have a different error, which is progress.

1570735010
n_1-c_k
daurnimator, ah it was a type, it works now, thanks!

1570735018
n_1-c_k
s/type/typo/

1570735130
Sahnvour
nevermind, found it

1570735304
andrewrk
MSVC has really brought a lot of problems to us. this new dll dependency, code generation errors, making the include directory layout more complicated

1570735324
andrewrk
this is a good reason to self host

1570735355
tgschultz
is there a reason we need to be on 2019?

1570735445
andrewrk
no, I think it was a mistake to upgrade so quickly

1570735464
andrewrk
but as mikdusan points out, it's unclear that downgrading will solve the new dll dependency issue

1570735472
andrewrk
however it would solve the code generation bug

1570735474
Sahnvour
what's this new dll thing ?

1570735497
andrewrk


1570735669
Sahnvour
andrewrk: note that the solution for forcing static CRT linkage on old cmake versions is to use the override file I talked about the other day

1570736046
gustav_o
andrewrk: Ok I found the bug, it seems that zig doesn't enforce handling error sets when calling functions and at the same time deref:ing a pointer:

1570736074
gustav_o
not sure if it's only pointers to slices though, next thing to try..

1570736176
gustav_o
(hm, the second case is not a pointer but a slice though)

1570736809
DutchGh0st
Hi. I wonder how I

1570736837
DutchGh0st
atm I just download the zig compiler, and test within the build process

1570737681
daurnimator
DutchGh0st: 'properly'?

1570737687
daurnimator
DutchGh0st: you can have a test target in your build.zig

1570737705
DutchGh0st
well yeah sure but then the pipeline doesnt have any tests

1570737715
daurnimator
?

1570737717
DutchGh0st
it then runs 0 tests

1570737748
andrewrk
DutchGh0st, maybe you can look at zig's own build.zig for inspiration

1570737772
DutchGh0st


1570737774
DutchGh0st
there.

1570737777
DutchGh0st
thats what Im doing atm

1570737806
DutchGh0st
going off now, but Im gonna read back the chat, so Ill see any suggestions :)

1570737806
andrewrk
why bother downloading old versions of zig?

1570737829
DutchGh0st
(want to enforce older compiler support)

1570737878
andrewrk
I would recommend against that

1570738147
n_1-c_k
Thanks to earlier help, I've progressed from a compile time to a link time error, <

1570738475
andrewrk
n_1-c_k, fcntl64 should be provided by libc, which in your case is glibc

1570738492
andrewrk
what system are you on?

1570738503
n_1-c_k
andrewrk, debian stable.

1570738536
n_1-c_k
The C version does compile and run, so presumably does find it.

1570739060
andrewrk
n_1-c_k, I think I might have figured it out, are you using a static zig from ziglang.org/download?

1570739116
n_1-c_k
It's the 0.5.0 release download.

1570739191
n_1-c_k
This one I think,

1570739254
andrewrk
It looks like fcntl64 was added in GLIBC_2.28. When you build for the native target, zig tries to figure out which glibc version is native. If your zig is dynamically linked, it looks at its own libc dependency to find which glibc version is native. Otherwise there's a TODO to do something more sophisticated, and thenh it falls back to the default of GLIBC_2.27

1570739306
andrewrk
so the proper fix to this is to improve native glibc version detection

1570739341
andrewrk
I have a plan for this, which is to essentially do ldd on /usr/bin/env, and find which glibc it is

1570739351
andrewrk
this will also solve

1570739419
n_1-c_k
I understand some of those words.  Would I better off in an environment where I can build zig?  I've tried on debian unstable and given up.

1570739444
andrewrk
it might actually be easier to implement the fix than figure out a workaround for you

1570739456
n_1-c_k
oh righto

1570739477
n_1-c_k
thanks for the very full response

1570739485
daurnimator
do we have a way to set the target glibc version?

1570739491
andrewrk
but yes, if you built zig from source, I believe it would solve this for you

1570739509
andrewrk
daurnimator, yes: -target-glibc

1570739517
andrewrk
I can't remember if this causes the target to become non-native though

1570739527
daurnimator
so an easy workaround for andrewrk is to use -target-glibc and tell us if it works :P

1570739535
daurnimator
uh *for n_1-c_k

1570739544
n_1-c_k
In case I decide to try, what's the environment (linux distribution or other OS) with the least chance of build troubles?

1570739580
n_1-c_k
daurnimator, er sure... where do I put the '-target-glibc'?

1570739596
daurnimator
n_1-c_k: the hardest thing is to actually have llvm9 available :P

1570739620
n_1-c_k
daurnimator, well I managed that on debian unstable but it still wouldn't build :(

1570740657
gruebite
:D

1570740921
gustav_o
I found a GitHub issue that got the same LLVM error when using error sets with slices:

1570740935
gustav_o
I added a very minimal reproduction

1570741100
andrewrk
thank you gustav_o

1570741430
gustav_o
I save all bugs I encounter and will probably return to them to see if I can fix them, once I've gotten a bit further with my engine

1570741442
gustav_o
*zig bugs

1570743557
mikdusan
andrewrk: re: string interning; for the results of ir_resolve_str?

1570743622
andrewrk
I mean in general, across the entire codebase for most strings

1570743634
andrewrk
Buf is about 2x overhead

1570743668
scientes
then fix buf?

1570743711
mikdusan
ah. so on that note i was wondering if you could shed some light on `ir_eval_const_value`,

1570743737
mikdusan
it creates an ir_executable, does potentially a ton of work,

1570743796
mikdusan
but is there kind of a wrap here suitable for arena? arena.create(); eval(); take/copy value to main heap; arena.destroy()

1570743819
andrewrk
yes I think there is an opportunity for this, however there are plenty of things allocated that must not be destroyed during this time

1570743831
andrewrk
for example anything to do with ConstExprValue

1570743856
andrewrk
I think it would be good to make IrInstruction have a pointer to ConstExprValue rather than embedded, this way IrInstructions can be deleted

1570743881
samtebbs
Is there a neat Zig way of getting the maximum value of an integer type?

1570743886
andrewrk
however even these are referenced sometimes. it will require careful code review to see which things can be dropped from memory and which must remain

1570743919
andrewrk
samtebbs,

1570744066
samtebbs
andrewrk: cheers

1570745886
fengb
Oh wow

1570745921
fengb
I think my favorite part is builtins :P

1570746432
waleee-cl
do the ? operator work? I use a vim-like extension to ff that isn't always working perfectly in "let all keys through"-mode

1570746525
waleee-cl
or rather perhaps, does it do anything yet? :)

1570746585
andrewrk
it works. i welcome suggestions to make it friendlier to extensions which mess with keyboard shortcuts

1570747090
andrewrk
I'll do a stream in a bit to demo the doc generation and show how to contribute

1570747137
mq32
andrewrk, whyyyy? i wanted to get sleep this night!

1570747706
waleee-cl
andrewrk: I'd guess that the fault lies more with tridactyl

1570748301
waleee-cl
hm, but it doesn't seem to work with all extensions disabled either

1570748385
waleee-cl
ah, nvm, firefox didn't start a new instance with --safe-mode for some reason and loaded the extensions anyway

1570748692
waleee-cl
well, doesn't seem to work for with a extension-less pristine firefox 69.0.2 instance

1570748889
andrewrk
waleee-cl, use the browser's debugger to figure out why. main.js, line 1197

1570749326
waleee-cl
heh, it seems to not match any of the cases

1570749475
andrewrk
what value is it producing?

1570749677
waleee-cl
ShiftRight, seems like this might be a keyboard layout issue?

1570751105
waleee-cl
(late night brain, after a setxkbmap us),  of course that wasn't the fault, but the onWindowKeyDown-function is triggered with only the shift-key

