1551762376
whatupdave
can zig import c++ header files?

1551763279
suirad
can anyone explain why I am getting the correct asm that I expect, but when i use it, I end up segfaulting?

1551775222
Hejsil
suirad I didn't get it to work, but I noticed that you pass the pointer to the function and not the function itself. When I looked in gdb i noticed that __unamed2 was the function that crashes, but __unamed2 is a variable and not a function.

1551775282
Hejsil
My fix makes your code crash with "Program received signal SIGILL, Illegal instruction."

1551780838
nbjoerg
W^X?

1551806569
Akuli
how do i std.debug.warn a pointer to a struct?

1551806644
andrewrk
Akuli, doesn't it work with "{}" ?

1551806670
Akuli
no, it creates a huge error

1551806674
Akuli
let me try to create a simpler test case

1551806846
Akuli
andrewrk, self

1551806847
Akuli
oops

1551806851
Akuli
andrewrk,

1551806915
Akuli
i just want to print the address of the pointer

1551806942
Akuli
i mean, i want to print what "%d" with (int)(uintptr_t)the_pointer would do in c

1551807070
bheads
does printing with @ptrToInt(self) work?

1551807095
Akuli
yes, and that answers my question :D thanks

1551807109
bheads
np, but print should handle the prt correctly

1551807131
andrewrk
I think it might be a regression

1551807215
andrewrk
hmm I think it's just inability to print a []u32 field

1551807227
andrewrk
anyway the answer to your question Akuli is {*}

1551807234
andrewrk
forces printing as pointer

1551807239
Akuli
:D nice

1551807248
andrewrk
by default, single-item pointers of structs will just try to print the struct value

1551807261
andrewrk
and fmt can't handle printing []u32 fields yet

1551807273
andrewrk
(just nobody had needed that yet and made a pull request)

1551815356
Akuli
are "return blah();" and "return try blah();" different if blah returns an error union? does errdefer run in the one without try?

1551815862
andrewrk
Akuli, they're equivalent. when you return an error union, zig checks if the error union is an error, and if so, runs errdefers

1551815869
Akuli
nice

1551816652
Sahnvour
hi

1551816670
andrewrk
hi Sahnvour

1551816673
Sahnvour
it seems like having optional comptime_int is not supported, do we want this to be legal or not ?

1551816683
andrewrk
yes

1551816686
andrewrk
it should be legal

1551816709
Sahnvour
that's the issue behind

1551816741
Sahnvour
I guess the `orelse` emits IR than contains a ptr load, and it ends up crashing

1551819057
Sahnvour
andrewrk: the compiler panics when trying to unwrap a ?comptime_int because it is a field access, it works fine with a local variable instead. I don't really know where to look, any idea ?

1551819124
andrewrk
I'll take a look

1551819146
Sahnvour
great

1551819537
andrewrk
Sahnvour, this passes for me:

1551819539
andrewrk
what's your test case?

1551819623
Sahnvour
the one provided in

1551819850
andrewrk
Sahnvour, the type field of a comptime value is wrong

1551819875
andrewrk
the compiler is trying to do a pointer reinterpret of a *usize to a *comptime, which doesn't make sense and is crashing

1551819923
andrewrk


1551819982
andrewrk
I searched for "entry_usize" and found some hits in the typeinfo code

1551820015
andrewrk
well just one hit in the offset field

1551820042
Sahnvour
uh-oh

1551820045
andrewrk
that fixed the test

1551820063
andrewrk


1551820181
Sahnvour
indeed, sorry I missed this one in my commit

1551820227
andrewrk
no worries

1551820265
andrewrk
want to do the PR?

1551820284
Sahnvour
ok

1551827204
mikdusan
hi is there an option to run this test command with multiple cores? zig build --build-file build.zig test-compile-errors

1551827615
andrewrk
mikdusan, not yet.

