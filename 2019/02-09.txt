1549691274
emekankurumeh[m]
zig's color on github is really close to rust's.

1549691458
andrewrk
indeed

1549691504
emekankurumeh[m]
zig is rgb(236, 145, 92) and rust is rgb(222, 165, 132)

1549709455
tiehuis
emekankurumeh[m]: Some other similar language colors:

1549709483
tiehuis
i dont think this matters as much now since the spacer was added between languages

1549716638
peekazig
Hi! I'm not actually using zig because of lack of time but I like to have a look at its progress every once in a while. I also look at nim periodically but I think it's main weakness is the anti-social attitude of its developers. I just wanted to say thank you and kudos to the zig community and specially to @andrewrk for being always nice to everyone.

1549717389
wilsonk
peekazig: yep, I agree with your sentiments about the quality of the Zig community, and Andrew also, of course :).  (I haven't worked with Nim, though, so I can only comment on this community!)

1549730014
Akuli
a random thought about std/testing.zig: please don't add a method for everything, like python's stdlib unittest module does

1549730048
Akuli
unittest has: assertFalse, assertTrue, assertRaises, assertWarns, assertLogs, assertEqual, assertNotEqual, assertAlmostEqual etc

1549730423
schme245
so, I have a big where the function only returns the correct value if I add `warn("");` as the last statement of the inner loop. if I remove the warn, the value is garbage. only happens with --release-fast. how does one go about debugging a problem like this? :D

1549730455
schme245
*so, I have a problem

1549731559
schme245
huh, it works on the latest master!

1549731971
Akuli
given this:  const A = union(enum) { Number: u8, None, };  how should i create an "instance" of A.Y? this works, but is it the best style?  const a = A{ .None = void{} };

1549731990
Akuli
s/A.Y/A.None/

1549732342
Akuli
the docs have an example of instantiating what is A.Number in my example, but not how to use the None value

1549732765
schme245
on closer inspection, the latest master didn't solve my problem, it just made my reproducible test case pass. the problem in the original code persists :/

1549732832
andrewrk
schme245, debugging --release-fast is tricky. there are a lot of approaches

1549732859
andrewrk
for starters we can eyeball the assembly, and see if valgrind reports anything

1549732916
schme245
my debugging skills for native code are basically non-existant, unfortunately. everything I do with Zig is a learning experience

1549732921
schme245
what do you suggest for viewing the assembly?

1549732926
andrewrk
this could be quite fun then :)

1549732937
andrewrk
is your problematic code open source?

1549732963
schme245
I can make it open source if you give me 5 minutes to clean it up :)(

1549732969
andrewrk
sounds good

1549733017
andrewrk
Akuli, the main point of std.testing functions is to help show why tests failed. You can see how expectEqual would do that because it could, for example, show a string difference in a useful way. I don't see how having both assertFalse and assertTrue would accomplish that goal

1549733229
andrewrk
Akuli, you can implicitly cast an enum tag into a union if the payload type is void. const a: A = A.None;

1549733264
andrewrk
(or just leave it as the enum value, which will then implicitly cast when you use it)

1549733549
Akuli
about std.testing: going with 5 or 10 or 20 different asserter functions will likely result in what happened in python, most people not using the std solution

1549733606
Akuli
in python, there are alternatives that give the same amount or more debug information with simpler syntax, but even if there weren't any, i wouldn't want to type something like 'self.assertIsInstance(x, SomeType)' if i can do 'assert isinstance(x, SomeType)' (in python)

1549733681
Akuli
and the "alternatives" i mentioned run the code in some special way so that from 'assert isinstance(x, blabla)' they notice that it's a type assertion, and display a descriptive assert fail message accordingly

1549733816
andrewrk
it's fine if people want to use assert - they just have to understand that assert invokes undefined behavior in release-fast and release-small modes

1549733837
andrewrk
or in tests one can use expect, which panics even in release modes

1549733862
Akuli
i'm not saying that a "special assert" (whatever it was called in zig) for tests is bad, i'm saying that 10 or 20 "handy utility functions" that call it is bad

1549733941
Akuli
currently zig has 3 of those, which is fine

1549734366
schme245
andrewrk, where you able to reproduce the issue?

1549734456
andrewrk
schme245, give me a few minutes - I got a response to a question on llvm-dev mailing list and I'm replying

1549734502
schme245
no stress! :) I have to run in 10 minutes but I'll be back later this evening

1549734515
andrewrk
ok, take care

1549735147
Akuli
i have a script that pulls and compiles the latest zig, it's amazing how much new stuff is added every day! i don't think i have never seen a project that's developed this fast

1549735160
Akuli
for just a couple days:   244 files changed, 4210 insertions(+), 3966 deletions(-)

1549735252
andrewrk
that's mostly

