1560480643
daurnimator
uh, not really. mainly the JVM

1560480668
daurnimator
I run some of my systems with overcommit 2; only JVM programs give trouble

1560480688
tyler569
I think he meant like virtual machines and host migration

1560480766
daurnimator
>  09:44:08 <andrewrk>it will be ok if the kernel devs were smart enough to not get too clever and keep vm mappings separate if they came from separate mmap calls

1560480768
daurnimator
^ did they not?

1560481135
mikdusan


1560481652
daurnimator
no seems they didn't.... adjacent mmaps are merged.

1560481659
daurnimator
that's fucking annoying

1560481671
daurnimator
(I wrote a quick test program)

1560488670
emekankurumeh[m]
really?

1560488719
daurnimator
andrewrk: so I've ended up wanting 'do while' loops quite a lot in zig

1560488750
daurnimator
one particular use case that I think might convince you, is... counting over a whole integer range

1560488770
daurnimator
e.g. imagine I have a u8 counter and I want to enumerate over 0-255

1560488806
daurnimator
var i = u8(0); while (i < 256) : (i += 1) {} // this doesn't work, as i cannot hold 256

1560488862
daurnimator
vs a 'do while': var i = u8(0); do {} while (i != 255) : (i += 1);

1560494830
gonz_
Has there been a regression in how the VS code the plug-in is able to report errors? I'm trying to use it and it's not even marking obvious things like missing semicolons.

1560494929
gonz_
It's finding the zig binary (it can format automatically) and the formatter will complain about these obvious things, but it doesn't seem to actually relay them to VS code in terms of diagnostics.

1560495392
gonz_
Also, is there a file watching mode?

1560496507
gonz_
Actually, this is trivial to do with `watchexec` so I guess it doesn't really matter: `watchexec 'zig run hello.zig'`

1560496584
gonz_
`watchexec` also targets a lot of platforms so it's pretty generally useful for these things.

1560512080
cloudhop
I'm building a shared library with an exported C interface, and I can get Zig to install the DLL to `./lib/`, but even though I can find the generated `.h` file in `zig-cache`, I can't seem to convince zig build to install it anywhere. Is there some equivilent to installArtifact that outputs the header files?

1560523378
FireFox317
cloudhop: I think you want `setOutputDir`, it should install all the files to that folder

1560523700
andrewrk
I think .h files are not handled well in the build system yet

1560523733
andrewrk
there's sort of a dependency problem in the compiler right now, because C objects are compiled before zig root source file. if the C objects depend on the generated .h file, that won't work

1560525275
scientes
ugggh, there is so much operator overloading the C++

1560525295
scientes
even if you can accept that you still never know what algorithm or data structure is being used

1560536330
terinjokes
that's frustrating, looks like the channel logs are missing messages from this morning

1560550028
gamester
Hah, I had a ton of "[]const []const u8" in my code. Arrays of slices, but with that additional const. The [_] was an excellent change, makes things much clearer.

1560550195
andrewrk
glad to hear it

1560551525
cloudhop
so, I was able to use setOutputDir to convince zig build to dump

1560551553
andrewrk
cloudhop, have you tried the install target?

1560551560
andrewrk
that's going to become the default target in the future

1560551571
andrewrk
err sorry, they're called "steps" not "targets" :)

1560551613
cloudhop
that's when i'm using zig build install

1560551619
andrewrk
yeah

1560551645
andrewrk
and you have to use b.installArtifact()

1560551653
cloudhop
Yes, but I already do that

1560551655
cloudhop
This does not install the headers

1560551734
cloudhop
If I comment out setOutputDir, this only installs the EXE and the DLL:

1560551787
andrewrk
this sounds like a bug in std/build.zig

1560551870
cloudhop
I've been digging around build.zig, but there doesn't seem to be

1560551938
andrewrk
cloudhop, hmm yes it would be in InstallArtifactStep.make and I don't see any logic for the .h file

1560552011
andrewrk
ok so it's TODO rather than a bug :)

1560552030
cloudhop
Should an issue be filed on this or do you track TODOs elsewhere?

1560552056
andrewrk
yep please file an issue if you would like to track progress on this

1560552367
cloudhop
done

1560552513
andrewrk
thanks

1560553180
cloudhop
Is it possible to export a function pointer in a C interface? I'm trying to export a function that returns a function pointer to C and i hit `TODO implement get_c_type for more types`

1560554253
terinjokes
I asked the same question yesterday. There's an issue open on GitHub for someont to decide what the generated header should look like.

1560554371
terinjokes


1560554879
cloudhop
oof

1560554885
cloudhop
if I can't export function pointers I can't... do anything

1560554904
terinjokes
do you need the generated headers?

1560554929
cloudhop
I could probably manually write the C header but I was specifically trying to avoid that

1560554964
cloudhop
The problem is that I have a seperate backend for this UI library, which is defined by a C interface that returns a struct of function pointers to all the plugin's functions

1560554976
cloudhop
so the entire C interface is all function pointers

1560555031
cloudhop
Even worse, there are going to be callbacks, which must be exported so any C compatible ABI can utilize them, which will also be problematic if zig can't export function pointers

1560555063
terinjokes
are you defining the plugin interface? or has the UI library already defined it?

1560555083
cloudhop
I'm defining it

1560555087
cloudhop
hence why i wanted to export it

