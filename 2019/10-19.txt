1571443255
andrewrk
marijnfs, what gives you this idea?

1571443726
marijnfs
andrewrk: I'm getting build.zig:11:5: error: expected token '}', found 'DocComment'

1571443731
marijnfs
when I use a /// for commment

1571447731
pixelherodev
i recall seeing similar

1571447743
pixelherodev
pretty sure it's a bug in the error message

1571448043
fengb
/// is a doc comment which can only go right before a declaration. // is a regular comment

1571448176
pixelherodev
Ah - maybe it's time to edit " eventually, it will become a compile error to have a doc comment in an unexpected place, such as in the middle of an expression, or just before a non-doc comment." in the docs :)

1571469732
mq32
nrdmn, thanks for the comments, gonna fix it now :)

1571469764
mq32
fengb, a question on wasm: can i load wasm from a local html file or does this require a server?

1571470554
reductum
mq32: for a while firefox would let you load it directly from local file, but now you need a server

1571470576
reductum
I think chrome has required a server for a long time. I don't know about other browsers.

1571470991
mq32
sad :(

1571471229
andrewrk
this is a problematic restriction

1571471422
reductum
Yes it's unfortunate.

1571471445
reductum
What I do now is just `python3 -m http.server` in the dir with the wasm module.

1571471448
bgiannan
andrewrk, any idea what that might be:

1571471634
reductum
If the zig stdlib included a similarly super basic http server, maybe that could be used.

1571471697
andrewrk
bgiannan, you will actually get a better error if you don't do --verbose-ir. in your paste, the code doing verbose-ir itself crashed before the actual problem happened

1571471699
mq32
reductum, would still require you to startup an http server to read the docs

1571471704
mq32
which is just "not simple" ;)

1571471733
bgiannan
andrewrk, i had not input at all without it

1571471737
bgiannan
output rather

1571471754
reductum
Oh I just got here. Were you talking about docs? I was talking about testing local wasm files in the browser.

1571471765
bgiannan
i'll try and build zig myself so i can get a error stacktrace

1571471775
andrewrk
bgiannan, that will help

1571471792
mq32
reductum, yeah my big question was if i could run wasm in the docs

1571471810
mq32
but i think that andrew would have already done this if it would be possible

1571471810
andrewrk
mq32, unfortunately, being able to see it with file:/// is an important feature

1571471846
mq32
yeah i'm totally with you there. not requiring a server is just too important

1571472151
reductum
Oh hey there's a setting you can change in Firefox for this:

1571472178
reductum
privacy.file_unique_origin. If you set it to false, you can run wasm files without a server.

1571472182
reductum
I'm doing it right now.

1571472281
mq32
reductum, yeah but that doesn't help either, because anyone who wants to read the docs offline would have to do this

1571472284
andrewrk
I think firefox handled the CVE incorrectly

1571472293
andrewrk


1571472312
andrewrk
it's assumed that files on a server are there on purpose, for access by the web page

1571472342
andrewrk
when looking at a file:/// URL, the browser assumes that the files are there intentionally as well, for css, images, and scripts

1571472350
daurnimator
mq32: oh hey look more motivation to work on the zig http server :)

1571472384
andrewrk
but when a script tries to access same such resources, now firefox changes its mind, and says the files are not there on purpose, accessing them is a security vulnerability

1571472403
daurnimator
andrewrk: yes IIRC each file:// url is considered its own "origin"

1571472412
daurnimator
so you have the same restrictions as if you try and go cross-domain

1571472433
daurnimator
==> <img>, <style> and a few other tags have always worked cross-domain; so they work across file://

1571472445
andrewrk
it's inconsistent and problematic. there should be a way to run web assembly without depending on this origin thing, just like it works for scripts, images, css

1571472456
daurnimator
but XHRs, wasm, and most neer stuff... is blocked cross-domain as well. and hence blocked for file://

1571472474
reductum
Chrome does the same.

1571472498
daurnimator
andrewrk: browser developers consider allow cross-domain scripts, images and css to be a mistake; but they have to keep it around for compat.

1571472500
andrewrk
it's a nice find that you can change it, but that doesn't really matter. the default is important

1571472539
reductum
Yup agreed. I was more selfishly excited about that discovery for my own project :P

1571472590
andrewrk
daurnimator, I don't think that's a valid excuse

1571472604
andrewrk
wasm must be able to be executed in the same context as <script> if it is to succeed

1571472623
daurnimator
andrewrk: true. but thats what they seem to think and I don't think I have a hope of changing their mind

1571472645
marijnfs
What do you guys get when you add:     var testval = [*c]u8 {0};

1571472646
andrewrk
I don't either. but they're doing it wrong

1571472672
bgiannan
huh trying to install llvm 9 from

1571472684
andrewrk
marijnfs, the expected outcome is a compile error. also, don't use c pointers

1571472713
andrewrk
bgiannan, scroll down and look for "archive signature"

1571472732
marijnfs
andrewrk: allright, I needed to pass a string to c. I guess I should use c"somethign".

1571472741
andrewrk
there you go

1571472753
bgiannan
i added `deb [trusted=yes]` and now it works

1571472785
andrewrk
good night. I'll be happy to help you with the compiler crash tomorrow bgiannan

1571472809
daurnimator
andrewrk: oh wow you haven't gone to sleep yet

1571472812
bgiannan
andrewrk, good night

1571472819
daurnimator
oh wait. I forgot I'm in a different timezone to normal

1571473173
mq32
daurnimator, what timezone are you in?

1571473453
daurnimator
mq32: currently germany

1571473556
mq32
ah, so we have the same local time :D

1571474030
marijnfs
Guten Tag

1571474154
marijnfs
I'm importing a c header, but when I call a function with it, I get a segfault, 'c' seeming to be 0

1571474184
daurnimator
marijnfs: what is 'c'?

1571474199
daurnimator
(you're going to need to post code)

1571474472
marijnfs
sure, whats the pastebin of choice here?

1571474567
marijnfs
daurnimator:

1571474572
marijnfs
like that basically

1571474837
daurnimator
marijnfs: and how are you trying to run/compile it? (please paste command line and output)

1571475446
marijnfs
daurnimator: build.zig is

1571475474
marijnfs
then I zig build, and run ./zig-cache/bin/pub

1571475738
daurnimator
marijnfs: (aside): you shouldn't need addLibPath

1571475949
marijnfs
daurnimator: without it /use/lib64 doesnt seem to be a standard search path

1571475957
marijnfs
but anyway that can't be the error right?

1571476094
riba
i think i'm almost there, just having linker troubles now - it can't find system libraries

1571476104
riba
(output of pkg-config --libs)

1571476119
riba
does anyone have a pointer?

1571476180
riba
instead of zig build i'm using a monstrous command

1571476190
riba
and the one lib i specified with -L can be found too

1571476255
riba
in case it matters, i'm trying to make an .so with build-lib -dynamic -fPIC

1571476480
daurnimator
riba: can you share your build.zig and/or invocation?

1571476701
mq32
is there an easy way to allow "zig build run" to pass arbitrary parameters to my executable?

1571476796
riba
daurnimator: zig build-lib -isystem /usr/include/libpurple -isystem /usr/include/glib-2.0 -isystem /usr

1571476799
riba
/lib64/glib-2.0/include -isystem ./headers/jabber/ -isystem /usr/include/libxml2 -dynamic -fPIC -DPURPLE_PLUGINS -lc -L

1571476802
riba
/usr/lib64/purple-2 -lpurple -lglib-2.0 -lxml2 -lz -llzma -lm -ldl -lxmpp xoob.zig --disable-gen-h

1571476815
riba
sorry, it's longer than i thought

1571476861
FireFox317
marijnfs: You forgot a linkSystemLibrary("c") in your build script

1571477127
FireFox317
You always have to add it when working with c libraries

1571477133
riba
maybe i'm having the same problem as marijnfs who had to add the system path

1571477203
daurnimator
riba: you probably need -L/usr/lib as well.

1571477208
marijnfs
FireFox317: thanks

1571477260
marijnfs
error: undefined symbol: __gxx_personality_v0

1571477261
riba
daurnimator: yeah just tried that and it works, but why is the system lib path not searched by default?

1571477271
marijnfs
hmm, maybe I can choose a different libc?

1571477296
daurnimator
marijnfs: heh... I tried to build your example..... and my computer ran out of memory and locked up. that was weird.

1571477300
mq32
marijnfs, what target are you using? x86_64-linux-gnu?

1571477313
marijnfs
hmm, maybe I can choose a different libc?

1571477316
marijnfs
sorry

1571477326
marijnfs
mq32: Yeah

1571477335
daurnimator
riba: because we don't want to implicitly depend on the host system

1571477348
marijnfs
daurnimator: wow that is weird indeed

1571477435
riba
daurnimator: i don't get it but i'm sure you have your reasons :D just needs to be documented somewhere then i think

1571477488
mq32
riba: it's quite sane for cross-platform-development not to rely on any system libraries

1571477511
FireFox317


1571477660
marijnfs
dammn, I realised zmq provides c bindings to c++, so I also need libc++

1571477671
marijnfs
man these errors get cryptic, i guess it's hard to fix that

1571477747
daurnimator
marijnfs: are you statically linking or dynamically? if the former, yes you'll need to link all libraries of your dependencies, pkg-config usually helps here. but for a dynamic lib, you shouldn't need it

1571477803
marijnfs
daurnimator: didn't set static linking explicitly, but did add linkSystemLibrary for the libraries

1571477973
daurnimator
marijnfs: ah looks like static is the default for executables

1571478027
daurnimator
marijnfs: however; linkSystemLibrary should use pkg-config to figure this out...

1571478094
daurnimator
marijnfs: at least on my system its called libzmq not zmq

1571478116
marijnfs
daurnimator: do you have examples of how to use pkg-config?

1571478219
daurnimator
marijnfs: e.g. `pkg-config --libs --static libzmq`

1571478276
marijnfs
interesting, do you call this stuff in a build.zig script?

1571478291
daurnimator
marijnfs: build.zig calls it for you

1571478335
daurnimator
though looking at the source of std/build.zig...... I think we don't pass --static?? that would be a bug to fi

1571478337
daurnimator
x

1571478405
marijnfs
daurnimator: I see, thats smart

1571478631
bgiannan
what's `cfe` ? mentioned here

1571478641
bgiannan
can't seem to find it

1571478771
dingenskirchen
that's the name of the clang folder

1571478775
dingenskirchen
dunno why though.

1571478849
daurnimator
I think its the "real" name of clang => C Front End

1571478861
daurnimator
e.g. the clang mailing list is cfe-dev

1571478977
marijnfs
bgiannan: i didn't need to add cfe

1571479002
marijnfs
but llvm didn't find the clang library initially during configuration, had to add in manually

1571479131
marijnfs
check if LLVM_EXTERNAL_CLANG_SOURCE_DIR is found

1571479536
marijnfs
how do i get the compiletime size of a string

1571479556
mq32
("foo").len

1571479571
marijnfs
how do i get the compiletime size of a string

1571479574
marijnfs
woops

1571479581
marijnfs
mq32: thanks

1571479595
mq32
1np

1571480037
marijnfs
how do i make a string literal look like []u8

1571480130
marijnfs
a found that making it const helps, but seems a bit hard to infer from expected type '[]u8', found '[11]u8

1571480177
marijnfs
a hint system for the compiler would be cool, like how clang++ gives suggestions when you screw up common cases

1571480545
marijnfs
I'm trying to make a function in build.zig that creates an executable and am trying to find the type of executable, but i see that addExecutable doesn't even define the return type. Is it infered?

1571482040
daurnimator
marijnfs: []u8 is a slice (pointer + length). [11]u8 is an actual array

1571482212
marijnfs
daurnimator: I want to pass a ptr to the literal to C, so it needs to be ?*c_void

1571482215
marijnfs
how do i do that?

1571482270
daurnimator
marijnfs: address of operator (&) and then maybe a pointer cast?

1571482410
marijnfs
daurnimator: that seems to almost work, but it discards const qualifier

1571482489
marijnfs
ah found a hack, using ptrToInt and then intToPtr

1571483106
bgiannan
huh llvm make install complaining about missing ocamldoc...

1571483111
mq32
oh wow. my GLes wrapper killes zig test :D

1571483387
bgiannan
guess i can build llvm without ocaml/go bindings

1571490517
dimenus
does llvm have a standalone assembler (nasm syntax) or do you have to use clang?

1571493074
riba
cimport ignores conditional macros

1571493115
riba
i defined the condition to be true using -D

1571493138
mq32
riba: @cImport({@cDefine("MY_COND",{}), @cHeader("foo.h") })

1571493180
riba
well actually it doesnt matter, it should be defined either way, just the definition is different

1571493192
riba
mq32: thanks, i'll try that

1571493217
mq32
riba, it depends on what it is defined to

1571493229
mq32
zig ignores a lot of more complex macro definitions

1571493292
riba
mq32: that might be it then, that macro generates a function declaration and definition plus calls another macro

1571493548
riba
should --verbose-cimport output something in that case? because as far as i can see it doesn't

1571493565
mq32
i don't know

1571493572
mq32
but anything except for trivial macros is omitted

1571493583
mq32
(how should that be translated to zig anyways?)

1571494663
riba
a special inlining step?

1571494696
riba
alternatively remove "Zig is better at using C libraries than C is at using C libraries." from the introduction :P

1571495205
riba
not sure i can or want to duplicate glib macro logic for os-dependent things

1571495402
riba
or is stuff like __declspec(dllexport) unnecessary?

1571497029
mq32
__declspec(export) is just "export fn foo()"

1571497034
mq32
(if you want to export a fun)

1571498536
riba
i think that's what i wanna do, if i decoded this macro right

1571498540
riba
i'll see if it works

1571505259
marijnfs
@intToPtr(?*c_void, @ptrToInt(&buf)), is that really needed?

1571505570
marijnfs
to get a void*

1571505654
mq32
everytthing non-const should cast to c_void

1571505671
mq32
do you want to interface with C? what does the function do you want to call?

1571505756
marijnfs
it constructs a message struct, it takes the void* at the pointer to the data, another argument gives the size

1571505802
marijnfs
so now i use a zig string, and get the needed c_void pointer like that

1571505859
mq32
huh

1571505862
mq32
buf is the slice?

1571505865
mq32
just use buf.ptr

1571505866
mq32
then

1571506002
tgschultz
zig string doesn't end in null

1571506012
tgschultz
oh, it takes the size, nevermind

1571506099
marijnfs
using buf[0..].ptr complains about losing const qualifier

1571506104
marijnfs
I guess that makes sense

1571506168
marijnfs
but it's hard to cast that away

1571506197
marijnfs
maybe it would be nice to loosen requirements when talking to C, since it's often messy like this

1571507269
marijnfs
can i await on multiple frames? then take whichever is first?

1571507673
andrewrk
marijnfs, that abstraction is "select". It's one of the things that I tried to implement with old async/await here:

1571507690
andrewrk
now it's time to try to re-create this abstraction with the new async/await language features

1571508247
marijnfs
andrewrk: sweet

1571508876
muffindrake
I've not taken a look at async/await yet. Does that let me more easily work with blocking functions?

1571509119
andrewrk
muffindrake, if you mean non-blocking, then yes

1571509184
andrewrk


1571509196
andrewrk
I like how this error sets business exposes error codes that should not be

1571509970
ForLoveOfCats
I'm experiencing the build.zig for the zig0 0.5.0 compiler crashing while linking in `std.build.LibExeObjStep.linkSystemLibrary` by hitting the `else => unreachable,` on line 1841. Thowing a warn in there to log the error reveals that it's throwing an `error.StreamTooLong` while linking LLVM `LLVM-9`. The build previously succeeded with an earlier master in the lead up to 0.5.0 however there have been several system updates since

1571509971
ForLoveOfCats
then. I wanted to check here before opening a bug on GH.

1571510050
andrewrk
ForLoveOfCats, there were 2 fixes after 0.5.0 associated with this:

1571510087
ForLoveOfCats
Glad it's known and handled! Cheers!

1571510993
andrewrk
nice daurnimator!

1571511028
andrewrk
tell them to work on improving the widespread support of continuous integration services

1571511039
andrewrk
I mean, support for their OS on these services

1571511314
marler8997_
I remember it being ".zig-cache", but now it looks like it's "zig-cache"?

1571511358
marler8997_
Am I remembering wrong, or did it actually change?

1571512115
andrewrk
I don't think it was ever .zig-cache

1571512247
marler8997_
oh ok, weird

1571512928
nrdmn
I did some work on padding in std/fmt. I'm not sure if I'll find time to finish that

1571524543
marijnfs
can you get return types at comptime?

1571524560
marijnfs
my function should return whatever some specific functiohn returns

1571524955
wilsonk
marijnfs: I think tgshultz' pseudo_structs.txt might have touched on that:

1571525088
tgschultz
I think that might be much more complicated than what marijnfs is talking about. You can have the return type of a function be the result of a function call on any parameter passed to the function. `pub fn a(x: var) SpecialReturnType(@typeOf(x)) { ... }`

1571525172
tgschultz
so if you want the return type to match another function, you just need to use @typeInfo to inspect the function and get its return type. However, if that function is generic that won't work.

1571525343
mq32
tgschultz: probbaly just @typeOf(specificCall())

1571525455
wilsonk
ah, ok...I guess I was reading more into that than was needed

1571529478
ntgg
is there a function that creates an iterator out of a slice?

