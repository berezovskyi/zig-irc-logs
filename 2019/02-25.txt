1551052860
andrewrk
develonepi3, did you get it working?

1551056429
develonepi3
andrewrk, The cmake ../ went okay then make I got zig in the build folder.  I then did a sudo make install and I got a bin & lib folders. I set PATH to /home/vidal/testbuilds/ultibozig/zig-0.3.0+98869edb/build/bin

1551057792
develonepi3
andrewrk, How do you if the binary download works?

1551061058
andrewrk
the sudo is not needed

1551061292
andrewrk
I just tested your workflow and it worked for me

1551061646
develonepi3
andrewrk, this zig build-obj -isystem ../../include/ -isystem /usr/lib/arm-none-eabi  zigmain.zig creates zigmain.o. Then objdump -d zigmain.o > zigmain.txt. zigmain.o:     file format elf64-x86-64

1551061957
andrewrk
develonepi3, you need --target-arch armv8 and --target-os freestanding

1551064180
develonepi3
andrewrk, zig build-obj -isystem ../../include/ -isystem /usr/include/x86_64-linux-gnu/ -isystem /usr/lib/arm-none-eabi --target-arch armv8  --target-os freestanding  zigmain.zig,  Both --target-arch armv7 & --target-arch armv8 note: 'gnu/stubs-32.h' file not found. I believe ultibo is armv7

1551117835
gamester
Andrew, I'm excited for your pull request "first class support for compiling C code". I can use that!

1551119097
andrewrk
gamester, oh yes you can. I don't think people realize yet how important this is going to be

1551119114
andrewrk
I just finished testing on Windows, just going to polish up the branch a bit and then I'll merge it

1551119159
hgst
sounds awesome

1551119228
andrewrk
once we are able to build libc from source for the various targets (

1551119247
hgst
that'd be epic

1551119248
andrewrk
the zig package manager will double as a cross compilation environment

1551119262
hgst
oooh

1551119419
dec05eba
how would it work with runtime library dependency libnss or whatever it's called which is used for dns resolving? gcc at least opens it at runtime with dlopen

1551119503
andrewrk
dec05eba, you'll be able to target glibc if you want. the default will be targeting a static libc

1551119538
andrewrk
in which case libnss or whatever just won't work. if you don't need it, that's a great option

1551119559
andrewrk
IMO it was pretty unfortunate design to make it work that way, but here we are

1551119602
andrewrk
zig will have the startup code for all the libc's that are available to target

1551120103
nbjoerg
nothing about gcc

1551120110
nbjoerg
nss and the dlopen hack is pure glibc

1551120141
dec05eba
ah nice

1551120452
andrewrk
I figured out how to make @cImport work with --cache on

1551120476
andrewrk
that feature itself isn't super important; but it's the same mechanism that the self hosted compiler will be using to watch for changes

1551121944
andrewrk
gamester, merged

1551121990
andrewrk
you can build from source or wait ~2 hours for CI to make the new build available on ziglang.org/download

1551122431
forgot-password
Is it correct that a union with only one member will not have a tag at runtime?

1551122443
forgot-password
Even if the union has a tag type declared

1551122649
andrewrk
forgot-password, for non-extern, non-packed unions, that is not guaranteed. zig reserves the right to put extra data there for safety checking purposes

1551122720
andrewrk
in release-fast builds that is correct,  zig will not put a tag in a union(enum)

1551122730
andrewrk
likewise an enum with only 1 field is a 0-bit type

1551122995
develonepi3
andrewrk, Some of the options cause errors using the x86_64 zig binaries. --target-environ gnueabihf --target-os freestanding --target-arch armv7 --target-arch armv8

1551122995
develonepi3
/usr/lib/arm-none-eabi zigmain.zig

1551123106
andrewrk
develonepi3, I should perhaps change to mimic clang's `-target` option. Currently you have to give all 3 target options

1551123261
andrewrk
what are you trying to do?

1551124440
forgot-password
Thanks, andrewrk

1551127418
gamester
andrewrk: Excellent, it's working well.

1551127430
andrewrk
gamester, beautiful

1551127453
andrewrk
if you're using the zig build system, you can take advantage of it as well

1551127480
andrewrk
here's an example of building a pure C library with zig build:

1551129323
gamester
yeah I'm using build.zig

1551129584
gamester
I'm using some header-only/single file C libs, which I now compile with zig

1551132647
mouldysammich
hey, im trying to run a helloworld_c.zig from the docs section importing a c header file, but its failing as libgcc_s.so.1 isnt found, im on opensuse anyone had similar issues?

1551132667
andrewrk
hi mouldysammich

1551132699
andrewrk
can you link a paste with the command you're running and the full output? and what zig version?

1551132853
mouldysammich
sure thing, its the latest build on the site from master, and the output and command are here:

1551132902
andrewrk
mouldysammich, can I see the output of `zig libc` ?

1551132941
andrewrk
this is an example of a problem that

1551132961
andrewrk
but we're not there yet, so let's see if I can help you work around this :)

1551133082
mouldysammich


1551133132
mouldysammich
oh wow, thats an exciting issue

1551133253
andrewrk
mouldysammich, hmm I'm going to have to boot up an opensuse docker image and poke around

1551133262
andrewrk
what version of opensuse is this?

1551133485
mouldysammich
im running it on tumbleweed theres a docker image here

1551133553
andrewrk
mouldysammich, here's an issue you can subscribe to if you wish:

1551133694
mouldysammich
cool, thanks for your time!

1551133954
dec05eba
what do you get when you run ls /usr/lib/libgcc* ?

1551133959
dec05eba
what do you get when you run ls /usr/lib/libgcc*

1551133988
andrewrk
no problem. until that's fixed, your options are: * use a different linux distro or windows or macos, or * avoid using --library c

1551134092
andrewrk
if you are so inclined as to try to build from source and contribute a fix, I would be happy to guide you

1551134534
mouldysammich
dec05eba: nothing in /usr/lib and in /usr/lib64 its libgccpp.so.1.3.1

1551134643
mouldysammich
andrewrk: id be interested in at least making an attempt at a fix, what do you think needs to be changed in link.cpp ?

1551134643
andrewrk
dec05eba, if I were troubleshooting it, I would start with `strace cc hello_world.c` and find the part where it invokes the linker and see what args it uses

1551134667
andrewrk
mouldysammich, if you try that zig command again and use `--verbose-link` you can see the linker command it tried to run

1551134687
andrewrk
you can replace `lld` with `ld` which is your system linker and it should give a similar error

1551134709
andrewrk
if you can find the correct arguments to pass to `ld` then you have found the fix

1551134717
andrewrk
you can use that strace thing I just mentioned above for a hint

1551134838
dec05eba
I remember having issues on opensuse when compiling regular c program as well (using my build system). opensuse seems to use different paths to compiler library files than many other distros

1551134882
dec05eba
didn't have any issue on arch, ubuntu, debian or nixos

1551136711
mouldysammich
andrewrk: hey, i found a working collection of flags, although i have no idea how to edit link.cpp to fix it.  /usr/lib64/gcc/x86_64-suse-linux/8/collect2 -plugin /usr/lib64/gcc/x86_64-suse-linux/8/liblto_plugin.so -plugin-opt=/usr/lib64/gcc/x86_64-suse-linux/8/lto-wrapper -plugin-opt=-fresolution=/tmp/ccSOfwZ9.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc

1551136712
mouldysammich
-plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 /usr/lib64/gcc/x86_64-suse-linux/8/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/8/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/8/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/8 -L/usr/lib64/gcc/x86_64-suse-linux/8/../../../../lib64

1551136714
mouldysammich
-L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/8/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/8/../../.. /tmp/ccwSYMjA.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib64/gcc/x86_64-suse-linux/8/crtend.o /usr/lib64/gcc/x86_64-suse-linux/8/../../../../lib64/crtn.o

1551136716
mouldysammich
whoops sorry

1551136762
andrewrk
mouldysammich, can I see that as a link to a paste? in case anything got cut off

1551136807
mouldysammich
yeah that is an old paste, im having weird problems with stuff right now im gonna reboot and ill brb

1551136949
andrewrk
I have a feeling it might be as simple as the -L arguments, which means we could actually try using `--library-path foo` with the zig you downloaded from ziglang.org to test the fix

1551137041
mouldysammich
yeah, i found the -L args that fixed it,

1551137141
andrewrk
can you try narrowing it down to only 1?

1551137154
mouldysammich
sure, one sec

1551137262
andrewrk
if we can fix this in a satisfying way, `zig libc` will show either a different path for one of them, or we'll need another key/value pair that matters on open suse. then everything will "just work" and no `--library-path` workaround will be needed anymore

1551137453
mouldysammich
it seems to just need one of these '-L /lib/../lib64'

1551137465
andrewrk
what files are in that directory?

1551137600
mouldysammich
the libgcc_s.so.1 is in there, also

1551137621
andrewrk
thanks

1551137717
andrewrk
mouldysammich, so the issue is that on other linuxes, libgcc_s.so is in the same place as crt1.o

1551137724
andrewrk
which for you is: lib_dir=/usr/lib64/gcc/x86_64-suse-linux/8/../../../../lib64

1551137736
andrewrk
which is just /usr/lib64

1551137875
andrewrk
so I know how to fix this now. thanks! looks like "lib_dir" will get renamed to "crt_dir", and the new "lib_dir" will be found with cc -print-file-name=libgcc_s.so

1551137920
andrewrk
mouldysammich, can you confirm that `cc -print-file-name=libgcc_s.so` finds the correct directory?

1551138049
mouldysammich
yeah it finds the correct directory for both libgcc_s.so and libgcc_s.so.1

1551138179
andrewrk
thanks

1551138185
andrewrk
I'll take it from here

