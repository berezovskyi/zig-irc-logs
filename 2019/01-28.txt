1548698718
donpdonp
andrewrk: can you say more about "zig provides memcpy (and more)" re: webassembly? is there an implementation of malloc for webasm in the zig codebase somewhere?

1548698810
emekankurumeh[m]
for wasm wouldn't you just want a FixedBufferAllocator because wasm doesn't support heap allocation?

1548698896
donpdonp
emekankurumeh[m]: that makes sense, though im not familiar with all the mechanisms zig provides.

1548698948
donpdonp
im just trying to get a hello-world.zig to build. from earlier: "as soon as i add var bytes : [255]u8 = undefined; ... the wasm tries to import 'memcpy'"

1548698974
emekankurumeh[m]
documentation is an issue that's being worked on.

1548699969
donpdonp
var x = std.heap.FixedBufferAllocator.init(bytes[0..]); => in function __zig_return_error void (%StackTrace*): WebAssembly hasn't implemented __builtin_return_address

1548699989
donpdonp
being this early to webasm is very educational :)

1548706925
Marumoto
Is there a statically allocated list in the standard library?

1548707076
halosghost
list meaning a linked list?

1548707083
halosghost
if so, what do you mean by statically-allocated?

1548707090
halosghost
if not, what do you mean by `list`? :)

1548707389
Marumoto
Basically like struct List { int elements[32]; int num_elements; }

1548707414
Marumoto
where the capacity is specified at compile time

1548707438
Marumoto
array/vector

1548707443
halosghost
oh

1548707446
halosghost
why not just use an array?

1548707467
MajorLag
That's just an array in Zig. `const list: [32]i32 = undefined;`. length is had by `list.len`;

1548707471
Marumoto
they just have a capacity right?

1548707474
Marumoto
oh

1548707484
halosghost
what MajorLag said :)

1548707485
Marumoto
I've just looked at zig for 2 seconds

1548707496
MajorLag
unless you want a variable number of elements within a fixed buffer size

1548707501
Marumoto
yeah

1548707524
MajorLag
you could then use your list structure, or an ArrayList w/ a FixedBufferAllocator.

1548707567
halosghost
no context was given, but I'd suspect that, for most cases, an array is sufficient

1548707572
halosghost
ðŸ¤·

1548707574
halosghost
YMMV

1548707621
Marumoto
like this

1548707786
MajorLag
`var buffer: [32 * @sizeOf(i32)]u8 = undefined;` `var fba = std.heap.FixedBufferAllocator.init(buffer);` `var list = ArrayList(i32).init(fba);` `list.append(42);` `const count = list.len;`

1548707840
Marumoto
ooh, thats great

1548707873
Marumoto
that looks like what I want

1548707889
Marumoto
thanks

