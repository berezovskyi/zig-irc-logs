1563753916
emekankurumeh[m]
how in status quo zig you can store `promise`s from different functions in an array together

1563759516
daurnimator
emekankurumeh[m]: given that @Frames for different functions will need to be different sizes.... I don't know how you'd have an array of them

1563759694
daurnimator
andrewrk: did the autohash PR get mixed into your coroutine branch somehow?

1563770254
daurnimator
hrm, I can't find it now.... where is an issue about constructing a call at comptime

1563772307
daurnimator
created

1563785181
daurnimator
has anyone made a terminal UI in zig yet?

1563786668
daurnimator
how about a MIME library?

1563792725
jkbbwr
Hey all!

1563792739
daurnimator
jkbbwr: welcome!

1563792749
jkbbwr
Anyone know where I can find a higher level breakdown of Zigs type checker

1563792757
daurnimator
jkbbwr: what do you mean?

1563792791
jkbbwr
How its implemented, is it sound, those kinda details.

1563792904
jkbbwr
Im trying to implement my own and making 0 progress understanding the problem

1563795899
emekankurumeh[m]
daurnimator: I have a stale branch with some terminal stuff in it

1563799065
samtebbs
jkbbwr: If you're looking for implementation details, then perhaps src/analyze.cpp would be of help

1563799236
jkbbwr
samtebbs:Thanks very much

1563801407
fengb
daurnimator, emekankurumeh[m]: I'm trying to port termbox to zig

1563801452
daurnimator
fengb: did you see

1563801516
fengb
"This was a weekend project. You probably shouldn't use it in any projects." :P

1563801552
daurnimator
fengb: that's for the project as a whole. the terminfo bit however is pretty solid

1563801599
fengb
Oh I see

1563801618
fengb
It's the ANSI control characters?

1563801649
daurnimator
no... terminfo is a database on your computer that tells libraries (like curses) what the sequences are for various terminals

1563801652
mq32
if i understand correctly, not only ANSI

1563801654
fengb
Oh right

1563801668
mq32
ANSI is a single termcap where you could also have ones for a TTY oder Tek terminal

1563801672
fengb
This is where I got stuck with termbox >_>

1563801695
daurnimator
it contains both simple ones like "\r" goes to start of line. but also potentially complex ones, like how to reset the terminal

1563801742
daurnimator
FWIW that lua-tui project also has a fun escape code parser.... I managed to find major bugs in every terminal emulator I played with.....

1563801757
daurnimator
which is another way to say: off the beaten path lay dragons

1563801914
fengb
If everything you touch has bugs... ü§î

1563802979
fengb
Style question: `if (foo != null)` vs `if (foo) |_|`

1563803085
Tetralux
I think `first != null` is easier to understand if you're glancing at it.

1563803097
Tetralux
.. Whereas in the second one you have to spot the underscore.

1563803106
fengb
I could do `if (foo) |_notnull|`

1563803112
fengb
But that still looks weird so okay

1563803201
Tetralux
I think I'd have to have written more Zig to be able to advise with confidence, but that's my first thought x)

1563803262
fengb
I'm happy with either. The latter is fewer characters but it's pretty minimal

1563803326
fengb
Also coming from C/Javascript/Ruby where weirdo idioms are pretty common :P

1563803481
diltsman
If you want weird ways to check for null, try this in SQL: a <> a

1563803584
daurnimator
diltsman: that would also match for NaN

1563803630
fengb
But a IS NULL is more idiomatic

1563803643
daurnimator
fengb: I prefer `if (foo != null)` to match the inverse: `if (foo == null)`

1563803658
daurnimator
there's no inverse of `if (foo) |_|`

1563803660
fengb
daurnimator:

1563803684
fengb
Trolling response: `if (foo) |_| {} else {`

1563803731
daurnimator
fengb: yes it appears to be.

1563804122
daurnimator
fengb: do you need an IRC bouncer?

1563804142
fengb
Yes actually

1563804164
fengb
Not sure what's going on today

1563804176
daurnimator
fengb:

1563804215
fengb
‚ÄúThat is a sign you hopefully know better than to blindly run unknown commands from the internet and/or are a curious person. We like you already.‚Äù

1563804222
fengb
There's something in the world that likes me!

1563806252
FireFox317
The CI builds for windows are not working anymore. It is stuck on a pkg_import test, however it is not crashing or anything and just runs until the maximum time of 6h is reached.

1563806375
FireFox317
The builds for linux and mac however do succeeded

1563807240
andrewrk
daurnimator,  the inverse is orelse

1563808545
dimenus
is there any way to debug why Zig is unable to inline a function?

1563809012
Tetralux
fengb, daurnimator: I suppose andrewrk is right actually - instead of `if (foo != null)`, `var value_to_proceed_with = foo orelse return false;` is generally a better pattern in Zig to go for.

1563809046
Tetralux
(.. Mainly because it avoids naming the optional.)

1563809244
mikdusan
can confirm: windows builds hang on test `cd test/standalone/use_alias; zig build test`; since commit af866140

1563811070
mq32
just want to share this hack i made:

1563811099
mq32
someone asked if there is any language except for C++ and D that could make something like automatic function creation

1563811111
Tetralux
Automatic function creation?

1563811114
Tetralux
What does that mean?

1563811204
mq32
this code creates 256 functions which can be used as distinct callbacks to libraries

1563811219
mq32
the orignal problem was that a library allows callback functions but without a "context" parameter

1563811265
mq32
and the solution is: create a bunch of functions which provide a callback that calls a certain function

1563811308
fengb_
mq32: that style is used in std too ‚Äî std/zig/parse.zig

1563811308
samtebbs
mq32: I can see that being useful for generating interrupt handlers in a kernel. At the moment we're doing so with assembly but would rather get rid of it.

1563811326
mq32
samtebbs, oh yeah!

1563811337
mq32
i have made that assembler stuff already

1563811338
fengb_
Oh with context... like fake closures

1563811346
mq32
fengb_: yeah

1563811354
mq32
with zig that's actually pretty reasonable and easy

1563811379
mq32
and with the "function literal" syntax (x = fn() void { }) we wouldn't even need a helper struct

1563811383
fengb_
I was planning on hand rolling something that needs "arbitrary" arguments

1563811493
mq32
got to go

1563811508
mq32
i hope i get my hands on some useful zig project soon‚Ä¶

1563811520
mq32
<= thinks about creating a simple paint application

1563811545
samtebbs
mq32: o/

1563811640
halosghost
mq32: sounds fun

1563811658
halosghost
mq32: do it in ncurses with sixel? :D

1563811749
fengb_
I'm still planning on porting over termbox (

1563811756
fengb_


1563811760
fengb_
I'm amazing with links

1563811839
halosghost
termbox should also support sixel

1563811841
halosghost
moarsixel

1563827311
dec05eba
Something like this would be cool

1563827863
Tetralux
dec05eba: What would you use that for? I'm curious.

1563827930
halosghost
Tetralux: too late; they left

1563827953
Tetralux


1563827955
Tetralux
xD

1563828005
halosghost
I can say that I love TUIs and that I want to use a library kind of like that to make a VPS monitor at some point

1563828019
halosghost
but I don't know that that's what they had in mind

1563828112
Tetralux
Virtual Private Server?

1563828120
halosghost
yeh

1563828123
Tetralux
Huh.

1563828124
Tetralux
Interesting.

1563828125
halosghost
here

1563828127
halosghost
one sec

1563828130
halosghost
this needs some context

1563828132
Tetralux
:)

1563828142
halosghost
but is likely off-topic

1563828145
halosghost
Tetralux: pm?

1563828252
Tetralux
Sure

1563831147
dimenus
how do i set the alignment of a struct in Zig?

1563831199
andrewrk
dimenus, wait for

1563831252
dimenus
boo, vulkan project on hold

1563831334
andrewrk
that's how I feel too

1563831392
scientes
dimenus, you could hack it together with a union, and a packed struct

1563831406
dimenus
packed structs report incorrect sizes atm

1563831409
scientes
because you probably only need 16-byte alignment

1563831409
dimenus
i could start with that

1563831685
dimenus
yeah that's all I need at the moment

1563831691
dimenus
but i could just focus on bugs for now

