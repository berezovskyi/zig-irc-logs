1549238915
andrewrk
it pads with a null byte. that function should return a `![]null u8` (once null terminated pointers are implemented) and add 1 to max size. so I think it's a bug

1549239038
andrewrk
hmm actually I take back what I said. I'll need to re-examine the code

1549245331
daurnimator
andrewrk: #1873 contained more than just a rename

1549245347
daurnimator
andrewrk: seems like you did something similar but different in dfbc063f79dc1358208216b466c1bf8c44baa430

1549258911
andrewrk
hey kristate - I just wanted to say that I appreciate you. Thanks for being a positive contributor to the Zig community

1549258945
andrewrk
emekankurumeh[m], I think you may have had some dropped messages - the only one I see is "andrewrk: something like the rust playground."

1549258965
andrewrk
oh, are you responding to my question about a docker image?

1549258972
emekankurumeh[m]
yeah

1549258997
andrewrk
so the pre-built executable on ziglang.org/download is truly static

1549259007
andrewrk
that means it works on all linuxes, and in all docker images

1549259018
kristate
andrewrk: hey Andrew, thanks for the message. I am hoping that we can get everyone into the same room together this year.

1549259027
andrewrk
so there would be no added benefit to an official zig docker image

1549259096
andrewrk
emekankurumeh[m], it sounds like what you want to achieve is some sandboxing. if you choose to use docker for sandboxing - which may have security concerns, I'm not sure - it could be any docker image and the static build would work just fine

1549259137
kristate
andrewrk: btw, almost have the rebase complete for #1864

1549259163
andrewrk
(side note - the static build of zig from the download page is, in fact, built on alpine linux in a docker image.

1549259199
emekankurumeh[m]
the rust sandbox repo readme does have some notes about security related stuff

1549259259
andrewrk
kristate, ambitious goal!

1549259339
kristate
andrewrk: I wouldn't mind buying a ticket for you, hejsil and tiehuis

1549259355
kristate
it's surprising, but tiehuis and jimmi are pretty close

1549259565
kristate
I think that if everyone was hacking away in the same room for a week, we could get a lot of code out and work-out core problems

1549260120
daurnimator
kristate: where are you thinking?

1549260139
kristate
daurnimator: Japan -- you're in aus, right?

1549260145
daurnimator
kristate: yep

1549260147
kristate
everyone is weirdly close to JP

1549260156
daurnimator
not andrewrk :P

1549260189
andrewrk
I do enjoy visiting other countries

1549260192
kristate
daurnimator: how does April sound?

1549260207
daurnimator
kristate: not great for me. I'm in africa most of april

1549260208
kristate
the cherry blossoms are great in April

1549260267
kristate
checking the sakura schedule

1549260321
daurnimator
kristate: though japan isn't bad for me: flights can be quite cheap sometimes from here.

1549260345
kristate


1549260359
daurnimator
(e.g.

1549260365
kristate
looks like 3/26 is a good time

1549260389
kristate
daurnimator: yes, kansai international should have good rates with jetstar

1549260491
kristate
here is an article in english:

1549260515
daurnimator
kristate: I probably can't make those dates. I'm in africa march 30-march until 17-april.

1549260546
daurnimator
but I'm not that important anyway

1549260577
kristate
daurnimator: maybe you can stop-by anyway on your way back

1549260605
daurnimator
ha. no. not only are the flights already booked, but that's one hell of a detour.

1549260631
kristate
Are you going to S. Africa?

1549260634
andrewrk
kristate, if you're taking me into account - I'm training for a marathan until June 2 which makes travel difficult, and I'm doing a talk in Philadelphia on April 23

1549260642
daurnimator
kristate: yep. "just add a casual extra 30 hours to the trip"

1549260689
daurnimator
andrewrk: I'd say you're the most important person to have in attendence :P

1549260702
daurnimator
andrewrk: can't you train for a marathon anywhere? :)

1549260754
andrewrk
sure - it just makes it more difficult. I find a routine schedule to be helpful in beingmore productive and motivated

1549260769
kristate
andrewrk: daurnimator jokes, but japan has really good air and the river in Kyoto is known for trainers :-)

1549260788
kristate


1549260804
andrewrk
that does look lovely

1549260821
daurnimator
kristate: woah that looks way too busy

1549260844
kristate
daurnimator: I think everyone is out for cherry blossoms

1549260954
kristate


1549261109
daurnimator
kristate: heh. reminds me of this area I go through most days:

1549261142
kristate
daurnimator: yes, they look similar :-)

1549265115
kristate
andrewrk: took a look at my email and the patreon subscription didn't go through on time -- is everything okay? The card listed expired and so I updated the account with a new card.

1549265493
emekankurumeh[m]
`

1549268467
schme245
the code below segfaults for me, but I'm not sure why. Zig is my first systems language, so bear with me: is `bytes` allocated on the stack? is the segfault due to a stack overflow?

1549268470
schme245
pub fn main() void {

1549268470
schme245
const bytes: [1000 * 1000 * 1000]u8 = undefined;

1549268470
schme245
}

1549268496
schme245
if yes, would it be possible to catch this somehow in debug mode and give a nicer error message?

1549270358
wilsonk
schme245: that code doesn't segfault for me on MacOS with the newest master branch. Are you using the latest branch

1549270395
schme245
no, it's like a week old

1549270399
schme245
let me try with master

1549273034
schme245
still segfaults for me on osx with 0.3.0+dfbc063f

1549274670
wilsonk
woops, yes I am getting that also...I was using the wrong version!! Sorry about that. One second here

1549275041
wilsonk
schme245: you can use @newStackCall(func, newstack, arg);  to get around that problem

1549275088
wilsonk
technically the signature is:   @newStackCall(new_stack: []u8, function: var, args: ...) var

1549275842
schme245
neat! the reason I stumbled on this is that I forgot that this is not Java and I actually wanted to do a heap allocation... so the solution in my case is to do that :) but I'm still curious as to exactly why this happens and if it's possible to provide a better error message rather than a segfault

1549277456
allochi
Hi, I'm trying to build zig on macOS, I used to be able to do that, today I got "Could NOT find CLANG (missing: CLANG_LIBRARIES CLANG_INCLUDE_DIRS)", any idea how to fix this? thanks!

1549277829
wilsonk
schme245: That code returns a EXC_BAD_ACCESS, so I would think that is a stack overflow. I believe there will be a way to stop stack overflow coming soon (#1639).  You can use an allocator to dynamically allocate, but there is no documentation on it yet in the main docs. Probably have to look at examples or std/heap

1549277964
wilsonk
allochi: did you follow the build instructions again for MacOS? Especially the 'cmake .. -DCMAKE_PREFIX_PATH=/usr/local/opt/llvm@7/' part?  I would do a 'make clean', remove CMakeCache.txt, use that cmake command and then 'make install'

1549278034
schme245
wilsonk: where do you see the EXC_BAD_ACCESS?

1549278067
wilsonk
use lldb and run the program...it will display the bad access

1549278112
schme245
man, I've got a lot of catching up to do

1549278116
schme245
thanks for the help!

1549278142
allochi
I'll try this now, thanks!

1549278166
allochi
I did follow the build instruction from the README.md as usual

1549278279
allochi
wilsonk: same error

1549278425
wilsonk
allochi: hmm, you might have to reinstall @llvm7.  'brew reinstall llvm@7' I think it is.  I had a similar problem a while ago and I think a reinstall fixed it.  Will take a while to compile though :(

1549278705
allochi
wilsonk: Ok, I will try that, but first, it seems that cmake doesn't recognize where clang lib and include folders are, I don't know cmake, but I will see if I can set it up first, I need to read cmake docs.

1549278935
wilsonk
allochi: cmake should find those automatically with the 'cmake' command from above but I have seen a case where cmake gets messed up and cant figure out where libs are. I assume you can still use clang, correct?  Resetting with @llvm7 using brew really should fix things. (or you may need to reinstall cmake also...it is just really strange that it cant find those include dirs, as it should be dead simple to find!)

1549279174
allochi
wilsonk: I will try this now

1549279178
euantor
emekankurumeh[m]: Check out

1549279227
wilsonk
oh, sweet

1549279438
wilsonk
off to sleep...g'night all

1549280088
allochi
wilsonk, you were correct, I reinstalled llvm and it works, I have to say I replaced `export LDFLAGS="-L/usr/local/opt/llvm/lib"` with `export LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"`

1549282816
daurnimator
wilsonk: schme245: sounds like a bug.

1549282841
schme245
should I open an issue?

1549282911
daurnimator
schme245: yes I think so. I think it's cause by a lack of stack probing

1549282995
schme245
ok, will do!

1549283700
schme245


1549283900
daurnimator
schme245: thanks. will wait for our benevolent dictator (andrewrk) to have a look.

1549294877
emekankurumeh[m]
euantor: thanks!

1549296187
emekankurumeh[m]
has anyone made any compression libraries in zig?

1549296195
emekankurumeh[m]
specifically LZMA2.

1549302682
allochi
\q

1549303830
andrewrk
euantor, did you see my explanation of why you don't need a zig docker image?

1549304306
euantor
andrewrk: I did, yes. It still helps with my workflow though. I have a fish alias configured to `zig-master` that I know will always invoke the latest master build of Zig as of midnight the day before

1549304367
Akuli
today i wrote a script that fetches the latest zig

1549304376
andrewrk
oh, is it because there is no reliable redirect link to the latest download?

1549304381
Akuli
cds to the cloned repo, pulls, builds, installs

1549304412
euantor
Yeah, thereâ€™s no mention of a redirect link on the downloads page

1549304438
euantor
And I wanted the latest stable-ish (eg: CI passing) release, not just HEAD

1549304485
euantor
Iâ€™m also planning a Zig playground service using it. I started some prototyping before Christmas then ended up stupidly busy

1549304533
andrewrk
euantor, s3 (the hosting service of ziglang.org) has a metadata feature for a redirect, but sadly the http code is always a permanent redirect and not configurable, so it gets incorrectly cached

1549304650
euantor
I wonder if it would be possible to just create a GitHub release? I know you can do so via their API

1549304692
Akuli
would github's list of releases get kinda cluttered if there were things like alpha releases in the list?

1549304745
euantor
Not sure. I know you can tag release as pre-release etc. Might be worth looking at another project that makes use of them

1549304780
andrewrk
euantor, you mean github releases in between the official tagged version releases?

1549304827
euantor
Yeah, with perhaps one continuously updates `master` pre-release, though I can see how that would become confusing

1549304956
euantor
The real answer is that I donâ€™t really have any solutions honestly

1549305042
emekankurumeh[m]
@euantor: talk about a coincidence, I was asking about a docker image for the exact same reason!

1549305095
euantor
Yeah, itâ€™s how the Nim playground works and itâ€™s fairly simple to set up

1549305334
andrewrk
you can use any docker image and download the zig static build to it

1549305356
andrewrk
it has no dependencies except for a linux kernel and file system

1549305447
euantor
Yeah, which is basically all my image is with a check of the downloadâ€™s checksum thrown in

1549305492
emekankurumeh[m]
does your image do version caching?

1549305493
Akuli
how do i tell build.zig to use --library c, --no-rosegment (in non-release mode only, if possible), and a custom executable name? currently i'm using a makefile because i couldn't get build.zig to work like i wanted

1549305515
Akuli
--library c is most important, of course

1549305527
andrewrk
Akuli, exe.linkSystemLibrary("c");

1549305550
andrewrk
exe.setNoRoSegment(true);

1549305554
euantor
emekankurumeh[m]: thereâ€™s a tag published for every version on docker hub, so you can just pull a specific tag

1549305594
andrewrk
Akuli, for non release mode only, you can use standardReleaseOptions like this:

1549305601
Akuli
awesome :D

1549305743
Akuli
what does @import("builtin") do? does it load a file literally named 'builtin' or something else?

1549305773
Akuli
ummm nevermind

1549305783
Akuli
std/build.zig uses it enough for me to figure it out

1549305837
andrewrk
Akuli, you can use the command `zig builtin`  to see what source @import("builtin") sees

1549305861
andrewrk
(also try `zig builtin --release-fast` and see what happens)

1549305880
Akuli
ooo this is like builtins.py in python 3, i get it now

1549305893
Akuli
or

1549305896
Akuli
no it isn't :D anyway, thanks

1549306930
Akuli
can i write zig code that has import cycles? does it work, crash, or work but not be guaranteed to work?

1549306974
andrewrk
Akuli, top level declarations in zig are order independent, and it makes no difference which files your declarations are in

1549306986
Akuli
hmmmm that's neat

1549307000
andrewrk
you will get a compile error if any of your top level declarations (directly or indirectly) depend on themselves

1549307017
andrewrk
e.g.: const Foo = struct { x: Foo };

1549307052
Akuli
but can i do this: file A defines a struct and uses a union type from file B, and file B defines the union type using the struct from file A

1549307060
andrewrk
there are a couple cases where zig has a false dependency for this. there are open issues with workarounds you can do

1549307068
andrewrk
*false positive

1549307079
Akuli
the struct won't use the union type, but file A will use it elsewhere

1549307102
andrewrk
all that works fine. files/imports/namespaces don't depend on each other in that sense

1549307110
Akuli
this is an awesome language :D

1549307145
Akuli
even in languages like python where you can do all kinds of crazy stuff, you "can" do this but it's ugly and bad style

1549307173
schme245
how can I convert a value from `u64` to `[]u8`?

1549307180
schme245
*how do

1549307205
Akuli
schme245, there are some functions somewhere in std, grep for endian or something

1549307207
Akuli
let me find

1549307243
schme245
there is `readIntSlice` and co in std/mem, but they go the other way

1549307243
andrewrk
schme245, []u8 is a reference type (a pointer and a length) so first you will have to decide where the memory of the u64 will live

1549307259
Akuli
there's a family of functions in std.mem, maybe you want those? readIntLittle and friends

1549307266
andrewrk
if you explain what you're trying to do in more detail I can probably advise better

1549307335
schme245
I have this: `const testData: u64 = 0x0123456789ABCDEF;` and I want to "view" it a byte array rather than a long

1549307377
schme245
I know I can bitshift and get the bytes that way, but I'm curious if I can "cast" it somehow

1549307545
Akuli
writeUintLittle or writeUintBig does that, i never remember which way to represent the bytes is called big-endian and which is little-endian but those will work :D

1549307555
Akuli
one of them will do what you want, that is

1549307642
andrewrk
schme245, right now this would be the recommended way:

1549307665
andrewrk
after

1549307694
andrewrk
so what this looks like is: take address of variable. cast to single-item pointer to array of length 1. cast to slice of u64. @sliceToBytes.

1549307708
andrewrk
it's ugly but all those constructs are guaranteed safe and work at comptime

1549307838
schme245
I see, and the difference between that and `writeIntSlice` and co is that this doesn't allocate any new memory, either on the heap or the stack?

1549307884
andrewrk
correct: your only memory is the 8 bytes for the u64 and the (on 64-bit arch) 16 bytes for the slice (pointer+length)

1549307920
andrewrk
with writeIntSlice you would need an additional array of 8 bytes to put the result in

1549307943
schme245
excellent, thanks Akuli and andrewrk!

1549307948
andrewrk
I'm pretty sure that in release modes, either way will be identical. we could experiment with that with godbolt

1549307983
schme245
on the topic of casting, I did not know that Java-style `(T) x` casting works in Zig, I don't think that's mentioned in the docs

1549307998
schme245
is `(u64) x` the same as `@intCast(u64, x)`?

1549308002
andrewrk
that's this:

1549308006
andrewrk
it's actually function call syntax

1549308026
andrewrk


1549308074
andrewrk
also there's a proposal to change "implicit casting" syntax (which probably needs to be renamed now) to syntax that is distinct from function calls:

1549308131
schme245
gotcha, I have read that section before but I must have glanced over this, I'll give a more thorough read

1549308175
andrewrk
admittedly there are quite a few TODOs in the docs

1549308216
schme245
really appreciate all the effort you put into helping and communicating, it invaluable for someone like me who is a a newcomer both to Zig and systems programming

1549308252
andrewrk
I am thrilled that people are learning systems programming with zig and I hope I can improve the learning experience

1549308306
Akuli
it's awesome that the creator of a language helps people on the irc channel :D

1549308311
Akuli
that doesn't happen much with other languages

1549308421
forgot-password
Is it possible to have a pointer to values of variable types?

1549308771
andrewrk
forgot-password, you could look into using a union for that

1549309326
forgot-password
Right, I did that for some cases, but for what I'm doing now I'd like to express it in a more generic way. Is there another approach?

1549309460
forgot-password
I'm writing a simple physics simulation and for that I have a PhysicsManager, which I'd like to handle any struct with a velocity, acceleration and position. Currently I have an intermediate struct that contains the pointers to these fields, but this gets uncomfortable to deal with once I add more fields.

1549309511
MajorLag
andrewrk, schme245: `const bytes = mem.asBytes(&long_var);`. 'bytes' will be a `*[@sizeOf(long_var)]u8`

1549309640
MajorLag
`*[@sizeOf(@typeOf(long_var))]u8`

1549309722
schme245
nice!

1549309744
Akuli
mem.asBytes sounds like something that might depend on the host's byte order?

1549310681
andrewrk
MajorLag, ah, thanks, I forgot about that

1549310706
andrewrk
Akuli, yes - same as the other code that I shared above

1549310745
Akuli
how does this work?

1549310770
Akuli
i thought defer runs at the end of a block? but then contents and slice_list would contain freed values?

1549310770
andrewrk
how does defer work?

1549310849
andrewrk
Akuli, ah I see your question. Your understanding of defer is correct. contents.append here is std.Buffer.append which copies the bytes

1549310865
Akuli
thanks! makes sense now

1549310867
andrewrk
slice_list is a list of `usize` not slices (sorry for the bad name)

1549312301
Akuli
how do i allocate an array of n u8s with an allocator? in c i would do malloc(n)

1549312340
Akuli
i'm guessing allocator.alloc(u8, n)

1549312422
MajorLag
`var x = try my_allocator.alloc(u8, n);`. x will be a []u8 with a size of n.

1549312452
Akuli
nice, do i also use `defer my_allocator.free(x)`?

1549312473
MajorLag
typically yes, if you plan to free it in the same scope.

1549312482
Akuli
nice

1549312538
andrewrk
Akuli, similarly, you would use `errdefer my_allocator.free(x);` if you wanted to keep the memory past the end of the function, but only if the function doesn't error out

1549312600
Akuli
yes, i'm familiar with errdefer

1549313426
Akuli
style question: i want a variable called type, which is st, type_ or typ or tybe?

1549313431
Akuli
s/st/best/

1549313673
Akuli
btw i really like how there's std/unicode.zig :D that's one of the (many) things i ended up writing myself in c when i needed

1549314091
Akuli
i'll be back, i'll find the answer in irc logs if i care enough

1549314716
MajorLag
Akuli: I think the best way is to just use a synonym, like `kind` or a more descriptive name, like `packet_type`. Unless `type`'s type is `type`, then use `Type`.

1549316344
emekankurumeh[m]
does `mem.asBytes` copy?

1549316447
andrewrk
no, it's a pointer cast

1549316592
emekankurumeh[m]
i tried to something similar and i kept getting a copy instead of a pointer to the same memory.

1549316782
andrewrk
are you thinking of toBytes?

1549317183
emekankurumeh[m]
no i tried the manual cast

