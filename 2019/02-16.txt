1550297304
andrewrk
stage1 has `zig fmt` now

1550297329
emekankurumeh[m]
yes!

1550300216
emekankurumeh[m]
andrewrk: what are your thoughts on the builder pattern in rust?

1550300292
daurnimator
andrewrk: woo! I didn't realise that was coming

1550300696
emekankurumeh[m]
if we make pull requests for web related things do we have to update the stuff in std.event or would that wait until after the coroutine rewrite?

1550301238
emekankurumeh[m]
zig on esp32 might be a possibilty:

1550319884
Barabas
Hello, I played with Zig a few months ago. Now coming back to it some things broke (obviously).

1550319904
Barabas
One is I used debug.assertError(...) in my tests. Like:

1550319905
Barabas
debug.assertError(container.insert(2, 3.0), error.KeyAlreadyExists);

1550319922
Barabas
But that function is gone it seems. What's the way to check for specific errors?

1550321219
Flaminator
I think it's just std.debug.assert(container.inser(2,3.0) == error.KeyAlreadyExists); now.

1550322270
Barabas
Hmm... that says operator not allowed. :(

1550322475
Barabas
Oh wait... we have something called testing now

1550325555
kristate
Barabas: yes, please see testing.expect

1550325572
kristate
debug.assert can be used in runtime code

1550326827
Barabas
Yes, I fixed up my test code. There were just some issue with expectEquals and pointers. Something about Size.C not being handled in a switch.

1550326839
Barabas
So I reverted those to expect(... == ...)

1550327470
kristate
cool

1550331453
MajorLag
@andrewrk: I've been using a self-made zig-fmt that just reads a file with std.zig.parse and dumps it back out with std.zig.render. Since zig fmt has been stage 2 only until now, I'm not sure what it brings to the table. Can you enlighten me?

1550335190
andrewrk
MajorLag: what zig fmt in stage1 brings to the table is for people who use the provided binaries they have the ability to format code

1550335234
andrewrk
Even for people who build from source it makes it one less step (stage2 binary isn't needed and is only a WIP compiler now)

1550335298
andrewrk
Btw in case it wasn't clear, it's still the same self hosted code. It uses zig run

1550337921
gunnarahlberg
hi! Thank you for the awesomeness of Zig!

1550337937
andrewrk
welcome gunnarahlberg. what are you working on?

1550338112
gunnarahlberg
hi andrewk. I'm working on getting compilation to work on by ubuntu and then for fun implement a JSON parser, I want to for no apparent reason implement something useful in zig. Like , the webserver

1550338160
andrewrk
gunnarahlberg, sounds fun. we have a "contributor friendly" label if you want inspiration for what to work on

1550338253
gunnarahlberg
oh, this

1550338320
andrewrk
yes

1550338506
gunnarahlberg
hmm,

1550338581
andrewrk
gunnarahlberg, I think you have found the one issue in the issue tracker that I am the least qualified to instruct on :)

1550338596
andrewrk
I would personally have to start by learning what a "koan" is

1550338612
gunnarahlberg
oh ;-)

1550338848
gunnarahlberg
there is probably many definitions. I consider a koan a small unit a student can do to learn a specific topic, e.g. iterators etc.

1550338988
gunnarahlberg
is anyone else using ubunte for development and to compile zig source code? I have trouble with setting up LLVM

1550339006
gunnarahlberg
Ubuntu that is

1550339106
gunnarahlberg
The Ruby koans mentioned in 910 is a method for setting up tests. First test fails, you get to fix what is wrong and learn something. Then ruby coan will give a you another test that is failing to fix. So, it's like a method of learning.

1550339108
andrewrk
gunnarahlberg, on ubuntu you can use the llvm package from apt

1550339123
andrewrk
if you do not intend to build from source, then you can use the pre-made binaries from ziglang.org/download

1550347596
ross_k
Hi, I'm trying to the zig linker (lld?) to see symbols inside MSVC static .lib files, specifically GLFW and libepoxy. It links fine with the DLL version of GLFW but can't see any symbols I try in the static .libs.

1550347601
ross_k
Is this a known issue?

1550347644
andrewrk
ross_k, what do you mean see inside? are you saying you're unable to link agains .lib files?

1550347707
ross_k
Yes, that's right

1550347718
ross_k
It can't find any symbols from those files

1550347792
ross_k
Trying a simple GLFW/epoxy app to test the water using the tetris demo as a starting point

1550347817
ross_k
build.zig:

1550347902
andrewrk
ross_k, ah, this is confusing API but you actually want exe.addObjectFile for static libraries such as .lib files

1550347940
andrewrk
when you run zig build what command line does that end up running, and what is the output?

1550347946
andrewrk
(after my suggested change)

1550348133
ross_k
Okay, after changing exe.linkSystemLibrary to exe.addObjectFile for both glfw3.lib and epoxy.lib, the command line is:

1550348135
ross_k
C:\Users\Ross\Downloads\zig-windows-x86_64-0.3.0+8e68d43a\zig.exe build-exe C:\Users\Ross\Desktop\zig-gl-test\src\main.zig --object C:\Users\Ross\Desktop\zig-gl-test\glfw3.lib --object C:\Users\Ross\Desktop\zig-gl-test\epoxy.lib --cache-dir C:\Users\Ross\Desktop\zig-gl-test\zig-cache --output C:\Users\Ross\Desktop\zig-gl-test\zig-cache\gl-test.exe --name gl-test --library c -isystem C:\Users\Ross\Desktop\zig-gl-test\c-compat --library-pa

1550348155
andrewrk
you might need to use a paste link

1550348160
ross_k
and it still can't link against them (no GLFW symbols)

1550348176
ross_k
Yeah, I'll pastebin the output

1550348195
andrewrk
was the glfw .lib built for msvc or mingw?

1550348341
andrewrk
you'll want to match it with `--target-environ msvc` or `--target-environ gnu`

1550348847
ross_k
Right, so with exe.addObject it's actually working with GLFW but can't find win32:

1550348868
ross_k
Do I need to add that to the build.zig too?

1550348965
andrewrk
yeah, I believe you want linkSystemLibrary("kernel32")

1550348987
andrewrk
and some other windows DLLs

1550349013
andrewrk
also looks like you need the addObject for epoxy?

1550349113
andrewrk
btw the tip with --target-environ still stands. the .lib you downloaded/built was built in a mingw environment or a msvc environment, and you have to tell zig which one

1550349151
andrewrk
I believe zig defaults to msvc on windows

1550349160
ross_k
Right, so that's separate to the "exe.setTarget(builtin.Arch.x86_64, builtin.Os.windows, builtin.Environ.msvc);" line?

1550349306
andrewrk
ah there it is, you're passing msvc. sorry, missed that

1550349309
ross_k
Thanks a lot for the help, btw. zig is awesome.

1550349310
andrewrk
that's probably correct

1550349312
ross_k
Cool

1550349340
andrewrk
thanks :) I know it's a bit of a rough process right now getting this to work. I hope to improve tooling and error messages to make this process more straightforward

1550349375
andrewrk
ross_k, did the linkSystemLibrary work for kernel32 & friends?

1550349434
ross_k
lld: error: could not open kernel32: no such file or directory

1550349441
schme245
andrewrk: I'm writing some docs for `zig test` but I don't quite get what `--test-name-prefix` does, could you elaborate a bit perhaps?

1550349455
schme245
I mean, I see that it adds a prefix, but I don't really see what that is used for

1550349458
ross_k
Probably need to add another lib dir

1550349484
andrewrk
ross_k, hmm. I thought that lib dir would be added by the libc detection

1550349531
andrewrk
schme245, the main test suite prefixes tests with some stuff to make filter arguments work better

1550349540
andrewrk
when you run the main test suite you can see it happening

1550349583
andrewrk
ross_k, as a workaround right now, you can find where kernel32.lib is on your system and add that dir, or add the .lib files directly

1550349597
andrewrk
but this should be an open issue, zig is supposed to find this

1550349650
andrewrk
(side note - when you use kernel32 or other system DLLs from the standard library, zig automatically generates .lib files for you. but it isn't smart enough (yet!) to know what functions glfw is tryign to link against)

1550349710
andrewrk
ross_k, I'll play around with this situation you're in on windows next week and try to improve it a bit

1550349748
ross_k
Awesome, cheers. I'll dig a little just now and file an issue for the kernel32 path situation

1550350406
schme245
hmm... is the osx build broken or is my computer messed up?

1550350415
schme245
I was able to build just a couple of days ago

1550350851
andrewrk
schme245, I just pushed that commit, must have broken it on osx. taking a look, thanks

1550350868
andrewrk
if this happens you can look at ziglang.org/download and see what the latest commit is that passed the CI tests

1550351425
schme245
great!

1550351460
schme245
so judging by the Zig test suite, `--test-name-prefix` can basically be used for printing which configuration of tests you are running etc?

1550351487
andrewrk
yes

1550351513
andrewrk
it's meant to be used in conjunction with --test-filter

1550351873
andrewrk
schme245, fixed

1550351911
schme245
yup, works!

1550351967
andrewrk
what's nice is that the CI build will fail for that commit, and 356cfa0 will never end up on ziglang.org/download. it'll skip from bd52d8 to 2dfa76a

1550352010
schme245
the beauty of CI

1550352114
schme245
there is a note in the Zig test docs that says "TODO: lazy analysis", what does that mean? is it that there will be no code produced for functions that are never called?

1550352140
andrewrk
that's right

1550352190
schme245
anything specific you want to mention about that in the context of testing?

1550352218
andrewrk
I'll be back later

1550356124
suirad
is there much I can do about the error: compiler bug: @cImport generated invalid zig code

1550358360
andrewrk
suirad, that means a bug in src/translate_c.cpp

1550358411
andrewrk
you could run `zig translate-c` directly on the relevant C file and look at the error

1550358661
andrewrk
suirad, or you can build with --verbose-cimport and it will spit the zig decls to stderr. you can then @import the file and get a compile error. then you can figure out what C code caused the bug. then fix translate_c.cpp

1550360611
suirad
sounds good. Im trying to make a base zig project that imports raylib as a subrepo to have a small base for making games. raylib is nice since its pretty much just c headers and runs on everything

1550360623
andrewrk
neat

1550361453
suirad
ahhh I see it

