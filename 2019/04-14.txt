1555213632
shritesh
andrewrk: I think the two PRs are ready.

1555216777
richardanaya
hey all

1555216836
richardanaya
i'm in a quest for very ideal language for web assembly

1555216862
richardanaya
i've been bouncing around almost every language that compiles down to wasm

1555216873
richardanaya
even inventing my own

1555216909
richardanaya
Zig looks like an interesting balance

1555224555
andrewrk
shritesh, nice work - I'll work on merging your stuff in the morning

1555224558
andrewrk
good night

1555226772
very-mediocre
Does zig elide branching if statements when the condition being tested is comptime-known?

1555227311
presiden
very-mediocre, yes,

1555227331
very-mediocre
didn't think to do that! Thanks

1555228065
very-mediocre
I guess this should not pose a branching penalty then:

1555228071
very-mediocre
(mediocre attempt at EnumArray)

1555228227
companion_cube
is godbolt limited to C ABI functions?

1555230116
very-mediocre
companion_cube: looks like it, if you remove `export` from `export fn...` there's no output

1555230196
companion_cube
yeah :/

1555230237
very-mediocre
`export` seems infectious, if you add a function `bar` that's exported, and you call `foo` inside it, you do get an output for `foo`

1555230493
very-mediocre
(which obviously makes sense)

1555230636
very-mediocre
I was away from zig for a while, months ago there was the idea floating around that zig could be like "comptime-eager" - as in infer the intent to have comptime execution in some cases

1555230687
very-mediocre
e.g. calling the `fn whatever(a: []const u8)` with a comptime-known value for param `a`, even though it's not labeled comptime in the function signature

1555230732
very-mediocre
has anything happened re:this?

1555231308
very-mediocre
Actually I'm dumb, this should be the same as my previous question about `if` statements [12:40] <very-mediocre> withdrawn!

1555231320
very-mediocre
(messages did not go through)

1555231796
very-mediocre
ok it is NOT the case

1555231803
very-mediocre
I'm done spamming now. :)

1555232030
very-mediocre
please disregard, lots of mistakes

1555232055
very-mediocre
presiden was right. :)

1555240835
gamester
companion_cube, very-mediocre: you're literally just describing how Zig works, it has nothing to do with godbolt.

1555241650
very-mediocre
gamester you've misread, companion_cube was just asking about godbolt.

1555241671
very-mediocre
my questions were about zig, godbolt was used to provide answers

1555241737
very-mediocre
I concede I am extremely messy at writing on irc so I understand it's hard to follow.

1555244415
Sahnvour
andrewrk, how is building with C source files supposed to work wrt. libc, especially on windows ? I'm trying to mix zig and C code on windows but the zig cc command line generated does not contain a path providing libc headers, and so they are not found

1555246617
scientes
Sahnvour, it probably just isn't tested on Windows yet, as it is a new feature

1555246644
scientes
Sahnvour, but on Linux it explicitly does

1555246671
scientes
so you have to do so manually

1555247584
Xe
How would I get zig to import arbitrary functions from the environment in WebAssembly? I'm trying to get Zig working on top of an arbitrary WebAssembly runtime (

1555247744
shritesh
Here's an example Xe:

1555247756
shritesh
The print function gets imported from the env

1555248243
Xe
shritesh: how would I pass a pointer,length string to the function?

1555248289
Xe


1555248356
Xe
oh i see

1555248531
shritesh
extern fn log_write(i32, *const u8, usize));

1555248554
shritesh
ignore the extra parens :D

1555248620
Xe
how do i convert a zig string into a const u8 pointer?

1555248632
shritesh
you'd &str and str.len for the second and third args

1555248702
shritesh
const str = "hello world".

1555248745
shritesh
i shouldnt be typing from mobile. zig doesnt havd period stops.

1555248796
Xe


1555248862
Xe
this fails build

1555249077
shritesh
Sorry the signature should have been extern fn log_write(level: i32, data: [*]const u8, len: usize) void;

1555249142
Xe
ah yep

1555249151
Xe
can you const a non-const string?

1555249162
Xe
or is const compile time only

1555249221
shritesh
A non-cost string pointer (u8 arrays) implicitly casts to a const pointer if that's what the function expects.

1555249262
Xe
oh nice

1555249282
shritesh


1555249283
Xe
it works too

1555249403
Xe


1555249433
shritesh
Nice

1555249598
shritesh
Xe, if you compile with --release-small, --release-fast or even --release-safe, the optimizations will turn on and the gas used might be even lower

1555249659
Xe
(gas == number of instructions)

1555249678
shritesh
I am aware :)

1555249696
Xe
lol

1555249702
Xe
release-fast made it 5 instructions

1555249735
shritesh
Great!!!

1555251408
andrewrk
Sahnvour, you have to use `--library c` in order for libc headers to be in the include path

1555251445
andrewrk
scientes is incorrect; C source compilation is fully tested on windows in the main test suite

1555251675
scientes
oh, I should check

1555252240
daurnimator
andrewrk: how goes?

1555252602
andrewrk
hi daurnimator

1555252749
daurnimator
andrewrk: you took the weekend off? :)

1555252829
andrewrk
that's one way to put it. I ran 16 miles yesterday

1555252843
daurnimator
intentionally I hope?

1555252849
andrewrk
haha

1555252873
daurnimator
vs "my car broke down in the middle of nowhere" :P

1555254404
shritesh
andrewrk: What'll it take for wasm32 to be tier 2? ;)

1555254432
andrewrk
let's have a look

1555254465
Xe
how would I add my own OS interface to zig's standard lib?

1555254466
andrewrk
I think it's tier 2 now that your preliminary support patch is merged

1555254481
shritesh
Woo Hoo!!!

1555254540
andrewrk
wasm64 should probably be 4 though - afaik it's not standardized yet

1555254547
shritesh
Correct

1555254718
andrewrk
shritesh,  to get to tier 1, I think we need to make a WASI interpreter :)

1555254742
shritesh
I'll work on that in two weeks after I graduate college :D

1555254788
Xe
andrewrk: how would I add an OS backend to zig's standard library? I already have function calls for things like file operations in a bit of a self-made webassembly environment.

1555254956
andrewrk
Xe, that's a great question. Let me think about that for a moment

1555254994
Xe
üëç

1555255018
shritesh
FYI the Wiki has some info:

1555255037
andrewrk
what OS is it?

1555255134
Xe
it's not any OS in particular, though the semantics are unix-like:

1555255382
andrewrk
cool, yeah this is the use case I need to consider

1555255403
shritesh
Oh wow. I remember this project. This blew my mind when I first saw it in Rust circles.

1555255441
Xe
shritesh: yeah, i'm still working on it. I've been kinda set back by life circumstances, but I want to push this into high gear now.

1555255494
andrewrk
Xe, so the status quo answer to your question is that you fork zig, add support for your OS (you can follow the "Zen" OS example), and then submit a pull request to upstream your changes

1555255536
Xe
andrewrk: awesome

1555255543
Xe
how do you qualify the type of a string?

1555255555
Xe
like of a size-independent string

1555255574
andrewrk
I don't currently have a solution to the use case of e.g. extending Zig with more operating systems without going through master branch / upstreaming process or maintaining a fork

1555255585
shritesh
andrewrk: submitted a PR to bump wasm tier

1555255621
andrewrk
Xe, zig doesn't have strings - what are you trying to do?

1555255648
andrewrk
shritesh, bump it up to where the other 2's are

1555255715
andrewrk
hmm this table is getting big. maybe we move the support table to ziglang.org and delete it from the readme, and then it will be easier to have more columns

1555255715
Sahnvour
andrewrk, thanks, how do I do the equivalent to `--library c` in a build file ?

1555255735
andrewrk
Sahnvour, artifact.linkSystemLibrary("c");

1555255740
Xe
andrewrk: create a wrapper around

1555255801
Sahnvour
thanks

1555255920
andrewrk
Xe, is this related?

1555256036
Xe
andrewrk: so I have to keep track of the length of "strings" like in C?

1555256072
andrewrk
I'm not sure what you're asking

1555256100
Xe
i'm asking how do you make a function that passes a slice of any length with one function argument?

1555256109
daurnimator
andrewrk: any thoughts on the http headers PR?

1555256132
andrewrk
Xe, fn foo(data: []u8)

1555256141
Xe
then why isn't that working?

1555256156
andrewrk
I can't see your screen

1555256196
Xe


1555256223
andrewrk
you're passing const data to a mutable slice

1555256228
andrewrk
try []const u8

1555256305
andrewrk
daurnimator, no, I haven't looked at it yet

1555256415
daurnimator
andrewrk: no problem. I started work on a hpack module too but ran out of time. might be a while before I get back to it

1555256424
Xe
i can put zig files in folders and the compiler doesn't have aay magic rules for them, right?

1555256426
Xe
any*

1555256589
Sahnvour
andrewrk, have you considered the case of header-only C libs ? What's the best way to use functions defined this way ? @cImport ?

1555256794
shritesh
Xe: Yes. You can change behaviors through command line options and Zig's build system (build.zig) if you want.

1555257823
shritesh
I think I'll try to add Zig support in

1555257911
Xe
oh, `zig test` doesn't work in wasm-freestanding-none

1555259078
Sahnvour
answering my own question, looks like translate-c should do just fine for header only libs

1555261267
Xe
how do I encode an int64 value into base 10 UTF 8 bytes?

1555261439
Xe
i'm looking for the equivalent of

1555261555
scientes
Xe, fmt.digitToChar()

1555261562
scientes
Xe, and thats just ASCII bytes

1555261615
Xe
scientes: where is the documentation on that?

1555261627
scientes
Xe, there is no documentation for the std lib yet

1555261631
scientes
*std.fmt.digitToChar()

1555261688
Xe
is it expected for webassembly to not support error returns?

1555261706
Xe
and what should I do instead

1555261711
scientes
Xe, there is a difference between regular zig-internal functions, and extern functions

1555261720
scientes
extern functions don't support error unions

1555261742
Xe
for internal functions

1555261752
scientes
then you can use them

1555261766
scientes
Xe, errors are just values, they are not exceptions

1555261883
Xe


1555261948
scientes
that is an llvm bug, not a zig bug

1555261969
scientes
but zig should work around it

1555261987
Xe
should i try zig master too?

1555262072
scientes
Xe, but that means your program crashed, that is only called by the panic handler

1555262091
scientes
in order to get backtraces on wasm that will have to be implemented in llvm

1555262123
Xe
it crashed at compile time?

1555262141
scientes
oh, no that is the linker

1555262174
scientes
yeah try zig master, i know they have been working on this

1555262386
Xe
master works yeah

1555262419
scientes
if you panic however it will just hang

1555262519
shritesh
Xe, that should have been solved in master

1555262839
shritesh
You can also define your own `pub panic(..) noreturn` function in your code change the behavior of how panic is handled:

1555262850
shritesh
code to change*

1555263277
Xe
shritesh: oh nice

1555263527
Xe


1555263630
shritesh
Compilers are wonderful

1555269657
shritesh
andrewrk: we need to figure out the wasm linking / imports story. In C/Rust, they are being done by attributes.

1555269721
shritesh
`extern "module.name" fn import.name(..) ..` should work fine but I am clueless on how to implement that

1555269765
shritesh
and for wasi the module name will just be "wasi_unstable" for now and will later be namespaced to "wasi" when it reaches 1.0 or something

1555269790
shritesh


1555270702
shritesh
Better worded question: Right now all extern functions get imported from "env" in wasm32. How would I make it import from whatever is in the string after `extern`?

1555270742
Jenz
(Noob question, I'm just trying to replace to chars in a string, what am I doing wrong?:

1555270835
Jenz
(test fails, and val of `str` stays "hello", as everyone [in this channel] but me probably knows just by looking)

1555270974
shritesh
Jenz: I think you need to use mem.copy

1555271018
Jenz
shritesh: OK, thanks, I'll try that :D

1555271050
shritesh
`mem.copy(u8, str[2..4], replacement[0..]);` in line 8

1555271141
Jenz
Ooh, yes that worked, thanks a ton shritesh!

1555271160
shritesh
:)

1555271395
Jenz
But then, what did my `str[2..4] = replacement[0..];` do?

1555271746
shritesh
I'm confused as well.

1555271839
shritesh
When I try to run inside a comptime block, I get an `error: cannot assign to constant`. So maybe this is a compiler bug?

1555271965
Jenz
Seems like a weird place to place a compiler bug (stupidness intentional - initially an attempt at a joke)

1555272007
Jenz
(When your "joke" needs that much of an explanation, you know it's an absolute failure XD)

1555272263
very-mediocre
a slice is a pointer and a length; the left side evaluates to a pointer to one of the items in the `str` array, but then you're just pointing it elsewhere

1555272333
very-mediocre
imho. it's like doing `var ptr = str[2];` followed by `ptr = replacement[0];`

1555273127
Jenz
But str[2] refers to the u8 value, whilst str[2..4] refers to the pointers to the values in the array, not the actual values, doesn't it? That's why I thought setting those pointers to some other pointers (replacement[0..]) would change the actual values of the array `str`. Though clearly it did not

1555273168
scientes
<Jenz> But then, what did my `str[2..4] = replacement[0..];` do?

1555273170
scientes
yeah this doesn't work

1555273192
very-mediocre
Jenz you're right, my example should read `var ptr = &str[2]`

1555273201
Jenz
Oh ok

1555273282
Jenz
So the ptr is copied, kinda? (I'm probably using these terms wrong)

1555273295
very-mediocre
you're expressing a new pointer to an existing element

1555273308
very-mediocre
and then that pointer is being pointed at another element

1555273324
very-mediocre
so the first elemented being pointed to is no longer referenced

1555273341
very-mediocre
try this `str[2..4].ptr.* = replacement[0];`

1555273359
Jenz
Yeah, ok, thanks very-mediocre. I think I get it now (though I'm not sure if I actually do)

1555273393
very-mediocre
if you dereference on the left side, then you're expressing the actual content being pointed to, then when you do = you're assigning to that value

1555273596
Jenz
Huh, cleary you know what you're talking about. Thanks again for the extensive explanation. Though despite all the help, I don't get why str[2..4].ptr.* resolves to only one element

1555273635
very-mediocre
that's just by design, because a slice is really just a pointer to a single element, and a length

1555273647
Jenz
And I'm sorry for being so ignorant :) -- that's the reason I'm trying to understand now (and because I find zig absolutely awesome)

1555273671
very-mediocre
`str[2..4]` is a structure that contains 1. a pointer to str[2] and 2. length=2

1555273733
Jenz
"to str[2] and 2" ? I'd thought: "to str[2] and str[3]"

1555273745
very-mediocre
that's point #2

1555273776
very-mediocre
‚Ä¢ pointer to str[2] and ‚Ä¢ length=2

1555273801
very-mediocre
and there's no need to be insecure, i'm pretty mediocre at zig too :)

1555273832
Jenz
Haha, then zig has sky-high standards

1555273875
Jenz
(Which I guess is true, having just looked at the std.mem implementation. And having followed zig for a while)

1555273875
shritesh
I think we all are. Except Andy lol

1555273990
very-mediocre
i'm super brain damaged from working with high level languages for 10 years

1555274053
very-mediocre
zig is the "no more excuses" moment for me to go back to lower level stuff

1555274125
Jenz
I've been "playing" (probably the most correct term for me) solely with high-level languages for like what, 4 years? not much, but for as long as I've been programming (I'm 17 now)

1555274161
Jenz
I'm young and foolish XD, but here's some proof that I somewhat understood the slices:

1555274170
Jenz
It works!

1555274222
very-mediocre
yeah, just to be clear that's good for understanding what's going on, but the more correct way to do that would be `for (replacement) |char, i| {str[2 + i] = char;}`

1555274258
Jenz
Which is pretty much the exact implementation of mem.copy

1555274358
very-mediocre
because we're dealing with bytes here, yes it'll be the same

1555274428
very-mediocre
but imagine you were replacing structs in an array of structs, then you'd want the `for` loop, which would let zig decide whether to actually make a copy or pass a pointer

1555274454
Jenz
Thanks again for the help, it was seriously clarifying

1555274532
very-mediocre
don't mention it, this is a pretty helpful place, andrewrk and others were very patient with me when i first joined here

1555277736
Xe
shritesh: how do you make zig call a webassembly trap instruction?

1555277746
shritesh
unreachable

1555277750
Xe
ah, thanks

1555277799
Xe
so i just make the panic handler in any .zig file?

1555277832
shritesh
Yes. You can only have at most one

1555278382
shritesh
Xe: does olin export all functions in the "env" module?

1555278731
Xe
yes, as a hack because rust didn't let me use an arbitrary name, it should also work with the `olin` module

1555278783
shritesh
Gotcha. I'm trying to get modules to work with Zig.

1555278793
shritesh
Do you have any thoughts on WASI?

1555278844
Xe
wasi isn't radical enough

1555278855
Xe
they limit things like file descriptors to the posix filesystem

1555278895
shritesh
Hmm

1555278899
Xe
also i seem to be segfaulting the compiler

1555279090
Xe
my source tree:

1555279122
shritesh
Do you know what change caused it?

1555279159
Xe
not entirely sure

1555279171
Xe
i'm going to step through things one by one

1555279523
Xe
shritesh: the segfault is in this function:

1555279705
Xe
ubuntu is obscuring the core location

1555279740
shritesh
Looks like it's the panic function

1555279805
shritesh
If you compile with --verbose-ir it stops right as it's analyzing the panic function

1555279893
Xe
interesting

1555279951
shritesh
Don't take my word for it tho. I have been using the language for like 3 weeks.

1555280010
Xe
honestly i'm more happy that i've gotten this far with very little research and effort

1555280024
Xe
zig looks like the kind of compiler i've always wanted but never been able to make

1555280050
shritesh
According to Andy, it is no accident:

1555280082
Xe
hahahahaha

1555280088
Xe
i can see how that'd be super helpful

1555280147
Xe
i'm going to try and coax my machine to put the core into a place i can serve it via HTTP

1555281336
Xe
aha

1555281338
Xe
got it

1555281384
Xe


1555281878
Xe
shritesh: i got the minimum crashing code down to this:

1555282099
shritesh
It doesn't crash in release-fast

1555282122
Xe
that's interesting

1555282173
shritesh
pretty sure it has to do with debug / panic / something related to it

1555282665
shritesh
It doesn't crash in other architectures.

1555282804
shritesh
It's crashing at get_llvm_type<-ir_render_instruction<-codegen_build_and_link

1555283015
shritesh
Here's the stack trace blob:https://imgur.com/8bcef5b8-ed6b-4e07-9cbc-70dea8fb8790

1555283028
shritesh
Whoops:

