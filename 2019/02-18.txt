1550495212
forgot-password
exit

1550495216
forgot-password
oops, sorry :)

1550507048
Zaab1t
andrewrk: recommended ressources for learning llvm to create toy languages?

1550507103
andrewrk
Zaab1t, I would start with

1550507168
Zaab1t
andrewrk: so the general approach is just to write llvm assembly to a file and then let llvm do the rest?

1550507172
andrewrk
and observe the LLVM IR that clang and zig output for various examples

1550507205
andrewrk
is your toy language Ahead Of Time compiled or Just In Time?

1550507235
andrewrk
there is also this:

1550507289
mercurian
the second one is probably a better starting point :)

1550507297
mercurian
though I imagine the language reference is a great resource

1550507365
Zaab1t
andrewrk: I dont really know anything about the language. A friend of mine said he had a goal since his twenties to create his own programming language and now he is forty-something. Decided to help him out, already looked at the docs

1550507386
Zaab1t
just thought there maybe was a really good talk, or hello world or whatever :p

1550507390
Zaab1t
ill dig into the docs

1550507405
andrewrk
Zaab1t, the general approach for AOT is to build an in memory representation  of LLVM IR in a "module" and then you can call LLVM functions to write it to a .o file. then you have to link it

1550507469
andrewrk
if your friend just wants a toy language, he might consider interpreting first. that's the easiest

1550507528
Zaab1t
well he is a compile-a-holic generally, so I'm betting he does not want interpreted :p

1550507964
Akuli
how does zig's optimizer work? it seems a bit magical to me, or does zig just use some llvm's optimizer thing?

1550507981
andrewrk
Akuli, optimization is all LLVM

1550507995
DutchGh0st
what do you think of this?:

1550508002
andrewrk
zig guaranetes certain semantics to the programmer, and then LLVM takes care of the rest

1550508006
andrewrk
*guarantees

1550508015
DutchGh0st
its digits10, but you choose (at compiletime) the ammount of unrolls its gonna do

1550508097
DutchGh0st
and if you pass in null for `unroll`, then its gonna do a full unroll

1550508110
andrewrk
DutchGh0st, neat! looks like a nice example to demonstrate how zig's comptime features work

1550508150
DutchGh0st
there's one problem with it however, it doesn't work on isize, usize, i64 and u64, somehow

1550508165
DutchGh0st
it overflows somewhere, so I need to fix that

1550508394
DutchGh0st
okey thats fixed now

1550508501
DutchGh0st


1550510324
DutchGh0st
andrewrk: , would you say that comptime operates at

1550510358
andrewrk
I watched 30 seconds of that clip that somebody linked about "design time" and it didn't make sense to me

1550510359
DutchGh0st
becuase you can just write `if (comptime expr) { // One implementation} else { // another implementation }`

1550510397
andrewrk
it literally happens at compile time. if you want to call that "design time", ¯\_(ツ)_/¯

1550510447
DutchGh0st
more in the sense that you can write multiple implementations while you're writing, without paying any cost at runtime

1550510528
DutchGh0st
sure, comptime executes during compilation, but just the fact you can write `if(comptime whatever) {} else {}` is powerfull :)

1550510551
andrewrk
agreed

1550519649
DutchGh0st
Think this is the final code, with tests:

1550519809
DutchGh0st
altough one of the overflow checks at compiletime can go away actually, lol

1550519913
dec05eba
i love zig. I dont have to use aweful c++ anymore

1550519944
DutchGh0st
I've never used c++ haha

1550519963
DutchGh0st
but I love doing comptime stuff, see how far you can actually push it

1550520211
DutchGh0st
soo how did you get into zig dec05eba?

1550520312
dec05eba
i think i saw it posted on reddit or something. I was looking at new languages like jai and zig looked ideal for the type of programming i do and unlike rust, zig is not an ugly as sin

1550520430
dec05eba
since i like zig i added support for it in my c++ build system so you can mix c/c++/zig code and automatically fetch dependencies

1550520452
dec05eba
how did you get into zig if you haven't used c++? i would assume people who use zig come from c / c++ world

1550520544
DutchGh0st
Jai, heh

1550520595
DutchGh0st
I...think I saw one of andrews video's when I was on youtube once

1550520613
DutchGh0st
it probably showed up because I watched alot of Jonathan's Jai video's back in the day

1550520703
DutchGh0st
why is Rust ugly as sin? I think Rust is quite beautifull

1550520713
DutchGh0st
it's where I come from :3

1550520733
wrl
subjective analysis of languages is pretty low-brow honestly

1550520742
wrl
or, rather, their "beauty"

1550520875
DutchGh0st
the only ugly thing within Rust that I agree is ugly, is the `unsafe` keyword

1550520910
DutchGh0st
but it's purpose is usefull

1550521108
mercurian
lol

1550521121
mercurian
oh Jai, if it ever actually releases, I'll be interested to see it

1550521132
mercurian
but, it has exceptions, so there's only so much I can like it

1550521142
dec05eba
maybe if i use rust more i would feel more comfortable using it, but it feels like you are re-learning c++ when learning to use rust. I have used c++ for around 9 years but i hate it

1550521172
dec05eba
does jai have exceptions now? jonathan blow said he dislikes exceptions

1550521196
DutchGh0st
I dont think he'll ever add those

1550521223
mercurian
there's a video where he covers adding them

1550521228
mercurian
perhaps he removed them

1550521237
mercurian
but, that's when I stopped following the language's development

1550521295
DutchGh0st
he has done quite some work on his game, and game engine lately

1550521309
mercurian
not available on linux

1550521313
mercurian
(afaik)

1550521327
DutchGh0st
I dont know, its not finished yettt

1550521335
mercurian
which game?

1550521341
DutchGh0st
sokobon

1550521344
dec05eba
he demoed the game in linux

1550521347
DutchGh0st
sokabon? something like that

1550521350
dec05eba
so the language also works on linux

1550521382
dec05eba
somebody else ported it to linux

1550521424
mercurian
dec05eba: jai? it hasn't been released, even privately, has it?

1550521470
DutchGh0st
it actually has

1550521479
DutchGh0st
but only for like 10 people

1550521499
DutchGh0st
welp, this is awesome:

1550521614
mercurian
hmm

1550521773
andrewrk
DutchGh0st, if (comptime unroll) <--- the comptime is redundant here. you need it to make function calls comptime but not for expressions that are already comptime

1550521791
andrewrk
of course you can do that to make it explicit, if that helps readability

1550521815
DutchGh0st
oh! maybe the keyword helps realize the if - else is done at compiletime

1550521826
DutchGh0st
but good catch!

1550531614
andrewrk
alright. we're down to 2 non-WIP pull requests, oldest one being 9 days ago

1550532486
daurnimator
andrewrk: I'm unsure why valgrind PR is a WIP. Its not "complete valgrind support for zig", but it is useful code already to merge.

1550532548
andrewrk
daurnimator, apologies, I removed the label

1550532618
andrewrk
I'll take it from here

1550533985
daurnimator
andrewrk: I noticed the http issue doesn't have a userland tag

1550534018
andrewrk
fixed

1550534204
daurnimator
andrewrk: so what are your current priorities?

1550534220
daurnimator
We need a new planning blog post :P

1550534257
andrewrk
yeah, the problem is that those compete for time getting stuff done

1550534315
andrewrk
my priorities for 1 month are the 0.4.0 release. trying to get some new stuff in there, get the docs done that are long overdue, and fix a reasonable amount of bugs

1550534337
daurnimator
okay. so bug bashing + docs (rather than e.g. copy elision - take 3)

1550534377
andrewrk
then I'm going to go for attempt #3 at copy elision. coroutine rewrite. major language changing proposals. self-hosted compiler.

