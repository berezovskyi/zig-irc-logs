1569630231
vpzom
What do I need to do to see line numbers in error traces? All I'm getting right now is "???:?:?:"

1569640308
andrewrk
vpzom, do basic examples work for you? e.g. hello world with @panic("foo");

1569640339
andrewrk
philipwhite, given that 0.5.0 is to be released Monday, I think it would be good to use master branch

1569642700
rifkik
andrewrk, I feel like we should add a code of conduct, so that people won't act horribly to each other

1569650413
hasanyasin
Hello all, total Zig noob here. Quick question: I have checked the zig source for command line arguments, but zig compiler CLI itself seems to be in

1569650433
hasanyasin
Hello all, total Zig noob here. Quick question: I have checked the zig source for command line arguments, but zig compiler CLI itself seems to be in CPP.

1569650453
hasanyasin
Is this the standard way to read command line arguments:

1569650461
hasanyasin
```

1569650473
hasanyasin
```    const args = try std.process.argsAlloc(allocator);    if (args.len < 2) {        return error.NoCommand;    }```

1569650514
hasanyasin
`    const args = try std.process.argsAlloc(allocator);    if (args.len < 2) {        return error.NoCommand;    }`

1569650666
hasanyasin
os.argv is also assigned in `lib/std/process.zig`, but it seems like in a posix-only block.

1569651471
traviss
did you try `var arg_it = os.args();`?

1569651598
hasanyasin
There seems to be a difference between 0.4 and master as args --> argv. I saw the method I used above on documentation, but that example was about wasm backend.

1569651635
hasanyasin
If you were to write a tutorial or documentation, what way would you show this?

1569651642
traviss
i'm not sure, i was just looking at

1569651688
hasanyasin
I am not sure either, and that is why I wanted to ask. :D

1569651765
hasanyasin
By change at master (from args to argv), I meant os.args, not process. args.

1569651852
hasanyasin
Thank you so much @traviss. Maybe I should also check other open source projects under Zig in the wild section on the homepage.

1569651913
traviss
sounds like a good idea. i'm pretty new to zig as well so glad i could help.

1569651952
hasanyasin
(y)

1569666001
scientes
how do i link against system libc?

1569677026
keegans
scientes: --link c

1569677035
keegans
or linkLibC in build.zig

1569677046
scientes
that actually doesn't do it

1569677053
scientes
-target x86-64-linux-gnu fixed it

1569677070
keegans
oh , the default target is musl for -static , right ?

1569677073
keegans
makes sense then

1569685940
andrewrk
scientes, -lc does it. without a target specified it uses the native system

1569685950
scientes
oh ok

1569689364
andrewrk
keegans, I'm merging your PR locally, playing around with it

1569689377
keegans
awesome let me know if you have any questions with setup

1569689489
andrewrk
I have 1 question - I tried removing crt_begin.o, crtbegin_dynamic.o, crtend_android.o and it builds & links just fine. can you confirm this works?

1569689495
andrewrk
I have reason to believe those .o files are not necessary

1569689514
andrewrk
here's my local diff:

1569689523
keegans
oh

1569689535
keegans
yeah let me try it with the exe i was working on

1569689667
keegans
nah it breaks

1569689674
andrewrk
ok good to know thanks

1569689675
keegans
libc: Fatal signal 4 (SIGILL), code 2 (ILL_ILLOPN), fault addr 0x4000000000 in tid 73238 (snap-zig), pid 73238 (snap-zig)

1569689679
keegans
causes it to jump into garbage

1569689683
keegans
i think i tried this earlier too , yeah

1569689687
keegans
but worth a shot for sure

1569689714
andrewrk
I think the logic needs to be slightly different - it's always picking the dynamic one even when it could pick crtbegin_static.o

1569689749
andrewrk
how do you test running binaries btw?

1569689776
keegans
qemu , i compiled bionic from source off the tree and placed it in /system

1569689791
andrewrk
interesting

1569689791
keegans
it is really hacky , i can send the sysroot if you like

1569689801
keegans
that way qemu can load /system/lib/linker64

1569689809
keegans
so i can ensure that our dynamic binaries produced work

1569689816
andrewrk
I bet it would work with qemu -L android-ndk-r20/some/path

1569689833
keegans
no the ndk doesnt come with the linker

1569689836
andrewrk
oh

1569689879
keegans
but as i mentioned earlier you have to clone the entire 60gb android source tree to just build bionic

1569689893
keegans
and i also build toybox and mksh so i can chroot into an android-like environment to play around

1569689903
andrewrk
that's a lot of bytes

1569689931
andrewrk
I wonder what it would look like to set up something on the CI to get android test coverage

1569689938
keegans
yeah i have fresh android 9 builds of bionic and mksh and toybox for aarch64,arm32&x86,x86_64

1569689954
keegans
but it is very annoying to get it all set up

1569689968
andrewrk
I'll finish up the review on the PR right now. Just a couple tweaks and I think it's ready to merge

1569689976
keegans
sounds good :D

1569689989
keegans
yeah i will think about the CI thing . i think we could maybe just build a sysroot and describe the steps

1569689996
keegans
but you certainly don't want to be building bionic on your CI

1569690121
andrewrk
it runs fine without -lgcc though? great :)

1569690146
andrewrk
yeah one of the nice features of zig is that it provides libcompiler_rt.a for all targets by building it lazily from source

1569690175
keegans
yeah it works nicely without -lgcc , and now we don't need to pass that extra library path when building !

1569690183
keegans
i modified the set-up guide accordingly

1569690343
andrewrk
ok have a look at those comments and see what you think

1569690401
andrewrk
zig contributors are conspiring to delay 0.5.0 by forcing me to type up even more release notes :)

1569690833
keegans
andrewrk: not sure i follow here :

1569690862
keegans
so leave the code as it was, then have an if below for is target android then embed that if else inside  ?

1569690910
andrewrk
keegans, my suggestion is

1569690954
andrewrk
when I ls toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/23/ I see crtbegin_dynamic.o and crtbegin_static.o

1569690963
keegans
ah

1569690981
andrewrk
I also see crtbegin_so.o and crtend_so.o which makes me think that might be needed when doing `zig build-lib -dynamic`

1569690995
andrewrk
that can be handled separately from this PR though

1569691103
andrewrk
I'm getting the impression that android is a total mess

1569691121
andrewrk
so many things are unnecessarily nonstandard

1569691174
keegans
:D

1569691254
andrewrk
it's good to have an android developer in the community though :)

1569691304
andrewrk
a general-purpose language benefits from having diversity of users

1569691375
andrewrk
after I rewrite Groove Basin in Zig, maybe I'll make a simple android app that acts as a remote (pause/play, previous song, next song)

1569691423
andrewrk
keegans, looks good to me, ready for merge?

1569691721
keegans
just got back : sounds good ! let's do it

1569691766
keegans
make sure my changes were satisfactory

1569691799
andrewrk
yep

1569691823
andrewrk
merged

1569691830
andrewrk
thanks for your contributions :)

1569691849
keegans
thank you for zig :D

1569691885
andrewrk
alright I gotta close IRC and spend all day typing up release notes

1569691902
keegans
haha have fun, lots of good stuff for the release

1569691925
keegans
i'll continue hacking away at my android project

1569694607
stratact
andrewrk: just a friendly reminder on my PR :D

1569694668
stratact
crap, I guess I was forgotten...

1569696966
andrewrk
stratact, your PR is still tagged with the 0.5.0 milestone, it's not forgotten

1569696974
andrewrk
no promises though, I am really behind on release notes

1569697285
scientes
how am i suppose to look for a shared library in the current directory?

1569697288
scientes
instead of installing it

1569697536
scientes
<andrewrk> scientes, -lc does it. without a target specified it uses the native system

1569697545
scientes
I'm not seeing that

1569697560
scientes
i can only link against glibc's libmvec if I use -target glibc

1569697610
scientes
oh that doesn't work either, i have to use  -L/lib/x86_64-linux-gnu/

1569697621
scientes
perhaps it is assuming merged /usr

1569706406
scientes
<andrewrk> scientes, -lc does it. without a target specified it uses the native system

1569706419
scientes
i'm not experiencing this, looking at --verbose-link

1569706425
scientes
and -gnu doesn't build libmvec

1569706538
scientes
ahh its because of the way we manage symbols

1569706540
scientes
i see

1569706550
scientes
i'll try to submit a patch later

1569709025
scientes
andrewrk, how do you generate abi.txt?

1569709825
scientes
yeah you must have a script

1569709858
scientes
I need to use that stuff cause if i directly link to the .so i get bad results for some reason

1569709876
scientes
and for some reason it works on my laptop, but not a system with glibc 2.29, no idea why

1569712416
scientes
andrewrk, can you add libmvec to the glibc ABI stuff, it is not documented enough for me to do it

1569714197
andrewrk
scientes,

