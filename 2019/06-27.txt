1561596412
scientes
congrats

1561597537
dimenus
why would a build.zig generated by 'init-exe' not build an exe (without calling the run step)?

1561597545
dimenus
is there an extra call that must be made?

1561598511
Tetralux
I could be wrong, but I may actually make the exe, and put it into zig-cache. If so, I believe you can pass `--prefix dir` to `zig build`.

1561598610
Tetralux
I could be wrong, but it may actually make the exe, and put it into zig-cache. If so, I believe you can pass `--prefix dir` to `zig build`.

1561598662
qrpnxz
hello lads. Does zig have a stdlib?

1561598692
scientes
@import("std")

1561598700
scientes
but its static-linking only

1561598717
qrpnxz
okay, sorry, real question was where can I find the docs for the zig stdlib

1561598745
scientes
there are none

1561598760
qrpnxz
:(

1561598760
scientes
only the language has docs ATM

1561598765
qrpnxz
alright

1561598767
qrpnxz
thanks

1561598769
Tetralux
qrpnxz: Best you can do is search the std directory.

1561598777
Tetralux
It will have docs at 1.0.

1561598786
qrpnxz
oh, i have that. Will do

1561598786
Tetralux
I forget if it's planned before then or not.

1561598805
qrpnxz
hard to get feedback if on it before 1.0 without docs tho, no?

1561598832
Tetralux
You can grep for fn, or for vague things you're looking for.

1561598834
scientes
1.0 is years away

1561598844
Tetralux
There's also some comments here and there.

1561598855
Tetralux
Zig is decent to read though, so it's not too hard to read through.

1561598869
Tetralux
But yeah

1561598877
Tetralux
This may also help you.

1561598878
Tetralux


1561598888
qrpnxz
that's true. It looks pretty interesting so far so I wanted to make something with it but most important checkout the IO story. Go does IO very well

1561598961
Tetralux
std.fs has the filesystem stuff.

1561598966
Tetralux


1561599055
Tetralux
Opening a file gives you a `File`

1561599062
Tetralux
`File` has .inStream()

1561599070
Tetralux
That gives you an InStream

1561599092
Tetralux


1561599150
Tetralux
`InStream`s have things like `readFull`

1561599201
qrpnxz
i see

1561599202
qrpnxz
thanks

1561599244
Tetralux
There's also readAllAlloc if you just want act like you're in a GC langauge for a moment xD

1561599255
qrpnxz
haha

1561599258
Tetralux
Or readAllBuffer if you're more sane and have a place to write it into.

1561599265
qrpnxz
well, I guess I'll come back when it's further along

1561599269
Tetralux
(A buffer is basically a null-terminated byte array that auto-expands.)

1561599280
qrpnxz
alright

1561599287
qrpnxz
thanks again

1561599305
Tetralux
Welcome. Look forward to seeing you back at some point.

1561599362
Tetralux
It occurs to me that we never asked them what they feature they wanted to see it have. :'D

1561599593
companion_cube
I hope there will be a nice IDE by 1.0, too

1561600072
Tetralux
What kind of experience you looking for?

1561600117
Tetralux
@companion_cube

1561600449
curtisf
a language server for vscode highlight-to-get-type and member completion would be great

1561600691
companion_cube
completion, type hint, jump to def

1561600714
companion_cube
auto format and errors on save are already there, which is neat.

1561600729
companion_cube
(also, get the docs of a function when you highlight it, etc.)

1561600787
companion_cube
interestingly rust isn't there yet, and their tooling is clearly harder to do

1561601064
fengb
error: incompatible types: 'i32' and 'u8': track -= res.duration;

1561601086
fengb
Shouldn't this be coerceable?

1561601769
fengb
-target wasm32-freestanding-musl "TODO implement C ABI for this architecture."

1561601859
fengb
I thought wasm32 musl was a thing now

1561602209
fengb
Oh one of my functions doesn't conform. That's a deceptive error

1561603180
fengb
Nope... I've no idea why this is happening

1561604179
dimenus
andrewrk: how does one just generate an exe with build.zig or is it expected that you use build-exe instead?

1561604324
fengb
dimenus:

1561604331
zie
dimenus it's my understanding the build implies you are using build.zig and the zig build system.

1561604334
dimenus
hmm, linking a c library without linking libc causes a SIGSEGV

1561605015
dimenus
fegb: thanks, it was just the setOutputDir

1561605034
dimenus
**fengb

1561605219
mikdusan2
dimenus: build.zig does generate an exe for you; it's just in the zig-cache folder, and you can create an install artifact to have the exe installed in a place of your choice. set install dir to "." and "./bin" will be used iirc

1561605237
andrewrk
I'm about to make "install" the default "zig build" step

1561605255
andrewrk
sorry I know it's been pretty counter-intuitive for a couple months

1561605391
fengb
andrewrk: why is the build failing on wasm32-freestanding-musl? I thought that was added

1561605442
andrewrk
`zig targets` lists them and yeah it's in there. i'll take a look, is this a regression?

1561605513
fengb
I'm not sure. I'll test out the merge where it was added

1561605518
fengb
Trying to port my C project

1561605536
fengb
So finally got to a point where it's sorta buildable

1561605603
andrewrk
file a bug report. I just tested `pub fn main() void {}` with `zig build-exe test.zig -target wasm32-freestanding-musl --library c` and it worked fine

1561605637
andrewrk
lots of bugs to go through on the issue tracker, and I'm sure there will be some regressions reported over the next few days that I'll try to take care of

1561605686
fengb
I think it's one of the functions I'm invoking

1561605701
fengb
It works fine if I comment out all the C includes

1561605716
fengb
Alright, I'll probably do some hunting tomorrow thanks

1561606536
fengb
Also, congrats on copy elision!

1561606643
andrewrk
thanks! sorry for the inevitable regressions, but I assure you it will be worth it

1561606683
andrewrk
zig's asm codegen on godbolt in debug mode might actually be reasonable now

1561606722
fengb
I'm just happy that it's here! Been lurking for a few months now, and it seems like a lot of previous effort is paying off

1561606914
andrewrk
I'm relieved because I literally tried and failed to do this during the 0.4.0 release cycle. spent ~3 months working on it and then abandoned the branch

1561606925
andrewrk
(actually ended up using a fair bit of the code in this third attempt though)

1561607011
fengb
I watched the 0.4.0 status video. 3rd time's a charm huh?

1561607021
fengb
It wasn't failure. It was learning to do it right!

1561608238
curtisf
is there a way to make zig test build a 32 bit executable on windows? It looks like the gdb I have installed only works on 32 bit exes

1561608335
andrewrk
the 32 bit windows target needs some attention to be useful

1561608339
andrewrk
it doesn't pass all the tests

1561608380
andrewrk
the short answer is yes, you can pass -target i386-windows

1561608443
curtisf
ah, thanks for that, but it doesn't compile afterall

1561608782
curtisf
Time to learn Visual Studio :)

1561609400
andrewrk
I have a Project1.sln with no files in it. I right click the project, properties, debug info. put in the exe and the cwd, then hit the big green "play" button

1561609618
curtisf
I seem to have it working, but I'll need to learn a lot to figure out what's wrong. I

1561609683
andrewrk
ah that's a bummer

1561609695
andrewrk
curtisf, are you aware of @compileLog ?

1561609737
curtisf
Yes, not sure how I could use it here, because I'm not sure where something is actually going wrong yet

1561609763
curtisf
based on my debug prints it looks like the iterating variable in the for loop is going backwards somehow

1561609767
andrewrk
it's for inspecting comptime values, so you'd use it like printf debugging at compile time

1561609783
curtisf
right, I want it for orienting myself in the runtime debugger

1561609794
curtisf
so that I can see which iteration of an unrolled loop I'm in, for example

1561609845
andrewrk
you can still print comptime values at runtime

1561609860
andrewrk
just can't print runtime values at comptime

1561609905
curtisf
yea, that's what I'm doing

1561609922
curtisf
Oh, I could probably just write `var foo = mcomptimevar` and it will hopefully not delete it in a test build?

1561609968
andrewrk
yeah

1561610040
curtisf
I think it'd still be nice to have them in the debugger window for free :)  but this is also the first time i've opened visual studio so maybe not the best person to request debugging features

1561610416
andrewrk
in theory the new result location code should give them to you for free. but it appears that either llvm is not emitting good PDB/DWARF or gdb/msvc is not good enough to understand

1561610435
andrewrk
whatever the problem it will require an upstream/downstream patch

1561610473
andrewrk
I have yet to open an issue for that. feel free to do that in case I forget

1561611493
curtisf
It definitely seems like it's not doing the right thing... Maybe this is a symptom of the comptime var in runtime if compile error I hit yesterday, since this is the same loop that I'm working around that in

1561612049
hryx
Regarding today's earlier conversation about dictation software, for what it's worth: I have a friend who temporarily lost the ability to use his hands. he used dictation to program (and ship) at least one video game during that period. so it can be done and is important for some people. I wonder if/how variable naming affected the experience

1561612236
andrewrk
443 open issues in the 0.5.0 milestone @_@

1561612255
hryx
lordy

1561612322
andrewrk
hmm that's only 4.3 per work day until the release though

1561612367
andrewrk
good night

1561612538
andrewrk
pull requests tomorrow :)

1561612608
hryx
good night!

1561612762
emekankurumeh[m]
nice

1561621786
BitPuffin
andrewrk: lmao thanks for the playtest :D very happy about the reaction vid

1561630301
samtebbs
andrewrk: Re: call for projects to test with copy-elision. I may have accidentally sent a reply to the email thread from my work address. Will resend from my personal account.

1561639600
Flaminator
Is it normal for build.exe to crash whenever you use a @compileLog or have an error in your code somewhere?

1561639626
Cadey
Flaminator: what version of Zig are you using?

1561639743
Flaminator
I think it was a master release from a few days ago.

1561639932
Flaminator
Downloaded zig-windows-x86_64-0.4.0+3c914c63.zip just now and it still pops up a build.exe has stopped working window. But atleast it isn't showing the build.zig traceback anymore which was the main reason I asked this question.

1561639949
Cadey
Flaminator: run it from a command prompt?

1561639960
Cadey
paste output to

1561640571
Flaminator


1561640732
fengb
Flaminator: @compileLog always crashes the compiler

1561640753
fengb


1561640823
BitPuffin
it shouldn't crash the compiler

1561640825
Flaminator
I know but I don't expect

1561640850
BitPuffin
it should just emit an error

1561641056
fengb
I think "zig build" executes a different process for "zig build-exe" which returns error code = 1

1561641067
fengb
Which it interprets as a different failure and panics

1561641208
Flaminator
Using zig build-exe .\src\main.zig doesn't crash build.exe.

1561641213
fengb
So I think "zig build" always crashes if the build failed

1561641222
fengb


1561641227
fengb
Here's the panic that happens

1561641300
fengb
I think the fix would be change the panic to an exit passing through the underlying error code

1561641663
fengb
Can you open a Github issue?

1561641806
Flaminator
Yes going to make an issue about it.

1561641840
Cadey
👍

1561642337
rsdimenus
should 'addSystemLibrary' in build.zig automatically pull in libc?

1561642396
rsdimenus
sorry, **linkSystemLibrary

1561643088
Tetralux
rsdimenus: I don't believe so.

1561643113
Tetralux
Maybe be wrong though.

1561643737
rsdimenus
yeah that's a good point. There seems to be a discrepancy between zig build and build-exe though

1561645396
andrewrk
rsdimenus, no it's possible for c libraries to not depend on libc (although unlikely)

1561645440
rsdimenus
yeah, that makes sense. zig build-exe complains as expected

1561645454
rsdimenus
but zig build compiles and just SIGSEGVs on the run step

1561645610
BitPuffin
andrewrk: does your arcade game os depend on any unikernel type thing or is it completely standalone?

1561645618
andrewrk
BitPuffin, completely standalone

1561645630
andrewrk
it is its own bootloader

1561645632
BitPuffin
nice!

1561645643
andrewrk
(the project is not very far along though)

1561645655
BitPuffin
I've been thinking about implementing my website in zig as its own os

1561645658
BitPuffin
or maybe running inside a unikernel

1561645660
andrewrk
although MarkFirmware just submitted a pull request to get the framebuffer working

1561645675
andrewrk
woah, as a novelty thing?

1561645681
samtebbs
BitPuffin: O.o

1561645685
BitPuffin
kind of yeah

1561645690
samtebbs
Please explain

1561645700
Akuli
hmm, zig for web dev?

1561645731
andrewrk
Akuli, that's a nearly unrelated topic :)

1561645740
BitPuffin
Well it's kind of just a counter reaction to the piles and piles of layers we have in the status quo of web dev

1561645743
BitPuffin
I don't really think the healthiest compromise is to necessarily go this far to the other end :P

1561645784
BitPuffin
although the unikernel thing certainly makes sense, since many of our deployements these with web are just OSs or dockers running a single program

1561645815
BitPuffin
so if there is a bunch of unnecessary code then it is not a bad idea to get rid of that surface area that could have bugs or security vulnerabilities

1561645859
fengb
Containerization without the OS layer?

1561645863
Tetralux
Sounds perfectly reasonable to me.

1561645883
BitPuffin
fengb: yeah you could even use a vm as the "container"

1561645912
BitPuffin
idk I got inspired by many things :P

1561645949
Tetralux
I suspect that containing an

1561645966
BitPuffin
one of them was just thinking through the complexity of things like having an ORM that does a bunch of magic because we typically store things in an external database which sometimes breaks

1561645967
Tetralux
I haven't looked much at it, but NixOS might do a better job at that aspect of it honestly.

1561645984
BitPuffin
Tetralux: yeah I mean something like rumprun would be good

1561645998
BitPuffin
cuz then you still save the work of implementing drivers

1561646030
Tetralux
What is that?

1561646031
Tetralux
Like

1561646037
Tetralux
A very thin OS-like layer?

1561646044
Tetralux
ie a kernel.

1561646049
Tetralux
And that's it?

1561646057
Tetralux
Or is there more to it?

1561646064
BitPuffin
well afaik it doesn't have kernely things like a scheduler

1561646069
BitPuffin
it's more something you could run a kernel inside of

1561646077
BitPuffin
I think

1561646078
andrewrk
Akuli, I didn't mean to shut you down - I was hinting that for recommended web dev you would certainly not put your web server on bare metal

1561646080
BitPuffin
and get re-use of the drivers

1561646091
andrewrk
although the project is intriguing

1561646102
BitPuffin
it's kind of a kernel

1561646102
fengb
I've wondered whether a database should be an OS since it reimplements a lot of OS level stuff already

1561646102
Tetralux
So essentially, it's the hardware layer for your OS essentially.

1561646104
BitPuffin


1561646118
bheads
we run web servers on bare metal

1561646138
bheads
cabelas had 8  64G boxes

1561646161
Tetralux
fengb: I have a suspicion that a database itself is a little overkill. Like, you don't need something that complicated for that.

1561646168
Tetralux
Even for a site.

1561646179
Akuli
yeah i know it's not the best way to do stuff :D

1561646200
BitPuffin
I suspect most websites don't need dbs

1561646211
bheads
you crazy

1561646220
BitPuffin
maybe we're a bit scared of serialization for probably good reasons

1561646235
Tetralux
Most sites seem to use dbs as just a key-value hashmap.

1561646240
Tetralux
In which case...

1561646249
Tetralux
...optimized HashMap anyone?

1561646251
bheads
lol, not e-commerce

1561646266
fengb
Once you start persisting it, it starts looking like a NoSQL database

1561646283
Tetralux
..Except probably faster and cleaner xD

1561646285
fengb
Redis

1561646289
fengb
Doubtful

1561646302
bheads
the last site we made was NoSql, we have to copy the whole site into memory to handle complex relationships

1561646311
bheads
was not a win

1561646328
fengb
Yeah I don't recommend NoSQL since you'd reimplement schemas poorly

1561646341
bheads
so use the right tool

1561646354
bheads
dont just pick nosql or KV cause its hip

1561646362
BitPuffin
I mean my assumption was that literally most websites are fairly simple

1561646375
BitPuffin
I wouldn't go as far as saying that DBs are never the right tool

1561646384
bheads
well it depends on what you measure

1561646403
bheads
volume of traffic wise you are hitting dbs more often

1561646416
bheads
url wise, most sites dont need one

1561646450
Tetralux
My suspicion is that anywhere you'd consider a DB, you could actually just use a few standard, fairly simple data structures, and you're done.

1561646468
Tetralux
Like - it really isn't that complicated, so far as I can tell.

1561646476
bheads
depends on scale

1561646485
BitPuffin
oh yeah, high profile websites that store ridiculous amount of data probably need a db

1561646492
bheads
multiple instances, multiple regions, backend services?

1561646505
Tetralux
Except a DB is really nothing more than load balancing + data structures.

1561646517
bheads
sure, you can roll your own "DB"

1561646524
Tetralux
Well - a

1561646527
Tetralux
But you get my point.

1561646569
bheads
I am just say, dont generalize a field :) use the right tool for the job

1561646576
Tetralux
Anything that uses string parsing to issue commands...

1561646585
BitPuffin
I mean another thing that seems trendy these days is premature microservicefication

1561646599
BitPuffin
in web

1561646603
bheads
ugh

1561646609
bheads
microservices are a nightmare

1561646630
Tetralux
See, I think that could be alright... if it's designed to be debugged like a program, and uses a memcpy interface.

1561646635
Tetralux
ie. shared memory.

1561646639
BitPuffin
like yay we don't have a need for this kind of scale but now we need to synchronize these separate threads running on different computers

1561646641
bheads
even worse is when its someone elses microservices

1561646643
Tetralux
I haven't looked into that though.

1561646682
fengb
Once you add persistence and multiple servers, the DB layer starts getting really complicated

1561646685
Tetralux
BitPuffin: I suspect---though don't know if---you could use lockless stuff to deal with that.

1561646688
bheads
nothing like building a page and having 1 of 7 microservies fails...

1561646738
Tetralux
Ugh.

1561646746
BitPuffin
maybe

1561646769
Tetralux
I really want to use cmpxchg for something to get a better feel for it at some point.

1561646779
Tetralux
That seem really damn promising honestly.

1561646790
Tetralux
I feel like more things should use that.

1561646801
Tetralux
(that currently use locks instead.)

1561646816
BitPuffin
yeah I really need to get into the lockless stuff at some point

1561646844
Tetralux
That reminds me - I need to look up just how much more efficient strong vs weak cmpxchg is.

1561646869
Tetralux
Cause what little looking at x64 instructions I've done did not show anything about strong or weak.

1561646937
bheads
if only cmpxchg worked on larger blocks of memory

1561648363
Tetralux
Can cmpxchg a pointer though. :p

1561648861
thm
hi. just found zig and tried "./zig build-exe --c-source hello_world.c --library c -target x86_64-linux", but it crashes with "posix_spawn failed: No file descriptors available"

1561648966
Tetralux
If you're trying to compile to native, you shouldn't need to specify it.

1561648974
Tetralux
I'm not sure that would cause that problem though.

1561648993
andrewrk
thm, what is the output of `ulimit -n` for you?

1561649012
andrewrk
that tells you the number of file descriptors that you are limiting processes to

1561649015
thm
1024

1561649073
andrewrk
mine is set to 99999. I think it's reasonable to raise this limit. see a related issue:

1561649182
andrewrk
thm, what OS are you on?

1561649195
thm
ok, setting it to 9999 works. is it really necessary to hold all the file descs?

1561649195
andrewrk
I need to try bnoordhuis's suggestion about raising the soft limit to the hard limit

1561649202
andrewrk
see this comment:

1561649212
thm
I'm using Fedora 30 on x86_64

1561649213
andrewrk
it's to avoid a race condition with cache eviction

1561649287
andrewrk
issue remains open to address this. for now the solution is "please have a higher file descriptor limit"

1561649300
thm
ok, thx

1561649362
andrewrk
we could solve it by not having cache eviction...

1561649429
thm
another q: in order to cross compile, I need the target libc?

1561649492
thm
ah wait, targets tells me what libcs are available

1561649516
andrewrk
it's planned to provide libc for all targets:

1561649551
daurnimator
andrewrk: :( about the http.headers PR. Could you explain your idea more? A http header structure really needs to be universal for a language to be useful

1561649570
thm
... but while it lists aarch64-linux-musleabi, I actually have to specify aarch64v8-linux-musleabi - that's a bit confusing

1561649617
andrewrk
daurnimator, any http structure should be built on a lower level streaming API

1561649628
andrewrk
which is the first step

1561649631
daurnimator
andrewrk: that's not possible for HTTP2

1561649634
andrewrk
why not?

1561649661
daurnimator
because in HTTP2 you have to decompress headers as the stream goes; but you can't

1561649662
andrewrk
thm, I agree. that should be a bit less confusing with 516b5e6 which I just pushed

1561649682
daurnimator
also, if you have a 'request' object, you need a http headers object inside of it.

1561649695
andrewrk
no that can still be streaming

1561649698
daurnimator
andrewrk: how?

1561649714
andrewrk
what is this, gzip? bzip? both of those have streaming decompression

1561649735
daurnimator
andrewrk: HTTP/2 headers have their own compression called HPACK

1561649826
daurnimator


1561649869
daurnimator
andrewrk: the approach I

1561650006
andrewrk
daurnimator, what I'm saying is that I am going to read this spec and come up with an API simply because I wish to be involved in this particular std lib API. you've got a head start on me, and I'm sure you'll have some good ideas in your implementation, but I wish to also do this

1561650045
andrewrk
I see that my intuitions about how the protocl worked were wrong

1561650049
dimenus
why would a shared library in linux not have a hash table?

1561650062
dimenus
ElfHashTableNotFound

1561650135
companion_cube
(I don't have any context, but would translating curl to zig be a good start?)

1561650211
andrewrk
daurnimator, let me consider more, I think we can both get what we want

1561650236
thm
andrewrk: one remark to the # of filehandles problem: it gives the error, but finally segfaults. is that expected?

1561650247
andrewrk
no, segfaulting is never expected, always a bug

1561650454
thm
made a comment in 2280

1561650500
andrewrk
thm, that segfault is

1561650698
andrewrk
daurnimator, are you comfortable with the idea of using zig std lib to create prototype http stuff, since nobody but you is working on it right now, knowing that it's all up for being completely changed when I start looking into the use case?

1561650801
andrewrk
one reason for this push back is that http related code is under unusually high scrutiny from outside communities. the context that it's "in-progress" or "prototype" is lost and the reputation of the project becomes under question

1561653579
marler8997
quick question, is there a way in the standard library to chain multiple iterators?

1561653877
daurnimator
marler8997: what do you mean? can you not just call .next on the parent iterator within

1561653894
marler8997
I want to iterate over multiple iterators

1561653935
daurnimator
andrewrk: I'm not sure.... I'd be happy to explain to you all the "whys" of my design for it. I wouldn't like if you came through at a later point and changed everything without knowing the reasons behind a certain architecture

1561653974
marler8997
Looking for something like this:

1561654384
daurnimator
andrewrk: the idea for the http.headers PR was that once it was merged, someone could work on a HPACK module

1561654400
daurnimator
once that was done; then you could start work on a http2 framer

1561654422
daurnimator
once that was done... hopefully the socket library has been rewritten on top of coroutines, and you can implement the rest

1561654428
daurnimator
s/you/someone/

1561655471
marler8997
oh nice, now there's one global directallocator

1561655679
dimenus
do I need to specify something extra to the c linker in order to generate a hash table for a dynamic library>?

1561655730
dimenus
zig libs work out of the box, but c libs error with ElfHashTableNotFound

1561656126
dimenus
ah, it's a GCC thing. GCC only generates GNU_HASH where as clang generates both

1561656356
dimenus
andrewrk: should zig support HASH & GNU_HASH?

1561656389
andrewrk
probably

1561656405
andrewrk
as of today you are now more knowledgable about it than I am

1561656514
dimenus
i'm appreciating error traces atm ;)

1561656556
andrewrk
:)

1561656584
andrewrk
daurnimator, I can appreciate the situation you're in, you've already done a bunch of work, you've read the spec, you have some working code with tests

1561656643
andrewrk
I'm willing to let you lead the charge on http stuff in the std lib, but you have to be willing to accept it is something that I will personally be involved in (probably once coroutine rewrite is done) and that I may decide to take the API in a different, possibly breaking, direction

1561656710
andrewrk
if you are ok with this, I'll walk back my decision on your PR and merge it (once the tests are passing)

1561656761
daurnimator
andrewrk: I guess I'm okay with it.... it's better than the alternative of nothing

1561656783
daurnimator
andrewrk: are you able to see why the tests are failing? I've been really confused by it

1561656788
andrewrk
I'll take a look

1561657106
andrewrk
daurnimator, I'm running the tests locally now. BTW, I think working on single-threaded HTTP stuff will be a good investment for when async/await is available

1561657215
daurnimator
andrewrk: I've been wanting to build a commmand-buffer socket abstraction as a base for zig. IMO it's both the nicest to use architecture, and the fastest

1561657313
daurnimator
I've got a bit of a prototype on my desktop; but haven't had time to work on it further. Coroutines working will help a lot of the open questions in my design though

1561658122
daurnimator
andrewrk: any luck with those tests?

1561658174
scientes
so types get resolved between the two passes?

1561658189
scientes
the build and analyze passes?

1561658227
andrewrk
types are resolved in the analyze pass

1561658249
scientes
can i build new nodes in the analyze pass then?

1561658276
andrewrk
no

1561658302
andrewrk
indirectly that happens for other functions

1561658325
andrewrk
scientes, what are you trying to do?

1561658330
scientes
array access on vectors

1561658347
scientes
it can't use GEP->LoadPtr, instead needs ExtractElement

1561658417
andrewrk
sounds like that's going to happen in the analyze pass, and output different instructions for codegen.cpp

1561658447
andrewrk
potentially that change could only be made in codegen.cpp

1561658460
scientes
still have to add an extract instruction

1561658475
scientes
and then fall back to GEP->LoadPtr

1561658641
andrewrk
daurnimator, I'm getting all tests passing. what issue were you seeing?

1561658669
daurnimator
andrewrk: nothing locally; but they fail in CI

1561658676
andrewrk
what issue did you see in the CI?

1561658714
daurnimator
seems to run out of memory

1561658753
andrewrk
they run valgrind clean too

1561658763
daurnimator
andrewrk: heh. I think closing the PR deleted the CI logs.

1561658813
daurnimator
andrewrk: yeah I couldn't figure it out. I think it might have been caused by a memory leak

1561658818
andrewrk
ok, i'm just going to merge it and then troubleshoot it if it fails

1561658822
daurnimator
👍

1561659029
scientes
I don't see how i can do it only in codegen.cpp when its two instructions->>one

1561659106
andrewrk
scientes, let's back up for a second. how is this code supposed to work? `my_vector[1] = 1234;`

1561659112
andrewrk
or should that be a compile error

1561659120
scientes
yes

1561659143
scientes
my_var = my_vector[1], and my_vector[5] = 223

1561659162
scientes
but i was going to do the first first

1561659204
scientes
its quite straight-forward in the IR, the problem is we don't know the types until too late, so it makes it more complicated

1561659278
andrewrk
foo(&my_vector[1])

1561659298
andrewrk
this is a lot like pointers to packed struct fields

1561659420
scientes
you are not allowed to take the address of a vector element

1561659427
scientes
you would have to convert to an array

1561659448
scientes
you CAN take the address of a vector however

1561659473
scientes
which is kinda weird

1561659572
scientes
this is how it works in C and I think it is OK

1561659715
andrewrk
that's what makes it a lot like packed struct field pointers - your pointer points to some "base address" and the pointer type has extra data that tells what value is actually being referred to

1561659730
andrewrk
if we took this approach with vectors, it would mean that the index would always have to be comptime known

1561659745
scientes
llvm doesn't require that

1561659795
andrewrk
so the current problem to resolve is that zig exposes this concept of a pointer to a vector element, and that is a broken concept

1561659797
scientes
nor does C

1561659826
scientes
yeah, so I was going to add a Extract instruction, which then lowers to GEP->LoadPtr

1561659837
scientes
for array accesses (of rvalues)

1561659844
scientes
similar for lvalues, but not quite the same

1561659881
scientes
and if you took the address of a extract instruction it would have to lower it

1561659912
scientes
the issue is that you don't have enough type information to lower in stage1, so it kinda requires a third stage

1561659916
daurnimator
andrewrk: okay thanks I see the http.headers module is merged now.

1561659977
daurnimator
andrewrk: a "good+complex first issue" for someone might now be to write a http.hpack module. Should I make an issue on github?

1561660012
andrewrk
yes

1561660027
scientes
doesn't that require TLS?

1561660034
andrewrk
I'll mark it contributor friendly if you are willing to mentor whoever wants to work on it

1561660107
daurnimator
scientes: no. HPACK is the http/2 compression algorithm

1561660111
thm
how would the file system layout for a system-wide installation of zig look like?

1561660128
scientes
daurnimator, i was saying that IIRC http/2 requires TLS

1561660136
daurnimator
scientes: it does not

1561660172
daurnimator
scientes: browsers only support http/2 over TLS. but servers/proxies/client libraries support it over normal TCP.

1561660203
andrewrk
thm, it would look like unzipping the linux tarball to /usr/local or /usr, except zig binary would go in bin/ rather than root

1561660215
andrewrk
I don't recommend doing that, but that's what it would look like

1561660227
andrewrk
you can, in fact, override the default cmake install directory

1561660244
daurnimator
scientes: in any case, HPACK is only the compression algorithm: you can implement it before you even touch the socket layer

1561660253
thm
was just contemplating on creating a Fedora rpm

1561660448
daurnimator
andrewrk: please tag #2772 with userland, enhancement, contributor friendly

1561660615
andrewrk
thm I believe all you need to do is specify the install directory in the cmake command

1561660763
thm
andrewrk: yes, that mostly seems to work. interestingly it installs also a bunch of .a files somewhere else.

1561660772
andrewrk
what files

1561660820
thm
zig_cpp/libzig_cpp.a and zig_cpp/libembedded_lld_*.a

1561660875
thm
that looks like a bug

1561660940
andrewrk
I believe this issue is fixed in master branch. I'm guessing you're looking at 0.4.0

1561660945
thm
yes

1561660976
andrewrk
thm, here's a commit to backport: 40fe6afdad1a8676b5d3a5dd23d6d50d6ea9f059

1561660986
andrewrk
oops, there is more

1561660997
andrewrk
81767a658d07219a402384f98a7553abcbbd2e70 and 40fe6afdad1a8676b5d3a5dd23d6d50d6ea9f059

1561661051
andrewrk
I just want to give you a warning, there are  717 commits to master since 0.4.0, many of them large breaking changes

1561661061
thm
ok

1561661073
andrewrk
any user using a 0.4.0 zig package will quickly discover that they want a newer version

1561661094
thm
are you planning a 0.5.0 soon?

1561661359
andrewrk
September 30, 2019

1561661363
thm
ups, did a make -j. that killed by gnome-shell.

1561661373
thm
s/by/my

1561661390
andrewrk
daurnimator is advocating for an earlier release

1561663283
andrewrk
daurnimator, std.debug.global_allocator shouldn't be used in std lib tests - that's the issue

1561663390
thm
building stage2 of 1ccf6a2c fails with a panic

1561663646
daurnimator
andrewrk: oh? it gets used in heaps of tests

1561663668
andrewrk
yeah that's why we ran into this issue

1561663671
daurnimator
andrewrk: like... see std.PriorityQueue, or LinkedList

1561663694
andrewrk
not your fault, you were following my example

1561663815
BitPuffin
can I reference the value of another field of a struct in its initialization

1561663828
BitPuffin
I ended up making a block now that assigns a const right before so that I can use the same value in two places

1561663850
daurnimator
BitPuffin: create a block and do it in there

1561663879
andrewrk
that's somewhat related to

1561663897
daurnimator
BitPuffin: const foo = blk: { var tmp_foo: Foo = undefined;  tmp_foo.a = 42; tmp_foo.b = tmp_foo.a * 2; break :blk tmp_foo; };

1561663989
BitPuffin
yeah that's basically what I'm doing daurnimator

1561664018
scientes
so I'm wondering if I should add a third pass, I think that is the cleanest way to do this, instead of duplicating a bunch of stuff

1561664037
andrewrk
scientes, I doubt it

1561664065
scientes
oh yeah, the solution I thought of before, is to build the backup stuff

1561664078
scientes
and then use it if its needed

1561664149
daurnimator
andrewrk: so what should we be using in std lib tests instead?

1561664174
andrewrk
daurnimator, just a moment, I have a fix to push but ran into an issue

1561664203
BitPuffin


1561664350
andrewrk
daurnimator,

1561664415
andrewrk
it's effectively the same thing; just reserves upfront the amount of memory needed for these tests only

1561664429
BitPuffin
will it always be the case that const fields of a struct have to be accessed like TypeName.constant

1561664448
BitPuffin
it's a bit strange when member functions are allowed to be referenced without, but I guess maybe that's only the ones that take a self ptr or something

1561664460
andrewrk
const fields? that's not a thing yet but it's planned

1561664470
thm


1561664500
BitPuffin
hmm? You can put const things in structs though

1561664514
andrewrk
thm,

1561664545
andrewrk
I have allowed stage2 to regress until #2377 is solved

1561664556
andrewrk
nobody uses stage2 for anything yet

1561664580
thm
ok

1561664612
andrewrk
BitPuffin, fields are a: i32, b: f32, etc

1561664640
daurnimator
andrewrk: I feel like there should be a global 'test_allocator' then

1561664664
daurnimator
andrewrk: possibly it should hook into the test framework and verify that everything is freed after each test

1561664679
andrewrk
that's not a bad idea

1561664720
BitPuffin
andrewrk: right, but what should I call the constants I put in a struct namespace

1561664739
andrewrk
declarations

1561664751
BitPuffin
alrighty

1561664755
dimenus
how do I make a cstring?

1561664766
andrewrk
dimenus, std.Buffer might be of interest

1561664802
andrewrk
BitPuffin, do you know about usingnamespace?

1561664839
BitPuffin
yes, but I've only ever used it in a toplevel decl

1561664847
BitPuffin
but I guess if modules are structs

1561664851
BitPuffin
then I can use them on any struct

1561664854
andrewrk
top level is actually inside a struct - every  file is a struct

1561664896
andrewrk
you can also alias structs to shorten the namespace for yourself

1561665113
BitPuffin
just by doing const F = Foo, I suppose?

1561665187
andrewrk
daurnimator, I think my general purpose debug allocator will be a good candidate for the test allocator, since it has leak detection and good debugging facilities

1561665223
andrewrk
we can call "detectLeaks()" after every individual test

1561665282
companion_cube
could you create a fresh sub-allocator for every test? if it isn't empty by the end of the test you get a leak?

1561665411
andrewrk
that's reasonable too, completely deinitialize it, initialize a new one for every test

1561665590
Sahnvour
both are interesting, by keeping a single allocator for many tests you also test it for free, but at the cost of having its eventual errors invading other tests

1561665627
andrewrk
I think it would be reasonable to add a flag to `zig test` to toggle that behavior

1561666848
dimenus
one more stupid question hopfully. How do I get from a compile time known length array (eg [10]u8) to a []u8?

1561666892
companion_cube
a[0..] I think

1561666943
dimenus
hmm, in this case its a string literal

1561667278
Tetralux
I think you'll want std.mem.copy into an allocated slice. Unless anyone else has a better suggestion?

1561667349
fengb
If you can guarantee only literals, you can change []u8 to []const u8 and it'd work seemlessly

1561667378
fengb
Otherwise, you can assign it to a const and pass it via slicing

1561667429
fengb
Hmm... you could also assign via slice too: const foo = "abc"[0..];

1561667466
companion_cube
it'd be cool to have a playground, like rust's, for such code samples :)

1561667506
fengb
Oh I see, it's complaining about the const-ness. Yeah you need to mark it []const u8 because the compiler doesn't know you're not changing it

1561667559
fengb
var foo: []u8 = "abc"[0..]; foo[1] = 'z';

1561667983
tgschultz
Something I did recently because of namespaces being structs was to create a single-file version of a package by pasting the text of each file into a global const struct declaration and removing the related import lines. Probably won't work in every case because of naming conflicts, but useful none the less.

1561668187
SamTebbs33
I need some an opinion peeps

1561668230
SamTebbs33
If I try to align some address by an alignment of 0, should 0 or the original address be returned?

1561668234
SamTebbs33
What makes most semantic sense?

1561668238
andrewrk
dimenus, a string literal is constant data so it can't be casted to a mutable slice

1561668279
dimenus
yeah that makes sense now, i didn't realize []u8 was mutable - i just thought it had non-comptime known length

1561668286
SamTebbs33
If it was being aligned by 1 byte then of course the original address should be returned as all addresses are 1-byte aligned

1561668290
fengb
SamTebbs33: what's alignment 0 supposed to mean? It feels like a divide by 0 error

1561668300
andrewrk
companion_cube, I looked into making a wasm-based playground (*taps forehead* can't break out of a playground if it's running on your own computer). got stuck because emscripten can't build llvm yet

1561668351
SamTebbs33
fengb: Yeah it doesn't really make much sense, so perhaps an assertion should be added to stop that case

1561668355
andrewrk
align 0 is invalid, if 0 was passed to any alignment function it should be `unreachable`

1561668364
marler8997
SamTebbs33: sounds like an interesting question...I'd have to think about that one.  Do you have a use case in mind, might help provide some insight

1561668370
companion_cube
andrewrk: wow, neat idea.

1561668372
SamTebbs33
I'm referring to this issue btw

1561668376
companion_cube
could even serve for a local REPL.

1561668389
andrewrk
SamTebbs33, I thought you meant the address was 0 in that issue

1561668449
SamTebbs33
andrewrk: I did originally write the issue as it being about andresses and alignments being 0 but I realised my mistake and edited to only be alignment

1561668496
SamTebbs33
andrewrk: Just saw your comment, will add add to the doc comment

1561668537
fengb
Hmm, what's alignBackward of addr 0?

1561668563
SamTebbs33
fengb: That should be 0

1561668575
SamTebbs33
Since it uses unsigned ints

1561668584
fengb
But alignForward should be 0

1561668593
scientes
ok, now i am having a problem where it tries to analyze the backup IrInstructions

1561668610
daurnimator
also 0 is aligned to everything already ;)

1561668614
scientes
can i add them only in the second stage?

1561668617
marler8997
I don't see the `Chain` and `OneItemIterator` types anywhere in zig standard library.  Should I add them? and if so, where would they go?

1561668652
daurnimator
marler8997: new module 'std.iterator'?

1561668664
marler8997
that was my first thought

1561668664
fengb
Oh yeah I'm just confused. Please ignore :P

1561668727
andrewrk
scientes, what you're working on is really difficult. I don't think I'm going to be able to help without trying to solve the problem myself

1561668751
andrewrk
let me try to stabilize zig a bit after the merge of result location, then I'll look into that

1561669325
BitPuffin


1561669330
BitPuffin
is it because I'm passing structs?

1561669385
andrewrk
BitPuffin, what's your target? the related issue is

1561669587
BitPuffin
should just be x86_64 I think

1561669590
BitPuffin
linux

1561669728
andrewrk
your options are: make the function not-extern, make the structs be in one of the checked boxes in that linked issue, or make the structs be non-extern

1561669741
andrewrk
or submit patch to zig to fix C ABI for that category of structs :)

1561669791
scientes
or even better, a patch to LLVM to implement the C ABI in LLVM

1561669793
scientes
PPC does that

1561669916
BitPuffin
Can I @cInclude everything except one thing without writing huge wall of text? andrewrk

1561669962
andrewrk
if you need to hack around @cInclude output, best bet is to copy the generated .zig code into your repo, and then make your edits

1561669970
andrewrk
you can use --verbose-cimport to see the file name

1561670198
BitPuffin
yeah so there is no way to overwrite the usingnamespace thingy

1561670234
BitPuffin
hmm the filename? not the source itself?

1561670237
BitPuffin
I think I need to set it in the build.zig instead of on command line somehow

1561670268
andrewrk
zig build has --verbose-cimport

1561670422
BitPuffin
ahh it worked I think

1561670521
FireFox317
Yo guys, I'm working on #2062, adding the function-sections flag to LLVM. Should this be enabled by default for all the output files, or only for libraries for example? What is the way to go here? Maybe we should also considering to add the data-sections flag

1561670543
FireFox317
Or maybe as a flag to the zig compiler

1561670592
FireFox317
Or maybe only for the compiler_rt library file?

1561670624
andrewrk
FireFox317, I think it should be a CLI flag -ffunction-sections. off by default. link.cpp will enable it for compiler_rt and libc

1561670687
andrewrk
don't forget to add it to the input parameters cache hash

1561670912
FireFox317
andrewrk: Okay thanks, i'm gonna try that. And regarding the LLVM flag which is located in the TargetMachine::Options, should I set it in `ZigLLVMTargetMachineEmitToFile` or somewhere else? What is the most logical location for this in the zigs codebase, because I don't know the structure of the cpp files that well

1561671103
BitPuffin
hmm making it non extern didn't help bcause then it doesn't allow me to call the function

1561671106
BitPuffin
or ah wait

1561671109
andrewrk
FireFox317, yes expose it as an option to ZigLLVMTargetMachineEmitToFile. there's only 1 callsite in codegen.cpp and there you can read the value from `g` (the CodeGen * instance)

1561671112
BitPuffin
maybe I didn't change the signature

1561671125
BitPuffin
no the signature is ok

1561671126
BitPuffin
dangit

1561671768
BitPuffin
not allowed with calling convention ccc

1561672393
FireFox317
andrewrk: So I added a entry in the CodeGen struct and at the top it says 'check if it should be added to the hash computation in build_with_cache', is this the input parameter cache hash you were talking about?

1561673027
andrewrk
yes

1561677059
dimenus
andrewrk: someday I'd like to see you and gingerBill go back and forth :P

1561677090
dimenus
Error traces seem really darn useful. They're not as "you deal with it" as something like exceptions

1561677561
andrewrk
we now have @import("root") available which will import the root source file (the one with pub fn main). it's available in every package. this combined with @hasDecl which is also a recent addition is a particularly interesting combination

1561677567
andrewrk
thanks emekankurumeh[m] for the PR

1561677591
marler8997
@import("root") could open up some interesting semantics

1561677613
andrewrk
it can also be abused. use with care

1561677614
marler8997
if (@hasDecl(@import("root"), "defaultAllocator"))  ...?

1561677626
andrewrk
yeah something like that is a good use case

1561677658
marler8997
allowing root to declare logging mechanisms may also be another one

1561677666
mikdusan3
root context for the win

1561677709
marler8997
this is something I've wanted to have in other languages but never have, excited to explore it

1561677736
andrewrk
ah yes marler8997 did you see my log proposal?

1561677749
marler8997
I haven't, I'll look it up

1561677753
andrewrk


1561677946
marler8997
seems like the info/warn/err/fatal functions should call a common function, which could also be configured by root

1561677987
andrewrk
that's in there

1561677995
marler8997
oh woops

1561677997
marler8997
I see it now :)

1561678011
marler8997
seems like a good start

1561678023
marler8997
logging is a very hard problem in general

1561678689
bheads62
Q:  If given an array of types ( comptime []type ) is it possible to make a struct/union/enum of those types?

1561678825
Tetralux
Q: readFn/writeFn vs comptime trait.hasFn("read")/trait.hasFn("write") ?

1561678984
bheads62
only way I can think of so far is to make a void pointer array ( [types.len] *void ) and use the types list to find the index

