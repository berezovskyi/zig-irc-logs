1577232621
daurnimator
hryx: welcome back. you've been missing :)

1577232662
hryx
:D

1577232687
daurnimator
also, merry christmas everyone :)

1577232868
fengb
Merry Christmas!

1577233703
leeward
gonz_: Zig is so similar to so many other languages that people will definitely have years of believing their style is the best.

1577233709
leeward
Syntactically, at least.

1577234242
gonz_
It's different enough to warrant acceptance of how other people do things, IMO.

1577234271
gonz_
I think you'd have to be a pretty odd person to push your particular C style or whatever when doing zig and having a fit about the chosen auto-formatting.

1577234305
gonz_
I think most normal people tend to reset their expectations when trying out something new.

1577235759
leeward
Curly braces surround blocks, indentation is used to indicate nesting, lines of code have to fit on the screen, parentheses surround function argument lists. These are common to most languages with any relationship to C. Telling someone who's been using one style for 30 years that it's time to relearn because some of the language semantics changed is a hard sell. I'm not saying it's the wrong thing to do, but it's not a whole new contex

1577235759
leeward
t with all new conventions.

1577235822
gonz_
It's not really much about the commonalities syntactically to other languages. Zig looks like so many languages that it barely looks meaningfully like any of them, at this point.

1577235853
gonz_
What matters in the end is that there is a new community, there is currently one meaningful codebase written in the language, overwhelmingly in that one style.

1577235960
gonz_
It might be hard for someone's ego to hear that it doesn't matter what shape their code has been previously, but I hope that people would see how pointless it is to pretend that you're that special snowflake with your own style all the time.

1577236118
leeward
If you think it's about ego, I think we're having the wrong conversation.

1577236155
gonz_
I think it's inherently about ego, yes. If someone has a hard time accepting a community's formatting there's zero chance it's anything but ego driving that.

1577236183
leeward
Yeah, that's just not true.

1577236240
gonz_
Let's agree to disagree.

1577236320
leeward
That's why I'm not supporting my position.

1577237013
gonz_
To clarify, I'm talking mainly about pushing ones own style as some kind of alternative when entering an eco system. There are 2+ million lines of zig in the `zig` repo, and for someone, even with many more lines of C under their belt to put their judgment above much more experienced users would be odd to say the least.

1577237057
gonz_
Whatever people do in their private repos or in their own corner of the Internet isn't important and they should probably do whatever they want.

1577237234
gonz_
Over 200k lines, sorry.

1577237330
gonz_
Point being, there are users who have written more code in this particular language, currently maintaining its only remotely significant code base, there's no amount of previous experience that matters in contrast to that in terms of these superficial things like style.

1577262505
shachaf
Does std.json not support indicating EOF? E.g. parse("123") is an error whereas parse("123 ") succeeds.

1577262543
shachaf
This is only relevant for numbers, where the end of the number is marked by EOF rather than by something in the string itself.

1577264908
Snektron
I think there is only allowed to be one json root element, maybe its failing with that?

1577267785
shachaf
Yes, but the root element is allowed to be a number (and it recognizes it when it's terminated by whitespace).

1577274557
Snektron
Seems like a bug in the implementation to me

1577294708
gonz_
Does anyone have a solution for the compiler error: "Duplicate integer as switch case"?

1577294726
gonz_
It seems to arise because I'm printing a struct that happens to have a C enum inside of it that I guess has duplicate values or whatever.

1577294828
gonz_
To clarify, I mean: "broken LLVM module found: Duplicate integer as switch case ..."

1577295664
Snektron
You could override the .format option to not (or manually) print that struct

1577295684
Snektron
Otherwise you could edit the header

1577295695
Snektron
Or of course, find the bug and fix it

