1573864065
fengb
Me: "Dang with the embedded data, this zig program is 1.6 MB. That's huge!"

1573864077
fengb
Also me: "Go hello world is 2 MB"

1573864554
andrewrk
woo I got mq32's RetrOS project running on my laptop just in time for handmade con booth tomorrow

1573864941
mq32
andrewrk: nice!

1573864991
mq32
i know the build of that project isn't the most sane, but right now: works for me

1573865111
andrewrk
I had to watch your video closely to see that you press F2 and then F5

1573865113
andrewrk
:)

1573865149
mq32
:D

1573865155
mq32
good that the video exists

1573865169
mq32
actually, all F-Key from F1 to F5 do "something"

1573865182
mq32
but most of that is printing "not implemented yet" on the serial console

1573865326
mq32
right now i'm working on the "project system", so saving and loading of games

1573865351
mq32
as soon as that works, things start to get more interesting, but i think that starfield splash is a great eyecatcher :D

1573865774
andrewrk
it really is

1573865858
andrewrk
is there a way to get back to the title screen?

1573865861
andrewrk
from the code editor

1573866101
mq32
no, i haven't thought of this :D

1573866114
mq32
it's meant to go back there from "page 1", but page 1 isn't implemented yet

1573866131
mq32
if you want to "patch" that in

1573866165
mq32
there's the function handleFKey in main.zig

1573866188
mq32
change the switch prong for .F1

1573866189
mq32
.F1 => switchTask(.splash),

1573873331
AlexMax
How do i build and include resource files in a zig binary?

1573873334
AlexMax
like, .res files?

1573873665
AlexMax
erm, i mean .rc files

1573873791
torque


1573873908
AlexMax
erm, not quite what i meant, i already have an .rc file and would like to work it into the build system

1573873929
AlexMax
maybe at some point in the future I'll switch to embedfile, but i'm trying to get the C program compiling with build.zig

1573873970
AlexMax
with no zig code (other than in build.zig)

1573874603
torque
I am not aware of another supported method of embedding arbitrary files/data, which is not to say no alternates exist

1573874610
torque
there's always objcopy

1573874741
AlexMax
the mingw equivalent would be to run `windres` on the rc file, generate an object file with it, and then link the object into the final program

1573874857
AlexMax
i believe the llvm tool is llvm-rc

1573875501
daurnimator
src/ir.cpp:18701 in ir_analyze_decl_ref. This is a bug in the Zig compiler.

1573877360
daurnimator
hrm. can't do .ReturnType on a bound function

1573877672
AlexMax
oh man that was painful

1573877753
AlexMax
llvm-rc doesn't run the preprocessor against .rc files, so i had to run the preprocessor, fix the file encoding because it was UTF16...because it's windows, of course it does stuff like that...then finally pipe that through to llvm-rc, then just add the object file to the build

1573877791
daurnimator
analyze.cpp:5201 in hash_const_val. This is a bug in the Zig compiler. (I think I'm hitting ZigTypeIdBoundFn)

1573880332
daurnimator
How can I get an unbound function from a bound function?

1573898449
daurnimator
scientes:

1573905130
gonz_
Hmm, is `std.meta.tagName` broken? I get a compiler crash when using it on a tagged union.

1573905146
gonz_
"The following command exited with error code 3221225477"

1573905382
gonz_
Possibly I'm misusing it but you probably wouldn't expect a compiler crash either way.

1573905572
gonz_
Using `std.meta.activeTag` on it and printing the result gives a reference to

1573906434
gonz_
Looking at the `activeTag` tests in the repo I can use it like that. It should be said I have nested tagged unions and that's probably why this is failing.

1573912724
mq32
overly verbose error type of the day: error.BufferLengthMustBeMultipleOfBlockSize

1573919517
daurnimator
What's a word that means not-empty?

1573919916
mq32
what do you want to describe?

1573919967
daurnimator
an event that fires once a buffer has at least one item in it

1573920188
mq32
onAnyData?

1573920280
daurnimator
mq32: but it only fires on transition from 0 => some. Not on e.g. some => some+1

1573920292
mq32
onFirstData

1573920318
daurnimator
mq32: it can grow and shrink and grow.

1573920330
daurnimator
"first" makes it sound like it only fires once ever

1573920382
mq32
hmm

1573920493
mq32
what's the use case?

1573920543
daurnimator
an event that fires once a buffer has at least one item in it

1573920602
daurnimator
e.g. you might specify the not_empty callback, if you want to attempt to "flush" to the next piece of a pipeline

1573920628
Sahnvour
occupied ?

1573920702
mikdusan
onBeginData

1573921541
daurnimator
aside: has anyone figured out a nice pattern for "event" callbacks in zig code?

1573921558
daurnimator
I'm trying to come up with something where callbacks are zero cost if not specified

1573921567
daurnimator
i.e. use compile-time reflection

1573921614
mq32
hmm

1573921623
mq32
idea: use a callback struct

1573921633
mq32
pass callbacks as a "namespace"

1573921641
mq32
instead of a struct instance

1573921667
mq32
fn doStuff(data:var, comptime callbacks: type) void

1573921679
daurnimator
mq32: yep I've been trying to get that to work for like 30 mins

1573921713
daurnimator
mq32: 1st problem: how do you pass the instance to the callback? given that the struct type doesn't exist at the moment of creation of the callback function

1573921789
daurnimator
doStuff("blahblah", struct { pub fn onThing(self: whatGoesHere) !void { try foo(); try bar(); } })

1573921879
SyrupThinker
Would that be @Self() ?

1573921901
daurnimator
SyrupThinker: no. @This() refers to the current inner-most struct being defined

1573921939
SyrupThinker
And that doesn't work

1573921959
mq32


1573921993
mq32
does that concept work for you?

1573921999
daurnimator
mq32: no.

1573922313
daurnimator
mq32:

1573922910
mq32
you can just pass WHAT_GOES_HERE to NewTypeWithCallbacks as well :)

1573923004
daurnimator
mq32: I want WHAT_GOES_HERE to be the return result of `NewTypeWithCallBacks`

1573923058
mq32
huh

1573923258
mq32
it's about zero-overhead, right?

1573923265
daurnimator
yeah...

1573923267
mq32
otherwise you could just return MyType.Callbacks

1573923283
daurnimator
return from where?

1573923343
mq32
the type you return from NewTypeWithCallBacks could have a struct with optional function pointers

1573923357
mq32
but: i got to go

1573923359
daurnimator
yeah. but that would be overhead

1573923366
daurnimator
also that gets into a mess with async functions...

1573923390
mq32
i just tried, but you cannot pass generic functions :(

1573923397
daurnimator
mq32: indeed.

1573923412
daurnimator
I currently have an absurd solution I'm calling "inside out". let me try and make a sample

1573923419
mq32
:D

1573923433
mq32
send the example to me as a PN/query, i'm away for some hours

1573923752
daurnimator
mq32:

1573925188
AlexMax
okay I added an issue for .rc file support in the build system

1573931167
adamkowalski
How do I pass a multidimensional array as a series of slices?

1573931233
adamkowalski
I'm defining a matmul function which will take two matrices as well as an output matrix to be agnostic about allocation. I've built up a few matrices using the literal syntax. But those are arrays not slices. How do I pass them as slices?

1573931673
mikdusan
adamkowalski: `var slice = array[0..];`

1573931810
adamkowalski
I've treid that, but that only makes a slice of the outer array, how do you make that transitive

1573931824
adamkowalski
My signature looks like fn matmul(comptime T: type, a: [][]T, b: [][]T, c: [][]T) void {}

1573931921
adamkowalski


1573931928
adamkowalski
Thats the minimal example of what I want to do

1573932855
Snektron
adamkowalski: you should make some custom view tyoes

1573932887
Snektron
It depends on what you want to do

1573932908
Snektron
If you just wanna pass matrices as slices: use a 1d array instead, or use a slice of arrays

1573932949
Snektron
If you want  a generic n-by-m matrix view, you should have a pointer, m, n, and row stride

1573933248
adamkowalski
So there is no syntax for casting something array like to a slice?

1573933268
adamkowalski
I thought the docs said that slices were the most preferable because they allow the most things to convert into them

1573933307
adamkowalski
I'm used to the C++ way of doing things where normally I would use templates and anything that conforms to the "matrix" interface (at compile time) would be allowed

1573933333
adamkowalski
Whats the idiomatic way of doing things in zig?

1573933362
shakesoda
adamkowalski: perhaps like this

1573933396
shakesoda
this is kind of a non-answer though, just example

1573933431
adamkowalski
That uses a custom matrix type

1573933446
shakesoda
oh, are you doing arbitrary matrix sizes

1573933454
shakesoda
looks like i didn't read context well enough

1573933460
adamkowalski
I like that, but it's not generic, I come from the machine learning world where we deal with arbitrary sized dimensions and arbitrary number of dimensions

1573933471
adamkowalski
You could have images which have width x height x color channel

1573933484
adamkowalski
You could have a batch of images so it's width x height x color channel x batch

1573933492
adamkowalski
and if you have a video there is a time axis too

1573933508
adamkowalski
I was hoping that nested slices give me the most freedom

1573933557
shakesoda
i would approach this as Snektron suggested, myself

1573933581
shakesoda
but maybe someone else has other ideas here :)

1573933889
Aransentin
Is it possible to comptime-omit a switch case in a switch?

1573933920
adamkowalski
Am I approaching this incorrectly though? I feel like it should be a pretty simple thing right?

1573933922
fengb
Do anonymous lists cast to slices?

1573933928
adamkowalski
I just want to do matrix multiplication between a couple matrices

1573933943
adamkowalski
But I want to be invariatnt to the element type, and the width/height of the matrices

1573933978
adamkowalski
I was gonna make it return `!void` since the types might not line up, and I could make the last parameter be an output parameter. Then I don't allocate, thats on you

1573934012
adamkowalski


1573934026
adamkowalski
If we use a inline for loop we should get the same idea, but works for different sizes

1573936269
adamkowalski
How do you all approach problems that normally you would tackle with overloading? For example a matrix * vector = matrix, vector * matrix = matrix, scalar * vector = vector, scalar * scalar = scalar. Etc

1573936873
fengb
adamkowalski: biggest challenge with your code is that slices are just fancy pointers and can't hold memory. So when you need some runtime dynamicism, it breaks down if you want to use the stack

1573936940
shakesoda
adamkowalski: with separate functions

1573936957
shakesoda
rather, separate function names

1573937007
shakesoda
it makes this kind of code more verbose, but it's not the end of the world

1573937123
adamkowalski
Well I just assumed i'm approaching this wrong since I'm coming from a Python, Julia, C++, D world where problems are approached in a certain way. I don't want to bring the baggage of those languages with me here, so I want to learn how to approach things in Zig

1573937155
adamkowalski
However, one thing that scares me about the different functions for differnet types approach, is that it seems like you get a combinatorial explosion of implementations which are all the same, except for the type signature

1573937173
adamkowalski
What happens once you introduce GPUs into the mix and you have a cuda matrix, a cuda vector and so on

1573937189
adamkowalski
Then you want to do the same for AMD so you write a OpenCL implementation

1573937208
adamkowalski
Don't we want interfaces (preferably static) that allow any type which models certain behavior to be allowed in those situations?

1573937398
fengb


1573937422
fengb
To have memory space for these calculations, you probably want comptime data structures

1573937453
fengb
If you need it fully dynamic, it'll have to use an allocator of sorts

1573940433
adamkowalski
fengb I like that idea, but if I want an nd array I can actually probably take a compile time list of dimensions? Then you can allocate on the stack. Otherwise you can take a runtime list of dimensions and allocate on the heap?

1573940525
adamkowalski
Is there any work done with automatic differentiation? I want to have a "tape" which records all the operations that happen to the array. This is called the forward pass, then you can play the tape in reverse and use the chain rule to get the gradient (the backward pass)

1573940806
adamkowalski
What if we had a few different types? An nd array type which owns the memory. Then you can have an nd slice which is just a view into the backing memory. We don't really have a notion of lifetimes, so the slics will be a bit unsafe. I'm not sure how to implment indexing, since we don't have any sort of overloading so I guess I can make it a function?

1573942137
mq32
daurnimator: that's a weird solution :D

1573947411
Snektron
adamkowalski, matrix  vector, matrix  matrix are equivalent

1573947644
Snektron
In fact for linear algebra type libraries i usually like to implement things as free standing functions (or in c++ using inheritance hacks)

1573947732
Snektron
So the vector type is actually just `fn Vector(comptime T, comptime N: usize) type { return Matrix(T, N, 1);  }`

1573947769
Snektron
And any operations that you do on vectors are free standing functions

1573947791
Snektron
Basic aritmetic is the same so those can be members of the matrix struct

1573947802
Snektron
So you really only have cross and dot left

1573947841
Snektron
You could also implement those as members on the matrix struct, but static assert the matrix is in fact of shape N, 1

