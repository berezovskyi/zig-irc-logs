1556152773
m3t4synt4ct1c
I finally figured things out - I just had to merge in a bunch of @typeOf(package.struct.method).ReturnType.ErrorSet for all of the things I try until I had all of them in my Error set

1556152811
m3t4synt4ct1c
it's ugly, and I hope there's a better way to do it, but it compiles and appears to run correctly now

1556152892
scientes
m3t4synt4ct1c, if you use error sets too much you will crash the compiler and need my patch

1556152932
scientes


1556153076
andrewrk
scientes, please don't direct new users to an unsupported zig fork in the official irc channel

1556153089
andrewrk
if there's a bug, link to the github issue

1556153134
m3t4synt4ct1c
it hasn't been crashing for me

1556153228
scientes
its a small patch, not a fork

1556153395
andrewrk
I'm not interested in arguing about definitions. I just want to make sure that new users don't get unnecessarily confused about the officially supported way to use zig

1556153464
andrewrk
anyway let's talk about productive things

1556153560
tyler569
I'd like to express how impressed I was at the experience of porting zig+the stdlib to add my hobby os as a target.  Barring some annoying asm() issues, it was a thoroughly pleasant experience

1556153574
tyler569
stark contrast to C compilers :)

1556153595
andrewrk
glad to hear that. I do plan to go through your asm issues and see what can be done

1556153634
tyler569
I appreciate that, I hope you don't think I'm annoying or confrontative in them at all, just trying to communicate what I'm seeing succinctly

1556153703
Xe
is there a URI parser for zig yet?

1556153725
scientes
Xe, write it and submit it to the stdlib

1556153744
Xe
ah, i was hoping someone else would have done it already lol

1556153756
andrewrk
tyler569, definitely, I appreciate that you took the time to file issues

1556153792
scientes
xe, there isn't even ipv4/ipv6 handling yet

1556153807
Xe
scientes: sometimes you get lucky

1556153832
scientes
and ipv4/ipv6 handling is a bit tricky, the rest is straightforward

1556154105
mikdusan
andrewrk: how did your talk go?

1556154137
andrewrk
mikdusan, I think it went pretty well! hopefully they'll have the recording up soon

1556154165
mikdusan
good stuff. look forward to it.

1556154195
andrewrk
I also might have found another sponsor, so that's good for the sustainability of the project

1556154279
andrewrk
this consulting company seems to be of the opinion that they better start learning some zig now, in case it blows up in popularity, and then they can be sort of the go-to experts in that case

1556154452
m3t4synt4ct1c
that's great

1556154489
andrewrk
not to be confused with the goto experts, since zig doesn't have that feature ;)

1556154698
m3t4synt4ct1c
so they're the break :label experts?

1556155083
hryx
ooooh, awesome. I'm excited to see the talk

1556155121
hryx
and for lots of new maybe support from maybe sponsor

1556155358
fengb_
Is there a list of upcoming events?

1556155523
andrewrk
fengb_, no but I was thinking, it would be neat if there was some kind of community-editable "calendar wiki"

1556155539
andrewrk
surely something like this must exist

1556159428
daurnimator
Xe: URI parsing is harder than you think

1556159446
Xe
daurnimator: that's why i was hoping someone else had already done it lol

1556159455
daurnimator
and even harder if you want to support internationalized uris

1556159468
daurnimator
Xe: why do you need to parse uris? we don't even have network support yet

1556159495
Xe
i was thinking about making something as a proof of concept for a friend

1556159525
Xe
part of the olin API involves URI parsing, i think i may be able to obviate that though

1556159562
hryx
that could be a fun project even before networking

1556159576
scientes
daurnimator, IDNs are not that difficult

1556159591
daurnimator
hryx: FWIW I was planning on doing it as a showcase of the PEG stuff

1556159628
daurnimator
scientes: you think?

1556159654
scientes
thats for the blacklist

1556159690
daurnimator
and... we don't have unicode stuff yet. I tried adding it, but ran into compiler issues that were on the roadmap..

1556159701
scientes
i re-wrote unicode.zig too

1556159708
scientes
and then ran into compiler issues which I fixed

1556159720
scientes
but none of this stuff ever got reviewed....

1556159732
scientes
but yeah, i didn't get unicode normalization in there

1556159744
daurnimator
scientes: you can lex with false positives if you don't have the unicode tables. but you can't parse correctly..... and yeah... false positives.

1556159777
scientes
why is false positive an issue, who wants a xn-- domain name?

1556159791
scientes
and firefox will display it that way anyways if it contains blacklisted characters

1556159824
scientes
but yeah i forgot about normalization

1556159880
andrewrk
scientes, I'm still interested in your patches if you're willing to submit them in a way that makes it easier for me to review and perform quality assurance

1556159946
andrewrk
for example, this did not answer my questions:

1556159953
andrewrk
what are you hoping I will do with that?

1556159999
scientes
It is in there because that is the most efficient place to put it.

1556160148
andrewrk
it's not enough to state something like that, you will have to provide justification that convinces others - often myself - that your statement is correct. Currently I do not share your opinion. So the default action will be to close your pull request

1556160201
andrewrk
quite frankly, if you're unwilling to put the meta-effort into pull requests, I'm not interested in them

1556160265
scientes
then it can go with the tokenizer

1556160604
daurnimator
scientes: https://È±.com

1556174868
mikdusan
o

1556174909
mikdusan
i'm trying to place a 'trait' marker on a struct by defining 'const foo = <some_trait_enum>;'

1556174975
mikdusan
having trouble checking for trait. is it possible to check struct defs[], look for one with def.data.Var (which is type) and compare types?

1556178920
mikdusan
i worked around it by using a type (anon struct) as a trait marker.

1556185628
TheLemonMan
andrewrk, why was @setGlobalLinkage replaced by @extern? One may want to control the the linkage (and visibility) of other symbols too

1556198896
andrewrk
TheLemonMan: you mean @export right? What's an example symbol that worked with @setGlobalLinkage but not @export?

1556203412
TheLemonMan
andrewrk, an `extern const` that I want to declare as weak, @export works but it's quite confusing since I'm not really exporting anything

1556211743
wilsonk
does zig link against dll's or only .lib's?

1556217226
tgschultz
miksudan, see std.meta, in particular std.meta.hasDef() and std.meta.definitions()

1556217262
tgschultz
ugh, mikdusan ^

1556217280
tgschultz
I'm beginning to suspect I have a neurological disorder with how often I mistype things.

1556217337
wilsonk
tgschultz: did you use your win32 api package much? Ie. some examples?

1556217382
tgschultz
I haven't used it in a while, but I recall a program still working with 0.4.0 when I tested it. Anything in particular you're looking for?

1556217412
wilsonk
just wondering if you ever tried any COM interaction?

1556217508
tgschultz
that I definitely didn't. COM is all kinds of complicated and I only really used it for getting a window up, making OpenGL work, and getting input events.

1556217572
wilsonk
Ok. Yeah, I was able to get windows working with xinput and a couple other things...just not sound with dsound due to the COM interaction

1556217638
wilsonk
I also can't seem to get SDL2 to dynamically load? I put the dll next to xinput in system32 and syswow64 but it won't load? I don't understand that one

1556217656
wilsonk
Did you load OpenGL dynamically or use a .lib?

1556218002
tgschultz
Looks like I just load extensions manually through if I need them, which I don't usually because I mostly just use OpenGL to put a framebuffer on the screen. I used to use SDL2 though, I don't recall having any significant trouble getting it loaded dynamically.

1556218077
tgschultz
I just ran translate-c against the header and did a little hand editing (which may not be necessary anymore given the past year's improvements to translate-c).

1556218296
wilsonk
The header isn't the problem...literally  win32.LoadLibrary(c"xinput1_3.dll");   works fine but with SDL2.dll it doesn't???!  Umm, what. This libs are side by side...tried using download SDL2.dlll and built my own on this machine??? I don't understand!!!!

1556218299
wilsonk
UGH

1556218351
wilsonk
Both x86 and x64 libs are in C:\Windows\system32 and sysWOW64 respectively!!??

1556219096
wilsonk
Ok, strace says it loaded SDL2 from system32 and then immediately unloads it??

1556219200
wilsonk
Does the same with a local copy built from scratch?!?? What dark magic Windoze crap is this? Anyone have any ideas?

1556219588
tgschultz
you're not linking with the stub lib at all?

1556219678
tgschultz
Have you tried using GetLastError to see why the loading failed?

1556219921
wilsonk
Nope, didn't know GetLastError existed

1556220000
wilsonk
sorry, what is a stub lib in this sense? I downloaded SDL2.dll (the x86 and x64 versions) from the website and placed them in system32 and syswow64...shouldn't that do the trick?

1556220238
tgschultz
if you arent using the header you're not using a stub lib to load SDL2.dll. Normally there's a static library that handles that for you. It should be possible to do it with LoadLibrary though.

1556220292
tgschultz
If LoadLibrary returns null, calling GetLastError will return an error code you can look up to see what the problem is.

1556220780
wilsonk
ERROR_BAD_EXEC_FORMAT? Umm, that doesn't make sense to me

1556221259
tgschultz
You sure you put the right arch files in the right system directories?

1556221359
tgschultz
Assuming you're on x64 and haven't tried it, drop the x64 dll in the same directory as the executable

1556221365
wilsonk
yep, did it three times now...I am a little frustrated, unfortunately. I don't like windoze that much on the best of days but it is crap llike this that drives me crazy

1556221464
wilsonk
I can run the program in the VS debugging env and see that the libs are loaded from system32 and the local directory...but they both fail...the system32 one fails twice somehow under strace and the devenv

1556221504
tgschultz
I doubt Windows is wrong, something isn't right about the DLL. Best guess is its an arch mismatch, but I can't figure out how.

1556221582
tgschultz
or... it's possible there's a dependant VCRuntime that isn't installed?

1556221615
tgschultz
staying away from C is why I stopped using SDL2.

1556221674
wilsonk
I would love to stay away but I can't figure out how to get dsound to work so I THOUGHT this would be the easier route!!

1556221692
tgschultz
scratch that: " SDL does not depend on a C runtime at all, not even for malloc()" according to the wiki

1556221737
wilsonk
only a million people use sdl, so silly me, I assumed this would be a simple drag and drop into system32 or syswow

1556221944
tgschultz
it should be that simple. something is clearly wrong, we just don't know waht.

1556222000
companion_cube
is SDL used for anything else than games?

1556222169
wilsonk
I think some people just use it for windowing since it is cross platform

1556222172
shachaf
hi companion_cube

1556222390
tgschultz
So I just ran a quick test and I didn't have any trouble using LoadLibrary with SDL2.dll in the same dir.

1556222458
wilsonk
Ok, let me move the system one into the local dir just in case my compiled one is borked, I guess

1556222462
tgschultz
Do you still have the issue even with a minimal case that just callse LoadLibraryA("SDL2.dll")?

1556222620
wilsonk
Looks like it was a 64 vs 32 bit issue...somehow...

1556222704
wilsonk
So I guess I have the wrong dll in the wrond system dirs? Not sure how I did that, but at least it is working now  (well loading at least...I am sure the pain has just begun...it is windoze after all). Thanks a ton tgschultz. Sorry for the sour tone :)

1556222894
tgschultz
well, system32 on a 64bit Windows is for 64bit dlls, and syswow64 is for 32bit dlls. That may sound backwards, and that's because it is what it is for legacy reasons. Syswow64 means "system Windows on Windows for 64bit", meaning 32bit windows dlls on a 64bit windows system. 32Bit applications actually have system32 redirected to syswow64.

1556222943
companion_cube
hi shachaf

1556222975
companion_cube
wilsonk: oh ok, like a basic UI library that works everywhere, neat

1556222993
tgschultz
then theres sysnative, another folder redirect which is how a 32 bit application could refer to 64 bit dlls.

1556223029
wilsonk
oh, well that would explain it...I am a dumb human that assumed 32 bit files would go into a system32 directory!! WOW M$ can be absolutely infuritatingly stupid at times...that is insane!!!

1556223037
tgschultz
nearly 30 years of legacy decisions for compatability have their consequences.

1556223139
tgschultz
it is not insane. MS (used to, sigh) take compatability very seriously. There are very few linux applications from 20 years ago you can, without recompilation, run today on a linux system, but you can do that on Windows.

1556223162
companion_cube
without recompilation? :o

1556223166
companion_cube
that's indeed pretty insane

1556223219
shachaf
The Linux kernel ABI is stable!

1556223223
shachaf
Just userspace is a mess.

1556223232
tgschultz
Yeah, that's an accurate statement.

1556223255
tgschultz
One of the reasons zig is distributed as a static binary for linux.

1556223288
shachaf
Unfortunately you have to use userspace libraries for some things.

1556223301
andrewrk
notably, graphics

1556223352
shachaf
Yes, talking to the GPU is one of the main ones.

1556223407
tgschultz
It's a bit dumbfounding to me that X, supposedly a protocol, requires linking with specific libraries.

1556223411
shachaf
I think you had a plan to use your own dynamic linker to use some GL libraries without the rest of the system?

1556223429
tgschultz
or was that requirement from GL? I forget

1556223466
shachaf
The only way GLX is exposed is as libraries.

1556223467
tgschultz
Windows has its own GL mess with only officially supporting 1.1 and needing to load everything else.

1556223493
shachaf
And those libraries take an Xlib Display * so you have to use Xlib for that even if you implement the protocol yourself.

1556223591
tgschultz
I feel like computing doesn't have to be this hard...

1556223622
shachaf
It sure doesn't.

1556223633
shachaf
(And yet.)

1556223776
companion_cube
wayland is there, though

1556223800
shachaf
Is the situation with Wayland any better?

1556223902
companion_cube
I think so, it's supposed to have a simpler API than X?

1556223907
companion_cube
(also, fasteR)

1556223907
wrl
in windows, since the GL context creation func doesn't take any attributes (so you can request a specific version), and GL extension functions can't be loaded without a GL context...

1556223911
tgschultz
It's differently worse, I think.

1556223933
wrl
it means you need to create a context, bind it, then lookup the "create a context but with attributes" func so you can create the

1556223938
wrl
and then you unbind the old context and free it

1556223960
wrl
windows is a barrel of fun

1556225523
andrewrk
I think I have to agree with tgschultz's conclusion on wayland

1556225653
wrl
i'm not sure i'd say "worse" but it's definitely not perfect

1556225672
wrl
none of the windowing environments right now are anywhere close to perfect

1556225710
wrl
and whichever one somebody thinks is "least bad" really depends on their personal preference and alignment with their own personal priorities

1556225733
andrewrk
yeah, that's a pretty universally true statement about anything :)

1556226159
hryx
No stream today I assume?

1556226188
andrewrk
yeah rescheduling to tomorrow at some point. Just got home and need to do some household chores

1556226217
hryx
cool cool

1556228387
wilsonk
tgschultz: still had problems actually using functions from SDL2.dll  (I could load the lib but would get an undefined symbol to SDL_Init, etc.) So I converted the .dll to a .lib, linked it with --library "complete_path_to_SDL2.lib", and now I can use tiehuis' zig-sdl2 lib without issues. Just thought I would mention it here so that others can see a solution (also searchable on whitequark)

1556228604
andrewrk
wilsonk, side note - once

1556228623
wilsonk
Ah, ok cool

1556228703
wilsonk
andrewrk: have you tried to access an COM objects with zig code?

1556228724
andrewrk
I have not

1556228732
wilsonk
ok, no problems

1556228741
andrewrk
the self hosted compiler does this by having .cpp code do that and export a C API

1556228779
andrewrk
given that zig can build C code (and planned to build c++ code as well) I think that would be a reasonable approach

1556228810
wilsonk
ok, maybe I will look at the way it does that if this SDL thing doesn't work out the way I am thinking :)

1556229168
Aruseus
Hello all. I'm very new to zig, and I have a question. Does the standard library have a function that prints formatted output to stdout? So, basically std.debug.warn(), but with stdout instead of stderr? I didn't find anything like that in the documentation.

1556229242
andrewrk
Aruseus, const stdout_stream = &std.io.OutStream.init(try std.io.getStdOut()).stream;

1556229261
andrewrk
try stdout_stream.print("hi: {}\n", x);

1556229336
andrewrk
if you're writing to stdout, it's no longer a "warning message", it becomes more important to handle, e.g. if stdout was a pipe that got closed, or if writing failed

1556229417
andrewrk
you can thank the Windows API for why std.io.getStdOut() has a possible error

1556229562
Aruseus
ok thanks. yeah that works. that's basically what I came up with as well. it just seems a little verbose

1556229586
andrewrk
yep. that's one of the concessions zig is willing to make in general - being verbose

1556229633
andrewrk
this issue is relevant though:

1556229637
Aruseus
at least it makes it clear that it can fail I guess, unlike C's printf

1556229648
andrewrk
also

1556229668
andrewrk
the resolution of both of these issues could potentially impact this use case

1556229760
tgschultz
wilsonk, not sure what you were trying to do, but after you LoadLibrary you need to lookup the addresses of the funtions you want to use with GetProcAddress and bind them to a predifind function signature. If you were using my win32 library you'd find this difficult since I somehow didn't have GetProcAddress defined in it. I'll update that when I get home.

1556230115
wilsonk
tgschultz: yeah, I added my own GetProcAddress but must have still been doing something wrong. I might take another look at it, but I just wanted a quick solution so I could test out an idea I have with SDL. Thanks for the win32 library bindings though, they have been really helpful.  Things have gone pretty smooth until this SDL stuff ;)

1556230154
wilsonk
*still must have been..

