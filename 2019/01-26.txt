1548461976
donpdonp
as soon as i add var bytes : [255]u8 = undefined;

1548461991
donpdonp
the wasm tries to import 'memcpy', which i dont have an implementation for.

1548462016
donpdonp
i know its very early for webasm. im not sure if there is supposed to be a 'libc' for webasm yet

1548462327
andrewrk
donpdonp, zig provides memcpy (and more) automatically when you use build-exe or build-lib

1548462466
andrewrk
that's going to depend on zig using the wasm linker correctly - which I believe we are close to but might need a couple patches

1548485421
emekoi
well i got a zig program to work with libc in mingw, but i had to use mingw's linker

1548485446
emekoi
it must be doing some weird magic to get msvcrt to link correctly

1548485465
kristate
hey emekoi

1548485488
emekoi
what's up?

1548485498
kristate
how are you?

1548485612
emekoi
good, what about you?

1548485685
kristate
pretty good -- it's almost 4pm in kyoto

1548485734
emekoi
it's almost 1am where i live

1548507577
porky11
hi

1548508106
porky11
C is good for writing cross language libraries, but it doesn't allow compile time generic code

1548508126
kristate
hi porky11

1548508129
porky11
and even for c++ it's not possible to export compile time generic code to other languages

1548508145
porky11
but zig also doen't help there, I assume, right?

1548508214
kristate
what do you mean by comptime generic code?

1548508278
porky11
for example vector math (Vector<T, N>)

1548508369
kristate
porky11: the C ABI does not have support for generics and comptime code, but of course, zig can export its translation units to the C ABI

1548508392
porky11
yeah, I thought so

1548508429
kristate
the C ABI meaning the C ABI -- not the zig C ABI layer

1548508778
porky11
I just thought, a cross language way to import generics (similar to .o .so or whatever c can compile to) would be a good idea, and so I hoped, since zig aims to be a better C with generics, it maybe implements something like that

1548509003
kristate
well, you would write your code in zig, and then write some wrapper functions to talk with C

1548509314
porky11
the problem is, when I switch language, I have to rewrite a bunch of my libs, so I started to use C for most of my libs, so I just have to write wrappers for other languages, which is much simpler, but with generics that's not possible. Assuming I write a generic vector math library in zig and want to use it in rust later, I cannot simply write a wrapper

1548509467
porky11
I either have to rewrite it or instantiate all important types (maybe vectors up to 10 dimensions), but when I need some less important types, it won't work, and when I don't use most of the types, filesize will be too large

1548509665
kristate
porky11: that's why zig is so important -- it's the closest thing we have to a true c competitor. Rust is too runtime centric

1548509931
porky11
rust was just an example. There are langauges with similar goals to zig like scopes, odin, dale. For example I wrote a nice library in scopes and it would be cool if I could use it in zig without having to rewrite most of it

