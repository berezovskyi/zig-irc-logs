1568684423
scientes
andrewrk, this ARM board supports up to 64GB of ram, so if you can afford it it will work a bit better than the Pinebook Pro which only support 4GB which isn't enough

1568695464
meowray
scientes: are you willing t play with

1568697036
mikdusan
meowray: can you shed a little light on the use case with LLVM .so? ie: is it a distro, or are you building .so yourself for llvm development?

1568698800
meowray
mikdusan: i regularly build llvm trunk. i don't install a release llvm-8 llvm-9 to save disk space. i don't run `ninja -C ~/llvm/Release install` - that is slow if you regularly rebuild things

1568698925
mikdusan
are you building BUILD_SHARED_LIBS=ON ?

1568699029
meowray
yes, -DBUILD_SHARED_LIBS=ON, because it saves time. i sometimes test with -DBUILD_SHARED_LIBS=Off because it saves relocation resolving time

1568699096
mikdusan
when BUILD_SHARED_LIBS=ON, what executables link with that?

1568699203
meowray
as the descriptin says: -DLLVM_LINK_LLVM_DYLIB=OFF -DBUILD_SHARED_LIBS=ON => link against libLLVM*.so

1568699366
mikdusan
so the 3 distinct modes are: { *.a, *.so, LLVM.so } and when building for LLVM.so, are there any .a products?

1568699456
meowray
libLLVM.so and libLLVM*.so can coexist, libLLVM.so and libLLVM*.a can coexist

1568699470
meowray
libLLVM*.so and libLLVM*.a can't

1568699616
mikdusan
is your need for zig to work against *.so, and LLVM.so is not a need?

1568699679
meowray
the patch works for all 3 flavors. i persoanlly will use libLLVM*.so

1568701837
slusenti
hello there! I'm new

1568701879
slusenti
i want to know if there's any os or project that is based on pluto kernel

1568728399
Tetralux
Anyone else been running into "Call parameter type does not match function signature" when trying to call a function that returns a value and you assing it to an already declared identifier?

1568728428
Tetralux
Namely, in my case:

1568728444
Tetralux
slice = allocator.realloc(slice, 2*slice.len)

1568728457
Tetralux
Note that slice is []u8 but realloc returns a ![]u8.

1568728717
fengb


1568728748
Tetralux
How handy!

1568728751
fengb
Weirdly, I don't get a compile error on my local

1568728772
Tetralux
`zig version`: 0.4.0+774f77005

1568728798
fengb
I can't interpret git shas :P

1568728809
fengb
But really, you need to `try realloc`

1568728818
Tetralux
Clearly :)

1568728828
fengb
The error message should be better though since that's obviously a return mismatch

1568728837
Tetralux
Without any doubt.

1568728840
Tetralux
Not only that

1568728845
Tetralux
Zig didn't output any error.

1568728864
Tetralux
I have another similar problem with return types.

1568728882
Tetralux
I have a function that returns ?T, but then actually returned a []const u8, and it crashes rather than erroring.

1568729741
Tetralux


1568735462
Tetralux


1568735472
Tetralux
andrewrk

1568736694
fengb
What's a good baremetal embedded board?

1568739869
andrewrk
fengb, I've gotten good answers to that question in #osdev

1568739905
andrewrk
(that topic is also welcome here, I just know there are knowledgeable people there)

1568740411
fengb
Well I want to play with something thatâ€™s Zig friendly :)

1568740515
andrewrk
that will be any architecture Tier 3 or better with the freestanding target

1568741175
andrewrk
fengb, or riscv64 - which gets bumped up to tier 3 with the merge of llvm9 branch within 1 week

1568744700
fengb
Ah cool thanks

1568748004
mq32
fengb, what layer of "bare metal" do you talk about?

1568748925
fengb
Freestanding / no OS

1568748945
fengb
And something simple enough to not require drivers

1568759461
_Vi
How zig's error variant numbering plays together with dynamic linking?

1568759509
andrewrk
dynamic linking uses the C ABI. error sets / error unions are not allowed in externally facing types

1568760890
_Vi
Shall there be some nicer error message when using `--target` instead of `-target`?

1568761857
Tetralux


1568761886
Tetralux
(unrelated)

1568762038
_Vi
Why just including `--library c`(without actual usage) in musl mode significantly bumps final --release-small executable size significantly. For example, why `stdio/vfprintf.c` gets included. Is there some LTO to enable?

1568762997
Tetralux
_Vi: Try using --strip as well.

1568763125
_Vi
Tetralux, Obviously, with `--strip`.

1568763228
_Vi
`zig build-exe hello.zig --release-small -target x86_64-linux-musl --single-threaded --strip --library c && ls -l hello` -> 38192.    Without `--library c` it's 9288.

1568763611
_Vi
Why `aarch64-linux-gnu` is `invalid target: unrecognized architecture`?

1568764247
Tetralux
Does Zig optimize away C functions that aren't used from libc?

1568764247
Aransentin
Is it just me that don't understand zig-ternary, or does Zig miscompile the second example here (`foo2`)?:

1568764249
Tetralux
I suspect not.

1568764269
Tetralux
const v = if(condition) true_value else false_value;

1568764356
Aransentin
Hm? That works, but not if you set a struct field with it

1568764496
Tetralux
That smells like a bug.

1568764509
Aransentin
I'll report it

1568764512
Tetralux
I actually think I've run into something related to ternaries before.

1568764533
Tetralux


1568764673
_Vi
Maybe error message when using too short target name (e.g. `aarch64` instead of `aarch64v8`) should be customized, not just `unrecognized architecture`?

1568764699
Tetralux
Aransentin: (Updates the paste)

1568764699
_Vi
It would be nice if it shown closest matched valid arch name by edit distance.

1568764715
Aransentin
Yeah

1568764731
Tetralux
That would be convienient.

1568764738
Aransentin
You can see the asm output in the godbolt code, too. It always returns 0

1568764744
Tetralux
Indeed.

1568764747
Tetralux
Curious.

