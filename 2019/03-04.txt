1551660563
daurnimator
oats: looks like you're compiling for freestanding.... but a library you're linking against assumes libc exists.

1551660608
oats
yeah, it's supposed to be freestanding, but I guess I need libc

1551660712
daurnimator
oats: If you're freestanding.... then there is no OS to provide the functions like `puts`.

1551660785
daurnimator
oats: which is to say, those libraries you're linking.... they seem to not be providing things you're using?

1551660789
oats
the stdio.s I'm using has a __io_putchar implementation

1551660806
oats
and also sets stdout_ptr

1551660865
daurnimator
oats: are those concepts from your libc?

1551660916
oats
I

1551660919
oats


1551660924
oats
this is the libc I have installed

1551660963
daurnimator
oats: how are you linking to that?

1551660980
daurnimator
(I don't see it in your zig build line? or I'm blind...)

1551661032
oats


1551661042
oats
I formatted the command nicely

1551661073
daurnimator
oats: ah. the libc.a wasn't in the one you pasted previously

1551661143
daurnimator
oats: I'm not sure if you should use `--libc` argument..... this isn't an area I've used yet.

1551661189
oats
ah, my apologies :<

1551661194
oats
I've fiddled with the flags a few times

1551661213
daurnimator
oats: every time I've seen andrewrk talk about it he seems to say `--library c`.

1551661222
oats
--libc [file]                Provide a file which specifies libc paths

1551661230
oats
how would I go about finding/making this file

1551661232
daurnimator
so I'd add that. and then assume it figures it out from your --library-path

1551661245
oats
ok

1551661249
oats
I'll try stuff \o/

1551661365
oats
Cannot link against libc for non-native OS 'freestanding' without providing a libc installation file.

1551661371
oats
ooh

1551661373
oats
zig libc --help

1551661469
daurnimator
oats: ah. I guess try writing up a libc file for your target using output of `zig libc` as a template?

1551661485
oats
seems so :D

1551662203
oats
hm

1551662213
oats
the only directory I can find for sure is include_dir

1551662232
oats
no dice on crt_dir, lib_dir, static_lib_dir, or dynamic_linker_path

1551662246
oats
like having a dynamic linker is useful here :P

1551662323
oats
actually, maybe crtbegin.o

1551662333
oats
uh, for static_lib_dir

1551669598
daurnimator
Is this meant to work?? error: expected type '[*c]const u8', found '(null)'

1551669709
daurnimator
How do I pass a null pointer to a C library that takes a [*c]const u8?

1551669738
daurnimator
just `0` I guess? seems to compile. that's sorta scary.....

1551670501
daurnimator
I also have a different question; I'm getting a syntax error trying to call a function at the top level. see

1551705637
andrewrk
daurnimator, a function call is not a valid top level declaration

1551705652
andrewrk
a comptime block is, however

1551709152
andrewrk
huh, turns out you can link multiple objects into one object

1551711050
oats
andrewrk: good morning. are you able to read over my question from yesterday evening?

1551711059
andrewrk
hi oats

1551711079
andrewrk
can you repeat it? where did you leave off?

1551711107
oats
ok, lemme try to condense

1551711121
oats
I'm trying to build a binary for my stm32f0discovery arm board

1551711132
oats
I'm using the libopencm3 firmware library

1551711153
oats
also trying to build with this libc:

1551711185
oats


1551711189
oats
there's the zig file

1551711193
oats


1551711198
oats
there's the build command I'm using

1551711215
andrewrk
looks goodf

1551711299
oats


1551711303
oats
when I try to to build, I get these errors

1551711331
oats
I don't know where to find those symbols, and I don't think manually trying to lasso in libc is the best path here

1551711352
andrewrk
__aeabi_idiv is

1551711365
oats
daurnimator pointed me in the direction of `--library c` and `--libc` yesterday, but I was unable to find all the directories I needed to set in the libc paths file

1551711401
andrewrk
--library c and --libc are not relevant for freestanding

1551711408
oats
ok

1551711456
andrewrk
your libc.a file seems to depend on other .a files or .o files

1551711493
andrewrk
you might have to define those yourself

1551711495
oats
hg: good morning, didn't know you hung out in here :)

1551711504
andrewrk
I don't know how newlib works

1551711515
oats
ok

1551711517
andrewrk
but libc on freestanding doesn't make a lot of sense, since it's operating-system abstractions

1551711520
hg
oats: indeed :)

1551711543
hg
trying to absorb knowledge from those more knowledgeable than I

1551711545
oats
newlib is designed for embedded systems

1551711558
oats
the main thing I want is string printing/formatting :P

1551711559
andrewrk
oats, I'm pretty sure you'd have the same question if you were using C

1551711577
oats
the stdio.s file I'm using provides an implementation of __io_putchar that uses the serial port

1551711578
andrewrk
might be a question for #osdev ("why am I getting undefined symbol _read when using newlib?")

1551711595
oats
ok

1551711601
oats
I may take it to them later then :)

1551711628
andrewrk
or you might need to read the newlib docs. you might be missing libs on the build command

1551711684
andrewrk
the __aeabi_idiv though, that's a TODO in zig. I can see if there's an implementation available in llvm's compiler_rt to port

1551711699
andrewrk
you can always provide it yourself as a workaround

1551711740
oats
what is __aeabi_idiv?

1551711747
oats
or, how can I found out more about it

1551711836
andrewrk
it's a function that implements signed division on armv6m for 64 bit integers

1551711850
andrewrk
since the architecture isn't capable of doing it in hardware

1551711880
oats
gotcha

1551711986
andrewrk


1551712045
andrewrk
actually appears to implement 32 bit signed integer division, not 64

1551712416
andrewrk
oats, I'll make you a deal - if you get it down to just the __aeabi_idiv linker error, I'll pause what I'm doing and port it for you

1551712459
oats
hah, you're great

1551712473
oats
I'm about to start a day of classes, but I'll try to peek at it later today

1551720121
daurnimator
andrewrk: is passing `0` to a function expecting a `[*c]const u8` the intended way to pass null?

1551721168
Akuli
this code segfaults when it's ran:

1551721169
Akuli
?

1551721400
andrewrk
daurnimator, that's correct. see also

1551721415
Akuli
this works but is kind of ugly

1551721452
andrewrk
Akuli, the problem is         result.allocator = &result.arena.allocator;

1551721464
Akuli
i kinda know what the problem is

1551721478
Akuli
result.arena is allocated in the stack, so that's an address of a stack variable

1551721485
Akuli
but i don't know what's the idiomatic way to write this instead

1551721495
Akuli
i guess it's not two init methods?

1551721528
andrewrk
after copy elision + an associated issue is resolved, this will either be a compile error or it will work, with "result" being the memory allocated at the callsite

1551721543
andrewrk
in the meantime, you'll have to make your init method take a pointer to Thing

1551721551
Akuli
how do i call it then?

1551721561
Akuli
oo nevermind

1551721563
andrewrk
here's the issue to watch:

1551721565
Akuli
var thing: Thing = undefined

1551721570
andrewrk
right

1551721576
Akuli
makes sense, thanks :)

