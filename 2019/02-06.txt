1549411799
schme245
can you escape "{" and "}" in format strings?

1549412533
andrewrk
schme245, yes, double them up

1549412563
schme245
ahh, bueno!

1549464026
Akuli
is the_file.inStream().stream the correct way to get an io.InStream for a file?

1549464600
Akuli
hm, if i want to pass the stream to a function i need &the_file.inStream().stream

1549468928
Akuli
dumb question: what am i doing wrong?

1549469258
Akuli
nevermind figured it out, ArrayList.init doesn't want try

1549469328
hg
ahh termbin, for when you need javascript to display text

1549471013
tleguern
Hello

1549471029
tleguern
I am Aversiste on Github, trying to port zig on OpenBSD.

1549471359
andrewrk
hi tleguern

1549471639
tleguern
Do you have any documentation specific to porting ?

1549471866
andrewrk
it's a bit bare, but:

1549471890
andrewrk
I'll move this to a wiki page and update it

1549471909
tleguern
Ok, thanks.

1549472759
andrewrk
tleguern,

1549472769
andrewrk
I updated the page. Let me know if you run into something that isn't on that list

1549472825
tleguern
Oh, great :)

1549472833
andrewrk
most stuff should give you a helpful error message when you try to use your new target

1549472841
andrewrk
and I can explain any error that does not make sense

1549472864
andrewrk
you can do this process one little piece at a time

1549473856
arhiv6_
Hi all. I find Zig documentation. But, where I am find documentation on "Zig Standard Library"?  What all methods are have std library?

1549473892
andrewrk
arhiv6_, everybody wants that, and we don't have it yet. until some improvements are made you have to read the source

1549473937
andrewrk
here's an issue you can follow:

1549473952
arhiv6_
Ok, thanks.

1549474103
Akuli
how do i access the type of an enum member?

1549474123
Akuli
s/enum/union/

1549474256
Akuli
well, this works:  const data = Data{ .Point2D = @memberType(Data, 0){ .x = 1, .y = 2 }};

1549474315
Akuli
maybe i'll just define the structures as consts first and then use them in the union definition

1549474485
andrewrk
Akuli, ah, you ran into an issue I don't have the link handy for, but it's planned to be able to initialize anonymous structs

1549474491
andrewrk
for now give your structs names

1549474513
Akuli
neat, thanks :)

1549475569
MajorLag
I think I had a function for that in my PR. `std.meta.TagPayloadType. const data - Data{ .Point2D = std.meta.TagPayloadType(Data, Data.Point2D){ .x = 1, .y = 2}, };`

1549475602
MajorLag
std.meta.TagPayloadType: `const data = Data{ .Point2D = std.meta.TagPayloadType(Data, Data.Point2D){ .x = 1, .y = 2}, };`

1549475909
andrewrk
oh right, you can work around that with reflection

1549475957
andrewrk
I will personally prefer naming structs until the anonymous literal syntax lands

1549477500
Akuli
is there something like strerror? i want to catch errors that may happen while opening a file and display them in a user-friendly way (that is, not a stack trace)

1549477515
Akuli
i grepped for strerror in std/ and didn't find anything

1549477630
andrewrk
Akuli, is this what you want?

1549477671
Akuli
not quite, e.g. for ENOENT i would expect "No such file or directory" as returned by strerror(3) or similar

1549477813
andrewrk
no - that does not exist in the standard library

1549477826
Akuli
i think i'll write my own then

1549477853
andrewrk
I think that's a good idea. If it were in the standard library it would start to cross a line into user interfaces / localization / translations etc

1549477879
Akuli
hmm that's true :D the c function uses the current locale

1549477900
Akuli
python uses it for its error messages, but so far i haven't heard of anyone complaining about seeing error messages in different languages depending on whether some library has called setlocale()

1549477951
hg
I wish gettext() were more portable

1549477995
Akuli
python has its own implementation of gettext that reads the .mo files or whatever the extension is

1549478134
Akuli


1549478192
hg
Akuli: sure; but I mean in C

1549478204
hg
I'd like for it to be a funcitonal means of i18n everywhere (windows, macos and linux)

1549478228
andrewrk
I think it will be a goal of zig for i18n to be a third party package, and not in the standard library

1549478236
Akuli
then write python's thing in zig and use it as a library from c :D

1549478282
andrewrk
an i18n package must be updated frequently, it depends on a lot of data, and many computing tasks do not require it

1549478305
andrewrk
so that also means that std must not step on a third party i18n's toes

1549478351
Akuli
what would i do them if i'm a library writer who wants translated strings in the library?

1549478361
Akuli
then

1549478399
Akuli
if i18n is a third-party thing, won't users have different preferences for i18n libraries that they'd like to use with my library?

1549478405
andrewrk
I'm not sure what you're asking. Translating strings is development work, in the same way that fixing a bug is

1549478416
Akuli
nevermind :D

1549480281
Akuli
is returning a string literal a no-no like it is in c?

1549480503
Akuli
like this:  fn doStuff() []const u8 { return "Hello"; }

1549480600
andrewrk
Akuli, that's fine because the memory for "Hello" is static, and thus valid for the entire lifetime of the application

1549480609
Akuli
nice :D

1549480613
andrewrk
you have to always be able to answer the question "where are the bytes?"

1549480619
Akuli
i know

1549480636
andrewrk
for string literals, the answer is: in the read-only static data section

1549480675
andrewrk
not only string literals, but all comptime-known arrays

1549480676
Akuli
i like how zig doesn't force me to think in terms of something else than how zig works

1549482371
Akuli
is there a way to attach an u8 to an error? i'd like to convert this to an error object return without losing the opbyte information: std.debug.panic("bytecode file contains invalid op byte {}", opbyte)

1549482440
Akuli
since the byte is between 0 and 0xff, i could of course create 256 different errors, one for each byte :D

1549482863
Akuli
hmm i ended up actually doing that

1549482893
Akuli
i think i'll need to create my own error handling stuff later, because the language this interpreter is supposed to run has exception objects, so this isn't "too horrible" "for now"

1549482897
Akuli
or maybe it is :D

1549483430
andrewrk
Akuli, creating 256 different errors, one for each byte, is an abuse of the error handling system

1549483450
Akuli
:D well at least i had a good laugh writing this shit

1549483454
Akuli
let me fix it

1549483469
andrewrk
it violates a few of the zig philosophies, if you care about that

1549483488
andrewrk
you're likely to prevent yourself from finding the best way to organize your code if you settle for a hack like that

1549483522
Akuli
yes, i'm rewriting the shit away

1549483764
Akuli
man that was probably the worst code i have ever written

1549483768
Akuli
but it was funny

1549484230
Akuli
now its gone :D

1549496560
gamester
Small bug report through pastebin, thanks:

1549496656
gamester
oh actually the compiler still segfaults even if you make the struct extern

1549496675
gamester
(in 3rd example)

1549496794
andrewrk
gamester - thanks. I'll turn this into a bug report for you

