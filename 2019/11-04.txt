1572828172
pixelherodev
Don't worry about it :)

1572832550
SrMordred
Hello people, someone here got zig + sdl2 + cInclude working on windows ?

1572832936
daurnimator
SrMordred: yes I believe I've seen that working before

1572832947
daurnimator
SrMordred: at least by andrewrk; maybe also bgiannan?

1572833074
SrMordred
daurnimator i got it to build but it exploded with error code 3221225785 so far :P

1572834146
SrMordred
i think i got it now. but the build system have some problem with cache i think...

1572834292
daurnimator
SrMordred: such as?

1572834539
SrMordred
daurnimator not sure yet. i´m trying to understand why it worked now.

1572834550
SrMordred
on the build system, i don´t get what is this

1572834552
SrMordred
const windows = b.option(bool, "windows", "create windows build") orelse false;

1572834585
SrMordred
@import("std").debug.warn("{}", windows); //false , on windows.  is this right ?

1572834659
daurnimator
SrMordred: that's adding an option to zig build on whether to cross compile a windows artifact; I assume....

1572834771
SrMordred
well, is working so far. let me see how far i go.

1572834805
SrMordred
i copied from zig-tetris the build system

1572834814
SrMordred
there also this there

1572834815
SrMordred
if (windows) {

1572834856
SrMordred
if i remove the if windows, the process eat all my mem and get stuck, so maybe a bug there.

1572835396
daurnimator
andrewrk: I'm catching up on the stream now :)

1572836648
andrewrk
scientes, do you have C code handy to demonstrate gcc pointer-of-vector-element ?

1572836654
andrewrk
daurnimator, it was a fun one :)

1572836691
daurnimator
andrewrk: interesting that you pointed out the flat nature of the client handling code

1572836751
scientes
no, I can't find anything ATM though i wrote test programs

1572836763
daurnimator
andrewrk: you might find

1572836881
daurnimator
"I don't think any other language does this" -> I showed it to you in lua before it was in zig

1572837076
andrewrk
lua's approach is elegent, but distinct, given that it's a dynamic language

1572837133
andrewrk
scientes,

1572837151
daurnimator
andrewrk: the context was talking about "sometimes async" functions. plenty of dynamic languaes don't+can't have that.

1572837203
andrewrk
I didn't mean to take away from lua or what you showed me, sorry for forgetting to give it a hat tip

1572837244
andrewrk
but it's quite different - in lua there doesn't have to be a difference between async/non-async functions since the runtime is doing JIT. in zig the semantic analysis has to figure these things out statically

1572837264
andrewrk
you certainly cannot use pre-allocated memory for async functions in lua

1572837282
scientes
andrewrk, yes I know, what are you trying to show me?

1572837287
scientes
add     rax, 12

1572837296
daurnimator
andrewrk: its not about the JIT at all; but yes, the whole @Frame thing is novel in zig due to lack of a garbage collector.

1572837304
daurnimator
(which is a great thing!)

1572837349
scientes
that is just adding to the stack pointer

1572837378
andrewrk
scientes, nothing- this is just a godbolt link demonstrating what you said earlier, that gcc supports this and clang does not. since you lost your example I provided one

1572837392
scientes
ahh ok

1572837403
scientes
looks like gcc-8 also supports it

1572837421
andrewrk
not even clang trunk supports it

1572837431
scientes
added in gcc-5

1572837453
andrewrk
I'm trying to get a straight answer from llvm devs whether pointer casting a vector pointer to an array pointer is sound

1572837477
scientes
i was talking to jdoeffert and he said to use GEP on vectors

1572837485
scientes
andrewrk, no it is not, as the padding is different

1572837491
scientes
(specifically vectors do not have any padding)

1572837517
scientes
like it should work on a vector of u24

1572837548
andrewrk
oh I see

1572837659
andrewrk
I think a safe path forward, for now, will be having pointers to vector elements in zig give these less convenient types (as in my pull request #3575) and then a later improvement can potentially make it return a better type, maybe conditionally on whether the int is power of 2

1572837698
daurnimator
andrewrk: re: event lock code: what would you think of replacing it with an intrusive linked list of threads waiting? (that's what we do in cqueues)

1572837735
andrewrk
just making sure, by "threads" you mean suspended function frames, yes?

1572837764
daurnimator
threads here I sort of mean "fat frame pointer"

1572837774
andrewrk
what makes it fat?

1572837793
scientes
andrewrk, my approach was to just throw an error if the type wasn't a power of 8 bits

1572837799
scientes
*multiple

1572837873
daurnimator
andrewrk: maybe something like: `var MyThread = struct { frame: @Frame(Func), node: LinkedList(void).Node }{}` ?

1572837885
daurnimator
thinking out loud here...

1572837938
daurnimator
andrewrk: also if you ever want to expose somethign on stream again, I'd consider e.g. ngrok. so you don't have to show your actual IP.

1572837958
andrewrk
nice, I wasn't aware of that, thanks

1572838000
daurnimator
andrewrk: oh heh. you discovered SIGPIPE on write :)

1572838185
daurnimator
andrewrk: 1. sendmsg has a MSG_NOSIGNAL sometimes. 2. OSX has e.g. SO_NOSIGPIPE. also F_SETNOSIGPIPE. also O_NOSIGPIPE, 3. for POSIX, you need to use pthread_sigmask around each write call

1572838281
daurnimator
andrewrk: also watch out for letting people write to your terminal..... most terminal emulators have bugs that can potentialy allow for code execution.

1572838309
andrewrk
thanks

1572838328
daurnimator
simple solution would be to strip or escape control characters

1572840314
scientes
well the recent one was tmux emulation

1572840321
scientes
tmux integration***

1572840363
scientes
oh yeah I see, that is all done with control characters

1572840367
scientes
which draw to the terminal

1572840375
daurnimator
or others...

1572841270
daurnimator
andrewrk: ooo ziguana stickets

1572841761
wilsonk
More than that daurnimator (cc andrewrk)...the Zig merch store is NOW open ;):

1572841816
wilsonk
Let me know if I totally messed something up please.

1572842269
wilsonk
That is the unofficial storefront (with Andrews blessing). All profits will be going to support Andrew and Ziglang development (ie. my time/effort will not be compensated). Just so everyone is aware

1572842317
daurnimator
wilsonk: any reason it's unofficial instead of official?

1572842409
wilsonk
I think because I am running it...but you would have to ask Andrew. Probably can't be 'official' unless he is charge of it (or eventually the non-profit he has talked about, I would guess).

1572842549
daurnimator
wilsonk: I want a premium hoodie with the ziguana on front and ZIG on the back :)

1572842639
daurnimator
andrewrk: oh; I remembered: I was going to recommend you talk to SPI.

1572842715
wilsonk
Yeah, my wife said something similar but the designer only let me add to the front. Not sure if it would cost a bunch more to have printing on front and back?? One of the mugs has both designs...and I think I could have modified the leggings to have two designs, but I couldn't see how to do it for the shirts/hoodies.

1572842797
daurnimator
andrewrk: or alternatively to SPI; I had a chat to Karen the other week and you could pick the SFC

1572842839
wilsonk
daurnimator: Oh, duh nevermind. I must have just missed it before. I can see how to do it and will add hoodies and shirts with both designs front and back.

1572843209
daurnimator
andrewrk: FWIW SPI take 5% and are pretty bare-bones; while SFC take 10% and are more fully featured.

1572843641
daurnimator
wilsonk: now the preview for the back of the hoodie is 404!

1572843676
wilsonk
Might be because I am still working on it. I will let you know when I get finished

1572843685
daurnimator
wilsonk: k

1572844620
wilsonk
daurnimator: maybe give it another try now

1572845080
wilsonk
All the two sided designs are at the bottom of the page right now under Zig-Ziguana Merch. I guess I will probably leave them there since they are more a little more expensive (only $2-4 more...though I think the leggings/socks are the same price somehow?? Same profit margin so I don't understand that but...whatever I guess)

1572846446
daurnimator
wilsonk: no more light grey option?

1572846566
wilsonk
Let me check. They each have their own color pallet to choose from and I can't do custom colors  (it should have auto-picked the same colors but maybe it missed that one).

1572846993
wilsonk
daurnimator: ok, I added the two design hoodie again with all available colors (including light grey). Hopefully that looks correct now

1572847516
daurnimator
wilsonk: FYI there's now several products in the store "zig" "ziguana" "zig-ziguana" "zig-ziguana updated"

1572847730
wilsonk
Yeah, I sort of wanted to have some way to distinguish them because the first "zig" designs only have the zig logo on the front, then the "ziguana" designs have just the ziguana on the front and the last two have both front and back (and this way I can delete specific design layouts in batches). One can also shop by category that way

1572847775
daurnimator
wilsonk: the last 2 seem to be essentially duplicates aside from missing colours?

1572847977
wilsonk
Yeah, I don't know if I can remove just one item at a time or if it has to be the whole batch. I will look into it to see if I can just remove the duplicate that doesn't have all the colors (I am new to this and removing these things isn't immediately obvious on that site)...I can't even see how to modify the items. Teespring seems to "publish" what you have designed and there may be no way to edit without re-designing the whole lot

1572848155
daurnimator
wilsonk: sadly... things seem to add up super quickly. by time I get to checkout a single hoodie is $90 :(

1572848469
wilsonk
Yikes that seems high, shipping seems to be more than I thought for anything outside the US and you picked the most expensive item also. (I even cut the recommended profit margin on almost every single item, including that one!). Custom designs are expensive apparently...but I did buy a t-shirt from another project and this is exactly in line with that pricing.

1572848557
wilsonk
Are you in Europe? All pricing is slightly higher there also (with Canada second highest, then the US). The site says it ships from Europe so I am not totally sure why the pricing and shipping seem to be a little higher (exchange rates perhaps)

1572848721
daurnimator
wilsonk: .au

1572848785
daurnimator
we could probably drop one colour by making the iguana's eye the same colour as the boots

1572848885
daurnimator
most only printing stores charge by number of colours

1572848891
daurnimator
s/only/online/

1572848928
daurnimator
Could also make the entire helmet transparent to drop a colour...

1572848962
daurnimator
(or two colours really: the helmet makes the head a differenter green!)

1572849008
daurnimator
Then we'd have: green, yellow, orange, black, grey..... hmm. still over the industry standard 3 colours in a design

1572849272
wilsonk
Hmm, yeah I see what you are saying but I don't think it is making a difference here because I can see that the "zig" merchandise (which only has the two colors) is exactly the same price as the "ziguana" merch ( and the profit margins are within pennies of each other or exactly the same).

1572849535
daurnimator
wilsonk: I'm having a look around at other options... thoughts on

1572849850
wilsonk
Yeah, that might be an option also. I like that you can add stuff to the arms on that site also. I can look at adding something there, I suppose.  Did you try to check out that item to get a total price? Looks like $57.20 Australian dollars here (plus shipping, taxes and duty/vat, I would guess).

1572849894
daurnimator
wilsonk: same price here. AU prices include taxes etc. Wasn't able to get shipping though without entering details

1572849998
daurnimator
AU$9.35 for local standard shipping on just that single item. or free for pickup (they're like a 30 min drive from me....)

1572850041
wilsonk
Oh, yeah I would think that would be cheaper for you for sure, especially if taxes are included and shipping is in country...but more expensive for others, is all.

1572850084
daurnimator
wilsonk: huh. $16 for international shipping

1572850097
wilsonk
Not too bad

1572850219
daurnimator
oh interesting; it goes down to $52 for international. (must remove local taxes...)

1572850268
wilsonk
Ah, cool because we will have to pay those on import here anyways

1572851153
andrewrk
alright... CI should be stable again

1572851281
gsomix
hey, everyone

1572851332
wilsonk
hey

1572851358
gsomix
I want to build tetris game by andrewrk in Windows. how should I deliver libraries (libepoxy and glfw) to my system?

1572851424
daurnimator
gsomix: 1. your host system? or the destination system? 2. do you want to statically link? or dynamic?

1572851484
gsomix
both Windows. it seems statically link as described in build script

1572851485
gsomix


1572851814
andrewrk
gsomix, my plan to get this working on windows was always get the package manager done. we're getting closer...

1572852890
gsomix
andrewrk, thanks! but how Windows version from README was builded?

1572852894
gsomix
I mean

1572872927
forgot-password
Hey guys, I was wondering if anybody has done some embedded programming with Zig?

1572873404
mq32
i didn't get much though as i ran into compiler bugs at the time (was some months ago)

1572873409
mq32
should give it a shot again

1572873598
forgot-password
What exactly did you do? I'm looking into trying to get some zig code running on my arduino for a start.

1572873808
mq32
arduino with AVR or cortex m-3?

1572873812
mq32
(arm)

1572873822
mq32
i tried to run code on a cortex-m3 (ARM)

1572873835
mq32
For AVR you will be on your own i think

1572873851
mq32
i can try helping with "generic knowledge", but don't have hardware on me to test it

1572873888
forgot-password
I have an older Arduino Uno, I'm pretty sure it's just AVR

1572873930
mq32
Arduino Uno is AVR

1572873947
mq32
for a start i would get the datasheet for the µC and the CPU arch

1572873964
mq32
afaik you need some inline assembler on the beginning of the flash that will do interrupt handling

1572874081
forgot-password
How do I even flash the arduino then? First of all I'll have to set my target arch to avr, right?

1572874133
forgot-password
Do you know of any tools to get the generated binary into the flash? I've heard of avrdude, but haven't looked into it much.

1572874157
forgot-password
Will do some research, thanks for your help so far :)

1572874164
mq32
avrdude is quite good

1572874171
mq32
documented and has a very verbose mode (-vvv)

1572874175
mq32
so good to debug

1572874225
mq32
the arduino has an ISP bootloader that will fake an STK500 interface, so you need to use avrdude with stk500v2

1572874822
forgot-password
Is it a default bootloader that I can just install via the arduino ide?

1572874913
mq32
it is already installed on every arduino you buy

1572874947
mq32
otherwise you need some

1572875846
forgot-password
Thank you very much. Hopefully I get to play around with it this evening :)

1572875952
mq32
:)

1572875971
mq32
i'm tempted to play around with more embedded HW, but i should focus on my current project :D

1572876273
forgot-password
It's unsurprisingly a lot easier to pile that stuff up than get it done :p

1572876368
mq32
haha, true that

1572877077
bgiannan
On a old macOS (Sierra) i'm getting a '_futimens not found' error. Any clue why this is happening. It's working fine one High Sierra/Catalina

1572878157
daurnimator
bgiannan: seems like that's expected: sierra didn't include support for futimens

1572878236
bgiannan
is zig on sierra not supported then?

1572878341
daurnimator
bgiannan: correct; see zig homepage: macOS 10.13+

1572878384
bgiannan
huh, i guess i'll try and upgrade my old laptop then

1572878656
daurnimator
bgiannan: in general zig only supports OSes supported by an upstream vendors. apple only support the latest 3 releases of their OS, which at this point is catalina, mojave, high sierra.

1572878671
bgiannan
noted

1572879277
daurnimator
bgiannan: that said, I assume the futimens call is coming from fs.file.updateTimes? Which is allowed to round off to less precision. So we would probably accept a fix

1572879294
daurnimator
bgiannan: though you might just end up getting a new error in its place

1572879408
bgiannan
daurnimator, no idea where the symbol is used, it errors on llvm output step with no stack trace

1572880520
daurnimator
bgiannan: you could try applying this:

1572880784
leeward
Is there a way to print out arbitrarily-sized integers with something like std.debug.warn?

1572880808
daurnimator
leeward: where did you get an arbitrary sized integer?

1572880813
daurnimator
leeward: comptime or runtime?

1572880857
daurnimator
leeward: but in general: zig comptime integers will "just work". runtime ones you'd already have a bignum object or similar and you can add a .format() method

1572880870
leeward
comptime

1572880878
leeward
Well

1572880887
leeward
It's not arbitrary. It's a u512.

1572880905
leeward
I got the number I want printed at runtime.

1572880962
daurnimator
leeward: and what happens when you try and print it with std.debug.warn?

1572880980
leeward
LLVM Emit Output...LLVM ERROR: Unsupported library call operation!

1572881052
daurnimator
leeward: ah k. some math operations are missing for large integer sizes.

1572881083
daurnimator
leeward: the printing algorithm probably does something like divide by 10 as it goes.... and we haven't provided a way to do division of a u512 yet

1572881085
leeward
I can assign it to a variable and it builds and runs.

1572881093
leeward
Ah, ok.

1572881170
leeward
Is there a "print in hex/binary" mode that might work?

1572881187
daurnimator
leeward: see

1572881342
leeward
I see.

1572881345
mikdusan
leeward: here is a workaround:

1572881458
mikdusan
oh it's in that issue :)

1572881558
leeward
It is!

1572881560
leeward
Thanks.

1572881609
leeward
Unrelatedly: I don't see anything in the giant documentation file about reading from standard input. Should I be using scanf?

1572881691
daurnimator
leeward: std.io.getStdIn() returns a !File

1572881716
leeward
So I get the stream from that and... `.read()` it?

1572881780
daurnimator
leeward: I think you're meant to use InStream and then use .readByte / .readNoEof / etc.

1572881792
mikdusan
currently no zig userland `scanf()` stuff. there is std.mem.separate() and std.mem.tokenize() which are very helpful. also if one really wants scanf() i suppose use it from the c-library

1572881801
daurnimator
leeward: but yeah; I think we're missing basic scanf like parsing at the moment

1572881810
mikdusan
(after reading like daurnimator mentions)

1572881857
daurnimator
mikdusan: btw, can I get your feedback on

1572881866
leeward
Ok, thanks.

1572882296
daurnimator
bgiannan: created

1572882468
bgiannan
daurnimator, thx i'll try it out

1572882756
keithdc
re: zig merch: For me (In Ireland) the premium hoodie is coming up as 47.50 euro. Shipping is 5.29 and handling 1.39, which seems reasonable.

1572882783
daurnimator
bgiannan: oh huh. your same issue was already filed (and closed)

1572882904
mikdusan
daurnimator: is it idiomatic to desire wrapping behavior for a FIFO in `discard()`; seems counterintuitive that discard-too-many leaves FIFO with data

1572882965
daurnimator
mikdusan: huh? I don't understand

1572882981
mikdusan
one sec. i'll make example in case my understanding is wrong.

1572883173
companion_cube
replace scanf with comptime parser combinators 🙃

1572883227
daurnimator
companion_cube: agreed. when can you start? :)

1572883233
companion_cube
😅

1572883235
fengb
Should that return a struct?

1572883259
daurnimator
fengb: 'that'?

1572883426
mq32
keithdc, where can i get the merch? :O

1572883668
keithdc
:mq32 wilsonk posted this earlier on the chat ->

1572883713
mq32
i just ordered 20 Ziguana-Stickers to deploy in the local hackerspace

1572883761
riba
mq32: where's that

1572883771
mq32
shackspace / germany

1572883779
mq32
(stuttgart hackerspace)

1572883788
riba
oh, stuttgart

1572883817
mq32
your from munich?

1572883848
riba
no, i live by the bodensee

1572883852
THFKA4
i wanted to make a cool orange-on-black zig cup, but every site has a minimum order of like 70

1572883877
riba
i went to uni in vienna, i liked the metalab

1572883881
mq32
then i interpreted your hostname wrong :D

1572883893
mikdusan
i break mugs at a rate of about 2 per year. so yeah, 70 is too much :)

1572883897
riba
they had one of those japanese toilets with a heatable seat

1572883904
mq32
haha neat

1572883921
mq32
i wonder if i could get enough people together for a zig meetup, but i think it's still too early

1572883960
daurnimator
THFKA4: where are you located?

1572883972
THFKA4
u.s.

1572883990
daurnimator
mq32: co-locate with something else big. FOSDEM is probably a good one for most people (myself excluded :( )

1572884146
mq32
daurnimator: i didn't plan to be

1572884162
mq32
and we already have a lot of meetups at our hackerspace

1572884243
riba
the last time i went to stuttgart was because my work sent all devs to the "jugs meetup"...

1572884274
riba
now at least i have a bag that says JUGS on it

1572884335
mq32
if you like old computers, you could visit our small "retro computer" meetup :D

1572884345
riba
("java user group stuttgart")

1572884352
mikdusan
daurnimator: yeah nevermind about my prev Q. i misunderstood the code

1572884356
mq32
yeah, looked that up already

1572884457
riba
i'll try to remember it next time i have to go up there

1572884461
riba
sounds good

1572886219
dimenus|work
andrewrk: just as an fyi, it looks like we're generating non 16 byte aligned movapd instructions on windows (with your array access PR)

1572886228
dimenus|work
the same codebase does not #GP on Linux o.0

1572886687
companion_cube
wow, cmdlinezig looks good, talk about comptime magic

1572888469
andrewrk
dimenus|work, let me double check the IR. which function was that in?

1572888822
leeward
andrewrk: That WSL bug also causes problems with async.

1572889103
gonz_
leeward: What bug is that?

1572889552
leeward
gonz_: integer overflow in vdso.zig

1572889663
leeward
I found it originally when trying to `zig build docs` under WSL. It gets to "docgen example code 3/257...integer overflow"

1572889691
andrewrk
I think there is a way to change this logic so that it additionally works under WSL

1572889924
daurnimator
How can I discard const from a pointer?

1572889960
daurnimator
==> I have a `[]const u8` and I want to write `undefined` to it for valgrind to pick up other errors

1572889993
leeward
That's an interesting thing to do.

1572890122
andrewrk
that's not sound. your reference says that you're not allowed to write through it, and you're trying to write through it

1572890153
andrewrk
it seems like it should not be const to me

1572890282
daurnimator
mmmm, okay

1572890479
andrewrk
I suggest `Mut` instead of `NotConst`. Also, the std lib does this in a few places but matching the keywoard, the bare function is mutable, and the const one has a Const prefix

1572890575
daurnimator
andrewrk: in this case, I only need the non-const one for internal purposes.

1572890591
andrewrk
makes sense

1572891839
TheLemonMan
leeward, can you print and paste somewhere the content of `eh` in the `lookup` function?

1572891960
dimenus|work
anderwrk: llvm-ir of transpose

1572892077
dimenus|work
*andrewrk

1572892081
dimenus|work
and the zig code ->

1572892149
dimenus|work
the loads seem aligned to me

1572892176
andrewrk
dimenus|work, all the vectors are declared with align 16, all the loads and stores look good

1572892191
andrewrk
dimenus|work, I thought the problem happened at the callsite?

1572892207
dimenus|work
no, it happens right before the shuffle

1572892222
dimenus|work
when unpacking the matrix into xmm* registers

1572892278
TheLemonMan
I guess it's the llvm.memcpy.p0i8.p0i8.i64

1572892566
andrewrk
but that's just memcpying a struct that has vectors in it from one to another

1572892594
dimenus|work
is this just a stack alignment problem?

1572892597
andrewrk
I guess I could see how llvm might lower that into an unaligned vector load

1572892613
TheLemonMan
check out %4

1572892627
TheLemonMan
then check out %d alignment

1572892629
andrewrk
oh!

1572892636
andrewrk
the struct itself should have 16 bytes alignment

1572892640
andrewrk
but it does not

1572892671
TheLemonMan
you can easily check if that's the problem by modifying the ll code and recompiling it with llc

1572892734
andrewrk
Mat4x4 is struct{ vecs: [4]Vec4, elems: [4][4]f32}. Vec4 is @Vector(4, f32)

1572892743
andrewrk
the alignment of this struct should be 16, but zig apparently thinks it is 1

1572892777
andrewrk
let me create a test case for this

1572893096
dimenus|work
Mat4x4 is a packed struct with a packed union

1572893461
andrewrk
oh, a packed struct with vectors in it, that's not something I've tested yet

1572893490
andrewrk
but it makes sense, because you want to pass a pointer to the memory to opengl or something like that right?

1572893509
andrewrk
this is #3133

1572893951
leeward
TheLemonMan: Which lookup function?

1572894052
TheLemonMan
leeward, in the vdso logic

1572894072
TheLemonMan
my best bet is that WSL fucked up the vdso header somehow

1572894126
leeward
TheLemonMan: Is there an easy way to just run that test under gdb?

1572894143
dimenus|work
andrewrk: Vulkan, but close enough :P. Yes this is passed to GPU shaders directly

1572894165
andrewrk
ok yes. you're doing everything right, this is #3133. it's an important issue

1572894190
dimenus|work
for whatever reason, this used to work a few months ago

1572894222
TheLemonMan
leeward, running any code path that calls clock_gettime is going to trigger that bug

1572894233
dimenus|work
andrewrk: ~ August 15th

1572894548
leeward
TheLemonMan:

1572894612
TheLemonMan
leeward, nice, can you also print all the 4 program headers?

1572894791
leeward
TheLemonMan: I see `ph`. Which others?

1572894829
leeward
Oh, I see.

1572894874
TheLemonMan
you can just print ph[0] and so on

1572894890
TheLemonMan
eh forget about it

1572894915
TheLemonMan
I should really read the code before talking

1572894942
leeward


1572895050
dimenus|work
i wonder why this doesn't crash on linux?

1572895564
daurnimator
'Len' vs 'Length'

1572895571
daurnimator
(for method names)

1572895667
TheLemonMan
leeward, does it work if you replace the +/- in the lines where the overflow occurs with the wrap-around ones? ( + -> %+ and so on)

1572896155
leeward
TheLemonMan: Now it fails in a new and different place.

1572896181
leeward
Still an integer overflow, but on vdso.zig:43:28

1572896481
leeward
If I keep adding %s, it looks like it passes eventually.

1572896503
leeward
I got an "All tests passed."

1572896527
leeward
Seems unlikely to be correct though. Pointer math oughtn't to overflow.

1572896636
TheLemonMan
I'm not sure whether they're slapping relative addresses in there

1572898052
daurnimator
mikdusan: k, tidied up and sent as

1572899061
leeward
Is there a way to tell if an async function has terminated when I resume its stack frame?

1572899094
andrewrk
leeward, you can't do that, that's a race condition

1572899174
leeward
Maybe I'm not being clear. I have an async function, and it suspends a few times then returns. I want to know when it's returned.

1572899231
scientes
leeward, you could use a mutex that it holds and then releases right before returning

1572899248
scientes
but as was said, its still a race condition

1572899260
scientes
if you use a thread, then things are a bit different

1572899304
leeward
So is there a race condition on suspend/resume? Can I be sure that the function's run to the first suspend point after I resume it?

1572899388
leeward
The second "Suspend and Resume" example seems to imply that I can.

1572899645
andrewrk
leeward, if you're calling resume, you have to be sure that it's suspended

1572899665
andrewrk
are you trying to make a generator?

1572899671
leeward
How'd you guess?

1572899696
andrewrk
because it's tempting to make a generator out of suspend/resume, but it's not the correct abstraction :)

1572899709
andrewrk
consider that in theory (not in current zig) it's possible to have an async generator

1572899723
andrewrk
where getting the next value could be a suspension point

1572899750
andrewrk
which means the generator needs to be able to suspend and get resumed for async I/O purposes, without having the get-next-value thing mess with its suspend/resume state

1572899755
andrewrk
these are separate things

1572899896
andrewrk
a generator function could be suspended due to e.g. read(), but then when a callsite does generator.next() it should not resume; instead it should register the caller's handle, so that when the generator gets resumed by read() then it proceeds to a yield which resumes the caller of next()

1572899906
andrewrk
in short:  `suspend` and `yield` are distinct concepts

1572899910
leeward
Ok, there's clearly something I don't understand here. Can you explain how the two examples under

1572899953
andrewrk
both of these examples are single threaded for starters

1572900001
leeward
Is there something in the examples that constrains them to being single threaded?

1572900025
leeward
If so, why can't I tell if a resumed async function has returned?

1572900026
andrewrk
the second example has a race condition if you enable multi threading and put a different suspend point before the suspend block

1572900054
andrewrk
the example is valid because when `resume` is executed, it is guaranteed that the function has suspended

1572900123
leeward
How is it guaranteed? By the fact that multithreading is disabled?

1572900142
andrewrk
threads come from std.event.Loop.initMultiThreaded(), which is the default when you don't pass --single-threaded and you use pub const io_mode = .evented; in your root source file

1572900163
andrewrk
these tests do not opt in to multi threaded event loops (and in fact there is not a way to do this yet)

1572900198
andrewrk
it's guaranteed because you can see the control flow. it goes from the suspend block back to the test function, and resume is the next line

1572900249
andrewrk
" At any point, a function may suspend itself. This causes control flow to return to the callsite (in the case of the first suspension), or resumer (in the case of subsequent suspensions). "

1572900297
andrewrk
"why can't I tell if a resumed async function has returned?" => because every use case for this has a better solution that you should do instead

1572900447
leeward
Ok, so what's the better solution for joining a thread?

1572900464
leeward
That seems like a legitimate use case.

1572900476
leeward
Is it the mutex thing?

1572900487
andrewrk
joining a thread is std.Thread.wait

1572900498
andrewrk
async functions are not threads

1572900527
leeward
I guess I'm missing what they are. The docs don't really describe their semantics completely or suggest a use for them.

1572900547
andrewrk
I agree the docs of async functions is severely lacking

1572900633
andrewrk
think of it this way: an async function is a function that you can begin at one callsite, but collect the result at a different site

1572900662
leeward
Is there a mechanism for returning things through them?

1572900684
leeward
Other than passing in pointers, that is.

1572900721
andrewrk
yes you can use the return statement just like normal functions

1572900734
andrewrk
did you see

1572900735
leeward
And that's returned by the resume?

1572900745
andrewrk
I think you should probably forget about resume and suspend for now

1572900757
andrewrk
they are lower level than async/await

1572900789
leeward
I didn't get there; was still trying to understand the stuff before it.

1572900803
andrewrk
you need suspend and resume if you're implementing an event loop

1572900812
andrewrk
if you're not, you pretty much only need async and await

1572900828
leeward
I actually have a thing that looks like an event loop that I kinda want to implement in Zig.

1572900852
leeward


1572901011
leeward
It uses pthreads in the posix implementation, but I'd like to make a general purpose implementation that I can use on bare metal. The docs say that async works on freestanding, so I'm hopeful.

1572901171
dimenus|work
andrewrk: so the bug doesn't exist at all if i declare my structs extern instead of packed

1572901251
andrewrk
dimenus|work, that makes sense

1572901261
andrewrk
consistent with #3133

1572901296
andrewrk
leeward, yes, zig's async functions are uniquely suited to working on freestanding

1572901309
andrewrk
you'll have to figure out how suspend and resume work. once you get it, I think you'll be happy with it

1572901314
andrewrk
but it's a new concept you have to learn

1572901356
andrewrk
leeward, one thing that might help is reading the tests in test/stage1/behavior/async_fn.zig and try to understand all the control flow

1572901604
leeward
andrewrk: okers, I'll check those out.

1572901720
leeward
Incidentally, I have a 3-line change that gets the tests to pass under WSL. I'm not sure it's a good idea, though, since it changes the + and - operators to %+ and %-. It probably is actually a bug in WSL. I don't know enough about vdso to tell though.

1572901724
andrewrk
leeward, one clue that might help thinking about this: `suspend` is

1572901795
andrewrk
for example in the std lib event loop, there's a function called waitUntilFdIsReadable. this calls suspend, puts a pointer to its frame in an epoll set/kqueue/WIOCP, and then when a worker thread gets woken up by epoll/kqueue/WIOCP, it calls `resume` on the corresponding frame pointer

1572901899
scientes
can the async stuff be used to implement something like setjmp()/longjmp()?

1572901931
scientes
not that i really need it, but I think its a basic construct for languages to have

1572901935
leeward
Sounds like a scheduler

1572901980
scientes
leeward, your program is still totally preemptable on Linux, unless you do special thing and have special permissions

1572902121
leeward
Sure, if I'm running atop Linux.

1572902328
scientes
schedulers also need timers

1572902763
leeward
Preemptive ones do, sure.

1572902901
leeward
Cooperative multitasking: for when you want any user to be able to hang the system.

1572902907
mbarkhau
Hi there,can anybody say where the code/template is that generates this std documentation?

1572902908
leeward
Also, MacOS.

1572902949
scientes
leeward, MacOS classic is ancient history

1572902982
scientes
mbarkhau, oh wow, that is new

1572903050
leeward
mbarkhau: The documentation source is in

1572903088
leeward
The generator for it is, I suspect,

1572903160
leeward
scientes: It may be, but some of us are lazy and don't want to set up timer interrupts. It's still relevant for simple systems.

1572903206
scientes
leeward, its also more efficient, which is why zig has async instead of the go model

1572903207
mbarkhau
leeward: I'm not sure that generator is it. At least I don't recognize things I would expect like some kind of template

1572903309
leeward
Well, when I run `zig build doc` it builds an executable called `docgen` with doc/docgen.zig.

1572903367
mbarkhau
leeward: I think it that generates this page

1572903391
leeward
huh

1572903399
andrewrk
mbarkhau, this is the `-femit-docs` feature

1572903841
mbarkhau
found what I was looking for by grep for "Apple Color Emoji"

1572903847
mbarkhau
:-)

1572904497
mbarkhau


1572904865
leeward
andrewrk: These tests (async_fn.zig) seem to be written assuming single-threaded execution. Is that true for all of them?

1572905448
andrewrk
leeward, yes

1572906095
leeward
"error: test functions cannot be async" - If a function that calls an async function is async, how do those tests work?

1572906251
andrewrk
leeward,

1572906293
andrewrk
I think we're going to need a flag to pass to zig test, since it's meaningful to test in both modes

1572907008
mq32
hey

1572909936
mq32
andrewrk: writing kernel code with zig is awesome!

1572909944
andrewrk
:D

1572909944
mq32
KERNEL PANIC: index out of bounds

1572909953
andrewrk
bonus points if you can get a traceback with that

1572909954
mq32
debug/safe is just so great

1572909960
mq32
heh, yet to come

1572909964
andrewrk


1572910112
mq32
gonna do this tomorrow :)

1572910161
mq32
i think i messed up the stack

1572910597
plumm
andrewrk: is there a way to represent a variable as a type only known as runtime within a struct?

1572910706
nrdmn
plumm: sounds like tagged unions to me

1572910832
data-man
Good day, Zig community!

1572910884
plumm
plumm im writing a zig version of the rust structopt library. id like to handle invalid types while parsing cli given the structs type, and i want to catch overflow; im not sure how to store the actual value of what the type denotes it to be

1572910889
plumm
nrdmn: *

1572910911
andrewrk
good day, data-man

1572911308
data-man
andrewrk: Is there a reason why integer size is limited to 65535 bits?

1572911322
scientes
data-man, LLVM

1572911332
scientes
talk to them if you want to change it

1572911335
andrewrk
one answer is that LLVM has this limitation. But LLVM is only one possible backend for zig

1572911347
scientes
also, you can't do much with integers that big

1572911350
andrewrk
so, a good question will be what to set this limit to in the language specification

1572911361
scientes
as llvm doesn't have a bigint implementation

1572911390
scientes
so really anything bigger than u128/i128 doesn't really work

1572911485
andrewrk
I'd like to make this work though. in theory compiler_rt could gain bigint versions of functions and then any size can work

1572911509
companion_cube
what do you even do with such big integers ‽‽

1572911520
andrewrk
crypto is one use case

1572911520
companion_cube
I mean, it'd be weird not to use actual bigints

1572911528
scientes
andrewrk, why not use libgmp?

1572911542
companion_cube
you don't do crypto with more than 65k bits, do you? :D

1572911544
scientes
or whatever

1572911568
scientes
companion_cube, its 64ki bits BTW

1572911598
scientes
2^16

1572911605
data-man
Oh, I increased limit to 262143 bits, works fine.

1572911625
scientes
data-man, except what operations can you do?

1572911630
scientes
does even addition and subtraction work?

1572911635
companion_cube
at this point it has to be heap allocated integers, better reuse GMP

1572911745
scientes
and what endianness does it use?

1572911755
data-man
scientes yes, works. I want make PR (or proposal) for this, but first wanted to know an opinion.

1572911783
scientes
multiplication wont work

1572911887
data-man
Thanks, I'll test more :)

