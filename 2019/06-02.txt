1559437218
andrewrk
Xe: that example with json parsing sounds a lot like erlang

1559437236
Xe
i'm going to have to look more into erlang

1559437281
andrewrk
I saw your blog article on lobsters this morning! Fun stuff. Also liked the templeos one

1559437331
Xe
:D

1559437342
Xe
i like how easy it is to reason about memory in zig

1559437347
Xe
i don't have to fight anything

1559437567
Xe
andrewrk: thanks again for your work on zig, so much

1559437572
Xe
it's making programming fun

1559437854
andrewrk
Xe: glad to hear it. I agree with you, I just wish it was at 1.0 already

1559437867
Xe
you and me both

1559437877
andrewrk
Making a programming language is a means to an end for me... Not the end in and of itself

1559472587
daurnimator
Is there a 'sliceCast' around

1559472646
daurnimator
This isn't pretty.... @ptrCast([*]myType, x.ptr)[0..x.len*@sizeOf(x[0])/@sizeOf(myType))

1559474607
nrdmn
are there any linux kernel modules in zig yet?

1559477749
daurnimator
nrdmn: nope. though that's something I've been wanting to see

1559477924
nrdmn
daurnimator: now there is one:

1559478034
daurnimator
nrdmn: I'm curious if you can rewrite some of the macros (e.g. module_init/module_exit/MODULE_LICENSE) in zig

1559478120
nrdmn
I'm sure that would be possible, but it'd break if the kernel devs decide to change the module api

1559478207
nrdmn
I'm not quite happy yet with how I included printk. It happens to be compiled into stub.o (pulled in by linux/module.h).

1559478221
nrdmn
And I wouldn't want to extend stub.c for any kernel function that I use

1559478475
daurnimator
nrdmn: can you not just: @cImport("include/linux/printk.h");

1559479371
nrdmn
daurnimator: this is what I wrote: const kernel = @cImport(@cInclude("linux/printk.h"));

1559479377
nrdmn
this is what I'm getting:

1559479549
daurnimator
nrdmn: don't you need to add `-isystem /lib/modules/$(uname -r)/build/include` to your zig invocation?

1559479896
nrdmn
hmm, still getting the same error messages as before. The kernel's makefile does quite a bit of other stuff and I'm not sure replicating all of this in zig is the right way

1559479949
daurnimator
nrdmn: can you see what -D arguments the makefile passes?

1559479962
daurnimator
you could then add them with @cDefine

1559480035
daurnimator
(use V=1 with the kernel makefile)

1559480148
nrdmn
there must be some way that doesn't circumvent the kernel's build system, no?

1559480257
daurnimator
maybe can look at how kernel modules written in rust or fortran are done? I think there might be one or two around?

1559480318
nrdmn
I've been looking at this one:

1559480518
andrewrk
My marathon race starts in 14 minutes

1559480670
nrdmn
andrewrk: good luck!

1559480705
scientes
wow, 26.2 miles andrewrk ?

1559480722
scientes
oh hes already offf...

1559480861
daurnimator
nrdmn: well now I'm just finding zig bugs :)

1559480875
daurnimator
nrdmn: e.g. cimport.zig:335:27: error: invalid digit: '"'       pub const KERN_SOH = c"\x1";

1559480890
daurnimator
==> zig's @cImport is generating invalid zig internally

1559481009
andrewrk
I posted a pic on Twitter. Spot the Easter egg

1559481274
nrdmn
spotted :D

1559481975
Xe
you know what you doing

1559482081
daurnimator
nrdmn:

1559482437
nrdmn
daurnimator: is it really that simple?

1559482923
daurnimator
nrdmn: maybe.... trying to iron out the kinks...

1559484171
daurnimator
okay another zig bug I think.... if you try and export the result of a comptime function call it gets replaced with zeros

1559484493
daurnimator


1559484580
nrdmn
daurnimator: this doesn't happen with [n]u8

1559484722
daurnimator
nrdmn: oh right... is it trying to export the slice?

1559484733
daurnimator
instead of the contents

1559484936
nrdmn
seems so

1559485042
daurnimator
nrdmn: yep that was it. fix incoming

1559485210
nrdmn
how would you export a slice if you actually wanted to? Append [0..] to the function call?

1559485344
daurnimator
nrdmn: I think slices don't have a defined memory layout; it should be a compile error to export one.

1559485354
daurnimator
nrdmn: gist updated

1559485388
nrdmn
oh, I got zig to segfault :D

1559485566
nrdmn


1559485765
nrdmn
daurnimator: can you reproduce that?

1559485841
daurnimator
nrdmn: btw also just filed

1559485988
daurnimator
nrdmn: nope. I get this error with your sample:

1559486364
nrdmn
now after I've changed some of my include paths I'm getting cimport.zig:341:27: error: invalid digit: '"'

1559488448
daurnimator
nrdmn:

1559488566
nrdmn
daurnimator: what did you change?

1559488610
daurnimator
nrdmn: well I commened out the actual printk calls pending issue 2611

1559488622
daurnimator
nrdmn: but otherwise I realised the vermagic is taken care of by the kernel build system

1559489888
nrdmn
daurnimator: why did you name the constant at the bottom _1?

1559489923
daurnimator
nrdmn: see

1559491003
nrdmn
daurnimator:

1559491041
daurnimator
nrdmn: simple fix :)

1559491079
daurnimator
nrdmn: get much further with that fix?

1559491109
nrdmn
I haven't tried yet, wait a sec

1559491282
nrdmn
hmm, I'm getting a different error message for #2611. What version of zig are you using?

1559491327
daurnimator
nrdmn: pretty much master

1559491340
daurnimator
nrdmn: I applied your fix and am now getting an assertion elsewhere

1559491539
nrdmn


1559491540
daurnimator


1559491565
nrdmn
without it, I get `invalid digit: '"'`

1559491599
daurnimator
nrdmn: oh I think your fix is correct. just now it gets further into compiling printk.h and fails more spectacularly

1559491629
nrdmn
what did you change?

1559491708
daurnimator
nrdmn: in my gist I uncommented the defines of

1559492167
nrdmn
now I'm getting an assertion too, but no stack trace :(

1559493062
daurnimator
nrdmn: the stack trace may take a while to appear

1559493961
nrdmn
daurnimator: have you been able to reproduce my observation in

1559499706
fengb


1559499725
fengb
Oops... reading logs for yesterday

1559499736
fengb
^ total non-sequitor today :P

1559500508
Akuli
how do i tell zig 0.4.0 to put the compiled executable to a sane location? i'm using build.zig, and it keeps hiding the executable to zig-cache/o/qHOQFrFreaVliU2TIscbHp3BtJO8fee1IdR1b84dJsN1_1ayT-zpIlj7fziI3hVf/nameofexecutable or something

1559501422
Akuli
i wasn't able to do that, but i was able to make it run my program with an argument

1559501447
Akuli
then:   $ zig build run -Dfile=some/path/to/file

1559501760
emekankurumeh[m]
i usually do "builder.setInstallPrefix(".");" and run `zig build install` when you will put the executable in bin in your cwd

1559501783
Akuli
nice

1559502705
gamester
Akuli: exe.setOutputDir("...")

1559502805
gamester
const exe = builder.addExecutable("name", "main.zig"); exe.setOutputDir("dir")

1559515779
tgschultz
man, really need @unionInit() right now

1559518790
mrkishi
hey, folks. just experimenting with zig and really enjoying it so far. I hope you don't mind some newbie questions coming your way :P

