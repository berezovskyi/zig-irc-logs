1558658166
daurnimator
nrdmn: copy into what?

1558658184
daurnimator
nrdmn: b.* = a.*; // if you have e.g. two pointers

1558663403
merlyndmg
is there a way to convert from [*c]u8 to []u8? I know the length

1558663678
daurnimator
merlyndmg: slice it

1558663690
daurnimator
merlyndmg: i.e. [0..knownlen]

1558663732
merlyndmg
thx!

1558667175
andrewrk
tgschultz, I wsa thinking along similar lines

1558667246
tgschultz
it's nice to know I'm not just off in the woods somewhere, that happens too often.

1558667457
daurnimator
andrewrk: have you signed up for

1558667474
daurnimator
andrewrk: also, what are you working on? :)

1558669592
andrewrk
daurnimator, yes I'm on the wait list. I'm working on

1558669609
andrewrk
I'm about to break a lot of stuff, want to make sure I do it right

1558670823
daurnimator
andrewrk: I think you might be making a few mistakes with the current draft PR

1558670925
andrewrk
daurnimator, let me push my changes from today and you can provide some review comments

1558670950
daurnimator
e.g. IMO, "os/linux/posix" doesn't make sense. -> there should be os/linux/* that contains direct bindings to linux things. And then there should be os/posix/linux.zig, which would implement posix (and yes

1558670977
andrewrk
sounds like your disagreement is only with the naming convention?

1558671036
daurnimator
andrewrk: I don't think so. e.g. why is `pub const SYS_read = 0;` under os/linux/posix? SYS_read doesn't have anything to do with posix

1558671044
merlyndmg
I don't know if it's desired, but I've created a pull request to switch from libpng+zlib to stb_image for the tetris demo. It made it easier to get it working on windows, and simplified the loading code a tiny bit:

1558671123
andrewrk
merlyndmg, nice, that's a good improvement!

1558671145
andrewrk
daurnimator, on linux SYS_read is in the same namespace as all the posix libc stuff

1558671159
andrewrk
it's the same abstraction layer, just linux specific

1558671184
daurnimator
andrewrk: but that's linux libc convention. which is something I don't even think we should have!

1558671245
daurnimator
IMO there are 3 layers of interest: 'low level' (actual syscall ABI), 'posix' (POSIX defined portable bits), 'zig specific' (high level wrappers like std/fs that take advantage of whatever is best for the platform)

1558671309
andrewrk
daurnimator, I pushed my changes from today - feel free to make specific suggestions about how to rename/move stuff

1558671364
andrewrk
I agree that those are the layers

1558671411
andrewrk
with my recent changes SYS_read can move to be private to the syscall wrappers file

1558671475
daurnimator
andrewrk: why private?

1558671509
daurnimator
andrewrk: also, what would you think of defining e.g. syscalls as an enum?

1558671611
daurnimator
andrewrk: hrm. reviewing the PR... it's really hard to figure out where to put design comments. github wants me to associate with specific lines.

1558671860
andrewrk
just add general comments to the PR

1558671907
andrewrk
syscalls as an enum is more complicated because the syscalls that are available are arch-dependent

1558671934
andrewrk
why private? I'm saying that it can be as you suggested, where they're not in std.os.posix

1558671988
andrewrk
try to be specific with your review - this change is necessary and happening. it solves a bunch of things that weren't solved before. but if there are specific improvements to be made I'm happy to do them

1558672915
daurnimator
andrewrk: comment left. (I also feel like this is something that might be easier discussed with voice/audio)

1558673978
daurnimator
comment updated with better formatting and an extra dot point or two

1558675005
merlyndmg
Was about to look into getting rid of the console when building on windows and found an unmerged pull request from two weeks ago. I'm guessing that's not done yet :)

1558675057
merlyndmg
getting more and more curious how these linux->windows cross compiles are working out perfectly. some magic there!

1558675995
fengb
It's actually so seamless that I get confused when it's not available in other langauges

1558676815
merlyndmg
hmmm trying to figure out if there's a way to just send arbitrary linker commands from the build script

1558676854
merlyndmg
found some addBuildOption thing, but not sure quite how it works yet

1558677708
merlyndmg
hmm, looks like it might be a convention to add variables to some standard compile-time config file, not necessarily something that actually affects the build behavior itself

1558678847
emekankurumeh[m]
what do you mean get rid of console on windows?

1558678922
emekankurumeh[m]
if you want to disable the console for graphical applications just pass --subsytem windows to zig when building

1558678935
merlyndmg
I'm building the tetris example myself on windows, and seeing what I can do to document or improve that process. The version I am compiling right now is popping up the window, like it should, but is also popping up a console window as well. The "official" windows binary off the readme doesn't do that. I think it's cross-compiled from linux

1558678985
merlyndmg
"just pass this when building" so far I've been using the build.zig script. I haven't figured out a way to pass arbitrary flags to the build command, only specific ones that have been crafted in the build system to pass through. If there's a magic passthrough or a way to get my build command line that would help a lot :)

1558679012
merlyndmg
(the build command line that corresponds to what the build script is doing)

1558679213
merlyndmg
but yeah, I found the --subsystem windows flag, and I figured out a way that I

1558679495
daurnimator
merlyndmg: "giving up"?

1558679502
daurnimator
merlyndmg: are you looking for --verbose-cc?

1558679546
emekankurumeh[m]
no, a way to pass raw args to the zig build process

1558679571
emekankurumeh[m]
through a build script

1558679684
merlyndmg
--verbose-cc only works for C targets. I have zig targets as well. Looking for the equivalent "zig.exe build-exe" command line

1558679713
merlyndmg
I added an error to one of my source files and it spit it out. Would be nice if I could find a command line option that did it on purpose

1558679811
merlyndmg
--verbose-link is helping me debug the subsystem thing a tiny bit, but it's definitely passing /SUBSYSTEM:console even though I specified --subsystem windows on the zig build-exe command line

1558679926
merlyndmg
starting to think I should be running zig.exe in a debugger :)

1558682973
merlyndmg
hrm, not sure if this should be a bug report without running the compiler in a debugger. But it seems like the codegen tries to auto-detect the subsystem whenever any key named functions get exported, and wipes out whatever your subsystem selection is. But that doesn't work so hot, because it also seems that you can't actually provide any function name besides "main" or bootstrap.zig dies

1558683000
merlyndmg
so can't just switch to using WinMain for example

1558683043
merlyndmg
I will try to see if I can compile the compiler and make sure I'm actually hitting those breakpoint before I submit it though

1558683215
daurnimator
merlyndmg: hrm? you should be able to use WinMain

1558683289
daurnimator
merlyndmg:

1558683592
merlyndmg
If I just rename the entry point to WinMain, I get an error here while building:

1558683593
merlyndmg


1558683607
merlyndmg
C:\Users\fjkdlafjkdlaf\development\zig-windows-x86_64-0.4.0+b660134a\lib\zig\std\special\bootstrap.zig:107:33: error: root source file has no member called 'main'

1558683798
merlyndmg
there's a chance this behavior changed since 4.0. I accidentally clobbered my master build and replaced it with the 4.0 build. Let me reacquire the master build and see if that helps...

1558683837
merlyndmg
(hence why line 107 vs line 113)

1558683856
merlyndmg
nope, same error on line 113 now

1558683979
daurnimator
maybe line 14 needs to gain a WinMain case?

1558684012
daurnimator
uh, 17

1558684032
merlyndmg
I think WinMainCRTStartup is the shim that's normally added that calls winmain. However in this case it's calling `callMain` which is still trying to call standard main

1558684072
merlyndmg
line 51 (last line of WinMainCRTStartup) I think should be calling WinMain instead?

1558684087
merlyndmg
been a while since I've done win32 junk, so going off old memories

1558684639
merlyndmg
Yeah that article seems to match exactly what I saw when going through the source code over the last few minutes

1558684678
merlyndmg
the "security cookie", setting up for SEH, grabbing some handles, setting up QueryPerformanceCounter, etc

1558684696
merlyndmg
Since a lot of that is for C++, can probably do a simpler version of a lot of it

1558684752
merlyndmg
or a possibly better idea (maybe it breaks some compatibility use cases?) is to let the user manually specify the stuff and only auto-detect stuff as a fallback. I'd rather not have a WinMain in a cross-platform compatible program

1558684771
merlyndmg
If it's indeed clobbering my options, I'd rather it didn't do that :)

1558684904
merlyndmg
oh. "the source code" I meant above was the CRT source code that comes installed w/ visual studio, not the zig source code

1558685224
merlyndmg
"both C and C++ will initialze the so-called security cookie

1558685225
merlyndmg
used as part of

1558685225
merlyndmg
stack buffer overrun detection." - sounds like this might be an important thing to do on windows

1558685256
merlyndmg
(also from that raymond chen article you linked)

1558685477
merlyndmg
A fairly related article on people trying to hack around this and the caveats. They're using C++ though:

1558685543
merlyndmg
Seems that putting large values on the stack blows up, seemingly related to that "security cookie" thing. Not sure if zig has to worry about that or not, if linking to pre-compiled code for example.

1558685579
merlyndmg
anyhow, this is all a tangent for me. I just care about the subsystem right now :) and I should worry about that tomorrow instead, cause it's late

1558685679
merlyndmg
oh, also could be that global C++ constructors won't get called unless the right startup code is invoked, too. If that C++ code is extern "C", could be linked by zig, too.

1558686315
rbscott
Hello, I recently submitted a PR(

1558686656
daurnimator
rbscott: sending a PR is all you have to do.

1558686694
daurnimator
rbscott: misc things I notice: 1. trailing whitespace in your files. 2. WIP commits. -> I'd rebase those away.

1558686892
rbscott
Sounds good, I will sort out those items. Is there a recommended linter by any chance?

1558686926
daurnimator
rbscott: run through `zig fmt` :)

1558687008
daurnimator
rbscott: for the C++ code I'm not so sure

1558687264
rbscott
daurnimator: Wil do, thanks!

1558699020
tgschultz
unionInit would clean up a hack I had to do in Deserializer. I'll have to keep an eye out for the merge so I change that right away.

1558706040
emekankurumeh[m]
daurnimator: that would depend on

1558718914
nilshi
Hello. I'm starting with the zig tutorial right now.

1558718931
nilshi
Is anyone using the editor Geany and has recommendation for a color scheme etcß

1558718933
nilshi
?

1558718957
andrewrk
hi nilshi

1558718964
andrewrk
I believe the 2 popular editors for zig are vscode and vim

1558719056
tgschultz
someone was on here a few days ago with a Geany build with zig support weren't they?

1558719116
nilshi
I put zig run %file as build and I'm using C color scheme at the moment. This is quite fine for most of the way. I was just wondering if anyone is active in that direction

1558719125
nilshi
as tgschultz says, it seems so

1558719949
merlyndmg


1558720034
nilshi
very good, exactly what I need

1558720036
nilshi
thanks

1558720046
merlyndmg
can remove the filter to see the whole conversation (if "geany" isn't in the particular message)

1558720080
merlyndmg
link to chat log tool is in the channel topic, for future reference

1558720317
nilshi
colors are good and it show me the line with errors. cool

1558720623
tgschultz
colors are fabulous:

1558720724
nilshi
I am waiting for a language that uses colors as syntax. You set the color and that defines the type or meaning :)

1558720755
nilshi
sorry, I am not sure how the offtopic/joke rules are in this channel.

1558720999
andrewrk
nilshi, as long as it's friendly & positive tangential topics are ok

1558721014
andrewrk
the more controversial something is, the more it must be strictly on topic

1558721081
nilshi
affirmative

1558721744
tgschultz
nilshi: see colorForth

1558723330
sadanjon
Hi!

1558723365
andrewrk
hi sadanjon

1558723419
sadanjon
Hi andrew, I'm new to zig, I was following the documentation trying stuff out,

1558723531
sadanjon
and I got to the defer/errdefer stuff, and I was trying to return an error from a tagged scoped ('blk: {}')

1558723564
sadanjon
I never used IRC before, can I paste code here?

1558723605
sadanjon
anyway, I didn't get what I was expecting, it looked like it didn't execute the errdefer blocks/expressions

1558723731
sadanjon
pastebin link to the function I was calling:

1558723793
sadanjon
I was expecting it to print: "xxx 1\nxxx 3\nxxx 2\n" if called with true, but it print "xxx 1\nxxx2"

1558723849
sadanjon
help? :)

1558724020
tgschultz
yeah, on godbolt it confirms that the errdefer isn't even compiled.

1558724105
tgschultz
I don't see an existing issue for it, but it seems like a bug to me.

1558724231
tgschultz
oh interesting... sadanjon, what happens when you call with false?

1558724257
sadanjon
ah same result I think, let me recheck

1558724274
sadanjon
yes

1558724299
sadanjon
*same result

1558724385
tgschultz
ok, yeah, that matches godbolt. for a second there I thought it had compiled the errdefer

1558724951
sadanjon
Hi, tgschultz, I tried another variation here:

1558725005
tgschultz
I'm pretty sure that is a known issue, you'll have to cast it `i32(1);`

1558725093
sadanjon
Ah I see, cool, thanks!

1558725123
sadanjon
Should I try to open an issue on github?

1558725172
andrewrk
I'm pretty sure there's an issue for that already

1558725951
sadanjon
Thanks tgschultz, andrewrk <3

1558727646
nilshi
Any recommendation to get a 2D drawing frame on the screen and an event loop for keypresses?

1558727762
andrewrk
nilshi, SDL2 or GLFW

1558727805
nilshi
via C, right?

1558727818
andrewrk
yes

1558733470
emekankurumeh[m]
nilshi, several people are working on pure zig solutions to that me, included

1558733593
nilshi
that is good to know

1558733628
nilshi
I don't know any of the game oriented toolkits anyway, so I have to learn everything.

1558733645
nilshi
SDL, Raylib or whatever the names for the C libs

1558733681
nrdmn
what's the current state of package management in zig? Is anything about that being worked on?

1558733729
andrewrk
nrdmn, look at the roadmap sections of 0.3.0 and 0.4.0 release notes

1558733843
nrdmn
hmm ok

1558734378
BitPuffin
nilshi: yeah I've started using raylib in zig

1558734379
BitPuffin
It wouldn't be a bad idea to write a competitor in pure zig

1558734739
nilshi
BitPuffin: raylib has been on my list for quite a while. But first I have to look up how to properly call C code from zig.

1558736160
emekankurumeh[m]


1558736278
emekankurumeh[m]


1558736291
emekankurumeh[m]


1558736773
andrewrk
my posix api layer branch is up to  64 files changed, 8744 insertions(+), 10578 deletions(-)

1558736833
emekankurumeh[m]
and

1558736855
emekankurumeh[m]
i don't know what happened but a ton of stuff just broke on windows

1558737040
emekankurumeh[m]
i'm getting a ton of errors like `error: import of file outside package path: 'windows/advapi32.zig'`

1558737069
andrewrk
emekankurumeh[m], if you're using zig test or zig run it has to do with your cwd

1558737113
emekankurumeh[m]
i'm using zig build-exe in the examples directory

1558737207
andrewrk
it worked for me

1558737251
emekankurumeh[m]
it's only when i try to build hello_windows.zig

1558737500
emekankurumeh[m]
here's the full output:

1558737535
emekankurumeh[m]
though this could be me (i'm not on master) but i don't think my changes would have any effect on this

1558739660
marijnfs_
is there a writeup on the package manager somehwere?

1558739725
andrewrk
marijnfs_, no

1558739765
emekankurumeh[m]
i think i found the error

1558739840
emekankurumeh[m]
`use` is broken

1558739876
emekankurumeh[m]
when you `use` a file that `use`s another file zig can't find the second file

1558739956
andrewrk
emekankurumeh[m], can you try applying

1558739968
marijnfs_
is the package manager gonna be in a live coding soon?

1558740038
andrewrk
marijnfs_, getting an early version of the package manager done is a 0.5.0 goal, and if accomplished going to be a major feat

1558741391
marijnfs
sweet

1558741417
marijnfs
is there a reason why zig doesn't configure with llvm-9? I can't build it now

1558741436
andrewrk
I haven't made an llvm9 branch yet

1558741459
andrewrk
llvm trunk is still in breaking changes mode; they haven't branched for 9.0.0 yet

1558741518
marijnfs
yeah the llvm structure changed a lot

1558741616
daurnimator
andrewrk: is there a provisional date for 0.5.0?

1558741648
daurnimator
andrewrk: as much as I would like the package manager in there.... I have a high suspicion that it will take on the order of a year to get one written

1558741651
andrewrk
yeah look at

1558741662
andrewrk
the due by date is a reasonably accurate estimate

1558741684
daurnimator
I'd be happy if the next release just contained fixed coroutines + all the reorg we're doing now

1558741698
andrewrk
daurnimator, will you have a look at the posix api layer thing with my latest pushed commits?

1558741707
andrewrk
I think you will like it much better

1558741709
daurnimator
andrewrk: I saw the 'bits' commit

1558741727
andrewrk
yeah that's what I'm referring to

1558741739
andrewrk
I'm pretty sure this is exactly what you want sans the SYS_ enum thing

1558741748
andrewrk
I'm happy with it too

1558741763
daurnimator
I don't particularly understand the 'bits' layer of indirection

1558741764
andrewrk
now I'm just following the red brick road

1558741771
emekankurumeh[m]
no disrespect, but i agree with daurnimator on this one

1558741779
emekankurumeh[m]
copy elision too of course

1558741786
andrewrk
it's inspired from musl

1558741812
daurnimator
andrewrk: I'd be happy with just std/os/${buildin.os}.zig

1558741829
daurnimator
because... that's really what 'os' should be to me

1558741831
andrewrk
the bits thing is needed to make everything work

1558741849
daurnimator
andrewrk: what will there be in std/os that's

1558741852
andrewrk
emekankurumeh[m], yeah we're all on the same page. those are the first things to do

1558741893
andrewrk
have a look at the comment at the top of std/os.zig as of the latest commit in that branch

1558742080
daurnimator
andrewrk: you mean this comment?

1558742095
daurnimator
andrewrk: see my comment for why I don't think that should exist...

1558742099
andrewrk
yep

1558742154
daurnimator
andrewrk: "Convert "errno"-style error codes into Zig errors." => std/os wouldn't have errno in the first place; 'errno' would be a std/c* concept

1558742178
daurnimator
"cross platform abstracting." => I don't think this belongs in std/os

1558742242
andrewrk
I don't think you're trying to solve the same problem I am

1558742351
daurnimator
andrewrk: could you re-read through

1558742364
andrewrk
daurnimator, if errno is a c concept, where does the code go that turns libc errno into zig errors? is it duplicated N times for darwin, freebsd, netbsd, dragonflybsd, and what about linux when linking libc?

