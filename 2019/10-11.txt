1570757161
andrewrk
thanks to LemonBoy we're actually pretty close to tier 1 support for 32-bit windows

1570757955
marler8997_
if the path in --pkg-begin name path doesn't exist, should zig fail?

1570763560
andrewrk
marler8997_, I think that zig should not try to open a file until it is needed

1570767859
marler8997_
ok fair enough

1570767899
marler8997_
watching the update vid...looking at the docs I though you had added var as a return type :)

1570775409
kenaryn
Hello, please what is the difference(s) between a public function and an extern function? I know other files have both access to it but I do not know the discrepancy there certainly is.

1570775790
kenaryn
Formulated in another way, the extern function is used as an API, but why the public one can not?

1570779880
daurnimator
kenaryn: 'extern' means follows the C ABI.

1570780230
daurnimator
huh. looks like we don't have a section in the manual about functions

1570780241
daurnimator
i.e. what `export` keyword vs `extern` keyword mean

1570780289
daurnimator
oh we do... but only as a block of code.

1570780368
daurnimator
`extern fn internalName() void {}` => this usage of extern doesn't seem to match up with the definition of "The extern specifier is used to declare a function that will be resolved at link time, when linking statically, or at runtime, when linking dynamically."

1570780393
daurnimator
most of the other usages of `extern` are just for a function prototype; whereas the above example has an (empty) body

1570780722
bgiannan
How can i print a string coming from a c api?

1570780779
bgiannan
i did that but it's unsafe: `sdl.SDL_GetError()[0..100]`

1570780786
daurnimator
bgiannan: first turn it into a slice (mem.len)

1570780827
bgiannan
ah thx

1570780870
daurnimator
we should really have a function in the std lib that takes a c string pointer and returns a slice...

1570780979
daurnimator
ah. mem.toSlice

1570781024
daurnimator
bgiannan: mem.toSliceConst(u8, sdl.SDL_GetError())

1570781127
bgiannan
perfect

1570781545
pushqrdx
never in my life have used irc before, used it for zig (albiet still new to it)

1570781628
pushqrdx
why irc as main thing though not discord ðŸ¤”

1570781743
bgiannan
there's a zig discord

1570781794
pushqrdx
ain't official though

1570781816
pushqrdx
nothing against irc, just wondering

1570782024
bgiannan
i don't know what the reasons are but i'm glad it's like this

1570783146
kenaryn
Thank you again daurnimator.

1570785470
mq32
hey

1570785538
mq32
pushqrdx, i'm really happy that zig uses an IRC channel instead of any other option as i can chat even with mobile interner :)

1570785541
mq32
*internet

1570789274
euantor
IRC is open and free, Discord is a closed walled garden

1570791990
tgschultz
^

1570792695
presiden
^

1570794252
Snektron
irc is like the c abi of chat programs

1570794931
gustav_o
I must say, I really enjoy writing code in zig!

1570794949
gustav_o
being able to test functions right next to the implementation is so nice as well

1570794996
mq32
gustav_o, i second that! :)

1570795034
gustav_o
how would I compare if two slices refer to the same memory? do I manually check .ptr and .len or is there a helper function in mem?

1570795056
mq32
huh. i think you have to compare the ptr

1570795061
mq32
but why do you want to do that?

1570795084
gustav_o
for a test, I want to make sure that my function returns newly allocated memory instead of the input slice

1570795299
daurnimator
gustav_o: you want to check if two slices overlap?

1570795344
gustav_o
if they are the same, or rather if they are different, I ended up with expect(slice.ptr != copy.ptr) and expect(slice.len == copy.len)

1570795361
gustav_o
so there is probably not a function for that

1570795678
daurnimator
gustav_o: I'm sure sure if it works... but can you write: `slice != copy`?

1570795692
gustav_o
nope

1570795732
daurnimator
what error is it?

1570795767
gustav_o
error: operator not allowed for type '[]const u8'        testing.expect(str.slice != copy);

1570795812
gustav_o
how would I normally output a newly allocated object using a parameter to a function? Double-pointer as in C?

1570795947
samtebbs
gustav_o: Allocators return a slice so perhaps a pointer to a slice

1570800988
tgschultz
gustav_o, I'm not sure I'm understanding your question. You want to return a newly allocated object, but instead of returning a pointer you want to take a parameter that tells the function where to store the pointer?

1570801032
gustav_o
Yes, I need to return the newly allocated object but the return value is used for a different thing (chaining of multiple function calls)

1570801065
tgschultz
then yes, you have the right idea.

1570801436
gustav_o
ok, thanks

1570801487
tgschultz
though someday there may be something like multiple returns using an ad-hoc struct return type and anonymous struct literals:

1570801517
gustav_o
Cool

1570801530
gustav_o
This is what I managed to achieve now, I really like it:

1570801609
gustav_o
capture() (for the lack of a better word) moves the parser cursor forward and returns true if the constructed parser succeeds. Note that it only allocates memory if the parse succeeds

1570801623
tgschultz
multiple returns doesn't seem like it would be useful for your case anyway.

1570801736
gustav_o
Maybe if the returned struct could contain generic data?

1570801913
tgschultz
You can do: `pub fn(arg: Whatever) struct{data: @typeOf(arg)}{...}`, but you can't do `pub fn(arg: Whatever) struct{data: var}{...}`.

1570802088
gustav_o
ah ok. what about `pub fn (comptime T: Type) struct { data: T, ... } { ... }`?

1570802182
gustav_o
but then the next chained function would need to be able to handle generic structs somehow..

1570802294
tgschultz
Yeah, that works too.

1570802382
tgschultz
you can do `pub fn (input: var, comptime T: Type) struct { data: T, ... } { ... }`

1570802408
tgschultz
assuming that 'input' is the previous link's resulting struct.

1570802481
gustav_o
what is `var` in this case?

1570802629
mq32
gustav_o: "var" is "just anything", so you can pass anything as that parameter and inspect it with @TypeOf and similar functions

1570802651
gustav_o
ah cool

1570802682
gustav_o
mesh.* = ObjMesh{ .name = name.get(allocator) catch |err| return .Failure, };

1570802699
gustav_o
Will that line return before setting the pointer?

1570802857
gustav_o
(realized that |err| could be removed)

1570803714
gustav_o
really cool to be able to work this quickly.. add new function, write some tests, once tests pass -> use function and continue

1570804958
gustav_o
can I create anonymous functions yet in zig?

1570804967
gustav_o
i.e. in a function call

1570804999
mq32
gustav_o, yeah, but it's a bit clobbery:

1570805014
mq32
const Helper = struct { fn myFun() void { â€¦ } }; var fnptr = Helper.myFun;

1570805069
gustav_o
ah okay

1570805386
tgschultz
yeah, you have to wrap it in a struct today, but function definitions as expressions was accepted, so that shouldn't be necessary in the future:

1570805514
tgschultz
You can shorten that example too: `const fnptr = struct { fn myFuin(){...} }.myFun;`

1570805591
gustav_o
functions as expressions is great

1570805608
tgschultz
I use this pattern frequently for what I call "comptime closures".

1570805625
tgschultz
I agree. I'm a fan of that change.

1570805738
gustav_o
tgschultz so that is similar to List(T) ?

1570805863
gustav_o
*ArrayList(T)

1570806659
tgschultz
kinda? it creates a set of interpolation functions, in the specified float precision.

1570806712
tgschultz
as well as the set of functions for creating your own derivative interpolation s

1570806732
tgschultz


1570806838
tgschultz
It was part of a larger tween-based animation library that I haven't worked on in a while

1570807068
gustav_o
pretty cool

1570807218
gustav_o
what did you use it for? :)

1570807387
gustav_o
In other news, my .obj file loader is progressing now that I worked out my issues. Thanks for the help!

1570807875
samtebbs
Did the documentation generation flag come with a corresponding function for a build.zig file?

1570808066
andrewrk
samtebbs,

1570808324
samtebbs
andrewrk: Thanks. Would a setGenerateDocs() function which sets a generate_docs field in LibExeObjStep suffice?

1570808346
dimenus
scientes: are you still working on the simd pr? or do you mind if i take a crack at some of those commits

1570808364
scientes
I am still working at it, but what are you talking about?

1570808377
scientes
or do you mean adding more commits?

1570808401
dimenus
not adding more, just splitting it up to make it more easily mergable?

1570808417
scientes
no, that isn't a problem, they depend on each other

1570808424
scientes
its handing on me fixing some bugs

1570808431
dimenus
ok

1570808456
scientes
i have motivation, because it is lots of work to keep it rebased

1570810378
gustav_o
Is there a way to import a zig file from a folder that is outside of the current path? ie. `const Vec3 = @import("../math/vec.zig").Vec3;`

1570810483
samtebbs
gustav_o: That will work as long as ".." isn't outside of where you're running the command

1570810494
gustav_o
Ahhh

1570810574
gustav_o
So I need to have a file that imports all tests from subfolders and references them in order to run tests that depend on `Vec3`?

1570810585
gustav_o
*in this file

1570810598
gustav_o
`zig test src\content\obj_parser.zig` doesn't work

1570811032
samtebbs
gustav_o: What happens when you try to run that test command above?

1570811055
gustav_o
samtebbs: error: import of file outside package path: '../math/vec.zig'

1570811089
mikdusan
try `--main-pkg-path dir` where dir is a parent dir to all the sources

1570811111
gustav_o
I resorted to a comptime block importing all files with tests at the root path and then running `zig test main.zig` instead

1570811117
gustav_o
ok I'll try

1570811135
gustav_o
yep that worked as well!

1570811829
samtebbs
gustav_o: Nice :)

1570813072
samtebbs
Hi bgiannan and daurnimator :)

1570813079
samtebbs
o/

1570813087
daurnimator
"heh" > bgiannan

1570813226
gustav_o
hi!

1570813258
gustav_o
hm, I seem to be able to access `ArrayList.items` even though it's not pub?

1570813282
gustav_o
hm, I seem to be able to access `ArrayList.items` even though it's not pub?

1570813289
gustav_o
wops

1570814440
tgschultz
gustav_o there is no pub/private on struct fields

1570814489
tgschultz
it's syntactically valid to say `struct{ pub x: i32, }`, it just doesn't mean anything

1570814777
gustav_o
aha..

1570815145
tgschultz
I think it is still an open question whether or not private struct fields are a good idea.

1570815440
gustav_o
yea I just assumed it was possible but now that I think about it, it's not clear what's best

1570815872
mq32
tgschultz, i think its good how zig does it at the moment

1570815878
mq32
module-private/public structs

1570815906
mq32
this may hide some implementation details from the public API and removes the privat field from the API

1570819398
donpdonp
i worked on the beginings of a language parser for my zig app. used ragel to compile ragel-lang to .c, then zig took care of everything else. great C interop is so nice.

1570821699
husho
is it possible to open and read files during comptime?

1570822228
mq32
husho, kinda. look at @embedFile()

1570822466
husho
yeah, but what if I want to call system calls

1570824445
Foxfir3
arm7 support? will I run into any issues? rpi4

1570824478
Foxfir3
and hello :)

1570824646
FireFox317
Hey Foxfir3, I'm FireFox317 :)

1570824777
nrdmn
is there an easy way to clone a struct with one attribute changed?

1570824786
FireFox317
Yes we support arm7, see the support table:

1570824855
THFKA4
there are issues, i ran into

1570824904
THFKA4
here's the main arm7 support bug

1570825034
THFKA4
although i think RPi 4 is aarch64..

1570825184
Foxfir3
ls

1570825244
Foxfir3
FireFox317: we sure know how to come up with nicks :D

1570825273
FireFox317
andrewrk: How would I use -dump-analysis to implement some basic IDE support for Zig? I mean if I just have a simple hello_world.zig program without any tests in it, `zig test -fdump-analaysis` won't return anything

1570825319
Foxfir3
THFKA4: thank for the links. I just received the Pi4. for a school project. writing a tut, and wanted to include som new lanuguages. Zig seems to be worth mentioning.

1570825320
tgschultz
nrdmn: no, not really.

1570825402
Foxfir3
THFKA4: that the weird thing about Pi3/4. seems like the hardware is 64bit. Need to dig a bit deeper though.

1570825552
Foxfir3
FireFox317: Will give It a go then :) impressive how far Zig seems to have come in such a short time. Thats a good sign.

1570825553
FireFox317
Foxfir3, are you gonna run linux on them, or just freestanding?

1570825894
Foxfir3
FireFox317: well.. wasted a week on Raspian *sigh*, then switched to Arch. Have'nt decided on embedding yet, but seems logical to get a Pi0 for that part. Will demononstrate some Elixir and some simple Arm assemply, but want to include some exmaples from the new kids on the block. Spend some time on Julia (slooowest JIT in the world), V is a joke. Pony did'nt compile. Dart is missing part of the compiler.

1570825900
Foxfir3
Crystal has to be crosscompiled. oh God! so.. Rust and Zig seems to make It into my list.

1570826020
Foxfir3
FireFox317: did anyone map the pins yet?

1570826401
FireFox317
Don't think so, but I know there is one project that has some really cool stuff running bare metal on a raspberry pi.

1570826470
fengb
Is Raspian poor? I haven't tinkered with my Pi much

1570826586
FireFox317
But if you just want to turn on some gpio's or something, it should be possible to cross compile for arm32/64 linux and do some mmap magic to turn on some gpio's

1570826701
Foxfir3
FireFox317: nice. found his asm bits. thanks for the link.

1570826750
Foxfir3
fengb: my honest opinion. Raspian is a hack. but from a business perspective, Its a nice one. For a Linux user, not so nice.

1570826804
fengb
Is arch pretty stable?

1570827048
Foxfir3
fengb: It is. but if you run / and home on SSD, updates can get a bit scary. my experience so far is that the answer is ot simple. Arch Arm is mature now (and very friendly community), while Raspian is more shake'n bake, and will bite you down the road.

1570827332
Foxfir3
FireFox317: im guessing the best examply would be to compile on the Pi, and demonstrate the use of addresses. I should do that with C, but It seems pointless to repeat what thounsands have already demonstrated.

1570827351
fengb
Hrm I might try it out then

1570827684
Foxfir3
thanks for the warm welcome guys :)

1570828249
FireFox317
Foxfir3: Be aware that Zig is not stable yet :) You might come across some bugs, but most stuff "just works"

1570831118
andrewrk
FireFox317, this is where multibuilds (#3028) comes in. You would take advantage of this tool I'm writing to merge dumps

1570831145
andrewrk
start with one generated for std with all the tests enabled. then you can produce dumps of your in-progress hello world app and merge them with the std lib one

1570831201
andrewrk
if something is referenced from nowhere across all sets of all builds, that should probably be an unused thing error, although the compiler isn't able to catch this

1570831269
andrewrk
it's a bit of overhead for such a simple use case - but the point is that it's a solution robust enough to handle conditional compilation. nothing else that I'm aware of can handle this case

1570833037
Foxfir3
andrewrk: would that be during runtime or compiletime?

1570833162
andrewrk
Foxfir3, this would be a third party community project

1570833456
Foxfir3
andrewrk: okay. 'the compiler isn't able to catch this

1570833497
Foxfir3
so that has to be a manual check? the 'dumping', is that 'hot loading'?

1570833545
andrewrk
Foxfir3, this is part of a discussion of a brand new feature which is enabling std lib documentation

1570833614
andrewrk
the feature is that the stage1 c++ compiler can be passed -fdump-analysis to write a json file with results of semantic analysis

1570833634
andrewrk
further, -femit-docs will use this to generate html/js documentation

1570833676
Foxfir3
andrewrk: sort of like SassDocs. Thats really neat.

1570833704
Foxfir3
by 'semantic', you mean what?

1570833956
Foxfir3
the end result will be semantic. okay.

1570833989
andrewrk
"semantic analysis" is the part where a compiler figures out the types and other things and possibly emits compile errors

1570834007
THFKA4
the logical conclusion of this is compiler-as-a-server, right?

1570834032
THFKA4
where an IDE can use an API to get analysis on the fly instead of rerunning the full compilation

1570834054
THFKA4
as a service*

1570834133
Foxfir3
andrewrk: that is a nice project

1570834441
andrewrk
THFKA4, yes

1570834446
andrewrk
that's the plan for self-hosted

1570834467
THFKA4
sweet

1570834475
andrewrk
but I compromised and spent a week on making stage1 dump semantic analysis, because everybody wants std lib docs

1570835732
scientes
what about offset-slices, so that memory compaction is possible?

1570835740
scientes
it seems some data structures would like that

1570835760
scientes
hmm, it would be much more complicated

1570835808
scientes
so you would basically have to have heap pools, and then have your data structure linked to that heap pool and manage compaction itsself

1570837661
Snektron
Suppose one wants to write some Zig Vulkan bindings (to utilize features such as default struct values and enum literals), what would be the best way to translate enum values starting with a digit?

1570837680
Snektron
for example, there is VkImageType which has constant VK_IMAGE_TYPE_3D

1570837699
Snektron
(i think writing .discrete_gpu is nicer than VK_PHYSICAL_DEBICE_TYPE_DISCRETE_GPU)

1570837748
mq32
Snektron, +1 for .discrete_gpu

1570837773
mq32
i'm working on a thin opengl abstraction layer and i'm using tagged enums for this

1570837787
mq32
enum(GLenum) { texture2D = GL_TEXTURE_2D, â€¦ }

1570837788
Snektron
Other projects either keep the full enum constants and type names everywhere, though in my opinion its kind of weird to write vk.VkThing and i find code nicer when theres less screaming snake case values

1570837835
Snektron
or they rewrite it to some identifier such that theres no digit at the start, eg 3d, e3D or image_3d

1570837905
Snektron
mq32: ah, so you just include the name of the enum type in the constant?

1570837992
mq32
nah, it's just that the TextureTarget is "texture2D"

1570838026
mq32
i don't like to abbreviate it further because it looses semantics

1570838027
Snektron
i suppose i should just pick one of the renaming ones, its always problems like these i tend to get stuck on

1570838062
mq32
hey, naming IS important :)

1570838069
Snektron
its true

1570838093
mq32
i'm struggling that "type" is a global identifier in zig i can't use for anything

1570838117
Snektron
the rust guys solved that by naming everything "ty"

1570838178
mq32
one solution would be to put "type" into builtin package: "builtin.Type"

1570838201
Snektron
const Type = type;

1570838241
mq32
other way round :D

1570838249
mq32
const type = @import("builtin").Type;

1570838278
Snektron
oh wow, i didn't expect that to work

1570838308
mq32
it doesn't work yet, but that would be my proposal

1570838322
mq32
it's also good that "use" is beeing removed as a keyword in 0.6

1570838325
Snektron
no i mean const Type = type;

1570838343
mq32
ah

1570838345
mq32
why not? :D

1570838351
mq32
"type" is just a type like any other

1570838389
Snektron
idk really, it seems logical

