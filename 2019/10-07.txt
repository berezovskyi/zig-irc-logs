1570408649
telemach
is there any way to get struct's declaration similar to @field?

1570408784
telemach
oh, it seems to work for declarations

1570408805
telemach
@fields I mean; however, now I run into  expected type 'fn(*comparable.Comparable, *comparable.Comparable) comparable.Comparison', found '(bound fn(*const comparable.Comparable, *const comparable.Comparable) comparable.Comparison)

1570408842
telemach
in the place where explicitly passing declaration doesn't cause type error

1570408994
telemach
ah, got it, I need to use @typeOf for my var first

1570428113
kurufu
Does cImport do anything special to get linkages working? I fixed up a translate-c and used that as a normal @import but any calls to c functions end up segfaulting at 0x0 so i assume they just never got linked correctly.

1570428205
kurufu
(my fixup was only removing some offending enum members)

1570429917
mq32
kurufu: manually using the result of translate-c should work

1570444264
kenaryn
Hello, I want to install zig-mode plugin for Emacs editor. I added the stable MELPA repository into .emacs file, then I updated the package list with `M-x package-refresh-contents` and type the following in order to retrieve the zig plugin: `M-x package-install RET` (i.d. ENTER key pressed) and zig-mode RET.

1570444341
kenaryn
Unfortunatly, the package is not found so I tried manually by browsing the repository with `M-x list-packages` RET but there is no "zig-mode" in the repository.

1570444423
kenaryn
I am using Debian stable 10.1 and Emacs 26.1 and I want to add that I followed the instructions noticed here:

1570446554
daurnimator
kenaryn: sorry; I don't think many of the people here are emacs users...

1570447493
n_1-c_k
kenaryn, I seem to have a working zig-mode.  I think I downloaded it directly from

1570447855
n_1-c_k
How to get past this

1570449545
daurnimator
n_1-c_k: which os?

1570449567
n_1-c_k
daurnimator, debian unstable.

1570449781
kenaryn
Thanks for trying to help me. I downloaded zig-mode.el and moved it to "~/.emacs.d/" (nothing happened), then I moved it to "~/.emacs.d/elpa/" but it did nothing. Do you remember whether you ran a command before re-opening Emacs?

1570450049
n_1-c_k
kenaryn, ah yes there is another bit, minute...

1570450064
kenaryn
:)

1570450144
kenaryn
daurnimator, since you declare being a electrical engineer, you opinion matter to me, which editor do you use to develop any software?

1570450182
n_1-c_k
kenaryn, I run this at startup,

1570450276
kenaryn
So it is the same code than the 'git clone' alternative, thank you n_1-c_k, I will try it immediatly.

1570450306
daurnimator
kenaryn: I use sublime text. I got in the habit of using sublime's multiple cursros and now can't live without its exact semantics

1570450347
daurnimator
I don't necessarily recommend it for others; I'm only on it due to muscle memory/inertia at this point

1570450366
kenaryn
Allright, I am using sublime-text too but I installed emacs this morning :) It's entry barrier is unbelievable.

1570450393
kenaryn
Agreed, it is user-friendly once the keyboard shortcuts are memorized.

1570450416
daurnimator
people often find it hard to believe that I don't use/like vim

1570450441
bgiannan
kenaryn, doom-emacs is a pretty good emacs distrib if you're looking for an easiy way to install packages and still have a sane configuration

1570450457
bgiannan
easy*

1570450458
kenaryn
It is not hard to believe but you using vim was indeed my assumption :)

1570450523
mq32
just to comment the editor topic: I use Visual Studio Code for Zig because of ceymards autocompletion package :)

1570450533
mq32
it's quite handy to have at least basic autocompletion working

1570450769
kenaryn
Ahah thanks for sharing mq32 and bgiannan, but I'm determined to learn Emacs(GUI) and use it for the next decade. Its embedded terminal emulator seems very useful to do REPL without resorting to another tool and thereforce decrease the distraction and cognitive load (once well understood of course).

1570451017
daurnimator
why embed a terminal in your editor? your editor can already be in a terminal....

1570451027
daurnimator
alternatively, use a tiling window manager

1570451277
kenaryn
I do not understand, how can I embed sublime-text into a terminal?

1570451881
kenaryn
n_1-c_k Adding the code you pasted (same as the github repository) produce the following error: File-mode specification error (void-variable <!DOCTYPE)

1570451947
n_1-c_k
kenaryn, my bag of ideas is empty... try in #emacs perhaps, g'luck

1570451982
kenaryn
After moving 'zig-mode.el' to '$HOME/.emacs.d/lisp/' and editing the path in the same way.

1570452008
kenaryn
Allright, thanks again. I'll stay silent or will talk about #zig only.

1570452750
xyproto
I think Go is pretty great for small servers, C++ is pretty great for 3D engines. Where does Zig shine the most? Anything that C is currently used for today?

1570452780
scientes
'small"

1570452825
xyproto
or large :)

1570452967
mq32
xyproto, Zig is also pretty great for game engines :)

1570452990
mq32
but i think it shines in "simplicity". it's easy to write and even more easy to read

1570453070
kenaryn
n_1-c_k For information, the zig-mode was in the MELPA bleeding-ede branch repository, not the stable one... lol :) Now I'm a Emacs user :D

1570455911
FireFox317
andrewrk: You forgot to rename the std/special/doc folder to std/special/docs. Currently the -fgenerate-docs cannot find the index.html and main.js to copy to the target directory

1570456160
FireFox317
Nice proof of concept btw, looks cool!

1570457840
daurnimator
so.... zig packages.... what will a "package" be?

1570457841
daurnimator
e.g. a tarball of sources?

1570457899
daurnimator
(given that there isn't an ABI for zig libraries)

1570459671
mq32
daurnimator: i think support for something like "tarball" and "git repository+commithash" would be reasonable

1570459943
xyproto
mq32: cool. But if you write a vector library in Zig, is there something like operator overloading for "+" and "-"?

1570460070
mq32
nope

1570460094
mq32
it's a bit annoying, but i can live with that

1570460162
mq32
just fyi, i'm writing game stuff right now, progress of the weekend is this:

1570460177
mq32
only dependency to extern code is SDL2 for creating OpenGL context and the window

1570460188
daurnimator
mq32: I'm assuming there would be some sort of package metadata format to go with it....

1570460217
mq32
as soon as sdl-window is "good enough", i can drop SDL2 as well and be fully set up with zig code only

1570460269
mq32
daurnimator, i like packages that just require some "i am a package.filename"-file

1570460310
fgenesis
well you COULD reinvent .deb, .rpm, or whatever, and die in metadata hell :B

1570460388
xyproto
mq32: if you manage to get zig and sdl2 to work together nicely, I would love a pull request to

1570460434
mq32
xyproto: "just cInclude SDL.h" :D

1570460484
xyproto
mq32: That's one way. :) There are no Zig-friendly SDL2 wrappers?

1570460485
mq32
but if you want, i can hack you some example together tomorrow

1570460496
xyproto
mq32: that would be appreciated!

1570460497
mq32
i don't think someone wrote one

1570460508
mq32
because SDL2 is a quite conventient library to be used with zig

1570460521
mq32
maybe i'm writing some wrapper one day :D

1570460528
mq32
because something like

1570460563
mq32
while(SDL.pollEvent()) |event| { switch(event) { .mouseButtonDown => |mbd| { â€¦ }, else => { } } }

1570460565
mq32
would be aweomse

1570460567
mq32
*awesome

1570462628
xyproto
mq32: that would be nifty

1570466244
tgschultz
andrewrk: re: bmp lib being broken w/ LLVM error. Are you ok with a 40MB package or should I trim the test data?

1570466311
andrewrk
tgschultz, no problem

1570466387
tgschultz
it compresses well, 218k in 7z

1570466409
tgschultz


1570466429
tgschultz
run `zig test bmp_test.zig` to produce the error.

1570466481
scientes
looks like you develop on windows

1570466505
tgschultz
that's because I do?

1570466505
andrewrk
tgschultz, thanks

1570466558
tgschultz
it feels odd to be thanked for dumping a bunch of un-simpified code on you

1570466731
andrewrk
I should be able to figure it out by looking at the llvm ir code

1570467043
scientes


1570467110
scientes
it should be double-star here

1570467111
scientes
%9 = getelementptr inbounds %"rgb.PackedBgra(5,5,5,1)", %"rgb.PackedBgra(5,5,5,1)"* %8, i32 0, i32 0, !dbg !8244

1570467223
scientes
oh its a struct that has the same type, but it needs a ptrcast from rgb.PackedBgra(5,5,5,1) to [2 x i8]* %9)

1570472919
n_1-c_k
Is this

1570474010
nrdmn
n_1-c_k: I'd write it in multiple lines instead of nesting ifs in a single line

1570474094
n_1-c_k
nrdmn, I did!  But that's what 'zig fmt' turned it into.

1570474145
nrdmn
n_1-c_k: did you use curly braces {}?

1570474166
n_1-c_k
nrdmn, no - is that the trick?  I'll try it...

1570475687
n_1-c_k
How's this,

1570476291
nrdmn
hmm.. are all those |_| required?

1570476592
n_1-c_k
nrdmn, compiler says yes

1570479964
fengb
n_1-c_k: /// Caller must free returned memory.

1570480001
fengb
Those functions are designed to be memory managed. The whole error juggle was an attempt to force memory deallocation

1570480048
fengb
Each of the `getEnvVarOwned()` calls is a memory leak

1570480089
n_1-c_k
fengb: oh!  How does one plug that leak?

1570480148
fengb
Inside the if (cond) |item|, the "item" needs to be freed by the allocator

1570480164
fengb
The else |err| returns an error state, which probably should be checked

1570480247
fengb
Since it can error out with OutOfMemory (which isn't falsy), or EnvironmentVariableNotFound (which is falsy in this case), or InvalidUtf8 (which I don't know what this means)

1570480310
fengb
I wonder why the Windows version is so complicated

1570480359
n_1-c_k
blimey, this is turning into a major project

1570480402
fengb
`os.getenv(key)` doesn't require an allocator so it looks a lot simpler, but it doesn't account for Windows

1570480418
n_1-c_k
works for me :D

1570480422
tgschultz
I think some of the Windows stuff could be cleaned up in std by removing the need for allocation at the cost of a static buffers because env vars and args have known limits.

1570480439
fengb
Oh heh

1570480443
fengb
wantTtyColor

1570480461
fengb
This uses FBA so it handles the leak by shoving it onto the stack

1570480474
fengb
Oh so you don't need to handle it! >_>

1570480503
fengb
Still probably should handle OOM though since that's a real edge case

1570480569
tgschultz
Maybe I should take a look at cleaning up args and env for Win while I'm waiting for bugs to be fixed

1570480625
fengb
I wonder if in this case, we should have a different function for 'hasEnvVar

1570480656
fengb
Since that's all it's doing, that could be a simple boolean instead of this crazy allocator thing that gets thrown away

1570480947
tgschultz
it would only require a 40k buffer on the stack in _start to just automatically grab the env and arg memory in windows. should be a way to avoid doing that if it is never used though...

1570481033
andrewrk
if this buffer is accessed during the call to main() it would not be thread safe

1570481052
andrewrk
s/accessed/populated/

1570481169
tgschultz
maybe a build option then? checked using @root or whatever it is called?

1570481205
andrewrk
that seems fine. it would be on by default and you could disable it, which would turn std.process.getEnvVar & friends into compile errors

1570481231
tgschultz
do we have a naming convention for such vars?

1570481238
andrewrk
no

1570481360
n_1-c_k
Is @root a post-0.5.0 thing?  Can't find it in langref.

1570481426
tgschultz
I probably didn't call it the right thing

1570481454
fengb
"An environment variable has a maximum size limit of 32,767 characters, including the null-terminating character."

1570481457
fengb
That seems a little excessive per env var

1570481466
tgschultz
env vars share that space

1570481478
fengb
Oh it's global space?

1570481490
tgschultz
"All environment variables must live together in a single environment block, which itself has a limit of 32767 characters."

1570481646
tgschultz
and all args share an 8192 block...I should verify if that is bytes or ucs2 characters though. sounds like it might be ucs2, so that'd total 80k

1570481680
andrewrk
ucs2 can still have > 2 byte characters right?

1570481728
andrewrk


1570481751
andrewrk
so that would actually be 128 KB

1570481754
tgschultz
I don't think so, UTF16 can, but UCS2 pre-dates the surrogate pairs

1570481763
fengb
UCS2 is fixed

1570481765
tgschultz
IT's why Windows can have unpaired surrogates in filenames and whatnot

1570481785
fengb
But not sure if this is actually UTF16 with bad docs (like JS)

1570481805
tgschultz
and it is in chars. the byte limit is 64k, one segment.

1570481926
tgschultz
oh wait, I see, the issue is we have to convert whatever windows hands us into UTF8

1570481933
tgschultz
....which could be problematic

1570481940
tgschultz
at least in theory.

1570482505
mps
anyone can help me with building zig for Alpine linux? build log is here

1570482540
mps
and APKBUILD is here

1570482599
mps
I must tell that I don't have experience with zig but want to build it for alpine, and start to play and learn

1570482706
mps
on alpine default build option is PIE, afaik

1570482887
andrewrk
mps, I will create a patch for you to try

1570482933
mq32
tgschultz: afaik is windows using UTF-16

1570482952
mq32
or an arbitrary 8 bit multibyte-codepage, including support for utf-8

1570482996
mps
andrewrk: thanks in advance

1570483053
andrewrk
mps, try this patch:

1570483066
mps
ok, will do now

1570483221
fgenesis
mq32: win32 is UCS-2 but with support for surrogate pairs

1570483230
fgenesis
(one reason why WTF-8 exists)

1570483270
mps
andrewrk: looks like it worked, build goes without error

1570483301
mps
now comes hard work to prepare proper apk

1570483329
andrewrk
mps, I will run tests and then commit this patch to master

1570483408
mps
nice, thanks for help

1570483493
mps
btw, any good and simple (ask to much) introductory to zig for C programmers

1570483552
mq32
read the docs and then "just do it"

1570483573
nrdmn
note that some older docs call UCS-2 "UTF-16"

1570483597
mq32
you have to grasp some concepts like "null-pointers in C are optional pointers in zig", "types are just expressions"

1570483605
mq32
nrdmn, yeah encoding is a very confusing world

1570483616
mq32
just use codepage 65001 everywhere

1570483616
mps
mq32: ok, will do

1570484170
mq32
andrewrk, do you already have some plans about #2915 (unpacked option aliasing)?

1570484647
mps
got it, I mean alpine apk, now in crude form but will refine it in a few days

1570484871
kenaryn
daurnimator, are you there? I would like to ask you a question with regard to sublime-text path environment variable.

1570486234
nrdmn
andrewrk: what's the policy for changing or deprecating functions in the standard library? Should I make them output compile time warnings until next release instead of simply removing them?

1570486374
andrewrk
nrdmn, you can break std lib

1570486427
nrdmn
alright

1570491083
samtebbs
andrewrk: Thanks for the feedback on my i386-linux PR. I gave it a try and we don't get the same register allocations issues on release-fast, so should I make a new issue for the frame pointer detection? I'd be very happy to give it a try but would like to let anyone interested take it on.

1570491800
andrewrk
samtebbs, thanks, yes that sounds good

1570492027
samtebbs
andrewrk: Cool :)

