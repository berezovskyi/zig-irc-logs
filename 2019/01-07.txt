1546831075
daurnimator
uh, I think I'm mildly confused with in #1873.... to set through a pointer zig doesn't have an operator like C's `foo->bar = ` does it? I have to use: `foo.*.bar =`?

1546836146
MajorLag
daurnimator: you can just use `foo.bar =`

1546836854
daurnimator
ah. I think I see my issue: I think I'm missing an error-unwrapping

1546838302
emekoi
what is TargetSubsystemPosix?

1546838519
daurnimator
emekoi: at first guess with no context: the posix subsystem for windows

1546838577
daurnimator
(which was deprecated with the

1546866822
MajorLag
I didn't realize the integration testing actually tested the code in the langref. That's neat.

1546889906
andrewrk
cross posting from the mailing list:

1546890422
hgctl
oh cool

1546890426
hgctl
I didn't know zig was operating on sr.ht

1546890458
hgctl
also, you are incredibly conscientious to even consider testing downstream devs code before merging feature changes to zig

1546890574
andrewrk
hgctl, just for mailing lists and (partial) ci

1546890614
andrewrk
I'd like to see some interface improvement before committing further to sr.ht. in particular, I'd like to see the features of sr.ht link to each other in a project-specific way

1546890649
hgctl
makes sense to me

1546890655
hgctl
I haven't really evaluated sr.ht at all yet

1546890675
andrewrk
we'll probably use issues, git, and wiki from github for the foreseeable future

1546890686
hgctl
(the following is not meant as a suggestion as I do not think it scales well, and does not account for CI or mailing lists) I'm planning on moving over to stagit to host my own repos

1546891660
hooo
I use bitbucket, free, private, unlimited repos. I dont see anything that could possibly be better

1546891717
hgctl
hooo: I've tried to use bitbucket and I was really turned off by the layout and organization (though I imagine that is a lot to do with personal preference); plus, when I was last looking at it, it was mercurial-only (iirc)

1546891723
hgctl
which, admittedly, was a long time ago

1546891752
hooo
I use it for git. The gui is a bit slower than github but I dont really use the web gui anyway. just need to dump my code somewhere

1546891817
hgctl
sure

1546891821
hgctl
that's kind of how I feel about stagit

1546891823
hgctl
I don't need much

1546891838
hgctl
and with stagit, I get reasonable organization and can serve the pages statically

1546891850
hgctl
(which also means I get to integrate it with my own webserver without any shenanigans)

1546891872
hgctl
plus, then I get to have my own server be upstream

1546892235
hooo
I prefer it too but then I have to care about the security and hosting payments..

1546892245
hooo
i rather just let bitbucket handle it

1546892445
hgctl
I suppose

1546892461
hgctl
I already have a server, so I don't really worry about that aspect

1546892474
hgctl
and my security system is default-deny, so there's not too much to that :P

1546892632
hooo
wow lol, github literally just announced that they also offer unlimited private repos now:

1546892663
hgctl
yep

1546892673
hgctl
though with a limited number of collaborators on private repos

1546892678
hooo
maybe I'll switch to github from bitbucket

1546892710
hgctl
ðŸ¤·

1546892717
hgctl
if you're going to switch, why not switch to gitlab

1546892723
hgctl
it's had unlimited private repos for a while now

1546892737
hooo
the gitlab gui is always buggy and it's also slower than github

1546892760
hgctl
ðŸ¤·

1546892762
hgctl
to each their own

1546892772
hgctl
they're all giant piles of JS these days

1546892779
hgctl
(again, one of the reasons I'm so enticed by stagit)

1546892873
hooo
hm wow, I finally checked it out and yeah it does feel damn fast and simple

1546892977
hgctl
which? stagit?

1546893438
hooo
all the alternatives are pretty damn good nowadays and free

1546893448
hooo
really doesnt matter anymore

1546893479
hooo
i guess the reason I would switch to github is to be able to colaborate more effectively with people because I learn how it's done on there

1546893500
hgctl
sure

1546895567
emekoi
andrewrk, when you say that you're removing the static flag for executables, does that mean that `is_static` in `CodeGen` would always be false on all platforms except linux when compiling an executable?

1546895690
andrewrk
emekoi, is_static will be undefined for executables; it will only be meaningful for libraries

1546895714
emekoi
but will it be okay to access for executables?

1546895744
andrewrk
which means that every time is_static is read in the code, can assert that the build kind is a library

1546896183
emekoi
what about code like this?

1546896203
emekoi
what happens if you're building an executable?

1546896220
andrewrk
that logic needs to change

1546896264
andrewrk
instead of checking is_static, the linking logic needs to determine if any of the libraries the executable links against are dynamic

1546896284
andrewrk


1546896369
emekoi
so on non-linux platforms just link against libgcc_s?

1546896891
andrewrk
no, that's not correct behavior

1546896936
andrewrk
for example, windows in the msvc environment would never link against libgcc_s

1546896980
emekoi
sorry i mean on unix-like systems.

1546897197
andrewrk
All targets, including Windows link libgcc (not sure about 's' or not; I'd have to refresh my memory) when the target environment is gnu

1546897225
andrewrk
when the target environment is gnu and libc is being linked

1546897286
andrewrk
many popular linuxes have the native environment as gnu. some linux distros, such as alpine linux, do not (or if zig reports gnu as native then it is a bug)

1546897569
andrewrk
emekoi, are you working on a patch to solve #1828?

1546897610
emekoi
no, i'm working on a patch for #1532

1546897716
andrewrk
I see

1546898079
forgot-password
Is there a waay to format a string into a buffer that is allocated on the stack?

1546898094
andrewrk
forgot-password, you may be interested in std.fmt.bufPrint

1546898136
andrewrk
which I believe returns an error if it runs out of buffer space, which you can assert will never happen with `catch unreachable`

1546898328
forgot-password
Thanks, is it also possible to put a \0 at the end of the string? I need to pass the string to a c function

1546898597
forgot-password
\x00 did the trick, since \x0 didn't work I thought this is done in some other way

1546900430
forgot-password
Good night everybody :)

1546900686
andrewrk
good night

1546903877
andrewrk
copy elision progress: 491 behavioral tests passing out of 521

