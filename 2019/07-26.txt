1564106884
scientes
structs are allowed to contain a mix of comptime and runtime values.

1564106888
scientes
yeah that makes sense

1564106918
scientes
yeah that is cool

1564106929
scientes
but what about calling C variadic functions?

1564106966
scientes
I guess we could make those also called by using these anonymous structs

1564107296
scientes
both of the translate-cs crash for me

1564132838
hryx
There seems to be weird activity on the Community wiki page - two users fighting over which unofficial Discord community should be listed?

1564132884
hryx
is there a way to be notified of changes to the GitHub wiki?

1564145334
scientes
lawl

1564145359
scientes
they should just join the IRC channel :)

1564145629
Tetralux_
daurnimator: I'm curious about the usage of

1564145645
Tetralux_
Are we talking about being able to do `show(usize)`?

1564145748
lunamn
iirc the whole discord thing was "solved" as the two owners reached an "agreement"

1564145948
nrdmn
huh, struct attributes can have default values?

1564146026
mikdusan
nrdmn:

1564146793
nrdmn
thanks mikdusan. I thought I remembered a discussion recently concluding that we don't want default values

1564146863
scientes
so translate-c (both version) just crash for me

1564147021
scientes
it also errors when <math.h> is included

1564147103
scientes
and yes i did do ninja installl

1564147344
mikdusan
scientes: branch? pr?

1564147354
scientes
master

1564148715
scientes
why do i have to list the type twice

1564148716
scientes
exp2_poly: [5]f64 = [_]f64{

1564148719
scientes
oh i don't

1564148759
fengb
I have a proposal to infer the type declaration for struct fields

1564148790
scientes
it seems to work like this

1564148790
scientes
tab = [256]u64{

1564149241
Tetralux
fengb: Yeah, I'd be for that too.

1564149254
Tetralux
Esp for things like `n = false`

1564149385
fengb


1564154314
Tetralux
What syntax should you use to return a pointer to a struct from an stdcallcc fn?

1564154320
Tetralux
.. that's external.

1564154351
Tetralux
Tried [*c]T, [*]T, ?[*]T, ?*.

1564154364
Tetralux
All say: error: return type '?*sockets_windows.NativeSocket' not allowed in function with calling convention 'stdcallcc'

1564154422
Tetralux
It only says that if the type is extern struct though.

1564154447
Tetralux
T is @OpaqueType(), then Zig crashes for some reason.

1564154451
Tetralux
Trying to narrow it down.

1564154491
Tetralux
Trying to narrow it down.

1564154943
mikdusan
what does sockets_windows.NativeSocket look like?

1564155984
nrdmn
how can I cast 0 to a *c_void?

1564156153
mq32
isn't that a `?*c_void`?

1564156317
donpdonp
nrdmn:

1564156451
nrdmn
donpdonp: @intToPtr(*allowzero c_void, 0) gives "error: null pointer casted to type '*c_void'"

1564156501
donpdonp
nrdmn: hmm. havnt run into that. whats the signature of the function you're trying ot call

1564156561
nrdmn
donpdonp: extern fn (MyStruct, usize, usize, *c_void) void

1564156581
nrdmn
s/MyStruct/MyEnum/

1564156601
presiden
isn't null pointer not guaranteed to be always zero

1564156616
halosghost
in C?

1564156619
donpdonp
nrdmn:i think you can simply say ...usize, null);

1564156636
nrdmn
presiden: on my platform it is always guaranteed to be zero

1564156670
nrdmn
donpdonp: error: expected type '*c_void', found '(null)'

1564156702
mq32
nrdmn, donpdonp:

1564156797
nrdmn
mq32: is ?*c_void always the same as *allowzero c_void?

1564156832
mq32
afaik optional pointers are stored via a NULL value

1564156854
nrdmn
oh right, the documentation says "If you want to represent null pointers, use Optional Pointers instead."

1564156875
nrdmn
oh, hmm. I misread that.

1564156937
donpdonp
nrdmn: your original try works for me

1564156958
donpdonp
i havent even heard of allowzero until today

1564157005
mq32
allowzero is relevant only for cases where (void*)0 is actually a valid address (like on embedded platforms)

1564157040
halosghost
which is a cool feature

1564157125
mq32
sure thing!"

1564157148
mq32
but "optional allowzero pointer" will not have pointer width

1564157229
nrdmn
I'm observing my problem in this code:

1564157294
nrdmn
sorry, compiled with this:

1564161844
Tetralux
mikdusan: It was an @OpaqueType(). I worked around it now, but I had an OS type (OST) which I described as @OpaqueType(), and was storing it in a struct as ?*OST.

1564161873
Tetralux
Describing `const OST = *@OpaqueType()` (note the *), worked around the assert failure in zig.exe

1564167605
Sobeston
Any good way to find what's crashing the compiler? I've been running zig build-exe and an exe is outputted, but it does literally nothing. I have a std.debug.warn() on the very first line of main, but it doesn't work

1564167662
Sobeston
I'm sure something else in the source is messing the compilation up, but I can't find it

1564167724
emekankurumeh[m]
can you paste the source?

1564167875
Sobeston
I can't, unfortunately - doing a rewrite of closed source code I don't own. Is there any general advice for this sort of thing?

1564167906
emekankurumeh[m]
hmm, are you on windows?

1564167978
Sobeston
yes, and I am calling kernel32 + user32 functions. On 0.4.0

1564168008
emekankurumeh[m]
do you just have a `pub main` in your source file?

1564168011
emekankurumeh[m]
*root file

1564168045
Sobeston
yes. The printing was working earlier, but through the addition of some functions (which I call after the print) it has since stopped

1564168127
emekankurumeh[m]
one possibility is that warn is failing silently and returning:

1564168146
emekankurumeh[m]
does it still with those other calls removed?

1564168196
Sobeston
if I remove the calls to those functions, the code still does nothing. But if I comment all the functions out as well as the calls, it works

1564168332
emekankurumeh[m]
can you say what functions you are calling?

1564168344
Sobeston
unfortunately no

1564168440
emekankurumeh[m]
instead of calling std.debug.warn can you try printing to stderr manually without the catch return?

1564168520
emekankurumeh[m]
so basically

1564168609
Sobeston
same problem as with the warn. I think it's to do with weird pointer casts in the functions - I'll try and find what the problem is and maybe file an issue

1564168723
emekankurumeh[m]
does it occur with any of the functions or is it a specific one?

1564168995
Sobeston
one that calls another

1564169024
Sobeston
I think it might be due to the compiler accidentally accessing the [0] index of an undefined array

1564169051
emekankurumeh[m]
ia the return code non-zero?

1564169177
Sobeston
the compile returns 0, but the executable exits with -1073741511

1564169353
Sobeston
aha if I strip off half (the first 4 bytes) of -1073741511's binary which are all 1, I am left with C0000139. Google seems to suggest that this is entry point not found

1564174384
dimenus
how do you utilize an llvm intrinsic?

1564174387
dimenus
via the api?

1564174395
dimenus
eg

1564174443
emekankurumeh[m]
adding an builtin to zig?

1564174511
dimenus
not sure what the front end api will look like for this

1564174512
emekankurumeh[m]
the best resource on doing that would probably be

1564174533
dimenus
thanks

1564174665
dimenus
that's the perfect PR to link to

1564174696
emekankurumeh[m]
are we allowed to post links to executables/binaries here?

1564175557
dimenus
not sure

1564179723
scientes
oh hes gone....

1564180009
marijnfs
was there no status update?

1564180211
scientes
dimenus, awesome to see someone using my work!

1564180227
scientes
dimenus, just saw this

1564180463
emekankurumeh[m]
Sahnvour, rust has several coff/pe parsing libraries that might be of use

1564180613
scientes
I think that is pretty readable

1564181483
scientes
wait, ** could be implemented at runtime with @shuffle

1564181503
scientes
on vectors or arrays

1564183338
Sahnvour
emekankurumeh[m]: my problem is about the PDB format

1564183434
Sahnvour
or rather, MSF file format ... but in any case we have llvm's doc and code, and microsoft's code, just need to figure out where the error lies

