1549932690
AlexMax
Question.  What are the portability goals of Zig?

1549932730
andrewrk
AlexMax, can you elaborate?

1549932762
AlexMax
Well, I'm currently working on a fun little project in C89 because I want it to be portable to nearly any (reasonable) platform with a C compiler.

1549932810
AlexMax
And C has a great many warts to where I wish for a better language.  But desired portability seems to be my jailer.

1549933159
andrewrk
AlexMax, whether to use C89 vs a later version of C implies talking about portability between C compilers, as opposed to portability across targets

1549933174
andrewrk
For zig there is currently only 1 zig compiler in existence, as the language is still under development

1549933197
andrewrk
so the question turns into, what are the plans for a language specification, which is this issue:

1549933234
andrewrk
if you're talking about target portability, you can have a look at the support table in the readme:

1549933267
andrewrk
if you have any specific target concerns, I'm interested in hearing about them

1549933271
kristate
andrewrk: yeah I think he is talking about target portability

1549933302
AlexMax
I'm essentially trying to create something that exists as a static/dynamic library that can be used to plug into a project called RetroArch

1549933333
AlexMax
And RA exists for....a great many platforms

1549933338
AlexMax


1549933382
AlexMax
Including a bunch of old, busted and deprecated platforms

1549933810
AlexMax
And I wanted to know how realistic support for some of these oddball platforms might be.  Judging by your readme, it seems like you're at the very least gated by LLVM.

1549937211
kristate
AlexMax: what is the specific target that you are thinking of?

1549938689
diltsman
When building master, should I build against LLVM 7.0 or 8.0?

1549938703
emekankurumeh[m]
7.0

1549938704
kristate
diltsman: LLVM 7.0

1549938752
diltsman
I guess the llvm8 branch is the one that is against the next version of LLVM, then?

1549938838
diltsman
It says to download LLVM and CFE.  What is CFE?

1549938854
emekankurumeh[m]
clang frontend

1549939115
scientes


1549939116
scientes
<diltsman> It says to download LLVM and CFE.  What is CFE?

1549939117
scientes
<emekankurumeh[m]> clang frontend

1549939118
scientes
sorry

1549939126
scientes
../src/zig_llvm.cpp:1032:59: error: ‘KFreeBSD’ is not a member of ‘llvm::Triple’

1549939228
scientes
but it was added 8 years ago, so i am confused

1549941790
emekankurumeh[m]
scientes: what version of zig are you working with?

1549942024
scientes
HEAD from a week or so ago

1549942042
scientes
i got alot father when i commented out that line

1549942145
emekankurumeh[m]
thats strange. i'm on HEAD and that code isn't causing any problems for me

1549942347
emekankurumeh[m]
people doing bsd ports don't seem to be running into that issue either.

1549943248
daurnimator
reading backlog...

1549943267
daurnimator
andrewrk: please don't implement X or wayland... they're terrible to support and no good will come of it...

1549943338
andrewrk
AlexMax, yes it's fair to say that zig is gated by LLVM

1549943409
andrewrk
diltsman, it won't let you build against the wrong LLVM

1549943514
andrewrk
scientes, I suspect if you use HEAD from 7843c96df87007561c107d11afa2fa74b46667fd or later, I'm guessing you'll get an error message "wrong LLVM version" or something like that

1549945007
diltsman
andrewrk: Getting things set up to work on compiler-rt functions.

1549948588
andrewrk
diltsman, great!

1549948663
diltsman
andrewrk: We will see how long it takes me to get everything ready to work on it.  Building 7.0.1 right now.  Then will try to build against it...and probably build 8.0.0...

1549948720
andrewrk
diltsman, if you like, you make your pull requests against the llvm8 branch

1549948734
andrewrk
*you can

1549948762
andrewrk
llvm 8.0.0rc2 has been released but there are quite a few release blocker bugs opened. I predict it will be a couple weeks before the next release candidate

1549948786
andrewrk
but we can always backport llvm8 commits into master

1549955009
emekankurumeh[m]
andrewrk: i saw "TODO err to int when error union payload type not void" in codegen.cpp. does this mean that error unions are getting payloads similar to tagged unions?

1549958775
emekankurumeh[m]
just spent 30 mins trying to debug an error only to realize it was because of zig evaluating expressions at comptime.

1549960215
daurnimator
emekankurumeh[m]: hmm?

1549960515
emekankurumeh[m]
i had a test that was calling `expect` on a const value and succeeding, but when i called a function that called `expect` in the test, zig would generate invalid llvm. thats because zig was evaluating the argument of expect at compile time and hard-coding the argument to expect.

1549981401
andrewrk
emekankurumeh[m], if zig generates invalid LLVM it's a bug in the compiler

1549981785
diltsman
Finally finished compiling LLVM, CFE, and Zig.  Get to start looking at adding Compiler-RT functions this evening.

1549981924
andrewrk
great

1549981941
andrewrk
what os are you on?

1549983720
andrewrk


1549984516
emekankurumeh[m]
i'm trying to solve issue #1711 so the invalid llvm is because of me

1549994799
Sahnvour
andrewrk: regarding

1549994830
andrewrk
Sahnvour, yes, but the dependency on stage1 would be replaced with a dependency on stage2/3, which also have the `libc` subcommand

1549994876
Sahnvour
yes

1549994878
Sahnvour
I see, thanks

1549994908
Sahnvour
so in the end, the only choice is to implement `libc` in pure zig

1549994916
Sahnvour
so in the end, the only choice is to implement `libc` comand in pure zig

1549994934
Sahnvour
woops, how millenial of me.

1549994958
hg
lolwat?

1549995023
Sahnvour
too used to edit the last message with 'up' arrow

1549995054
hg
ahh

1549995163
andrewrk
Sahnvour, I'm not sure what you mean by that

1549995184
andrewrk
note that stage1/2/3 share some C++ code, including the interaction with Windows COM that finds MSVC

1549995197
Sahnvour
oh, ok

1549995198
andrewrk
that could potentially be moved to zig in stage2/3 but I don't think it necessarily has to

1549995309
Sahnvour
I thought the C++/COM implementation was stuck in stage1, hence my questions

1549995416
Sahnvour
note that if Zig chooses to support only msvc 15+, this can be simpler with

1549997432
andrewrk
Sahnvour, that's something to consider. we would want to audit the code and make sure it does not do anything too crazy, and then copy vswhere.lib into deps/ and add cmake commands to build it\

1549997453
andrewrk
that said, if what we have already is working well, then I see no reason to change it

1549997482
andrewrk
as an example, why do they have XmlFormatter.cpp? seems fishy

1549997649
Sahnvour
I think it's supposed to be at a very specific path, or accessible through %PATH%, and if so no need to embed it in Zig, just to run it with the good arguments

1549997668
Sahnvour
when installed on a machine*

1549997702
Sahnvour
I do not doubt its code is bloated :)

1549997787
andrewrk
well I certainly do not want to add a dependency on this being installed

1549997818
andrewrk
so it would have to be in zig.exe (or at least shipped with zig, but in that case why not build it into zig.exe?)

1549997911
Sahnvour
it comes bundled with msvc build tools, you can't install them without vswhere, starting 15.2 . but anyways that doesn't address msvc 14 and lower which are still widely used at the moment

