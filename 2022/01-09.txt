1641713852
koakuma!~koakuma@user/koakuma
So how does zig use libunwind? Does it reuse the libunwind from LLVM, or does it bundle its own libunwind?

1641714046
koakuma!~koakuma@user/koakuma
Ah, I see there's a libunwind folder

1641714046
koakuma!~koakuma@user/koakuma
Does it need a specific version, or is it safe if I replace it with a newer version?

1641747782
ifreund!2940d10f8b@user/ifreund
zig showtime is live: https://www.youtube.com/watch?v=Z6c1JUBciIA

1641747806
Franciman!~Franciman@mx1.fracta.dev
thanks

1641748170
Seng!~nick@hurtig.ninja
Hey, I'd like to make heap's algorithm but using a pattern in zig like with mem.split that returns a SplitIterator so you can lazily loop over it. Heap's algorithm does a lot of recursion and every single example I can find appends the results to a list. Though I want my implementation to be Allocator-free. Anyone with any pointers as to what I could look towards for inspiration on how to implement my idea? 

1641748178
Seng!~nick@hurtig.ninja
(it's a long shot, I know) 

1641748557
shachaf!~shachaf@user/shachaf
You want to iterate over the contents of a binary heap in order without mutating it?

1641748846
Seng!~nick@hurtig.ninja
It's an algorithm to permutate the elements of a list. 

1641748914
Seng!~nick@hurtig.ninja
I might just not understand it properly yet. 

1641748923
Seng!~nick@hurtig.ninja
I will prevail! 

1641749103
ifreund!2940d10f8b@user/ifreund
Seng: that algorithm inherently requires space overhead equivlaent to the number of elements you are permutating

1641749135
ifreund!2940d10f8b@user/ifreund
this overhead can be in the form of the function call stack if using recursion or a simple array of length N if using a non recursive approach

1641749144
shachaf!~shachaf@user/shachaf
Wait, Heap is the name of a person? Oh no.

1641749196
ifreund!2940d10f8b@user/ifreund
you can either allocate a slice of length N on the heap with an allocator on initializing your iterator or require N to be comptime known and use an array in zig

1641751186
Seng!~nick@hurtig.ninja
ifreund: i need to read a bit more I guess, thanks for your input. It partially makes some kind of sense to me. 

1641751219
Seng!~nick@hurtig.ninja
shachaf: yes. And he has nothing to do with the sorting algorithm apparently. 

1641751229
Seng!~nick@hurtig.ninja
Try explaining that to Google! 

1641754093
tsmanner_!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
Has there been any discussion about changing the default branch from master to main?

1641754241
Franciman!~Franciman@mx1.fracta.dev
why?

1641754280
Franciman!~Franciman@mx1.fracta.dev
i'd prefer develop to main

1641754443
tsmanner_!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
Just curious, the "new" convention on github is main, but develop is just as valid.  It was part of the push I think in 2020 to remove references to the words master and (usually implied) slave there.  I caught myself typing `git pull zig main` a few minutes ago out of habit.

1641754502
Franciman!~Franciman@mx1.fracta.dev
sure

1641754579
Franciman!~Franciman@mx1.fracta.dev
if this is the convention, maybe we should adapt

1641754584
Franciman!~Franciman@mx1.fracta.dev
but will it break something?

1641754596
Franciman!~Franciman@mx1.fracta.dev
also i am not entitled to speak, i can just give opinions sorry

1641754615
Franciman!~Franciman@mx1.fracta.dev
i personally avoid git

1641754694
tsmanner_!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
Got it.  I'm in the same boat, just curious about it.  It looks like GitHub will automatically redirect links to missing or deleted branches to the default branch, but I do imagine there would be some breakage somewhere.

1641754760
tsmanner_!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
Sidebar: Franciman what do you usually reach for when you need VCS?

1641754789
Franciman!~Franciman@mx1.fracta.dev
either fossil or darcs

1641754811
Franciman!~Franciman@mx1.fracta.dev
lately i was attuned by bazaar, but i don't know what to think about it

1641754890
tsmanner_!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
I briefly looked at bazaar a while back too, but I haven't tried it.  Fossil and darcs look interesting, I hadn't heard of them before.

1641755122
earnestly!~earnest@user/earnestly
breezy is the fork of bazaar to continue its development

1641755148
earnestly!~earnest@user/earnestly
Which may be the third reboot attempt

1641755184
rom1504!rom1504@rom1504.fr
are there platforms that support non-git ?

1641755216
Franciman!~Franciman@mx1.fracta.dev
fossil has a builtin webui lol

1641755229
Franciman!~Franciman@mx1.fracta.dev
you just put your repo on your vps, start it

1641755232
Franciman!~Franciman@mx1.fracta.dev
and voilÃ 

1641755239
Franciman!~Franciman@mx1.fracta.dev
your personal website

1641755245
ifreund!2940d10f8b@user/ifreund
darcs is really slow, patch theory is nice though 

1641755261
Franciman!~Franciman@mx1.fracta.dev
ifreund: i have never experiecend much slowness, tbf

1641755272
Franciman!~Franciman@mx1.fracta.dev
have you also tried darcs >=2 ?

1641755304
Franciman!~Franciman@mx1.fracta.dev
i have experienced slowness due to my inability to use git and remember its commands xd

1641755451
CommunistWolf!~bland@user/communistwolf
something something pijul ^^

1641755459
CommunistWolf!~bland@user/communistwolf
hg calls the default branch 'default', which is all kinds of sensible

1641755480
ifreund!2940d10f8b@user/ifreund
Franciman: http://darcs.net/FAQ/Performance#is-the-exponential-merge-problem-fixed-yet

1641755507
ifreund!2940d10f8b@user/ifreund
CommunistWolf: is pijul usable yet? As in, does it have a stable on disk format and CLI?

1641755529
Franciman!~Franciman@mx1.fracta.dev
ifreund: yes, i know about it, but with darcs >=2 it never happened to me

1641755531
CommunistWolf!~bland@user/communistwolf
not particularly, no

1641755602
Franciman!~Franciman@mx1.fracta.dev
so i am super happy i can avoid git's complexity

1641755666
ifreund!2940d10f8b@user/ifreund
git is what everyone uses, so for better or worse I ended up becoming intimately familiar with it

1641755721
Franciman!~Franciman@mx1.fracta.dev
it makes sense

1641759448
rom1504!rom1504@rom1504.fr
Franciman: "fossil has a builtin webui lol" doesn't sound like that works to share opensource projects, but for some small personal project I get it

1641759464
Franciman!~Franciman@mx1.fracta.dev
rom1504: it works for fossil and sqlite

1641759514
CommunistWolf!~bland@user/communistwolf
it does fine unless you need to scale to multiple machines

1641759528
Franciman!~Franciman@mx1.fracta.dev
it's distributed

1641759559
rom1504!rom1504@rom1504.fr
does it? looks like user "drh" is doing all the work in https://sqlite.org/src/timeline

1641759575
CommunistWolf!~bland@user/communistwolf
it can be, but you can't rely on people to actually use it like htat

1641759689
rom1504!rom1504@rom1504.fr
the goal of a code source platform is to popularize the work and let people collaborate openly on the code ; actually distributing the code is almost a side goal

1641760016
companion_cube!~simon@user/companion-cube
drh = "Dr Richard Hip" I suppose

1641760299
tsmanner_!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
I feel like (read: hope) a lot of the problems of centralized-vs-decentralized repository hosting will be solved by ipfs

1641761040
earnestly!~earnest@user/earnestly
rom1504: (fossil is made by sqlite devs, it was made for hosting sqlite originally, as an aside)

1641771816
marler8997!~marler899@96-19-96-19-162-162.cpe.sparklight.net
I feel like I'm going crazy..if you're compiling a shared library, can you have unresolved symbols?

1641771993
marler8997!~marler899@96-19-96-19-162-162.cpe.sparklight.net
oh I found out what it was, so I guess if you're compiling for cpu_arch wasm32, you can have unresolved symbols?

1641771996
marler8997!~marler899@96-19-96-19-162-162.cpe.sparklight.net
how does that work?

1641772009
marler8997!~marler899@96-19-96-19-162-162.cpe.sparklight.net
what does linking look like for wasm32?  Just no link step?

