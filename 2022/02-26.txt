1645848962
haze!~haze@72.88.246.30
testing testing read all about it

1645872481
jemius!~imperator@200116b82d1e0700e85187fedee14a55.dip.versatel-1u1.de
What is the trick of Zig's async-engine, does it have a large runtime similar to Golang's?

1645875272
ikskuh!~xq@v43666.php-friends.de
jemius: there's a pretty tiny "runtime" atm

1645875281
ikskuh!~xq@v43666.php-friends.de
but: it's not like a framework or magic is happening

1645875298
ikskuh!~xq@v43666.php-friends.de
async functions are state machines

1645875347
ikskuh!~xq@v43666.php-friends.de
a `suspend` is a fancy return statement, `resume` is a fancy function call

1645875633
ikskuh!~xq@v43666.php-friends.de
to actually handle asynchronous tasks, you need to have a scheduler that will resume a suspended function

1645875659
jemius!~imperator@200116b82d1e0700e85187fedee14a55.dip.versatel-1u1.de
ikskuh, you mean some sort of wrapper around poll(), I presume

1645875663
ikskuh!~xq@v43666.php-friends.de
exactly

1645875666
ikskuh!~xq@v43666.php-friends.de
the state of such a state machine is called a "frame" in zig terms and is a opaque structure

1645875675
ikskuh!~xq@v43666.php-friends.de
the schedular in zig is called "event loop"

1645875686
ikskuh!~xq@v43666.php-friends.de
the cool thing is that zig async is platform agnostic

1645875701
ikskuh!~xq@v43666.php-friends.de
the event loop that ships with std is meant for unix/windows platforms

1645875708
ikskuh!~xq@v43666.php-friends.de
but you can also implement a event loop yourself 

1645875724
ikskuh!~xq@v43666.php-friends.de
to say it with andrews words: "for every suspend, you need to have a plan how to resume"

1645875749
ikskuh!~xq@v43666.php-friends.de
for example, you can utilize async/await even on embedded platforms or in games

1645875770
jemius!~imperator@200116b82d1e0700e85187fedee14a55.dip.versatel-1u1.de
So using async only ever makes sense when you use as well std's event loop?

1645875774
ikskuh!~xq@v43666.php-friends.de
you could do several logic loops in a game that just does something like "await nextFrame();"

1645875802
ikskuh!~xq@v43666.php-friends.de
no. the event loop is a user space concept, and it's fairly easy to implement one yourself once you grasped the concepts 

1645875939
ikskuh!~xq@v43666.php-friends.de
https://gist.github.com/MasterQ32/ff534f912c5faedbbb57974317e79778

1645875945
ikskuh!~xq@v43666.php-friends.de
here's a super minimal event loop example

1645875968
ikskuh!~xq@v43666.php-friends.de
it's not really good (the task_list array is not necessary)

1645895021
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
what are some simple/popular C projects to build?

1645895036
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
looking for projects to test my new libc implementation with

1645895072
companion_cube!~simon@user/companion-cube
redis, maybe?

1645895223
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
redis looks feasible, looks like it uses Lua as a dependency which looks pretty simple

1645895252
ifreund!2940d10f8b@user/ifreund
Lua itself might be a better one to start with

1645895284
companion_cube!~simon@user/companion-cube
and of course, sqlite

1645895305
companion_cube!~simon@user/companion-cube
but the non-single-file version might have a bespoke build system (probably in Tcl) so good luck

1645895340
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
that's ok, so long it's simple enough to reproduce in build.zig

1645914589
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
very cool, with my ziglibc project, any project that uses it automatically gets stack traces :)

1645914637
ikskuh!~xq@v43666.php-friends.de
haha sweet. nice job marler8997_!

1645914645
ikskuh!~xq@v43666.php-friends.de
and yeah, lua and sqlite are good candidates

1645914666
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
yeah, got lua compiling, now working on implementing what it needs to link

1645914747
ikskuh!~xq@v43666.php-friends.de
sweet :)

1645915574
ikskuh!~xq@v43666.php-friends.de
so we can soon do zig build-exe -target x86_64-linux-marler?

1645916270
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
lol!

1645918131
amine!~aminechik@user/aminechikhaoui
Hello, is there an abstractions over sockets in the stdlib for creating UDP connections ?

