1644386273
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
marler8997_: FWIW, I am able to reproduce an AccessDenied error on my machine right now: https://github.com/ziglang/zig/issues/8362#issuecomment-1000059929

1644386301
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
interestingly, it only seems to happen when I run "zig build"; "zig build -Dtarget=x86_64-windows-gnu" works fine

1644386361
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
cr1901 ah that's great, maybe we could look into it further

1644386450
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
It's bizarre for sure

1644386578
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
the second zig build may have just happened to work because it doesn't happen every time apparently

1644386596
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
my guess is if you clean your global cache it might start happening again

1644386609
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Well, "zig build" consistently fails; "zig build -Dtarget=..." is consistently succeeding

1644386627
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
oh interesting, so then what about "target=native-windows-gnu"?

1644386647
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Oh damn, the error went away :(

1644386659
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
try cleaning global cache

1644386700
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Where is that on Windows? AppData?

1644386710
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
"zig env" should tell you

1644386732
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
%appdata%\..\local\zig I think

1644386773
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
So you think if I _clear_ the global cache, the error will come back

1644386784
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
that's my guess

1644386806
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Bye bye cache

1644386831
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
No, error didn't come back

1644386836
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
must be a race of some sort

1644386845
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
maybe clear local cache to (in zig-cache)

1644386855
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Did that earlier to no effect

1644386883
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
yeah I think it's pretty clearly a race condition, see if you can try cleaning everything and retrying and see if it comes back

1644386948
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Hmmm, nothing... ahhh well, I'll keep that in mind that "it happens sometimes"

1644386955
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
I can't debug a bug that's not there :(

1644386976
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
yeah, not being able to reproduce makes it a real bugger to fix :(

1644387214
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Ahhh here we go, now it's back for two of the three targets I tested. I'm about saturated w/ dealing w/ bugs this week.

1644387232
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
http://gopher.wdj-consulting.com:70/paste/4de03466-91da-4102-b0bb-3cc0b93dd6da.txt

1644387417
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Is there a way to make zig print out a debug log or something more informative than "AccessDenied"?

1644387809
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
yeah, building with a "debug" version of the zig compiler

1644387832
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
then it will give you an "error trace"

1644387867
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Debug binaries do not appear to be offered for download :(

1644387875
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
I guess I'll work around this for now

1644387888
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
yeah, gotta build it yourself

1644390669
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
trying to triage #8362 (cr1901 can reproduce).  Looks like a rename of one of the cache directories from "tmp" to "zig-cache\o" is failing intermittently with Access Denied. to confirm, zig build is completely single-threaded correct?

1644402384
Earnestly!~earnest@user/earnestly
I think this is an important document to always keep in mind: https://www.yodaiken.com/wp-content/uploads/2021/10/yodaiken_plos_c2-.pdf

1644402577
jemius!~imperator@200116b82dee74002215dbef510d979e.dip.versatel-1u1.de
that's quite an eye catching title

1644417715
mooff!mooff@awful.cooking
o/

1644419710
ifreund!2940d10f8b@user/ifreund
o7

1644421977
koakuma!~koakuma@user/koakuma
Hi, anyone here getting these errors when building commit 4d1e5ef730630badf92a613cdc57a42d2321df12?

1644421978
koakuma!~koakuma@user/koakuma
https://gist.github.com/koachan/ac9a4ac1465366d8aebccf66a11267a3

1644428591
freshcoffee!~fresh@user/freshcoffee
koakuma: builds fine for me on { macos, linux } and { debug, release } modes

1644430649
andrewrk!~andrewrk@mail.ziglang.org
marler8997_, yes zig build is completely single-threaded (for now)

1644430767
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
hmm, any ideas on if something could be holding a handle to the tmp directory? or a subprocess that used it as it's CWD?

1644430785
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
or any of the files/subdirectories inside it

1644432608
andrewrk!~andrewrk@mail.ziglang.org
when you say the tmp directory you mean zig-cache/tmp?

1644433393
freshcoffee!~fresh@user/freshcoffee
hmmm is `dir` guaranteed to be closed? lib/std/fs.deleteTree() can be called by renameTmpIntoCache().

1644433395
freshcoffee!~fresh@user/freshcoffee
https://github.com/ziglang/zig/blob/db56d74a3bc9c6240d24838753a7042ba91501a1/lib/std/fs.zig#L1918

1644433487
freshcoffee!~fresh@user/freshcoffee
hmm ok I looked closer. the `continue :start_over` is _after_ a `dir.close()` so WILD GOOSE CHASE.

1644433642
freshcoffee!~fresh@user/freshcoffee
maybe trap the error, put proc to sleep, and then examine all open files in the proc

1644434214
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
andrewrk yes, zig-cache/tmp being renamed to zig-cache/o (although I think this same issue happens in global cache as well) 

1644434428
andrewrk!~andrewrk@mail.ziglang.org
to be clear it's a file inside those dirs; the tmp dir itself won't get renamed

1644434480
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
I think it's the directory

1644434503
andrewrk!~andrewrk@mail.ziglang.org
I'm just saying we don't rename "tmp" we rename "tmp/foobar"

1644434515
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
oh right yes

1644434516
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
http://gopher.wdj-consulting.com:70/store/Procmon64_q0VgfJRg2v.png

1644434549
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
A subdirectory in zig-cache/tmp/A_HEX_STRING  being renamed to zig-cache/o/A_HEX_STRING

1644434565
andrewrk!~andrewrk@mail.ziglang.org
is it getting access denied because the destination already exists?

1644434588
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
doesn't look like it, ReplaceIfExists is set to true

1644434608
andrewrk!~andrewrk@mail.ziglang.org
does that work for directories though?

1644434613
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
note that it tends to work if "zig build" is invoked subsequent times, so looks like a race condition

1644434616
andrewrk!~andrewrk@mail.ziglang.org
I don't think you can replace a directory with a directory

1644434623
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
it may not work

1644434646
andrewrk!~andrewrk@mail.ziglang.org
there is a file locking mechanism that is supposed to protect such races. the rename is only supposed to be done while holding an exclusive lock

1644434670
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
is it possible anything could have a handle to the source directory or a file inside it?

1644434675
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
that would cause an access denied

1644434694
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
it's also possible that a subprocess is still being cleaned up and still has a handle open to it (causing the race condtion)

1644434807
andrewrk!~andrewrk@mail.ziglang.org
if that is happening it's a bug; the intent of the code is to not do that

1644434811
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
knowing that the next invocation of zig build will probably work, does that help rule anything out?  Would zig clean up that directory if this type of failure occurred?

1644434874
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
I was referring to a windows bug, where a subprocess exiting doesn't necessarily mean the kernel has cleaned up all it's handles

1644434910
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
i.e. https://devblogs.microsoft.com/oldnewthing/20120329-00/?p=7973

1644434944
andrewrk!~andrewrk@mail.ziglang.org
oh, well if we wait for a process to exit and its resources are not cleaned up yet that could certainly be an issue

1644434991
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
yeah I'm not certain this happens, but I've seen things that indicate this might happen on windows (at least that was our best explanation as to what was going wrong), but since this type of thing is so racy it's hard to know for sure

1644435036
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
that article does say if you wait on the process handle for termination complete, it should be done so maybe Windows doesn't do this

1644435119
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
I wish I could reproduce this, then I could add logs/tests to really figure out what's going on.  Unfortunately it only happens on some people's machines

1644435283
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
I think I'll write a simple app to try to reproduce this

1644435329
Andy71!~Andy71@adsl-81.109.242.234.tellas.gr
Hi everyone, new to zig here and I have a question. Is there a way to have custom debug code (other than std.debug.assert) that is compiled/executed only in the safe build modes (Debug, ReleaseSafe)?

1644435392
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
if (builtin.mode == .Debug)

1644435433
Andy71!~Andy71@adsl-81.109.242.234.tellas.gr
marler8997_ Thanks!

1644436743
jemius!~imperator@200116b82dee74002215dbef510d979e.dip.versatel-1u1.de
Earnestly, that's an interesting paper

1644438319
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
ok I wrote this small test app to see if Windows has its own issues with subprocesses and file handles not closing

1644438324
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
https://gist.github.com/marler8997/df5edd398580faa52d0ca708ce219982

1644438337
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
ping cr1901, could you try running that on your machine and see if you get any errors?

1644445980
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
marler8997_: I think you'll be pleased (for some value of pleased) :D http://gopher.wdj-consulting.com:70/paste/ff1080c9-2eb5-423c-bd8d-481b2fa9a02a.txt

1644446016
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
cr1901 yes!!

1644446034
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
holy shit this proves windows is fucking garbage!

1644446062
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
And that my machine is showing its age :P

1644446102
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
are you on an older machine?

1644446143
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Lenovo Thinkpad W520. It was new in Nov. 2011

1644446179
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Core i7 Sandy Bridge. I haven't upgraded it b/c it's still a respectable machine and it still works and I believe it "taking care of my machines" :P

1644446187
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
damn, so I guess this problem probably manifests more on slower older machines, hence why I never see it on my intel 11900k

1644446232
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
Jesus this is so much bullshit, I'm not sure what the right play here is

1644446280
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
I'm afraid I wouldn't know the right solution either :P. At least _a_ (if not _the_) bug was found

1644446345
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
I'm thinking I should convert this example to C and submit a bug report to microsoft somewhere

1644446388
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
zig translate-back-to-c

1644446479
Arnavion!arnavion@user/arnavion
Turning off AV may help, but yes it's a problem in general that closing the handle doesn't immediately allow you to delete the file

1644446488
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
oh as luck would have it, my MSVC install it broken, can't even include <stdio.h> are you serious Microsoft?

1644446500
Arnavion!arnavion@user/arnavion
There's no point sending a bug report. It's been like that since the dawn of time

1644446512
Arnavion!arnavion@user/arnavion
You have no choice but to retry

1644446527
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
Arnavion, it's even worse than that

1644446557
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
The main process hasn't opened a handle to any file, a child process opened a handle to it, and after it exits, the parent process can't always rename or delete it immediately

1644446583
Arnavion!arnavion@user/arnavion
Yes, same thing

1644446598
Arnavion!arnavion@user/arnavion
As I said, closing a handle doesn't immediately make the file available for deletion

1644446599
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
Not according to Raymond: https://devblogs.microsoft.com/oldnewthing/20120329-00/?p=7973

1644446655
Arnavion!arnavion@user/arnavion
Also you can open the files as shared instead of exclusive, if that makes sense for what you're doing with them

1644446681
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
Arnavion yeah that could help some cases

1644446689
Arnavion!arnavion@user/arnavion
<marler8997_> Not according to   < I assumed you were waiting on the child process you terminated, yes. My point is even if you waited, you'd still have the problem, for the reason I gave you

1644446717
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
sure but my point was this case was even worse than just opening a file/closing it

1644446734
Arnavion!arnavion@user/arnavion
It's all basically the same underlying thing

1644446738
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
it means the OS will signal that a process has exited before it has cleaned up all it's files

1644446748
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
sure, my point was just that it's even worse

1644446751
Arnavion!arnavion@user/arnavion
Things in the kernel keep files locked longer than the userspace that held them

1644446783
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
they are still independent issues though

1644446799
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
an os could leave handles open mid process, but then make sure they are all closed before signaling the process has exited

1644446921
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
Is retrying morally acceptable here :P?

1644446972
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
retrying is a potential solution, it should be pretty general in that it handles alot of cases

1644447985
andrewrk!~andrewrk@mail.ziglang.org
my goodness they cut llvm 14 rc1 already

1644448097
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
cr1901 got another one for you to try: https://gist.github.com/marler8997/e8e2de3601483f3fd06d319f81201eab

1644449712
Andy71!~Andy71@adsl-81.109.242.234.tellas.gr
I just realized that no new proposals are accepted at the moment after I prepared my proposal :-(

1644449743
Andy71!~Andy71@adsl-81.109.242.234.tellas.gr
Anyone knows when this will change?

1644450019
jaredmm!~jaredmm@user/jaredmm
When doing zig build run on Windows, I often run into an issue where the next build will fail with AccessDenied errors. I haven't had success troubleshooting it yet, but it sounds similar to what you were talking about (marler).

1644450061
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
marler8997_: http://gopher.wdj-consulting.com:70/paste/843956aa-a653-414e-a175-45087c077526.txt

1644450067
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
error: PathAlreadyExists

1644450119
cr1901!~cr1901@2601:8d:8600:911:8192:df18:486a:6454
This is also the last day I think I'm gonna be zig debugging, at least for a little bit. I wanted to quickly write an app, but I've gotten a bit too bogged down w/ fixing Windoze bugs and need to take a break.

1644450399
andrewrk!~andrewrk@mail.ziglang.org
Andy71, probably never. I have a pretty strong vision of where I want the language to go

1644450474
andrewrk!~andrewrk@mail.ziglang.org
your best bet is explaining your use case and see what the best thing the zig project has to offer is for that use case

1644450495
andrewrk!~andrewrk@mail.ziglang.org
if it's a use case the project cares about and it's not handled very well, then probably something will change to improve it, which may involve a language proposal, maybe not

