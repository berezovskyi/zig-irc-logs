1645624337
vendortrash!~abs@gate-hacon.hacon.de
hello

1645630417
plumeus!~plumeus@user/plumeus
After seeing at least 3 issues where people intentionally opened issues using the proposal template (with the "I understand, thank you. I will not submit a new proposal at this time") and editing the issue to remove it, I feel like the template should be reconsidered.

1645630512
plumeus!~plumeus@user/plumeus
Perhaps just make the box "This is not a proposal to change the language" (so the issue's scope is limited to the stdlib/tooling/etc) and let people write proposals?

1645632917
marler8997_!~marler899@96-19-96-19-162-162.cpe.sparklight.net
andrewrk I put together these build instructions for you if you're interesting in building dmd (with dmd) offstream: https://gist.github.com/marler8997/95b488d328454f94e558359966878f6d

1645634034
motiejus!~motiejus@2001:470:69fc:105::38fb
hi folks, another casting question: I need to pass `[]const u8` as a `void *` to some C code, and any kind of casting gymnastics always yield `error: cast discards const qualifier`, understandably so. How can I cast the slice in a way C can understand it (I'd like to leave it const if possible, because the C code indeed does not change the underlying array)

1645634218
ifreund!2940d10f8b@user/ifreund
motiejus: to get rid of const, you need to use @intToPtr(@ptrToInt(foo));

1645634234
ifreund!2940d10f8b@user/ifreund
it's the nuculear option

1645634288
plumeus!~plumeus@user/plumeus
Sounds amazing.

1645635547
motiejus!~motiejus@2001:470:69fc:105::38fb
thanks. That worked: `@intToPtr(?*anyopaque, @ptrToInt(&packed_mphf[4]));`

1645635598
motiejus!~motiejus@2001:470:69fc:105::38fb
"here is a nuke, use it wisely" -- someone in 2015 or 2016

1645638611
luuk!~luuk@user/luuk
motiejus: Do you have control over the API? If so, wouldn't @ptrCast(?*const anyopaque, &packed_mphf[4]) be better?

1645639943
motiejus!~motiejus@2001:470:69fc:105::38fb
I could if I fork this: https://sourceforge.net/p/cmph/git/ci/master/tree/src/bdz.c#l685

1645640025
motiejus!~motiejus@2001:470:69fc:105::38fb
i.e. it's accepting a non-const pointer and is then only reading from it

1645640207
luuk!~luuk@user/luuk
Ah oke, gotcha :)

