1642814079
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
What does a pointer being 'aaaaaaa...' mean?

1642814111
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
I somehow have gotten myself into a position where an allocator is (according to '{any}': `Allocator{ .ptr = anyopaque@aaaaaaaaaaaaaaaa, .vtable = Segmentation fault at address 0x0`

1642814259
nektro!~meg@75-164-170-164.ptld.qwest.net
that means it's undefined

1642814285
nektro!~meg@75-164-170-164.ptld.qwest.net
would need more context to help fix

1642815050
winter!~quassel@user/winter
<andrewrk> this linker line looks like static clang + static lld + dynamic LLVM <-- would this be done by setting `-DZIG_STATIC_LLVM=on`? if so, i've already tried that with no luck :/.

1642815065
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
Here's the code, I have to step out for a bit, but I'll be back in a couple hours https://pastebin.com/nLnD8iFW

1642815075
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
I honestly have no idea if I'm doing async right

1642815141
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
cause the allocator seems normal in main() and then is broken in read_message, most of the time. I've seen it work like twice (out of probably 20-30 tries), I don't see how it could be becoming undefined, it's only assigned and never freed

1642815488
winter!~quassel@user/winter
yeah statically linking llvm doesn't work either :/

1642815501
winter!~quassel@user/winter
what the hell c++

1642816486
Arnavion!arnavion@user/arnavion
da_lorax: client.handle() is being called before client is set to the Client { } value

1642816544
Arnavion!arnavion@user/arnavion
So depending on how the value is blitted into the pointee, it might be that self.stream is valid and self.allocator isn't

1642818122
andrewrk!~andrewrk@mail.ziglang.org
we got a hot code swapping PoC working on the stream today :)

1642818185
nektro!~meg@75-164-170-164.ptld.qwest.net
yoo nice!

1642818213
winter!~quassel@user/winter
nice

1642841631
nektro!~meg@75-164-170-164.ptld.qwest.net
goodnight all o/

1642847194
Franciman!~Franciman@mx1.fracta.dev
hi, if I have a struct type like this `const S = struct { a: i32, b: i32 }`, and i define `var x: S = undefined`

1642847206
Franciman!~Franciman@mx1.fracta.dev
is it correct to initialize it as follows:

1642847216
Franciman!~Franciman@mx1.fracta.dev
`x.a = 12; x.b = 14;` before accessing it?

1642847240
Franciman!~Franciman@mx1.fracta.dev
or must i do, `x = .{ .a = 12, .b = 13 }` ?

1642851141
ofelas!~ofelas@ti0071a400-5026.bb.online.no
either way should work, I think "= undefined" is basically a "memset" 0xaa, test "struct.S"... x=S{ .a = -1431655766, .b = -1431655766 }

1642851244
Franciman!~Franciman@mx1.fracta.dev
thanks

1642851259
Franciman!~Franciman@mx1.fracta.dev
i was asking because i thought it was illegal to access an undefined piece of memory

1642851265
Franciman!~Franciman@mx1.fracta.dev
but i guess it's only about reaing

1642851267
Franciman!~Franciman@mx1.fracta.dev
reading*

1642851501
ofelas!~ofelas@ti0071a400-5026.bb.online.no
the compiler may even optimize the undefined away in simple cases, https://pastebin.com/bfghfLJV

1642851531
Franciman!~Franciman@mx1.fracta.dev
thanks ofelas 

1642852607
Arnavion!arnavion@user/arnavion
The standard way (as demonstrated by many examples in the language reference) of filling in arrays is   var array: [N]T = undefined; arr[0] = ...; arr[1] = ...;   which is conceptually similar to setting x.a and x.b instead of all of x, so it'd seem to be okay

1642863398
PMunch!~PMunch@user/pmunch
Hello, I'm trying to build a little test project for Zig on an Arduino Uno. I cloned this project: https://github.com/SebastianZaha/avr-arduino-zig and after fixing some FileSource related issues I ran into this error: http://ix.io/3N89. I guess I'm using a newer version of Zig (0.9.0) than what this was built for but does anyone know how I might fix this?

1642863484
Franciman!~Franciman@mx1.fracta.dev
hi PMunch 

1642863489
ugla!~ugla@2001:470:69fc:105::2b5
PMunch: you can do `_ = maybe_stack_trace;` to mark that parameter as unused,

1642863495
PMunch!~PMunch@user/pmunch
Hello Franciman

1642863499
Franciman!~Franciman@mx1.fracta.dev
yes

1642863505
PMunch!~PMunch@user/pmunch
ugla, aha that's nice

1642863720
PMunch!~PMunch@user/pmunch
Is there some kind of release mode I should enable by the way?

1642863732
Franciman!~Franciman@mx1.fracta.dev
there are 3 iirc

1642863752
Franciman!~Franciman@mx1.fracta.dev
https://ziglang.org/documentation/0.9.0/#Build-Mode

1642863767
Franciman!~Franciman@mx1.fracta.dev
Release{Fast,Safe,Small}

1642863783
Franciman!~Franciman@mx1.fracta.dev
you can do

1642863788
Franciman!~Franciman@mx1.fracta.dev
zig build -O ReleaseFast

1642863790
Franciman!~Franciman@mx1.fracta.dev
for example

1642863814
PMunch!~PMunch@user/pmunch
-O?

1642863863
Franciman!~Franciman@mx1.fracta.dev
yes

1642863874
Franciman!~Franciman@mx1.fracta.dev
uhm the docs say -D

1642863875
PMunch!~PMunch@user/pmunch
Hmm, it didn't like that. Just says that -O is unrecognised

1642863883
Franciman!~Franciman@mx1.fracta.dev
what about -D ReleaseFast

1642863885
Franciman!~Franciman@mx1.fracta.dev
and also

1642863886
ikskuh!~xq@2a0d:5940:6:163::ad7e
how are you building?

1642863897
ikskuh!~xq@2a0d:5940:6:163::ad7e
"zig build -Drelease-fast" is a normal interface to build.zig

1642863908
ikskuh!~xq@2a0d:5940:6:163::ad7e
"zig build" has a different api from "zig build-exe"

1642863932
PMunch!~PMunch@user/pmunch
Invalid option: -Drelease-fast

1642863934
Franciman!~Franciman@mx1.fracta.dev
    exe.setBuildMode(b.standardReleaseOptions()); <- you are required to put this in the build.zig

1642863940
PMunch!~PMunch@user/pmunch
Aha

1642863951
Franciman!~Franciman@mx1.fracta.dev
but does it make sense, in this case, ikskuh?

1642863994
ikskuh!~xq@2a0d:5940:6:163::ad7e
i scrolled up

1642863994
ikskuh!~xq@2a0d:5940:6:163::ad7e
https://github.com/SebastianZaha/avr-arduino-zig/blob/master/build.zig#L26

1642863999
ikskuh!~xq@2a0d:5940:6:163::ad7e
release mode is fixed in that project

1642864011
Franciman!~Franciman@mx1.fracta.dev
oh boy

1642864015
Franciman!~Franciman@mx1.fracta.dev
totally missed it

1642864017
Franciman!~Franciman@mx1.fracta.dev
:)

1642864022
PMunch!~PMunch@user/pmunch
I found a exe.setBuildMode(.ReleaseSafe); option in the build.zig file

1642864056
PMunch!~PMunch@user/pmunch
Tried changing that to ReleaseSmall and ReleaseFast and got some interesting results

1642864450
PMunch!~PMunch@user/pmunch
Hmm, Zig seems to be a pretty nice little language. Haven't really tried it myself before.

1642872736
Nulo!~Nulo@user/nulo
Anyone know what happened to nrdmn?  https://github.com/nrdmn/awesome-zig They haven't touched GitHub for over a year and I forked their awesome-zig list https://github.com/catdevnull/awesome-zig

