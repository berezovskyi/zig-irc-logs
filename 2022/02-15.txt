1644896664
andrewrk!~andrewrk@mail.ziglang.org
0.9.1 is released: https://ziglang.org/download/0.9.1/release-notes.html

1644896675
plumeus!~plumeus@user/plumeus
wow

1644896690
plumeus!~plumeus@user/plumeus
I totally forgot about it

1644896919
winter!~winter@user/winter
gz on the release!

1644896922
winter!~winter@user/winter
one question, though:

1644896925
winter!~winter@user/winter
> ðŸ’€ If the Operating System is proprietary then the target is not marked deprecated by the vendor, such as macos/x86.

1644896942
winter!~winter@user/winter
shouldn't this be "the target is marked deprecated"

1644896949
winter!~winter@user/winter
not "not marked"?

1644898141
daurn!~daurnimat@vultr.daurnimator.com
hmmm. release tests are failing for me

1644898210
daurn!~daurnimat@vultr.daurnimator.com
http://sprunge.us/2yuzFv 

1644898766
daurn!~daurnimat@vultr.daurnimator.com
it's not obvious which 'test' block that is even referring to

1644911799
cCCCCcccccCCc!~b@user/ccccccccccccc
When using zig as the system 'cc' and 'c++', how do you fix errors related to resolving libc paths? I tried filling out a file 'zig libc' generates, placing it in /etc and pointing ZIG_LIBC to it, but that wasn't it. 

1644911814
cCCCCcccccCCc!~b@user/ccccccccccccc
It just needs to look in /lib and /include, really. 

1644911952
cCCCCcccccCCc!~b@user/ccccccccccccc
Doing 'zig cc -mcpu=x86_64_v3 -print-file-name=crt1.o' from within the chroot actually prints the correct result, so does the include path query. It looks like zig never attempts it?

1644956716
andrewrk!~andrewrk@mail.ziglang.org
cCCCCcccccCCc, what error are you getting when you don't try to workaround this issue?

1644957600
andrewrk!~andrewrk@mail.ziglang.org
winter, that sentence is a requirement for a target to be in that tier

1644957610
andrewrk!~andrewrk@mail.ziglang.org
it's a bit unintuitive. I'll think about how to restructure it

1644957665
andrewrk!~andrewrk@mail.ziglang.org
"A green check mark (âœ…) indicates the target meets all the requirements for the support tier. The other icons indicate what is preventing the target from reaching the support tier. In other words, the icons are to-do items."

1644960955
cCCCCcccccCCc!~b@user/ccccccccccccc
andrewrk: It's consistently the same error. 

1644960960
cCCCCcccccCCc!~b@user/ccccccccccccc
<< error: The compilation links against libc, but Zig is unable to provide a libc for this operating system, and no --libc parameter was provided, so Zig attempted to invoke the system C compiler in order to determine where libc is installed. However the system C compiler is `zig cc`, so no libc installation was found. >>

1644960988
cCCCCcccccCCc!~b@user/ccccccccccccc
<<

1644960989
cCCCCcccccCCc!~b@user/ccccccccccccc
root:/$ zig cc -print-file-name=crt1.o

1644960999
cCCCCcccccCCc!~b@user/ccccccccccccc
 /lib/crt1.o

1644961000
cCCCCcccccCCc!~b@user/ccccccccccccc
>>

1644961009
cCCCCcccccCCc!~b@user/ccccccccccccc
If it tried, however, it'd resolve. 

1644962538
_Guest3578!~Guest35@2001:470:b509:1c3:1484:532c:f913:5f1c
Hi. Is there a way to get a value of an int constant by name? The name is a comptime string, value is an int.

1644968864
andrewrk!~andrewrk@mail.ziglang.org
cCCCCcccccCCc, what error did you get when you tried the suggestion of supplying a libc file?

1644969467
cCCCCcccccCCc!~b@user/ccccccccccccc
andrewrk: Well, I supplied it via ZIG_LIBC which I think is a way of doing that, yeah? Same error message. 

1644969558
andrewrk!~andrewrk@mail.ziglang.org
if you supply a libc file and it says "you didn't supply a libc file" that's a bug

1644969593
andrewrk!~andrewrk@mail.ziglang.org
I don't see how you could get that message if you provided a libc file though

