1646996864
pfeld!~user@host-87-12-213-10.business.telecomitalia.it
hello, I can get the field value with a string with @field, but how can I set the value?

1646998394
ikskuh!~xq@v43666.php-friends.de
the same way :

1646998397
ikskuh!~xq@v43666.php-friends.de
@field(foo, "bar") = 10;

1646999159
pfeld!~user@host-87-12-213-10.business.telecomitalia.it
:O

1647001706
plumeus!~plumeus@user/plumeus
I'm asking this on behalf of somebody else, but does Zig have a easy way to check if a binary is in PATH?

1647001804
ikskuh!~xq@v43666.php-friends.de
not sure

1647001841
plumeus!~plumeus@user/plumeus
I think `std.process` has some stuff where you can call a bin and it'll return an error if it can't be called

1647001870
plumeus!~plumeus@user/plumeus
but that won't help if you simply want to know if it's in PATH, I guess. Although I can't imagine such a use-case.

1647001970
ikskuh!~xq@v43666.php-friends.de
os.zig execvpeZ_expandArg0 

1647001976
ikskuh!~xq@v43666.php-friends.de
has an impl for this

1647002021
plumeus!~plumeus@user/plumeus
wow

1647002144
ikskuh!~xq@v43666.php-friends.de
hm?

1647003156
plumeus!~plumeus@user/plumeus
I just found it interesting because that was a function I never would have figured to look at on my own

1647003239
ikskuh!~xq@v43666.php-friends.de
it's the only one that needs to look into path

1647003258
ikskuh!~xq@v43666.php-friends.de
checking if a executable exists, then running it at a later point is probably a race condition

1647006411
Earnest!~earnest@user/earnestly
Look before you leap only makes sense if the destination doesn't change

1647006423
Earnest!~earnest@user/earnestly
(Which in almost ever case is not something that can be guaranteed)

1647006432
Earnest!~earnest@user/earnestly
every*

1647009140
plumeus!~plumeus@user/plumeus
What if I want to check if an optional dependency exists on a system and give feedback on whether it does? idk

1647023266
ifreund!2940d10f8b@user/ifreund
try to run it and see if it fails wit ENOENT

1647023595
tsmanner!~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net
plumeus along the same lines, you could subprocess a call to `which` with child_process https://github.com/ziglang/zig/blob/master/lib/std/child_process.zig

