1642465858
leon-p!1b22ab9492@2604:bf00:561:2000::18c
so I have a Context struct type and one global instance of that. The struct contains a function with a `self: *Context` parameter. When I want to call the function, then I get "error: parameter of type '*Context' must be declared comptime".

1642465868
leon-p!1b22ab9492@2604:bf00:561:2000::18c
and I am not quite sure what the compiler wants to tell me here

1642466136
leon-p!1b22ab9492@2604:bf00:561:2000::18c
If I make the parameter comptime the warning goes away. And sure, the pointer is known at comptime, but I still don't get why it complains when I don't mark the parameter as such...

1642467115
voldial!~user@user/voldial
I got zls/nvim all happy, and I can tab complete zig stuff now is it possible to collapse/hide scopes? I'm not sure what that feature is called.

1642467730
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
is io_mode = .evented not supported on windows, or am I doing something else wrong?

1642467825
nektro!~nektro@75-164-170-164.ptld.qwest.net
a lot of it is still TODO on windows for now yes

1642467871
nektro!~nektro@75-164-170-164.ptld.qwest.net
re: std.event.Loop, but std.Thread.Pool should work since thats what zig itself uses iirc

1642468042
gw1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
voldial: I think vim has that builtin

1642468046
gw1!g-w1@2600:3c03::f03c:92ff:fe2f:c92f
something like fold

1642469671
andrewrk!~andrewrk@mail.ziglang.org
daurn, thanks for the reminder, I'll revisit this issue

1642499572
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
Is there a cooler way to do this: https://pastebin.com/Tdbiv02j

1642499743
ikskuh!~xq@v43666.php-friends.de
da_lorax: use ArrayListUnmanaged, which is smaller than ArrayList and can be default-initialized 

1642499771
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
Can that still grow?

1642499799
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
I don't know how big they each need to be at this point (and it's not necessarily the same for all of them)

1642499811
ikskuh!~xq@v43666.php-friends.de
https://bpa.st/Y27A

1642499823
ikskuh!~xq@v43666.php-friends.de
the unmanaged variant doesn't store the allocator itself

1642499829
ikskuh!~xq@v43666.php-friends.de
which means you have to pass it in

1642500044
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
Hrrm... I dunno how I feel about them needing the same allocator every call, parallel structure like that has bitten me a few times :)

1642500098
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
but like, in general, there's not a more idiomatic way to say "I want to initialize a list of these, each with this allocator" other than writing it all out?

1642500138
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
Like... a loop maybe? I tried that but it didn't like that it was temporarily undefined

1642500276
ikskuh!~xq@v43666.php-friends.de
you can loop

1642500281
ikskuh!~xq@v43666.php-friends.de
but you need temporary undefined

1642500284
ikskuh!~xq@v43666.php-friends.de
no way around that

1642502351
ifreund!2940d10f8b@user/ifreund
leon-p: hard to answer that without more context (heh). Do you have the code up somewhere already?

1642502478
leon-p!1b22ab9492@2604:bf00:561:2000::18c
ifreund: https://git.sr.ht/~leon_plickat/nfm/tree/69a9a8d80a895d3be003157cf9f5466e958232ef/item/src/nfm.zig#L74

1642502739
nektro!~nektro@75-164-170-164.ptld.qwest.net
what error do you get if its not comptime

1642502777
leon-p!1b22ab9492@2604:bf00:561:2000::18c
nektro: ./src/nfm.zig:74:25: error: parameter of type '*Context' must be declared comptime

1642502806
nektro!~nektro@75-164-170-164.ptld.qwest.net
oh its likely line 70, you have a field with type type

1642502835
nektro!~nektro@75-164-170-164.ptld.qwest.net
try making the scoped logger a decl instead

1642502839
ifreund!2940d10f8b@user/ifreund
yep, that'd do it

1642502876
leon-p!1b22ab9492@2604:bf00:561:2000::18c
interesting. Making logger a `type` was a hack, interesting to see it biting me now

1642502918
leon-p!1b22ab9492@2604:bf00:561:2000::18c
but yeah, now that I see it I get it, thanks!

1642503179
nektro!~nektro@75-164-170-164.ptld.qwest.net
brb trying out weechat

1642503598
nektro!~meg@75-164-170-164.ptld.qwest.net
oh cool, now im on the terminal like a real hacker hehehe /s

1642503606
nektro!~meg@75-164-170-164.ptld.qwest.net
that's not true, we're all valid here

1642506120
Earnestly!~earnest@user/earnestly
nektro: Now you can create stories by visiting starbucks and compiling zig

1642506241
nektro!~meg@75-164-170-164.ptld.qwest.net
i haven't owned a laptop in almost a year, but next time i do maybe :P

1642506731
Earnestly!~earnest@user/earnestly
Taking an entire desktop PC into a starbucks would also create stories for the people there lol

1642506772
nektro!~meg@75-164-170-164.ptld.qwest.net
heh, for sure

1642507093
Franciman!~Franciman@mx1.fracta.dev
is working at starbucks still a thing?

1642507160
nektro!~meg@75-164-170-164.ptld.qwest.net
i mean they're still open so i'd assume so

1642507334
Earnestly!~earnest@user/earnestly
$starbucks where starbucks is any reasonably global cafe brand

1642507668
Franciman!~Franciman@mx1.fracta.dev
wow

1642507678
Franciman!~Franciman@mx1.fracta.dev
dope

1642533995
andrewrk!~andrewrk@mail.ziglang.org
ifreund, apparently that prefetch PR is making the drone CI fail and I have no idea why. it's driving me nuts

1642534044
ifreund!2940d10f8b@user/ifreund
andrewrk: yeah, I saw the commit message

1642534058
ifreund!2940d10f8b@user/ifreund
Could it be related to that issue I mentioned?

1642534078
andrewrk!~andrewrk@mail.ziglang.org
I don't see how because we don't run the -ofmt=c tests on drone ci

1642534086
ifreund!2940d10f8b@user/ifreund
yeah, probably not then

1642534105
andrewrk!~andrewrk@mail.ziglang.org
it's crashing in behavior tests in ReleaseSafe mode with -lc

1642534106
ifreund!2940d10f8b@user/ifreund
I skimmed through it but nothing else jumped out at me

1642534120
andrewrk!~andrewrk@mail.ziglang.org
and I can't repro it on the aarch64 machine that I have

1642534134
andrewrk!~andrewrk@mail.ziglang.org
it runs valgrind clean

1642534138
andrewrk!~andrewrk@mail.ziglang.org
I'm about to try a debug build of llvm

1642534227
ifreund!2940d10f8b@user/ifreund
andrewrk: my best bet is that llvm's instruction cache prefetch thing in the aarch64 backend happens to segfault given whatever set of cpu features the drone CI has

1642534254
ifreund!2940d10f8b@user/ifreund
but wouldn't we hit that with the stage1 impl then? hmm

1642534286
andrewrk!~andrewrk@mail.ziglang.org
yeah nothing is changed really, we already have test coverage for that

1642537145
freshcoffee2!~fresh@user/freshcoffee
re: @prefetch fails: if I am reading drone-ci (aarch64) right, the 2 fails that I've sampled happen: 1 with @cmpxchgWeak(), other @atomicRmw(),

1642537154
freshcoffee2!~fresh@user/freshcoffee
one is release fast, other is release safe,

1642537178
andrewrk!~andrewrk@mail.ziglang.org
no assertion tripped with debug llvm

1642537194
freshcoffee2!~fresh@user/freshcoffee
this smells like that old atomic rmw bug on cavium that.... iirc, lemon patched llvm, but maybe the patch doesn't have full coverage?

1642537273
andrewrk!~andrewrk@mail.ziglang.org
hmmm interesting hypothesis

1642537440
freshcoffee2!~fresh@user/freshcoffee
sampled 3 more and they all failed ReleaseSafe-c-multi --> testAtomicRmwFloat()

1642537650
andrewrk!~andrewrk@mail.ziglang.org
huh. that is strange

1642537667
andrewrk!~andrewrk@mail.ziglang.org
does that suggest a workaround?

1642538352
freshcoffee!~fresh@user/freshcoffee
maybe the old `if (.arch == .aarch64) return error.SkipZigTest` at places to avoid @cmpxchgWeak() and @atomicRmw()

1642538360
freshcoffee!~fresh@user/freshcoffee
inside atomics.zgi

1642538391
andrewrk!~andrewrk@mail.ziglang.org
will give that a try in  #10624

1642539666
andrewrk!~andrewrk@mail.ziglang.org
freshcoffee, how did you do the sampling?

1642539682
andrewrk!~andrewrk@mail.ziglang.org
that seems like a nice trick

1642539699
freshcoffee!~fresh@user/freshcoffee
by samples I mean just looking at the log files from drone

1642539706
freshcoffee!~fresh@user/freshcoffee
failures

1642539721
andrewrk!~andrewrk@mail.ziglang.org
oh. I didn't see that information

1642539772
freshcoffee!~fresh@user/freshcoffee
(edited to clarify in PR commment)

1642539780
andrewrk!~andrewrk@mail.ziglang.org
oh! it's up there. I forgot about that

1642539813
andrewrk!~andrewrk@mail.ziglang.org
ahhh right because it printed "1078 passed; 4 skipped; 1 failed."

1642539822
andrewrk!~andrewrk@mail.ziglang.org
my goodness. I'm the one who coded this and I forgot how it worked

1642539839
andrewrk!~andrewrk@mail.ziglang.org
the answer was just in the logs the whole time

1642539864
freshcoffee!~fresh@user/freshcoffee
also we are a bit lucky. there's a 5 MB log limit with drone. Glad the "download log file" falls within that size; a TODO for me is to find and fix that stupid limit.

1642539882
andrewrk!~andrewrk@mail.ziglang.org
oh I fixed a related issue recently that made the logs much smaller

1642540013
freshcoffee!~fresh@user/freshcoffee
yeah for test failures, I pretty much dumb it down to... download log, jump to end, backwards search for FAIL a few times :)

1642540530
ifreund!2940d10f8b@user/ifreund
it would be nice if the failures were repeated at the end of the run to make them easier to find

1642545334
da_lorax!~daloraxye@2001:470:69fc:105::1:5e15
How do I get tests in included files to run?

1642545591
freshcoffee!~fresh@user/freshcoffee
take a peek at lib/std/io.zig bottom `test {}` block. Use `_ = ...;` and either with an import or the const value of another import

1642545616
freshcoffee!~fresh@user/freshcoffee
s/value/result/

1642545642
Arnavion!arnavion@user/arnavion
or   std.testing.refAllDecls(@This());

