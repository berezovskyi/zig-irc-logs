1648341295
kotto!~kotto@2001:8a0:ee37:f500:7e7a:91ff:fe7a:30fa
> /set weechat.look.buffer_time_format "${color:240}%H:%M"

1648386247
iceman[m]!~iceman@2001:470:69fc:105::1:e686
Hello my fellow ziggers

1648386321
iceman[m]!~iceman@2001:470:69fc:105::1:e686
I just leaned, it is is Ziguana apparently 

1648389400
rLapz!~rLapz@user/rLapz
ðŸ‘€

1648408405
haze!~haze@user/haze
iceman[m] you arent the only one

1648412314
energizer!~energizer@user/energizer
cli_allocation.zig from the docs gives `error: type 'std.mem.Allocator' not a function` 

1648412391
ifreund!2940d10f8b@user/ifreund
energizer: make sure your zig version and docs version match

1648412405
ifreund!2940d10f8b@user/ifreund
you're probably reading master docs and using zig 0.8.1?

1648412437
energizer!~energizer@user/energizer
yes

1648412440
energizer!~energizer@user/energizer
thanks

1648412447
ifreund!2940d10f8b@user/ifreund
no problem!

1648415416
andrewrk!~andrewrk@mail.ziglang.org
I would encourage using zig 0.9.1 even if your goal is stability

1648416362
haze!~haze@user/haze
i use the binary i packet sniffed from your local machine because stage2

1648423085
energizer!~energizer@user/energizer
my first program https://bpa.st/ZHLQ i benchmared it against wc(1) and wc is a bit faster

1648423149
energizer!~energizer@user/energizer
50ms vs 60ms on a file of 500k lines

1648423209
energizer!~energizer@user/energizer
how does the code look?

1648423443
Earnestly!~earnest@user/earnestly
Just to note that coreutils wc uses avx2 (if available)

1648423718
Levy[m]!~tauoverpi@2001:470:69fc:105::1:71a5
energizer: print to a buffer before you send it to stdout (also try a strace of the process to see why)

1648423729
Earnestly!~earnest@user/earnestly
K&R asks you to implement something like this and does so without needing to allocate: https://0x0.st/oqmp.c

1648423767
Earnestly!~earnest@user/earnestly
(Without having to iterate over the collection twice)

1648423793
energizer!~energizer@user/energizer
in single pass https://bpa.st/B24A takes 35ms

1648423864
Levy[m]!~tauoverpi@2001:470:69fc:105::1:71a5
and have a look at bufferedReader in std.io

1648423882
energizer!~energizer@user/energizer
i guess word count wasn't a good problem choice since the whole point of this exercise was to learn about allocators :)

1648423949
Levy[m]!~tauoverpi@2001:470:69fc:105::1:71a5
hmmm, what about word frequency?

1648424072
Earnestly!~earnest@user/earnestly
Huh, that K&R C version is faster than coreutils wc: 1.68 Â± 0.06 times faster

1648424366
tleydxdy[m]!~tleydxdy@2001:470:69fc:105::16a3
coreutils wc knowd about utf-8

1648424373
tleydxdy[m]!~tleydxdy@2001:470:69fc:105::16a3
s/knowd/knows/

1648424402
tleydxdy[m]!~tleydxdy@2001:470:69fc:105::16a3
but idk if that factors in here

1648424480
Earnestly!~earnest@user/earnestly
Likely

1648424524
Earnestly!~earnest@user/earnestly
I'd have to measure it properly but I don't feel like going into it

