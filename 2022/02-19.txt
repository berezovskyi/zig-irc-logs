1645261637
motiejus!~motiejus@2001:470:69fc:105::38fb
hi folks. Is there an `@intCast` equivalent that returns `?Type` or `!Type` if it doesn't fit the destination type?

1645261771
plumeus!~plumeus@user/plumeus
https://ziglang.org/documentation/master/std/#std;math.cast

1645261773
plumeus!~plumeus@user/plumeus
Maybe this?

1645261816
plumeus!~plumeus@user/plumeus
Yeah, I think that looks good.

1645262718
motiejus!~motiejus@2001:470:69fc:105::38fb
yeah, exactly. Thanks. :)

1645262734
motiejus!~motiejus@2001:470:69fc:105::38fb
need to study `std.math` and `std.mem` more, it has some great utilities

1645262761
plumeus!~plumeus@user/plumeus
You could always just reinvent the wheel.

1645262795
motiejus!~motiejus@2001:470:69fc:105::38fb
I did enough of that in C, there is a reason I am writing zig now

1645262798
motiejus!~motiejus@2001:470:69fc:105::38fb
:)

1645262967
plumeus!~plumeus@user/plumeus
https://news.ycombinator.com/item?id=30395016

1645262970
plumeus!~plumeus@user/plumeus
Cool, `unreachable` in C.

1645281639
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
i'm porting my project on 0.10 baseline, and seems the anytype has been removed from language : #10705 

1645281673
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
how can i have a handler function that can be introspected using reflexion ? 

1645281689
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
routez use this feature in request handling

1645281710
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
and i don't find any similar elements ?

1645281746
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
https://github.com/Vexu/routez/blob/master/src/routez/router.zig#L86

1645281777
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
thx

1645282064
plumeus!~plumeus@user/plumeus
The issue says to use `?*const anyopaque` instead of `anytype`. I presume you already tried this?

1645282131
plumeus!~plumeus@user/plumeus
wait, that's for `@typeInfo`

1645282152
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
yes, and any opaque loose the type, routez use typeinfo to get function handlers parameters

1645282340
Franciman!~Franciman@mx1.fracta.dev
frett27: why don't you use the «type» type?

1645282465
plumeus!~plumeus@user/plumeus
Would that work?

1645282573
plumeus!~plumeus@user/plumeus
That would mean `handler` cannot have a value associated with it; only a type.

1645282653
andrea!3f138254b4@2604:bf00:561:2000::38
you could add a parameter for the type and use that to declare the parameter for the handler

1645282675
andrea!3f138254b4@2604:bf00:561:2000::38
https://github.com/ziglang/zig/blob/master/lib/std/mem.zig#L214

1645282728
plumeus!~plumeus@user/plumeus
If the type is always known at comptime, should be fine.

1645282836
plumeus!~plumeus@user/plumeus
`fn getRoute(comptime T: type) anytype { return struct { handler: T }; }` or similar?

1645282860
andrea!3f138254b4@2604:bf00:561:2000::38
if you need complex logic to derive the type of the handler from the type parameter, you could implement a comptime function to do that

1645282948
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
yes let's give it a try, move to comptime, i don't currently know the constraints behind the runtime usage of handler for routez (anytype) 

1645282989
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
currently it use typeInfo to get the arguments , https://github.com/Vexu/routez/blob/master/src/routez/router.zig#L97

1645283017
luuk!~luuk@user/luuk
frett27: You can see how I solved it for my router <https://github.com/Luukdegram/apple_pie/blob/master/src/router.zig> perhaps you can get some inspiration from that.

1645283067
luuk!~luuk@user/luuk
Changing to this API however, made me realise I want to step away from this whole 'capture' as function argument mechanic. The end result is cool and all, but not a good UX nor API design.

1645283240
frett27!~frett27@2a01:e0a:58a:6c00:bc61:83bb:86a1:c8c4
yes, i'll dig into this, there are room then for the language between full comptime and strict defined types :-)

1645283476
dwcraig!~dwcraig@c-73-61-103-149.hsd1.nh.comcast.net
exit

1645283498
dwcraig!~dwcraig@c-73-61-103-149.hsd1.nh.comcast.net
oops haha

