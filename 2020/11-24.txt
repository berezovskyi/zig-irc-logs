1606185018
KIMI
if i pass []const u8 string, and i store it in a struct variable same []const u8, what is size of struct? where string is stored?

1606185289
g-w1
iirc a slice is just the same thing as a `struct { ptr: [*]u8, len: usize }` so it would be size + size = 128 bits on 64 bit system

1606185435
KIMI
where it is stored? if i don't say [256] const u8, do i need to free memory?

1606185632
g-w1
a string literal ("this") is stored directly in the binary, and any other []const u8 you can choose how/where to store it. if you are getting it from an api, it should tell you if you own it now, and if you should free it

1606186171
KIMI
ok thanks

1606190328
moinstar
expected type '[]const u8', found '?[]const u8'

1606190351
moinstar
how to convert '?[]const u8' to '[]const u8'

1606193164
daurnimator
moinstar: `orelse` ?

1606199232
KIMI
is there a good library for parsing text line by line?

1606199235
KIMI
or an API

1606201113
daurnimator
KIMI: split into lines (with e.g. `.readUntilDelimiter*`) then write a parser for whatever you need within the line

1606201384
KIMI
what is it from?

1606202309
daurnimator
KIMI: its part of the reader interface

1606239634
hlolli__
is there a way to print pointer address? I'm asking to debug a case where I'm not sure if an object is the same or different.

1606239651
g-w1
"{*}

1606239714
hlolli__
thanks g-w1 ! std.debug.print("ptr={*}\n", .{ptr}); from the docs :)

1606247345
hlolli__
Are the std.log loggers made to be eliminated when compiling to an optimized binary?

1606247620
ifreund
hlolli__: they can be

1606247648
ifreund
you can customize the behavior by defining your own log function in your root source file

1606247660
hlolli__
it seems to be default tough?

1606247690
ifreund
indeed

1606247711
ifreund
they aren't all eliminated though, only the lower priority ones

1606247747
hlolli__
ok then I don't worry :) I use these log calls extensively, I was under the impression that wasm32-wasi was broken with optimizations, but when I also encountered it on x86_32-linux, I realized it must be removed.

1606247758
hlolli__
std.log.info to be percise, low priority indeed

1606247829
ifreund
you can override this behavior by setting the log level manually instead of letting the std determine it based off of build mode

1606247869
hlolli__
another question since you mentioned root source file, I've noticed that it's bit tricky to test files in isolation. If I want to test a nested file which imports file in ancestor directory, I'll get an error. Which I'm able to bypass with aliases. I don't know a good workflow to solve this, but I can solve it with --pkg-begin and --pkg-end statements

1606248028
hlolli__
in context of std.log, I'd love to create a namespace-ish file for my own loggers, but I'm afraid it would be a hassle to import them if I'm frequently changing from runnin build-exe, build.zig and zig test interchangably.

1606248046
ifreund
I'd recommend using a file in the toplevel directory of your project as a root test file and importing the others from their

1606248055
ifreund
you can add a test step to your build.zig

1606248073
ifreund
once you have a build.zig set up you should only need zig build really

1606248096
hlolli__
true, but I'd need to create build step for each and every file if I'd want to run one file at a time?

1606248171
hlolli__
but toplevel file for testing, which I'd comment out imports could work well actually.

1606248198
ifreund
you can also have build options which cause different things to be tested

1606248220
ifreund
build.zig is normal, turing complete zig code, anything is possible

1606248278
hlolli__
yes, I guess someone needs to create a nice testing framework with file watchers, aliases and glob file selectors.

1606248284
hlolli__
:) all good

1606248313
ifreund
that's certainly possible, just waiting for someone to do it :P

1606254546
andrewrk
it's designed to be declarative though. there are things that are more and less portable to do inside a build.zig

1606254566
andrewrk
this will become more obvious during the release cycle where we work on the package manager

1606255185
g-w1
is there any reason why stage2 relies on the system standard library instead of the one already in the zig repo? I have been having trouble with wrong versions of the standard library when developing stage2, but don't want to build the compiler release every time the repo updates. I think a good solution to this would just be to override std to be lib/std/std.zig if this is possible for stage2. or am

1606255188
g-w1
I missing something?

1606255632
andrewrk
g-w1, zig looks for the lib/ files relative to its own binary path, starting in the same directory and then searching upwards at parent directories

1606255658
andrewrk
could it be that zig build installed the lib/ files into the build/ directory next to the zig binary, and those are the ones being detected?

1606255673
andrewrk
you can run `zig env` to print the detected lib/ directory

1606255869
g-w1
I think my problem is that the version of zig that I am using is newer than the version of the compiler I am working on so the standard library is mismatched. My question was why doesn't stage2 just use the standard library in the zig repo? IMO this would make things simpler. a way to fix this would be for me to build zig myself, but would have to manage different zig versions that I built based on

1606255872
g-w1
different branches I am working on. I guess I could make a command that symlinks my global zig lib directory to the one in the zig repo, but I feel like it would be overcomplicating things

1606256010
g-w1
is it possible to override the stdlib from a build.zig file?

1606256249
g-w1
I am using a zig binary download from the website, but want to use the standard library in the repo for stage2. I realize that it may not have been clear before

1606256336
andrewrk
what is stage2 doing that is not using the standard library in the zig repo?

1606256347
andrewrk
s/that is not/instead of/

1606256410
g-w1
expected type 'std.builtin.Signedness', found bool; no member named 'is_signed' in struct 'std.builtin.Int'

1606256468
andrewrk
I mean, where is that std lib that is not the one in the zig repo?

1606256508
andrewrk
you shouldn't have to do this, I recommend

1606256537
andrewrk
you need to use a lib dir that matches the zig compiler. I'm confused how you got into this situation

1606256547
andrewrk
do you just need to run `make`?

1606256560
g-w1
ok. I guess I can just rebase with master every so often if this happens.

1606256688
andrewrk
I don't understand - how did this happen?

1606256714
andrewrk
when you update the std lib you have to rebuild the compiler

1606256764
g-w1
I tried to use the master compiler and stdlib from the website from today to compile stage2 from 2 days ago. should I always be doing ./build/zig build instead of zig build

1606256922
g-w1
I just rebased and it worked :). my lesson: make sure everything is up to date. thanks

1606258412
andrewrk
np

