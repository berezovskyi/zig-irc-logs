1601596999
delaney
nikki93, yeah that worked... odd

1601597248
ifreund
probably some kind of linking issue, the builds from the site are static

1601598787
delaney
Not sure if it's a Mac thing but vscode extension and nativedebug sure aren't playing, damn.

1601598870
nikki93
i think it may be a mac thing haha -- there's a bunch of "security" stuff it does around things like debuggers

1601598903
delaney
Wouldn't surprise me, have this Mac for work, not a fan

1601602998
nikki93
what are y'all working on :D

1601603821
nikki93
delaney: yeah the main reason i've needed to hold onto a mac is to make builds for ios

1601604896
adamkowalski
Is there a way to build a compile time lookup table?

1601604937
adamkowalski
I mainly just need a hash map that will be a fixed size with a few values that are known at compile time that I would like to be able to query from elsewhere

1601605016
adamkowalski
I will do the lookups at runtime, and no mutation is necessary. I just want to prefill the map at compile time and store it as a global constant

1601614107
moinstar
trying to build github main branch. stage 1 built successfully, unable to get pass `lld: error: undefined symbol: getPollyPluginInfo()`.

1601614158
moinstar
above error is for : `./zig build --prefix $(pwd)/stage2 -Denable-llvm`

1601614380
pixelherodev
Manually add libLLVMPolly or something to the list of linked libs

1601614903
moinstar
i edited CMakeLists.txt and passed ZIG_WORKAROUND_POLLY_SO for the stage 1 compilation. But confused for how to go about in the stage 2

1601615103
komu
adamkowalski maybe

1601630542
Piraty
jjsullivan1: ok, i will probably invert the logic to exclude known-to-not-compile archs instead of whitelisting them

1601634692
ask6155
if I realloc on a pointer (I assume it's a pointer) does the address stay the same?

1601634831
ifreund
you mean is the new allocation guarenteed to start at the same address as the old one? no

1601634867
ask6155
so my pointer has to be a var then?

1601634876
ikskuh
it depends on which realloc you use

1601634888
ask6155
I'm using the page allocator

1601634889
ikskuh
zig has a realloc that will fail when memory has to be moved

1601634904
ikskuh
and there's realloc which will move if no resize is possible

1601634955
ask6155
the realloc returns a var so I assume I have to put it into my address variable and then use that one?

1601635063
ifreund
yes

1601635076
ifreund
use resize() if you don't want the allocation to be moved

1601635241
ask6155
what is the usize type? I want to put my int where the size is supposed to go. But it takes a usize

1601635334
ikskuh
usize is a unsigned integer that can take any pointer or object size

1601638130
ask6155
what is the maximum number of elements an array can have?

1601638146
ikskuh
std.math.maxInt(usize) in theory

1601638153
ikskuh
in practise: depends on where the array is stored

1601638311
ask6155
let's say I allocated a 1024^2 u8s on the heap I trying to realloc it by increasing that number but I get stuck at around (1024^2)*1000

1601638401
ikskuh
huh

1601638410
ikskuh
you should be able to alloc gigabytes

1601638415
ikskuh
depending on how much memory you have avail

1601638452
ask6155
does it matter which allocator I use?

1601638457
ikskuh
yes

1601638464
ask6155
I using c malloc

1601638466
ikskuh
some allocatos (like FBA) will out of memory

1601638471
ikskuh
huh

1601638477
ikskuh
your still allocating megabytes of memory

1601638486
ikskuh
what do you do exactly?

1601638498
ask6155
I'm trying to make a ram eater

1601638499
ask6155
lol

1601638509
ikskuh
well

1601638517
ikskuh
what for?

1601638526
ask6155
well... uhhhh

1601638528
ikskuh
and for which os?

1601638531
ask6155
nothing

1601638534
ask6155
linux

1601638534
ikskuh
note: overcommitment is real

1601638577
ask6155
I'm just messing around. I wanted to make a tamed  memory eater which only eats how much I say it to eat

1601638993
ask6155
I get a segfault when I was a ~512M and I asked for more 50M

1601639011
ask6155
I have 4GB

1601646224
fgenesis
hm, tried to compile zig master but it fails at the cmake step, it's not finding llvm even though i just compiled it and llvm-config is on the PATH

1601646478
fgenesis
aha, turns out i just need to set the include dirs for some reason

1601646514
fgenesis
it's not picking up llvm-config --includedir for whatever reason

1601647140
fgenesis
same for the libs. do i really need to config all of them manually? ugh

1601648539
fgenesis
oops, overlooked something. all good and builds now apparently

1601657128
fgenesis
compile error for current master, on arm32:

1601657159
ikskuh
nice find

1601657169
ikskuh
fix it and PR it or open a issue

1601657177
ikskuh
stuff written in IRC is going to die :D

1601657188
fgenesis
i don't know enough zig yet to do this, guess why i'm building the compiler first :P

1601657196
ikskuh
then you should do an issue

1601657206
fgenesis
and the 0.6 release segfaults

1601657227
ikskuh
:D

1601657242
fgenesis
WELL you could maybe re-use 6501 for this? :P

1601657258
ikskuh
haha

1601657258
fgenesis
because it's a hole in the list and it makes me sad

1601657285
ikskuh
:D

1601657483
Piraty
is there any doc about nomenclature regarding stage0, stage1, stage2 ?

1601657518
ikskuh
stage0 is 100% c++

1601657531
ikskuh
stage1 is a compiler built both in zig and c++

1601657541
ikskuh
stage2 is a fully self-hosted compiler built with stage1

1601657549
ikskuh
stage3 is stage2 built with stage2

1601657588
Piraty
is this documented?

1601657638
ikskuh
somewhere, yes!

1601657644
fgenesis
"on irc"

1601657651
Piraty
at least now

1601657714
ikskuh
i think it's in the github README.md?

1601657782
Piraty
doesn't mention stage0

1601657807
Piraty
so by using cmake , i get the stage1

1601657841
ikskuh
cmake builds stage0 as well

1601657851
ikskuh
in your build directory is a zig0 file

1601658283
Piraty
thanks ikskuh

1601658502
FireFox317
ikskuh, it is also the stage1.id file that is missing in your error?

1601658517
FireFox317
Because then #6493 is the same problem as yours

1601658607
ikskuh
try self.populateFileHash(ch_file);

1601658626
ikskuh
no, 6493 has a completly different path

1601658654
ikskuh


1601658655
ikskuh
full trace

1601658693
FireFox317
Can you print the path?

1601658756
FireFox317
Like which file is not found?

1601658816
fgenesis
gnah, building zig1.o takes soooo much ram

1601658841
FireFox317
jup :(

1601658868
ikskuh
FireFox317: on my way

1601658939
ikskuh
first call fails

1601658940
ikskuh
populateFileHash("/home/felix/projects/cg-workbench/zig-cache/o/e4f3b5d925b4cd80e81c00c792d7c53a/libnfd.a")

1601658964
ikskuh
which â€¦ is wrong

1601658969
ikskuh
the file is called nfd.lib

1601658970
ikskuh
:D

1601658975
ikskuh
which is probably more wrong

1601658998
ikskuh
i'm using gnu abi

1601659007
ikskuh
so the file which is generated is wrong, should be libnfd.a

1601659064
FireFox317
Ah that gives us a good clue

1601659088
ikskuh
yeah

1601659107
ikskuh
sadly, i don't have the brainz to debug it atm

1601659112
ikskuh
but should be easily reproducable

1601659126
ikskuh
make a project having a static lib as well as a exe, depend on the lib, compile for gnu

1601659161
FireFox317
yeah indeed, lets see

1601659191
fgenesis
ok, i TRIED to fix the usize == 32 bit issue but i end up somewhere in the memory system and i really don't want to touch this just yet <.<

1601659215
ikskuh
fgenesis: just do it!

1601659226
fgenesis
just do what

1601659227
ikskuh
FireFox317: this also explains why the linux build is breaking

1601659228
ikskuh
fix it

1601659252
FireFox317
ikskuh, linux build of what?

1601659261
ikskuh
cg-workbench

1601659263
fgenesis
i would sed replace all u64 with usize and accept getting killed? umm no

1601659267
ikskuh
looks like it's the same problem

1601659278
FireFox317
fgenesis, @intCast maybe?

1601659288
fgenesis
i keep adding that and it keeps breaking elsewhere

1601659377
FireFox317
ikskuh, yeah indeed. what is this project?

1601659382
FireFox317
like the one we were just talking about

1601659395
FireFox317
oh windows

1601659396
FireFox317
i see

1601659399
FireFox317
same project

1601659403
ikskuh


1601659410
ikskuh
same project, only different target

1601659435
FireFox317
wow nice project :O

1601659438
ikskuh
thanks :)

1601659442
ikskuh
you're welcome to try

1601659453
FireFox317
yeah gonna build that while investigating the issue :P

1601659459
FireFox317
need some PR's anyway

1601659461
FireFox317
xd

1601659464
ikskuh
haha

1601659617
ikskuh
i hope to  rewrite the workbench 100% in zig one day

1601659629
ikskuh
another big project port, but i think it's worth the time

1601659643
ikskuh
but i need to do a lot of changes. Snektron proposed to use vulkan, which sounds like a good idea

1601659661
ikskuh
i need a ui toolkit that is perfectly scalable

1601659890
codemessiah
what's the workbench

1601659927
ikskuh


1601659943
ikskuh
it's a creative live-editing tool for multimedia effects

1601659984
codemessiah
Oh that's cool

1601660031
codemessiah
if you made that UI toolkit that uses Vulkan as the backend and made it a library it would be really useful

1601660048
ikskuh
the ui toolkit is dear imgui

1601660069
ikskuh
atm

1601660073
ikskuh
but i'm not 100% sold

1601660078
codemessiah
I used to want to make a video editing software with vulkan, got about 1000k lines of C++ Vulkan code done and it was a white window :)

1601660087
ikskuh
heh

1601660096
ikskuh
Snektron has a nice hello-vulkan sample with zig

1601661766
moinstar
I am trying to build from the source. I was able to build the stage 1 with `-DZIG_WORKAROUND_POLLY_SO:STRING=/usr/lib/llvm-10/lib/LLVMPolly.so`.  Now having difficulty building the stage 2. Getting `lld: error: undefined symbol: getPollyPluginInfo()`.

1601661865
ikskuh
FireFox317 is on a PR streak i see :D

1601661876
FireFox317
ikskuh, getting that t-shirt right :P

1601661911
ikskuh
heh

1601661917
ikskuh
t-shirt progress tomorrow evening is 2/3 :D

1601661922
ikskuh
wait, wrong shirt

1601661926
ikskuh
current shirt is 3/4 :D

1601661945
ikskuh
we need more "get shirts for doing community chores"-incentives

1601665013
kristoff_it
ikskuh, note taken :D

1601665181
ikskuh
:D

1601667119
cr1901_modern
Uhh this might be a silly q, but how did zig get its own copy of ntdll.lib?

1601667133
cr1901_modern
(This is a linux cross compile to windows)

1601667148
ikskuh
cr1901_modern: a lib file is mostly just a list of exported functions

1601667152
ikskuh
search for "implib"

1601667177
ikskuh


1601667186
Tallin
Hi everyone, Since Zig promotes reusability of code, is there already a function / package for reading in csv files into arrays`?

1601667187
ikskuh
you can generate a .lib file for every dll you have access to

1601667197
ikskuh
heya Tallin

1601667203
ikskuh
there's no CSV package yet

1601667207
ikskuh
at least to my knowledge

1601667258
Tallin
alright, I found this c++ thread

1601667352
ikskuh
you can probably use std.io.Reader.readUntilDelimiter, then std.mem.split to get each line parsed

1601667473
Tallin
thank you i google for them

1601667479
cr1901_modern
ikskuh: oh right... I seem to vaguely recall that. Thanks!

1601667505
cr1901_modern
And I see: zig creates it's own copies of glibc, mingw libc, and musl as needed:

1601667538
ikskuh
Tallin: search in the stdlib, not google ;)

1601667557
Tallin
:D

1601667656
nikki93
when i build to wasm (maybe applies to any target) is there a way to get source-annotated assembly? so far i've just been 'disassembling' the output with wasm2wat. would be neat if it works with `--release-small` too

1601667663
Tallin
Yeah Im still new and figuring out how to best research functions and how to use them

1601667675
nikki93
(just for reading, not intending to feed that to any program after)

1601667779
ikskuh
Tallin: use ZLS

1601667926
fengb
There was some discussion about standardizing sourcemaps in wasm. I don't remember what the status was

1601668031
ikskuh
Tallin:

1601668367
Tallin
cool so zls is like zig + some helpful functions and i can include it into vscode directly?

1601668385
ikskuh
zls is your power IDE

1601668388
ikskuh
go-to definition

1601668390
ikskuh
code completion

1601668391
ikskuh
...

1601668405
nikki93
Tallin: it's a "language server" which then anything that is a "languageserver client" can talk to -- vscode is one of the editors that can host a languageserver client

1601668534
Tallin
i never heard of a language server (client) I only programmed in R and Python up til now and followed some c++ tutorials. thank you for the explanation

1601668576
nikki93
i don't use vscode but a quick google search found this:

1601668584
Tallin
do i have to pass any options to `zig build config`? for the zls?

1601668596
nikki93
you'll have to build zls as described in zls's repo, and zls will have to be able to find zig, and vscode will have to be able to find zls

1601668605
Tallin
yes vscode is mentioned in

1601668612
nikki93
i just cloned zls (make sure to clone recursive or submodule init recursive) and then ran `zig build`

1601668621
nikki93
didn't do any config

1601668626
Tallin
alright

1601668656
Nypsie[m]
config can either be done manually in zls_config.json or by running `zig build config`

1601668669
Nypsie[m]
Note that you can only run `zig build config` after running `zig build`

1601668760
nikki93
the resulting zls executable will be in 'zig-cache/bin' under the repo directory

1601668772
nikki93
that's what the vscode extn will have to know about

1601668772
cr1901_modern
So if I understand correctly: zig never links against the system libc in the invocation "zig build-exe hello.zig"?

1601668796
cr1901_modern
it compiles its own under .cache and uses that

1601668814
alexnask[m]
Well, if you are not using libc and explicitly linking against it

1601668827
alexnask[m]
Then it doesn't even need it (we don't even rely on CRT)

1601668863
Tallin
> the resulting zls executable will be in 'zig-cache/bin' under the repo directorythat's what the vscode extn will have to know about

1601668869
Tallin
Thanks that was critical information

1601668884
cr1901_modern
>explicitly linking against it

1601668884
cr1901_modern
I'm not linking against it... the lld invocation has a libc.a on it

1601668892
cr1901_modern
err explicitly*

1601668913
cr1901_modern
>we don't even rely on CRT <-- that was my follow-up q :P, so good to know

1601668941
nikki93
Tallin: :)

1601676640
nikki93
any reason to prefer one of `buf[0..]` or `&buf` over the other when passing an array as an argument for a slice param?

1601676681
alexnask[m]
Those are equivalent

1601676718
ifreund
i prefer the latter because it's shorter

1601676722
nikki93
wondering if there were any stylistic / legibility reasons too

1601676740
nikki93
i see yeah. i was using `buf[0..]` and only then discovered `&buf`

1601676750
alexnask[m]
I also personally preferr &buf

1601676795
nikki93
does `buf[0..]` make it clearer that the function accepts a slice param, vs. with `&buf` it could be either a slice or a 'pointer to array' or sth

1601676834
ifreund
does it matter? if you want to know details you look at the function signature

1601676837
alexnask[m]
buf[0..] will also return a pointer to an array

1601676839
ifreund
zls makes that easy :)

1601676919
nikki93
:)

1601676934
nikki93
probs gonna start using `&buf`

1601677011
alexnask[m]
buf[a..(b?)] will return a pointer-to-array when a and b are comptime known

1601677037
alexnask[m]
So the semantics will always be the same, use the one you like the look of better ;)

1601677083
nikki93
cool :)

1601679617
delaney
fengb, I was asking about vscode/Mac last night on your stream but had to leave.  Does zig's clang/wasm toolchain generate soutcemaps and stack debugging in was on the browser?  I have a project where wasm makes a lot of sense but not sure about the current state vs something like assemblyscript or C with emscripten

