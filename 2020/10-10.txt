1602288204
ifreund
uh, it just built

1602288210
ifreund
and worked i think

1602288592
ifreund
well, the test case from the issue works but my xdg shell generated code doesn't yet

1602288660
ifreund
tdeo: this is my current hack:

1602288684
ifreund
which manages to compile

1602288749
ifreund
the explicit types are needed, I don't think stage1 will ever have this feature without explicitly specifying the types of the globals

1602298760
daurnimator
ps, andrew, i hope to get back on my older prs today

1602298765
daurnimator
pls don't close yet ;)

1602299286
andrewrk
you can always just renew them. closing just puts the ball back in your court

1602299322
andrewrk
I already have 61 balls, I think you could spare room for a couple :)

1602299357
daurnimator
so... everytime you close an issue/pr i disagree with i keep it open in a tab to remind me

1602299380
daurnimator
i now have.... ~40 tabs open. some over a year old :(

1602299661
fgenesis


1602322172
tundrax
Is there an easy way to coerce zig `[]u8` to `[*c]const u8` when working with C library?

1602322421
ifreund
tundrax: no, because []u8 is not just a pointer, it has a length field as well

1602322440
ifreund
that means that []u8 is twice the size of a [*c]const u8 (or any other pointer

1602322464
ifreund
you can think of []u8 as a struct { ptr: [*]u8, len: usize }

1602322531
ifreund
you can of course pass my_slice.ptr to the C library, but make sure it doesn't expect a null terminator or something

1602322856
tundrax
so all C functions accepting `[*c]const u8` as parameter can be bassed `[]u8 slice.ptr`, right?

1602322928
pixelherodev
i think so

1602323175
ifreund
yes, though some may expect the pointer to be null terminated and read past the length of the slice

1602323205
ifreund
so you have to read the docs/code for the c function to know what is expected

1602323447
tundrax
Great, thank you.

1602332884
u0jQx9gPyrYg
wow that's all i have to cast to `[*c]const u8` is to use `[]u8 slice.ptr`? i've been trying to figure that out, and i felt to stupid because i was unable to deduce that from the documentation.

1602334139
ifreund
pretty sure the docs explain slice.ptr and slice.len

1602334579
u0jQx9gPyrYg
i already feel stupid. no need to rub it in. :P

1602335040
storyfeet
hello

1602335101
storyfeet
So I'm not sure if this is the best place to ask my question, but I'll try anyhow.

1602335121
storyfeet
I'm just trying out Zig, and I've made some progress,

1602335141
storyfeet
I'm trying to use the termios library to switch to raw mode.

1602335205
storyfeet
const termios = std.c.termios;

1602335222
storyfeet
const std = @import("std");

1602335232
storyfeet
var t_attrs: u32 = 0; 16     termoios.tcgetattr(in, &t_attrs);

1602335244
storyfeet
var t_attrs: u32 = 0;termoios.tcgetattr(in, &t_attrs);

1602335264
storyfeet
(meant to be  \n between them.

1602335305
storyfeet
but the error I get is :

1602335306
storyfeet
./term.zig:16:12: error: container 'std.os.bits.linux.termios' has no member called 'tcgetattr'    termios.tcgetattr(in, &t_attrs);

1602335334
Michcioperz
tcgetattr is defined on std.c

1602335368
Michcioperz
so i guess it should be std.c.tcgetattr(in, &t_attrs);

1602335372
Michcioperz
wait no

1602335395
Michcioperz
i think std.c.termios is a struct

1602335435
Ristovski
storyfeet: next time paste code into something like bpaste.net or pastebin, sending many messages induces throttling which means they get sent at a very slow rate

1602335440
Ristovski
not to mention it can clutter the channel

1602335444
storyfeet
sorry

1602335448
Ristovski
no worries :P

1602335458
storyfeet
thanks

1602335467
Michcioperz
yes, std.c.termios is a struct, and std.c.tcgetattr takes fd_t and *termios arguments

1602335474
Michcioperz
and returns an int

1602335545
storyfeet
I'm new to both systems, and trying to follow a c tutorial :https://viewsourcecode.org/snaptoken/kilo/02.enteringRawMode.html

1602335584
Michcioperz
well, t_attrs should be a termios

1602335594
Michcioperz
like, var t_attrs: termios = undefined;

1602335689
Michcioperz
then `std.c.tcgetattr(in, &t_attrs)` and check if it equals 0, if it doesn't, there was an error

1602335715
storyfeet
that makes sense, What's the build commmand to include std.c?

1602335741
Michcioperz
i'm not sure about that

1602335771
storyfeet
error: dependency on library c must be explicitly specified in the build command

1602335801
Michcioperz
what's your build command?

1602335826
storyfeet
currently just "zig run term.zig"

1602335853
Michcioperz
i guess you want -lc

1602335911
storyfeet
ok, that solves that, I'll keep plugging see what comes up. Thanks for the help

1602336053
Michcioperz
i love that manpage for tcgetattr doesn't specify what errors can come up

1602336077
Michcioperz
check errno they say

1602336143
ifreund
heh

1602336189
earnestly
As does the POSIX manual

1602336308
Michcioperz
wonderful

1602336325
Michcioperz
sorry, i shouldn't get so worked up

1602336396
u0jQx9gPyrYg
i think in your build.zig you can say `exe.linkLibC();` and then it links the c lib

1602336455
u0jQx9gPyrYg
on the other hand i'm a fresh noob that is still overwhelmed with this, so maybe i should wait a bit until i give advice, and let the more experienced help out.

1602336624
Michcioperz
yeah but that person wasn't using zig build

1602336650
Michcioperz
frankly i didn't realize we had a `zig run` haha

1602336667
storyfeet
lol

1602336679
Michcioperz
i almost always use zig build but i guess creating a project is a habit i got from rust

1602336712
storyfeet
nah, "cargo run" all the way

1602336896
storyfeet
the tutorial says to tweak c_lflag,  and I see the docs page I have shows that existing, but I'm getting a

1602336898
storyfeet
./term.zig:17:12: error: no member named 'c_lflag' in struct 'std.os.bits.linux.termios'    t_attrs.c_lflag &= ~(c.ECHO);

1602336958
storyfeet
Is there somewhere else I can look to see extra info on the struct, , maybe from within zig?

1602336968
Michcioperz
are you on linux?

1602337018
ifreund
cflag:

1602337040
Michcioperz
^ is what i wanted to link to basically

1602337051
ifreund
or wait, no you want lflag

1602337061
Michcioperz
close enough

1602337067
Michcioperz
it is the struct definition

1602337073
ifreund
we just removed the c_ prefix for whatever reason

1602337086
Michcioperz
i think it was the right decision

1602337106
Michcioperz
imho those prefixes don't add that much value in a language that's not C

1602337115
ifreund
no, they really don't

1602337177
storyfeet
ah, OK, yes I'm on linux.

1602337217
Michcioperz
yeah then the struct definition is in that link up there

1602337302
ifreund
I'd recommend getting zls set up if you plan to do much zig development, it's quite helpful for exploring the standard library

1602337338
Michcioperz
you can't find it in the source file of std.c because std.os.bits.linux (or whatever os you're using) is imported inside std.c and then everything from inside it is copied and forwarded to show up as if it's a part of std.c

1602337371
Michcioperz
ifreund: personally i prefer running ripgrep on the whole std haha

1602337382
ifreund
oh I do a lot of that as well

1602337387
ifreund
but when zls works it's great

1602337402
Michcioperz
haven't really used language servers until i got a laptop that's not 10yo

1602337431
ifreund
yeah some like clangd will eat your memory and cpu

1602337443
ifreund
zls is pretty light

1602337460
ifreund
though it's not as complete of course

1602338026
Michcioperz


1602340081
storyfeet
Got the terminal working raw now, really happy with that, thanks for all your help guys.

1602342288
Michcioperz
i presume no one compiled the zig compiler to wasm yet?

1602346860
ifreund
self hosted should be no problem, is there llvm for wasm though?

1602347047
nikki93
when i suspend / resume, is the "whole" stack saved or just the one for "this" function? eg. if i am passed a ptr into some buffer on the stack from the parent func, when i am resumed later can i still deref the ptr?

1602347104
fengb
Itâ€™s been attempted but not fully working yet

1602347127
nikki93
re: llvm in the browser, there's

1602347141
fengb
Last time I tried to sideload a libc in zig-bootstrap but ran into problems

1602347197
nikki93
there's also

1602347721
TheLemonMan
nikki93, only the local stuff is preserved

1602347762
nikki93
i see. this suspend resume stuff is kinda weird and interesting

1602351164
kristoff_it
Zig SHOWTIME starts in 30m, we're live with the preshow in the meantime:

1602351195
kristoff_it
ugh, correct link:

1602351535
tdeo
has putting all the os-specific structs and definitions in a single place been considered/done?

1602351549
tdeo
like `const stat = switch (builtin.os) { .linux => struct {}, ... }`

1602351570
tdeo
i think i'd prefer that if there's no other issues i haven't thought of

1602351615
ifreund
that'd be kind of the reverse of the current situation

1602351639
tdeo
i don't like having the same struct being spread across many files

1602351661
tdeo
i think it's hard to notice when they're inconsistent, and hard to navigate with all the usingnamespace

1602351665
ifreund
I agree though, that'd make it easier to track stuff down due to reduced usingnamespace

1602351756
marler8997__
I'd like to start using Zig to make Windows applications, and I'd like to pad out the standard library with the missing windows functions while I do it

1602351775
marler8997__
This means I need to understand the std lib organization and I got some questions

1602351807
marler8997__
For example, why is there os/bits/windows.zig and os/windows/bits.zig?

1602351862
TheLemonMan
we're trying to add all the possible permutations

1602352220
marler8997__
anyone know what the purpose of "bits.zig" is in general?

1602352451
marler8997__
ok here's my guess...bits.zig is a place to hold const/type declarations that are used in multiple modules for an os?

1602352590
g-w1
does anyone know why zig run doesn't find system libraries but zig cc does?

1602352670
marler8997__
add "-lc"

1602352678
g-w1
ok.

1602352775
g-w1
thanks.

1602352819
TheLemonMan
bits holds the constants/typedefs for a given platform/os

1602352872
marler8997__
when would you put a const/typedef in bits vs in another os module?

1602352925
TheLemonMan
you should put all the platform/os specific stuff there

1602352965
marler8997__
for example, os\windows\sublang.zig contains alot of const declarations, why aren't they in os\bits\windows.zig?

1602352993
marler8997__
bad example, they are in bits.SUBLANG

1602353010
marler8997__
gdi32.zig, contains PIXELFORMATDESCRIPTOR, why isn't that in bits.zig?

1602353020
TheLemonMan
because nobody cares about windows (and nobody enforces any convention in the stdlib)

1602353037
marler8997__
ok, so you're saying it should be in bits.zig?

1602353088
marler8997__
user32 is a good example, it contains alot of const/typedefs

1602353132
TheLemonMan
yeah that's another can of worms, see #4426

1602353299
marler8997__
great thanks for that link, I had no idea whether Zig was aiming for partial or complete declarations, sounds like it's not decided

1602353324
marler8997__
in that case, I think it will be best to create my own windows declaration library

1602354031
marler8997__
TheLemonMan, and guidance for me?

1602354051
marler8997__
My thoughts for now is just to copy standard lib implementation, and add declarations as I need them

1602354079
marler8997__
But maybe I should implement more of a data-driven approach, where I generate the modules?

1602354091
TheLemonMan
my idea is to build a mechanically-generated third-party package

1602354105
TheLemonMan
covering the whole Win32 API by hand is ... well is nuts

1602354118
marler8997__
what would you use as the source for generating the modules?

1602354211
TheLemonMan
no idea, I doubt there's a canonical source for that

1602354237
tdeo
steal the rust definitions :)

1602354252
tdeo
probably a saner format than the headers

1602354310
TheLemonMan
I bet you can generate everything with a couple of lines of perl

1602359557
alva
Would Wine be useful?

1602365571
adamkowalski
did something change with the latest master of the compiler?

1602365601
adamkowalski
I have a test that uses `std.meta.refAllDecls(@This());` and I get `error: unable to build stage1 zig object: CacheUnavailable`

