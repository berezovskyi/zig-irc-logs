1605313012
GrooveStomp_
Ahhh! I'm super stoked! I just made a successfully HTTPS request with a Zig program I've been writing.

1605313530
demizer
nice!

1605314399
pixelherodev
I would love if stage2 supported plan9

1605314474
pixelherodev
That can come with CBE though, so it's a good thing I'll be working on that again this release cycle :)

1605314474
Kena
Does someone know the difference between `write()` and `writeAll()` functions from std.fs.File.Writer type?

1605314485
pixelherodev
Kena: did you read the code?

1605314503
Kena
No, I do not find it

1605314522
Kena
*find it in [...]

1605314564
Kena
and official documentation does not have a description

1605314672
frmdstryr
writeAll retries until it finishes

1605314745
Kena
Thanks.

1605315078
pixelherodev
Kena: it's in std/fs/file.zig, not std/fs.zig ;)

1605315098
pixelherodev
Note the top of the file:

1605315099
pixelherodev
> pub const File = @import("fs/file.zig").File;

1605327640
linux-newbie2020
How do I create an ArrayList with the general purpose allocator and free it afterwards? Or is using std.testing.allocator the recommended way? Since that one uses gpa on its backend and is easy to use.

1605328315
pfg_
linux-newbie2020, std.testing.allocator is for test {} blocks. for main(), do: var gpalloc = std.heap.GeneralPurposeAllocator(.{}){}; defer std.testing.expect(!gpalloc.deinit()); const alloc = &arena.allocator; var array_list = std.ArrayList(u8).init(alloc); defer array_list.deinit();

1605328382
linux-newbie2020
Thanks!

1605331001
dominikh
there's no notion of multi-file "packages" in Zig, right? the only way to use identifiers from another file is to @import it?

1605331021
marler8997__
usingnamespace is what you want I think

1605331088
dominikh
well yeah, but at that point I'm wondering if the API should be designed to read well with or without usingnamespace

1605331102
linux-newbie2020
pfg_: additional question, how would I adapt that example for use inside a function that returns the ArrayList? Or would it be cleaner to just hand the allocator to that function?

1605331214
pfg_
linux-newbie2020,  pub fn returnsArrayList(alloc: *std.mem.Allocator) std.ArrayList(u8) {return std.ArrayList(u8).init(alloc);}

1605331233
pfg_
usually you pass the allocator to the function

1605331255
pfg_
you can also store the allocator in a global variable if it makes sense for your code, but don't do that if you're making a library

1605331482
linux-newbie2020
thanks again!

1605335254
teratorn
so, im exposing a zig lib to C API. one of the structs that I want to expose has a hashmap member, which can't be exported (?) how can I get around that?

1605335291
teratorn
.\amp.zig:50:5: error: extern structs cannot contain fields of type 'std.fifo.LinearFifo(std.hash_map.HashMap([]const u8,[]const u8,std.hash_map.hashString,std.hash_map.eqlString,80),std.fifo.LinearFifoBufferType { .Dynamic = {}})'

1605335291
teratorn
box_buffer: AmpBoxFifo,

1605335291
teratorn
^

1605335291
teratorn
.\amp.zig:307:23: note: referenced here

1605335293
teratorn
var dec = AmpCodec.init(alloc);

1605335634
teratorn
well its a LinearFifo actually

1605335687
teratorn
I want to export the struct opaquely to C

1605335705
teratorn
but I don't know how except by casting to c_void or whatever

1605335741
teratorn
do i create an empty struct and use that as a casting target to achieve opaque pointers with a unique name?

1605338989
teratorn
how do you alloc a struct on the heap?

1605339106
dominikh


1605339293
teratorn
so i use alloc()? how do i init the struct with {} syntax?

1605339306
teratorn
i guess that is a

1605340051
teratorn
what does an error like this mean? parameter of type '*AmpBox' has 0 bits; not allowed in function with calling convention 'C'

1605340251
novaskell
it's a namespace thus cannot be represented in C as it has no memory representation

1605340273
teratorn
but AmpBox is a struct!

1605340288
novaskell
can I see the code?

1605340292
teratorn
how can any pointer have no bits?

1605340297
teratorn
sure one sec

1605340328
teratorn


1605340451
novaskell
`const AmpBox = struct` doesn't contain any fields which makes it take 0 bits

1605340547
novaskell
using `pub var thing = stuff;` just declares `thing` as a global variable and not as a field member of the struct `AmpBox`

1605340570
teratorn
uhm but it has a variable member inside

1605340579
teratorn
oh

1605340656
teratorn
.\amp.zig:29:13: error: expected token '}', found ';'

1605340656
teratorn
a: usize;

1605340656
teratorn
^

1605340670
pfg_
teratorn, `,`

1605340674
teratorn
i cant seem to declare a struct with one usize member

1605340677
teratorn
oh right

1605340858
pfg_
It should probably be possible to improve the error message for that

1605347340
alexnask[m]
ifreund: Hey, I was just wondering if semantic token highlighting with the custom token modifiers (e.g. type.struct) works ok for you in kak-lsp

1605347364
alexnask[m]
Kate in the discord apparently can't get it to work even after adding the token modifiers to the toml file

1605347967
TheLemonMan
Is kakoune's fork for edgelords called kek?

1605348012
ikskuh
kek

1605351414
dominikh
hm, so std.ChildProcess has neither a fd I can poll for process termination, nor a way to specify which fds I want to be passed to the new process, right?

1605355657
TheLemonMan
dominikh, the latter is an interesting feature request, the former should be easily handled by calling wait()

1605355725
TheLemonMan
you can always cheat and assume the child process is dead when the std handles are closed

1605356846
dominikh
TheLemonMan: I mean, I can't just call wait if I want to continue doing other things on that thread. the options then are a sigchild handler (which isn't that great), or a pipe (or maybe signalfd) and polling for it to get closed when the child exits.

1605356932
dominikh
or I could go all in on pidfd and annoy non-Linux users…

1605357437
trickyfungus
hi!

1605363688
alexnask[m]
hihi

1605363891
ikskuh
alexnask[m]: looks like we were on the right side of the split :)

1605364091
alexnask[m]
best side

1605370697
TheLemonMan
pro tip, remember to unmount every bind-mounted device from your chroots before rm -rf'ing them

1605370771
TheLemonMan
rebooting, wish me luck

1605373734
scientes
--one-file-system

1605374375
demizer
hey guys, I am using `pub const log_level: std.log.Level = .debug;` in a logger.md file and importing that into my other source files to access wrappers to std.log. But the log_level is not taking affect. Not sure what "root.log_level" is in the log source, but I suspect I might be using it wrong. Any help would be greatly appreciated!

1605374605
demizer
my logger wrapper is here

1605375330
demizer
found the problem, i needed to set the testing log level: `std.testing.log_level = std.log.Level.debug;`

1605380017
kristoff_it
We're live with the Zig SHOWTIME preshow, we start in ~15mins

1605381426
demizer
does anyone know how to replace the root.log when running tests in a library with "zig test test.zig". I am utterly confused. I can reset std.testing.log_level but not std.testing.log. It has something to do with the root source file but test.zig doesn't seem to be that for zig test in my case.

1605382513
demizer
i think i found the root logger i am trying to override,

1605382855
data-man
demizer: 'root' isn't available during testing. See

1605383059
demizer
data-man: thanks!

1605389210
ugla
What's the easiest way to readFloat(bits)?

1605390518
g-w1
I have a question about how the stage2 ir works. Does a Decl have to be something like error {Thing1, Thing2} or struct {x: u32}, or can it be something like (error {P} || InnerError)? Does the user have to create the decl, or can it be created as the product of other things? (in my case can merging error sets create another Decl?)

1605391696
pfg_
q-w1 I believe `error {P} || InnerError` would be represented as `@1 = error {P}; @2 = InnerError; @3 = @1 || @2`

1605391760
pfg_
I'm not sure how decls work right now though so I might be wrong or that might not be useful

1605392861
pixelherodev
g-w1: a decl is anything which can be used as a rhs value, as I understand it

1605392893
g-w1
ah, so it would be a decl, just anon?

1605392897
pixelherodev
e.g. `const a = (error{P}||InnerError}` would have a decl for the value of a, I think?

1605392945
g-w1
ok. cool

1605392957
pixelherodev
When in doubt, follow  a path through the code

1605392971
pixelherodev
Not necessarily with a debugger, though  that can help, but just reason it out

1605392979
pixelherodev
Look at astgen's existing patterns, for instance

1605393003
ikskuh
heya pixelherodev o/

1605393052
pixelherodev
ikskuh: Hi!

1605393099
pixelherodev
Finally going to get more CBE work done tonight! :D

1605393106
ikskuh
whoo! \o/

1605393111
ikskuh
I'm hacking a SD card driver

1605393120
pixelherodev
spu?

1605393129
g-w1
im trying to just copy the way to create a regular error set, and then make another, but its not woring :(. the cbe seems very nice. i cant wait to play telephone with translate-c and the cbe :]

1605394700
gert_
loving zig very cool

1605394840
ikskuh
heya gert_

1605394843
ikskuh
you new here? :)

1605394923
gert_
I lurk

1605395062
ikskuh
ah!

1605396012
freshmaker666
just learned about zig. I don't understand this section:

1605396033
ikskuh
heya freshmaker666

1605396100
freshmaker666
hello there

1605396108
ikskuh
i'll answer in a second :D

1605396115
freshmaker666
np no rush, just enjoying my night

1605396127
ikskuh
european? :D

1605396170
freshmaker666
well, a european bouncer ;)

1605396458
ikskuh
heh

1605396494
ikskuh
those list literals are … magic

1605396511
ikskuh
they can coerce to anything that fits

1605396517
ikskuh
so you can do

1605396526
ikskuh
var array: [3]u8 = .{ 1, 2, 3 };

1605396531
ikskuh
var array: [2]f32 = .{ 1, 2 };

1605396541
freshmaker666
ah!

1605396553
ikskuh
note that you can

1605396556
ikskuh
without coercion

1605396561
ikskuh
var magic = .{ 1, 2 };

1605396564
ikskuh
this is special

1605396570
ikskuh
how firm are you with the language already?

1605396677
freshmaker666
oh not firm at all. I heard about it and then just popped open the documentation to see what was up. I think I found out about it through an ouroborus quine program or maybe it was someone doing a cipher spec in zig.

1605396712
ikskuh
ah

1605396714
ikskuh
quine:

1605396796
ikskuh
pub fn main() { std.debug.print("{}", .{ @embedFile(@src().file) }); }

1605396797
ikskuh
:D

1605396819
freshmaker666
nice! ha ha

1605396839
a92
That's kinda cheating

1605396898
ikskuh
why? :D

1605396909
ikskuh
freshmaker666: i would recommend you playing around with zig :)

1605396920
ikskuh
it's a really fine language and you can learn it quite fast

1605396927
ikskuh
do you have programming experience already?

1605396996
freshmaker666
yeah, just popular ones. for actually useful work things mostly Go. But I'll poke at C if something is missing in a utility I'm using.

1605397017
a92
Quines aren't supposed to just read the source file; there are ways to do it without that and such methods are more interesting

1605397038
ikskuh
yeah i know

1605397047
ikskuh
a92: but! i'm not reading the source file at runtime :D

1605397054
ikskuh
that quine is standalone

1605397096
ikskuh
freshmaker666: i think zig can be your language than

1605397144
freshmaker666
no reason why not. just fun to learn new things anyway.

1605397204
a92
But then it doesn't work, ikskuh

1605397215
ikskuh
why?

1605397219
a92
... oh, it would

1605397222
ikskuh
@embedFile is compile time :D

1605397353
ikskuh
so imho it's technically a correct quine :D

1605397374
ikskuh
kristoff_it: you wanted snippets. use that quine above! :D

1605397442
ikskuh
pub fn main() void { @import("std").debug.print("{}", .{ @embedFile(@src().file) }); }

1605397445
ikskuh
here's a working version

1605398020
g-w1
is lldb a work in progress? whenever i use it it just crashes.

1605398029
ikskuh
huh?

1605398034
ikskuh
hm

1605398035
ikskuh
i think so

1605398038
ikskuh
i always use gdb

1605398133
g-w1
i was using gdb, but its hard to edit the commands on the gdb line input, and so i thought i would try lldb, but it just oofed. maybe zig triggers it

1605398261
g-w1
lldb seems to be a lot more modern, but less reliable. do you know of any good standalone frontends for gdb?

