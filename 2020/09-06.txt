1599351667
smolck
alright, later y'all; thanks again so much for the help ikskuh

1599353469
cr1901_modern
How do I pass a string literal to a function accepting a []u8?

1599353739
cr1901_modern
Okay I see... without "const" qualifier I can

1599353753
cr1901_modern
't pass a string into a function accepting a slice (even though that is what I want)

1599353781
cr1901_modern
ehh, I'll make it const anyway :)

1599381567
ifreund
cr1901_modern: for future reference, you can create a mutable buffer containing a string like so: var buf = "hello".*;

1599381579
ifreund
and then pass &buf to your function taking a []u8

1599391608
starhopper
Is a local array still valid outside the function it's declared in? I allocated a local array in function and returned the address of it, and it seems that the address is still valid outside of the declaring function, which is strange.

1599391641
ikskuh
starhopper: the address is still valid, but the data it's pointing to is not

1599391654
ikskuh
it's not allowed to return a pointer-to-local

1599391663
ikskuh
you can return the array as a object though:

1599391667
ikskuh
fn foo() [3]u8 {}

1599391672
starhopper
But the code is working all fine?

1599391692
starhopper
So it'll blow up someday, right?

1599391723
ikskuh
yep

1599391729
starhopper
Also, why doesn't the Zig compiler give me an error?

1599391737
ikskuh
because it cannot detect that yet

1599391748
starhopper
Okay, got it. Thanks!

1599391786
starhopper
One more thing: does anybody know when packed structs are gonna be fixed?

1599391835
starhopper
Embedding a packed struct in another packed struct makes the Zig compiler segfault.

1599391836
ikskuh
probably with stage2

1599391849
Nypsie[m]
I think it will be fixed in stage 2 itself as it's not a requirement to build stage 2 I don't think it will be fixed in stage 1. So probably 0.8.0 latest I guess

1599391896
starhopper
So right now I have to pray that the struct is laid out in order of declaration.

1599391992
ikskuh
starhopper: you can also use extern structs

1599391998
ikskuh
they are sufficient for most of the cases

1599392003
starhopper
How?

1599392038
starhopper
I just replace packed with extern, right?

1599392096
starhopper
"An extern struct has in-memory layout guaranteed to match the C ABI for the target."

1599392118
ikskuh
yep

1599392125
starhopper
"Unlike normal structs, packed structs have guaranteed in-memory layout"

1599392133
starhopper
What's the difference?

1599392135
ikskuh
yeah, extern have also guaranteed layout

1599392141
ikskuh
packed struct has 0 bit padding

1599392149
starhopper
Oh

1599392150
ikskuh
extern structs might have padding

1599392169
starhopper
Right, thanks again.

1599392172
ikskuh
so @bitSizeOf(packed struct { a: u3, b: u5 }) == 8

1599392181
ikskuh
what do you need guaranteed order though?

1599392191
starhopper
Passing structs to C code

1599392210
starhopper
It's for an Opengl program.

1599392240
ikskuh
ah

1599392246
ikskuh
OpenGL vertex data?

1599392251
starhopper
Yeah

1599392253
ikskuh
oh

1599392260
ikskuh
you don't need any guaranteed layout for that! :)

1599392268
starhopper
Whahh?

1599392270
ikskuh
yep

1599392277
ikskuh
zig == awesome

1599392281
ikskuh
give me a second

1599392314
ikskuh
vao.attribFormat(0, 3, .float, false, @byteOffsetOf(Vertex, "position"));

1599392321
ikskuh
just use @byteOffsetOf :)

1599392334
starhopper
Oh, right

1599392349
starhopper
Let Zig calculate the offsets

1599392356
starhopper
Awesome

1599392433
ikskuh
what i really like about zig default structs:

1599392444
ikskuh
the compiler might chose different layouts for different compile modes

1599392464
ikskuh
<ikskuh> the compiler might chose different layouts for different compile modes

1599392485
ikskuh
which means: release-small might use packed structs for every non-extern struct

1599392514
starhopper
Yeah, that was a nice decision.

1599392551
ikskuh
also reordering fields to make smaller structs without alignment violation

1599400973
frett27
hi, i got an optional pointer in a struct, how can i test the optional ? using if (s.optionalmember) |thepointer| { /* here i got 0xaaaaaa in the pointer */}  don't work as the value of the optional is 0xaaaaaaaaaaa

1599401062
frett27
may be the value as not been initialized

1599401097
Nypsie[m]
Correct, 0xaaaaaa is the value given to undefined values in debug mode

1599401155
frett27
it works, using the initialization ! thank's Nypsie

1599401167
Nypsie[m]
Yay :) No problem

1599411101
brotein
ls

1599411129
ifreund
.

1599411130
ifreund
..

1599411163
brotein
oops :)

1599411170
brotein
wrong terminal

1599411209
brotein
is this irc channel as lively as discord?

1599411277
ifreund
it's a little lower traffic i guess but quite active as IRC channels go

1599411311
fengb
Tends to be more on topic here :P

1599411318
ifreund
you also have a different demographic

1599411359
brotein
yeah, I hear that's why some people love irc, because it filters out some people, I guess

1599411392
ifreund
for me it's not as much about who is filtered out as about who is here

1599411436
brotein
you mean that some people only use irc and not discord

1599411454
ifreund
yes

1599411470
brotein
ok, good to know

1599411527
brotein
I am compiling the zig0 compiler, and to do that I am compiling llvm. I somehow used the 10.0.1 branch of llvm and I got some linking errors when compiling zig

1599411541
brotein
and I just saw on the wiki the llvm version should be 10.0.0

1599411572
brotein
so I am compiling that now, I am just surprised llvm would make breaking changes between those two versions

1599411587
brotein
I thought I could use them interchangeably

1599411595
brotein
naively

1599411607
ifreund
I think it should work with 10.0.1, and I seem to recall testing that on arch when 10.0.1 was released

1599411809
brotein
it is not to be excluded that's on me :D

1599411891
ifreund
well, I have yet to compile llvm myself, always just used a version from my distro's repos

1599411916
ifreund
so I'm not sure what footguns are lurking there that could break thins

1599412009
brotein
I have tried previously to install llvm-dev through the system package manager, so maybe it interfered. Now I have removed it to be sure.

1599412065
ifreund
what distro?

1599412176
brotein
alpine

1599412227
ifreund
they have an llvm10 package no?

1599412255
ifreund
shouldn't really need to build it yourself

1599412328
brotein
I thought so but the cmake step to build zig failed, complaining about llvm stuff

1599412396
ifreund
perhaps you need -DZIG_PREFER_CLANG_CPP_DYLIB=ON with how their llvm package is set up

1599412397
brotein
I think it said llvm was not built with all architectures that zig needs, but I am not 100% sure because I tried to do the same yesterday on openbsd and into errors there as well

1599412404
brotein
so I might confuse the two

1599412434
brotein
got into errors*

1599412451
ifreund
or maybe not, they don't seem to pass it here:

1599412525
brotein
right, so just to be sure I did it again: apk add llvm10-dev clang-dev lld-dev

1599412538
brotein
then in the zig repo: `cmake ..; make`

1599412588
ifreund
that APKBUILD list quite a few other packages in the makedepends

1599412590
brotein
and I get linking errors

1599412591
ifreund
do you have them all?

1599412639
brotein
oh great, I just opened the link

1599412644
brotein
thanks!

1599412646
ifreund
np

1599412671
brotein
I am compiling zig again, let's see

1599412678
ifreund
alpine does go farther than most when it comes to splitting packages :P

1599412833
brotein
good to know, I just installed it as a desktop for my home computer, let's see how it goes :)

1599417928
frett27
i have a ubuntu package list to build zig from source, and avoid recompiling the llvm stuff, if it can help

1599417951
frett27
don't know if these are the same packages for alpine

1599418027
frett27


1599418135
brotein
interesting, thanks

1599418190
brotein
I am having both with apk packages and with llvm built from source issues when compiling zig from source

1599418207
brotein
I get lots of linking errors such as: zig_clang_cc1_main.cpp:(.text._ZN4llvm24InitializeAllAsmPrintersEv[_ZN4llvm24InitializeAllAsmPrintersEv]+0x55): undefined reference to `LLVMInitializeAVRAsmPrinter'

1599418234
brotein
my guess is that there is a version mismatch between the llvm libs I have built and installed, and the ones zig expects

1599418592
brotein
it is weird since `nm` shows the right symbols in the lllvm libs installed in /usr/local/libs

1599418596
brotein
oh well

1599419540
frett27_
brotein, i've not tested on 10.0.1, only 10.0.0

1599419556
frett27_
and for ubuntu i faced the polyfill link error

1599419564
frett27_
that has been solved

1599419602
brotein
ok, thanks

1599419646
brotein
I'll try tomorrow again with a fresh mind, in the meantime I am using the binary from the zig website

1599424008
omglasers2
how does readUntilDelimiterOrEof work? I'm trying to read line by line from stdin but it returns the input until EOF, not after every line (I'm on windows)

1599431449
andrewrk
Cadey, afaik the only dependency of std on /dev is /dev/null. We try not to add undue dependencies like this, but it's needed for some cases, such as ignoring child process streams. what are you running into?

1599433363
smolck
hello! is it possible to check if a type is an anonymous struct? i.e. do something like @TypeOf(.{}) == struct?

1599433363
andrewrk
ikskuh,

1599433394
andrewrk
smolck,

1599433924
smolck
andrewrk, thank you, but I'm having trouble using that with a switch statement on a comptime T: type. What I'm trying to do is handle the case of annonymous structs being passed in to my function, so things like .{false, true}, .{"hello", 5}, etc., and I want to know how I can see if the item passed in is any kind of anonymous struct. I've tried using @typeInfo, @hasField, etc., but I can't seem to figure it

1599433930
smolck
out

1599433946
smolck
(hope that makes sense)

1599433977
andrewrk
it's pretty meta to need to check that. why do you need to make that distinction? you can't just use the fields?

1599434114
smolck
hmm, maybe I'm going about this wrong then, I'm trying to implement a msgpack serializer/deserializer (see

1599434141
smolck
so I can handle the basic types, but I'm having trouble with the struct part

1599434243
andrewrk
hmmm. I'm actually not the best person to ask about meta programming and so I'll be quiet to let other folks chime in :)

1599434250
andrewrk
I'm biased against it ;)

1599434301
smolck
okay cool, just explaining this I'll probably figure it out ;)

1599435427
pixelherodev
Making very good progress on spu_2 backend :)

1599435543
pixelherodev


1599435586
pixelherodev
Parameters should be finished tomorrow, along with basic arithmetic and a bit more :D

1599435884
smolck
is there a way to convert "bool" -> bool (the type), and similar for other types?

1599435927
smolck
(i.e. get the type if all you have is @typeName(x))

1599436097
pixelherodev
smolck: is the string comptime known?

1599436271
smolck
yes, it should be

1599436286
smolck
(actually at this point I don't think I need to do that after all, but now I'm still curious how it's done)

1599436352
pixelherodev
smolck: with comptime strings, just do a `std.mem.eql`

1599436372
pixelherodev
Types are first-class at comptime

1599436396
smolck
oh gotcha

1599436398
smolck
thank you

