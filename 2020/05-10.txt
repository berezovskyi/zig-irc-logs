1589073482
aerona
is there any function that tells if a type is a string/string-like type?

1589073732
foobles
what do you mean?

1589073739
foobles
what qualifies?

1589073744
foobles
like an array of u8?

1589073764
aerona
[]const u8, []u8, [*:0]u8, pretty much any type that can accept a string literal

1589080910
fraktor
When I define a const like the following, I get an "inferred array size invalid here" message: `const data: [_]u16 = .{ 1, 2, 3 ... };`

1589080934
fraktor
How can I make that inferred?

1589081065
aerona
if i understand the .{} syntax correctly .{} is actually an anonymous struct

1589081085
aerona
array literal syntax is actually [_]u16{ 1, 2, 3 ... };

1589081149
fraktor
I figured it was something like that.  Thanks!

1589086535
marler8997
having issues building zig on my new machine.  Using NixOS, anyone know what toolchain I should use to build llvm/zig?  I'm getting compile errors like strict-aliasing violations and unused variable errors

1589088950
marler8997
figured it out, need gcc 9.2 not 8.3

1589089795
wilsonk
marler8997: I always just build clang/llvm with the previous release (never had that fail), then rebuild it with itself afterwards again to take advantage of new optimizations. That way you also have the latest llvm to build zig. I was on gcc-5.4 until just recently because I pretty much use clang for everything at this point

1589089852
marler8997
so I should start with clang from my package-manager?

1589092766
andrewrk
marler8997, I used to use the nixos package for llvm and clang but lately I've been using a source build

1589102853
wilsonk
marler8997: sorry I didn't notice your next question. If your distro has something as new as llvm-7, or newer, then I wouldn't see a problem with just installing that and then building llvm/clang-10 from source. I recently built llvm-10 with clang-7 and it worked fine. Source builds can take a VERY long time (like several hours with a slow-ish quad core... and expect to use about 2GB ram per core!). I think it takes about 1.11 hours with m

1589102938
wilsonk
oh, sorry about that last bit of the above comment...obviously if you built with gcc then you are aware of the build times for llvm/clang...my bad :)

1589109363
daurnimator
grrrr

1589109376
daurnimator
I can't get git to not change .zig line endings to crlf on windows

1589109439
daurnimator


1589109488
ikskuh
daurnimator: there are a lot of git options for that

1589109547
ikskuh
you can put a line into .gitattributes "*.zig text eol=lf"

1589109557
ikskuh


1589109649
daurnimator
ikskuh: you'll see I already did

1589109664
daurnimator
(and it didn't work)

1589109678
ikskuh
:(

1589109692
ikskuh
windows line ending hell

1589109757
ikskuh
is core.autocrlf also false?

1589109791
daurnimator
i would hope so... as far as I know its in a default windows environment there in travis

1589109850
ikskuh
well, then it's on by default

1589109857
ikskuh
#insaneDefaults

1589111289
Barabas
What to do when I get 'cannot inline function' errors?

1589111314
Barabas
This actually: zig\std\fmt\parse_float.zig:55:5: error: unable to inline function

1589111338
Barabas
I'm calling print in a function that's recursive, so I guess it has to do with that.

1589111469
Barabas
Wait... that doesn't make sense... parse float shouldn't be used when printing, right?

1589111695
Barabas
Ok, it's some other code which calls `std.fmt.parseFloat(f64, some_slice)`

1589112748
daurnimator
ifreund: :( apparently yes:

1589112758
daurnimator
and a comment in there says its the default for git on windows

1589112805
daurnimator
huzzah:

1589112890
ifreund
ew

1589112934
ikskuh
daurnimator: ah, this may help :)

1589113680
daurnimator
`installRaw` doesn't seem to make much sense to me

1589113687
daurnimator
it seems to install to zig-cache ?

1589113821
daurnimator
wait no, it installs to the install dir.... not the output dir

1589121213
oats
when I save a zig file in vim, and there's a syntax error in the file, zig.vim opens an empty split. Are there supposed to be error messages in here?

1589121497
plumm
Yes

1589121869
Barabas
meh

1589121948
Barabas
I'm using `std.io.bufferedInStream`, but that doesn't really work with line by line user input

1589121970
Barabas
it tries to fill the whole buffer before returning from the read call =|

1589122031
oats
Barabas: why not use a bare InStream and use .readUntilDelimiterAlloc

1589122125
Barabas
Yes that'll probably work. I picked the buffered version because that's what the java code I'm transpiling did

1589122142
Barabas
didn't think it would be a problem

1589122147
oats
hmm

1589122204
Barabas
I also don't know what the correct behaviour is to be honest.

1589122218
Barabas
should be I mean

1589123249
fraktor
Is there a way to get the index while in a for loop, or should I just use a while?

1589123298
oats
fraktor: for (items) |value, index| {...

1589124968
fraktor
oats: Thank you. I didn't see that in the docs before

1589124977
oats
np. cheers :)

1589125105
oats
if a zig module, with some global variables in it, is imported by two separate other modules, do those modules both refer to the same global variable in the first module?

1589125118
oats
or are two separate "instances" of the first module created

1589125255
oats
hope that makes sense lol

1589125285
marler8997
wilsonk: Yeah it was taking me several hours till I got my new machine.  New machine has a Ryzen 9 3900x, RAM speed is 3200MHz, Storage is a 500GB nvme drive.  LLVM build time: 6min 24s, Clang build time: 3min 45s, LLD build time: 27s.  And all that is with "make -j24"

1589125690
marler8997
oats: there should be only 1 instance

1589125884
oats
marler8997: thanks!

1589126507
plumm
marler8997 and what supercomputer did you just buy O_O

1589126877
oats
these new AMD chips sound pretty snazzy, gotta say

1589126887
oats
think I'll probably put one in my next machine

1589127054
Barabas
I also bought a 3900 recently. Can't say I'm disappointed :)

1589129282
fraktor
Is there a way I can get a mutable reference to something?  `&variable` is giving me a `*const foo`, when I need a `*foo`.

1589129295
marler8997
plumm: I listed the main components up above, if you want more detail let me know.  Machine will run you about $1000 for the bare bones.  I run headless as well so no GPU.  About $500 for the CPU and $500 for the other parts.

1589129361
Xavi92
fraktor: wouldn't it be `*foo`?

1589129362
andrewrk
fraktor, make your `variable` var instead of const

1589129411
fraktor
I don't know how I missed that.  Thank you

1589131825
antaoiseach
/part/part

1589135764
Snektron
3700X here, got it right at the release. Everything builds so fast

1589135766
Snektron
its great

1589147669
jwmerrill
Just got my Lox interpreter compiling to wasm32-wasi. You can try it in the browser by going to

1589147802
jwmerrill
Here's the project repo if anyone is curious how this is working:

1589147824
jwmerrill
There's now a "wapm.toml" that integrates this with the wapm webassembly package manager.

1589147895
ifreund
hah, firefox makes you enter each line in a dialog

1589147905
ifreund
seems to work though, nice

1589147943
jwmerrill
Firefox wasn't letting me do anything at all. I get "DataCloneError: Worker.postMessage: The SharedArrayBuffer object cannot be serialized. The Cross-Origin-Opener-Policy and Cross-Origin-Embedder-Policy HTTP headers will enable this in the future."

1589147957
jwmerrill
I tried in Safari, and was getting the "prompt" behavior there.

1589147998
ifreund
this is what i get

1589148169
jwmerrill
Impressed you persisted through more than 1 command that way...

1589148221
fengb
Neat

1589148224
ifreund
there is no other browser :P

1589148249
jwmerrill
firefox is my daily driver too

1589148250
fengb
I’ve never had more random issues than I have with FF

1589150716
oats
how does @intToEnum behave when given an integer that doesn't have a corresponding variant for a non-exhaustive enum?

1589150746
oats
I would've expected it return the '_' variant, but it seems to give the last enum variant in the listing before the '_'

1589150860
oats
jwmerrill: speaking of which, I've moved on to the bytecode VM. handling allocation and error-handling became veryNotFun™

1589152055
oats


1589152058
oats
here's a minimal example

1589152091
oats
I would've expected this to print "narp 1", not "yarp 0"

1589153158
fengb
This looks really buggy

1589153161
fengb


1589153199
fengb
Changing it to 'packed enum' changes the output into a different wrong value

1589153214
tdeo
...packed enum?

1589153309
oats
fengb: that is really odd

1589153336
fengb
Probably a compiler bug. Can you create an issue?

1589153615
oats
sure!

1589153624
oats
my first zig issue \o/

1589153712
fengb
Probably not the last ;P

