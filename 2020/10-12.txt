1602465475
tundrax
Looks zig was added to TIOBE index as of Oct 2020,

1602467853
pixelherodev
TIOBE?

1602467906
pixelherodev
never mind, found it

1602468011
pixelherodev
A generic "programming language rankings" tracker. So impressive.

1602468257
waleee-cl
more impressive to never have heard of/seen it actually

1602503166
Xavi92
Hi, I am experimenting with Zig on the PlayStation 1 (MIPS I is unofficially supported thanks to a patch), but zig complains about mixed ABIs. I have tried different abi values for mips-freestanding- with no success. Any pointers?

1602503234
ifreund
it looks like the issue is caused by something you are linking with

1602503693
Xavi92
ifreund: I have a C library with some assembly files, and whereas I could insert the C source files into the `zig build-exe` command, I did not find a better way to insert the assembled assembly files rather than archiving them

1602503733
daurnimator
Xavi92:

1602503762
daurnimator
Xavi92: are you trying to use o32 or n64?

1602503783
daurnimator
whichever it is you want; you're using both and need to fix things to just use the one you want

1602503994
Xavi92
daurnimator:

1602504000
Xavi92
Now I do see some differences there

1602504291
Xavi92
Adding -mabi=32 to the assembler flags did it. Thanks!

1602504311
ifreund
does usize have the same ABI as *c_void?

1602504346
ifreund
is there a good resource to read about the C ABI for various targets?

1602522885
ifreund
llvm11 is out

1602523197
bfredl
yay

1602523240
bfredl
not in arch yet smh

1602523254
ifreund
slackers

1602523263
ifreund
it's been out for a whole 8 hours

1602523281
bfredl
they should have prepared from the RC's

1602523290
bfredl
so just a single rebuild and CI test and then shipit

1602523349
bfredl
i would into arch-testing if i was not in a zoom meeting r n :P

1602523396
earnestly
11 is in staging

1602523419
bfredl
how much other stuff is there?

1602523421
bfredl
in staging i mean

1602523453
bfredl
"Warning: Do not enable the staging repositories for any reason. Your system will unquestionably break after performing an update. This repository is only meant for backend developer use."

1602523456
bfredl
sounds like a challenge

1602523512
earnestly
It's basically a place for rebuilds to take place

1602523528
earnestly
Typically relinking anything that needs it, in some specific order

1602523537
bfredl
sounds fun

1602523557
bfredl
`compiler_rt.so.51.66.656 not found

1602523562
bfredl
"bash": failed to load binary

1602523568
ikskuh
<bfredl> so just a single rebuild and CI test and then shipit

1602523577
ikskuh
8 hours sounds like a good time for clang to build and pass CI :D

1602523598
bfredl
ok. so in the break of the ai safety meeting :P

1602523642
ifreund
earnestly: to be clear I was joking about the slacking, it'll probably be a week or two till we get a void package

1602523677
bfredl
lolol worst case i delete some warez from my nvme to make space, and build it myself tomorrow.

1602523686
fengb
Why wasn’t it available yesterday??

1602523699
bfredl
or two yesterdays ago

1602523700
bfredl
or three

1602523704
bfredl
(and inductively)

1602523716
earnestly
ifreund: Oh don't worry about me, you can joke about anything and I'd understand :p

1602523738
g-w1
I am on arch. If I upgrade my packages and llvm upgrades to 11, then will zig building break?

1602523750
bfredl
i am gonna fix all ASAN/UBSAN and clang-static in neovim b4 anyone notice them existing :]

1602523774
earnestly
g-w1: Hopefully the packagers are aware enough to distribute the new llvm with new relinked packages that depend on it

1602523815
g-w1
Doesn't zig use llvm 10 though? Will I have to have 2 versions of llvm?

1602523828
bfredl
hmm zig is already prepared for llvm 11 right? using comptime/c++ macros.

1602523834
ifreund
g-w1: there's already an llvm11 branch on the zig repo

1602523840
ifreund
I assume it will be merged shortly

1602523850
g-w1
ahh. That makes sense.

1602523856
fengb
There’s a separate branch yeah. Master will stop working until Zig merges/releases in a couple weeks

1602523873
bfredl
zig 0.7 in a couple of weeks?

1602523874
bfredl
yay

1602523890
g-w1
I guess this would be a good time to be using nixos to manage all the dependency hell :P

1602523896
fengb
I think the target is always 2 weeks after LLVM

1602523913
bfredl
hahaha i had to install nixos, just to build/use raptorjit

1602523917
fengb
This cycle Zig had to delay because LLVM got pushed multiple times

1602523922
bfredl
a luajit fork with some tracess inspection

1602523926
ifreund
26.10.2020 is the current target for 0.7.0

1602523928
earnestly
nixos doesn't manage dependencies, that's the point

1602523940
bfredl
nixos just does nixos

1602523974
bfredl
like. gentoo is not a distro. it is just a collection of handy LFS build scripts :D

1602524095
earnestly
I mean, nixos keeps things isolated in such a way so that it doesn't have to deal with these problems

1602524111
earnestly
It's the throwing-your-hands-up approach to solving the problem of distributed package management

1602524249
g-w1
I have a laptop with gentoo on it and its just soo high maitnence.

1602524728
FireFox317
andrewrk, llvm 11 finally released :party:

1602526677
pixelherodev
I'll try to get get LLVM 11 + Zig in my gentoo overlay today

1602526878
bfredl
i just gave up on python in that case. and made a separate pipenv for each of my madnessess

1602526900
bfredl
before, i could use one tensorflow version for everything. sounds crazy now right

1602529453
skuzzymiglet
hello

1602529517
skuzzymiglet
i'm trying the example from

1602529528
skuzzymiglet
and it says std.debug doesn't have the member print

1602529554
skuzzymiglet
./main.zig:1:35: error: container 'std.debug' has no member called 'print'

1602529647
ifreund
skuzzymiglet: Hi, that's likely because you're using zig 0.6.0 but reading the docs for master

1602529660
ifreund
on 0.6.0 you should use std.debug.warn

1602529684
skuzzymiglet
thanks a million

1602529695
skuzzymiglet
zig looks cool

1602529702
skuzzymiglet
i'm a Go guy

1602529750
ifreund
no problem! zig and go have a common goal of simplicity for sure

1602529841
skuzzymiglet
i do like the strictness with errors

1602529927
ifreund
I really love how zig does errors, it's strict without being painful

1602529938
skuzzymiglet
async looks hard tbh

1602529976
ifreund
async takes a little getting used to since its much less abstracted that it is in most other languages

1602530009
ifreund
it allows you to implement something equivalent to Go's coroutines in userland though

1602530168
skuzzymiglet
can zig run the current directory like go does

1602530194
skuzzymiglet
what's happening

1602530215
ifreund
not familiar with go, what do you mean?

1602530228
skuzzymiglet
you can `go run .`

1602530244
ifreund
and what does that do? find a main function and run it?

1602530260
skuzzymiglet
compile the package i think

1602530265
ifreund
you can `zig run main.zig`

1602530278
skuzzymiglet
will that hook in other files though?

1602530295
ifreund
yes, you only ever need to give zig the root source file

1602530318
skuzzymiglet
i see you made an wm in zig

1602530336
ifreund
(as for why all those people disconnected, don't mind that it's just the matrix bridge being crappy)

1602530347
ifreund
yes I wrote a wayland compositor

1602530674
skuzzymiglet
what's the function naming convention in zig? foo_bar or fooBar?

1602530701
nikki93
fooBar

1602530719
nikki93
more info:

1602531094
skuzzymiglet
is there a source formatter for zig

1602531096
skuzzymiglet
like gofmt

1602531112
ifreund
zig fmt

1602531121
skuzzymiglet
cool

1602531167
ifreund
note that it doesn't care about line lenght at all, you can tell it to break by adding trailing commas to e.g. function calls

1602531192
skuzzymiglet
need to find whether it works with ALE

1602531193
skuzzymiglet
in vim

1602531226
ifreund
you may want the --stdin flag depending on what ALE expects

1602531415
skuzzymiglet
i think it's just zls

1602531416
skuzzymiglet
with ale

1602531559
ifreund
ah yes, zls can run zig fmt for you

1602531756
skuzzymiglet
can't get it on void linux

1602531774
ifreund
you'll need to build zls from source

1602531782
ifreund
it requires zig master

1602531783
skuzzymiglet
and can't build from source, because i'm on 0.6.0

1602531799
ifreund
you can download a static tarball from ziglang.org

1602531931
skuzzymiglet
where do i put the files

1602531953
waleee-cl
somewhere on your $PATH

1602531978
waleee-cl
(or somewhere which you add to PATH)

1602531995
skuzzymiglet
where the `lib` though?

1602531997
nikki93
I do it by keeping all releases as separate directories under a 'zig-releases' directory in some nice place

1602532014
nikki93
then i just `ln` the `zig` executable into my `~/bin` which is in $PATH

1602532020
nikki93
it'll find 'lib/' automatically

1602532263
skuzzymiglet
how does it find lib

1602532280
skuzzymiglet
it seems like its spending ages just searching for it

1602532303
waleee-cl
... have you moved it from the extracted map?

1602532307
skuzzymiglet
yes

1602532313
skuzzymiglet
to `~/.local/lib/zig`

1602532424
waleee-cl
just add a symlink to the zig binary in  ~/.local/bin

1602532453
waleee-cl
(ie do not move around the directories in fhe extracted map)

1602532454
skuzzymiglet
i just copied it to `/bin`

1602532475
skuzzymiglet
i think it's just the libraries

1602532487
ifreund
zig looks relative to the path of its binary for its libraries

1602532499
ifreund
as long as you install them to the same prefix it should have no problem

1602532583
nikki93
yeah as i described above -- i symlink it from some nice place where it's exactly as extracted -- and that works

1602532609
nikki93
the symlink thing lets you switch versions by just changing a symlink

1602532615
nikki93
while keeping multiple versions around

1602541271
ryuukk_
hi,

1602541283
ryuukk_
how to i run the project based on the build.zig?

1602541286
ryuukk_
i'm confused

1602541486
ifreund
`zig build` will run the build.zig

1602541756
andrewrk
hello friends

1602541760
andrewrk
oh snap is it llvm release day?

1602541813
waleee-cl
you were on 3rd place on the "thanks for contributions list"

1602541858
ryuukk_
is there a way to "zig run" on a project? ifreund

1602541896
ifreund
ryuukk_: you can add a RunStep to your build.zig and use `zig build run`

1602541917
ifreund
the template generated by zig init-exe does this

1602542027
ryuukk_
ifreund: thanks

1602542063
ifreund
no problem!

1602542214
pixelherodev
andrewrk: only seven? ;)

1602542310
pixelherodev
waleee-cl: what list?

1602542390
waleee-cl


1602543202
ryuukk_
there is no string type in zig?

1602543236
andrewrk
ryuukk_, what are you trying to do?

1602543273
ryuukk_
i try to port my game engine in D, storing some configuration to then open a window with GLFW, looking to store window title

1602543311
ryuukk_
well not D, but from C++ > D > zig, i'm trying out languages

1602543908
earnestly
(I wish I could find an old article which argued for the destruction of the "string type" (instead, arrays) but I can never google hard enough to get at it)

1602544151
ryuukk_


1602544158
ryuukk_
string / function pointer

1602544209
ryuukk_
earnestly: having string type makes it easier to manage

1602544212
g-w1
you can just declare functions directly in the structs

1602544233
ryuukk_
how?

1602544310
g-w1
const StructName = struct {x: i32, fn whatever(self: StructName) {

1602544328
g-w1
you can call it with dot notation

1602544357
ryuukk_
hmm i'm not sure i understand

1602544365
ryuukk_
i want user defined function pointer

1602544365
g-w1
ill find an example

1602544374
g-w1
ohh. like a closure?

1602544402
ryuukk_
in c++ i do like this: ``void(*on_update)(float) = nullptr;``

1602544445
ryuukk_
``app.on_update = &on_update;``

1602544599
earnestly
ryuukk_: Yes, they cover such objections

1602544673
ryuukk_
how i would go about this? i tried to search about close but couldn't find anything

1602544697
ryuukk_
about closure*

1602544748
pixelherodev
That's not what you want

1602544753
pixelherodev
Function pointers aren't methods

1602544764
g-w1
yeah. I misunderstood them

1602544768
pixelherodev
`const a = struct { fn b() void {} }` is valid, but not what you want

1602544776
pixelherodev
YOu want `const a = struct { b: fn ()void }`

1602544794
pixelherodev
Then you could do e.g. `const c = a{}; a.b = some_function;`

1602544826
pixelherodev
waleee-cl: 3rd place in alphabetical order lol

1602544848
ryuukk_
pixelherodev: it works, thanks

1602544871
pixelherodev
No problem :)

1602545338
andrewrk
ryuukk_, not sure why you need to decode for your window title. just keep it as utf8 encoded bytes, never decode

1602545373
andrewrk
decoding the window title would drag in a ton of unicode dependencies

1602545574
waleee-cl
pixelherodev: oops, didn't notice that

1602545746
pixelherodev
:P

1602546773
ryuukk_
``fn run(self: Engine) void`` how to i make self not const? i tried var self: Engine, but it doesn't work

1602547002
ryuukk_
.\src\main.zig:83:21: error: cannot assign to constant

1602547002
ryuukk_
self.quit = true;

1602547021
g-w1
self: *Engine I think you want to pass by reference.

1602547036
g-w1
do you?

1602547055
ryuukk_
i tried that before, but it wouldn't compile:  error: expected type '*Engine', found '*const Engine'

1602547073
g-w1
that is because you are declaring your instance as const instead of var

1602547098
g-w1
const e = Engine {}; e.run() // will not work because e is const

1602547108
ryuukk_
oh it works, thanks g-w1

1602547115
ryuukk_
switching from const to var

1602547118
ryuukk_
i forgot

1602547191
ryuukk_
ok managed to sketch quickly the application, now i'm gonna see how far i can go trying to add glfw as dependency :p

