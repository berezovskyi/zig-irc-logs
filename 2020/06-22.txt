1592784114
blinghound
I'm getting an undefined symbol: __memcpy_chk when attempting to build with -Drelease-safe=true

1592784141
blinghound
but not with debug, release-fast or release-small

1592784170
blinghound
the mode flag is the only thing changing when compiling

1592784239
blinghound
zig\lib\zig\libc\include\any-windows-any\string.h:202

1592784249
blinghound
referenced here

1592784325
blinghound
would this be something to create an issue over?

1592784414
andrewrk
blinghound, sure, that's a good way to get some attention on your use case

1592784509
blinghound
hi andrew! I'm a bit of a noob when it comes to contributing, but I'll create one

1592784554
blinghound
I'm loving zig, thanks for your hard work.

1592784773
andrewrk
glad you like it. as long as you can stand a few bumps here and there you're in for a fun ride :)

1592784894
blinghound
I'm translating a 40,000+ line c++ project into zig, and it's been a night and day difference ;D

1592784909
blinghound
I'll be releasing the source eventually

1592785030
blinghound
once my income increases again I'll 100% be sponsoring

1592785119
andrewrk
that's fun. you can probably start with translating pieces of it without having to translate the whole thing

1592785132
andrewrk
if you are so inclined

1592785373
blinghound
that's a good idea, I've got a lot of opengl code that could do with refactoring anyway

1592785397
blinghound
so I can strip chunks out and link the zig code with the c++ project

1592785425
blinghound
the user so has gotta be getting a lot of notifications

1592785459
leeward
Fair warning: the generated .h files might not get you everything you want. You might have to tweak the interface to the Zig objects.

1592797876
pmwhite
Calling deinit on an ArenaAllocator frees everything of allocated, right?

1592797941
andrewrk
right

1592798100
pmwhite
Oh, oops, I was using the long-lived allocator, not the per-loop-iteration one.

1592798650
pmwhite
I guess it's also problematic if you make an ArenaAllocator from another ArenaAllocator

1592805643
daurnimator
TIL of the subtraction linked list

1592805652
daurnimator
which is notable because its can be relocatable

1592805659
daurnimator
which also means serialisable

1592811694
pixelherodev
mq32: good to know thanks

1592816876
nikita`
i was just wondering, is there a reason why zig does not support ternary expressions?

1592816887
nikita`
new to this, coming from C

1592816945
zannzen[m]
it's not needed, you can just use if statements in initialization...not sure if that's technically the reason or andrew just didn't like them :)

1592816979
zannzen[m]
e.g. `const value = if (cond) then_value else other_value;`

1592817056
nikita`
ah, okay. I know some people who don't like ternary expr, so I guess that's more readable to some.

1592817060
nikita`
thanks

1592817357
mq32
zannzen[m]: that's actually an if-expression

1592817372
mq32
nikita`: the reason for "no ternary expression" is "not needed"

1592817383
mq32
the if expression completly solves that use case in a more general way

1592817415
nikita`
okay

1592823791
ask6155
Hello!

1592823894
ask6155
How do I free slices?

1592823910
ifreund
allocator.free(my_slice);'

1592823974
ask6155
Also can someone give me some documentation of slices (I don't understand them)(from C land)

1592824033
ifreund
they're basically just a special struct holding a pointer and a length

1592824056
ifreund
something like struct{ ptr: [*]T, len: usize };

1592824067
ifreund
docs here:

1592826870
ask6155
That's what I like to see! cpu usage: one thread. Memory usage:0.0%

1592827492
mq32
ask6155: that's rookie numbers!

1592827496
mq32
you have to get less!

1592851049
traviss
does anyone recognize this as an existing translate-c issue?

1592851098
shakesoda
it happened: apple has announced that they're moving macs to arm

1592851104
shakesoda
instead of this just being a rumor

1592851111
traviss
looks like the array data isn't being cast appropriately in my example

1592851246
fengb
They haven't announced arm though. RISCV has a chance!

1592851261
shakesoda
they did, although they didn't say the word arm

1592851294
shakesoda
just given they're showing stuff running on an A12Z, and we can already buy those

1592851317
fengb
Oh good point

1592851340
fengb
Could this mean macOS on iPad too?

1592851341
leeward
shakesoda: Are they moving the whole line?

1592851346
mq32
also top 500 is now lead by an ARM machine

1592851348
shakesoda
yes, looks like it

1592851359
shakesoda
fengb: probably not

1592851371
ifreund
maybe iOS on macbooks

1592851392
leeward
Well, that'll suck for cross-platform developers for a little while, but it's nice to finally have some diversity back in the PC market.

1592851413
fengb
Death to hackintosh :(

1592851426
shakesoda
fengb: well, not an immediate death at least

1592851428
mq32
leeward: it makes apple development a lot easier

1592851430
mq32
kinda

1592851437
shakesoda
mq32: for sure

1592851446
mq32
because everything will run on ARM now, so your applications are cross-compatible

1592851465
mq32
also: hackintosh on RPI when?!

1592851481
fengb
I'd expect them to lock down the specific ARM chip

1592851482
fengb
Since they can now

1592851484
leeward
mq32: Exclusive apple developers.

1592851497
mq32
so? that's nothing new

1592851568
leeward
Developers for just Apple: happy. Developers who have to support 3 platforms already: unhappy. Developers who dislike x86 and want it to die in a fire: less unhappy.

1592851603
ifreund
yeah, i was gonna say that I've heard some "death to x86" sentiments in here

1592851611
ifreund
lemonboy will be happy

1592851623
fengb
Heyo! iOS has home screen widgets now

1592851632
fengb
Welcome to 2009

1592851654
ifreund
what does that m ean

1592851687
fengb


1592851689
leeward
If I cared about macs or supported anyone who ran MacOS on anything, I'd be happy. As it is, ARM is already popular.

1592851736
ifreund
looks dumb imo

1592851793
ifreund
though I say this as someone who primarily uses their phone in black and white to reduce the attention-grabbing of the icons

1592851975
fengb
I find it funny that iOS finally caught up

1592852173
leeward
Are they bringing back Rosetta?

1592852177
leeward
What's going on with Parallels?

1592852232
fengb
"Edit 5: Rosetta 2 is announced. It's a translation layer from x64 to ARM. Apparently it does AOT translation, as well as JITting."

1592852253
traviss
maybe apple is trying to turn attention away this:

1592852294
fengb
Hey just announced a compromise earlier today

1592852384
leeward
traviss: seems unlikely. They plan WWDC a year in advance, and being sued over their app store monopsony is nothing new.

1592852477
leeward
I wonder how this will affect Linux distros. Debian already has a fully supported ARM port. I wonder if we'll see ARMUbuntu.

1592852492
leeward
Maybe more options like Pinebook.

1592852503
fengb
Archlinux ARM on Mac?

1592853005
shakesoda
there will very much be more arm options like pinebooks in the future

1592853044
shakesoda
that's just already been the direction things are going

1592853088
shakesoda
leeward: there's already arm ubuntu, fwiw

1592853094
shakesoda
has been for years

1592853101
leeward
shakesoda: Figures.

1592853117
shakesoda
fedora arm, arch arm etc very much exist too

1592853142
shakesoda
a lot of the usual suspects run on raspberry pis and/or arm servers already

1592853143
leeward
Well, ubuntu and arch got it for free. I don't know anything about the RH ecosystem.

1592853226
ifreund
voidlinux also has quite good support for non-x86 stuff

1592853840
leeward
Looks like void supports arm and mips. I didn't know people were still making actually new distros.

1592853889
oats
void's an interesting little distro

1592853902
oats
bit too minimalist for me personally, but I can tell a lot of thought went into it

1592853939
ifreund
been using it for a good bit now. xbps (the package manager) supports partial upgrades unlike pacman

1592853955
leeward
I'm spoiled. Debian has pretty much everything I would ever want to run, and any widely used package is likely to be maintained by someone affiliated with the upstream project.

1592853955
oats
ifreund: how do you like it?

1592853956
ifreund
they also have pretty fantastic tooling for cross compiling

1592853978
ifreund
very satisfied, don't miss systemd at all

1592854002
oats
I had a heck of a time trying to get a decent system logging setup when I last tried void

1592854004
ifreund
also not needing the AUR is very nice (i switched from arch)

1592854019
companion_cube
how's the systemd replacement?

1592854085
ifreund
very minimal, though I haven't run into anything I needed that runit didn't support

1592854110
ifreund
boot times are super fast compared to systemd if that's something that matters to you

1592854124
ifreund
one really nice thing about void is that they have a repo with debug builds of all the packages

1592854142
ifreund
makes digging around through backtraces that go into libraries SO much easier

1592854171
ifreund
oats: socklog hasn't given me any troubles fwiw

1592854292
oats
hmm

1592855314
companion_cube
hmm, systemd is really fast for me, idk

1592855328
companion_cube
does it have .a files tho?

1592855367
oats
I've never done anything that systemd got in the way of

1592855385
oats
unit files are dead-simple to write, and I like how it centralizes some parts of system configuration

1592855399
oats
but I don't want to start a systemd flame war :P

1592855409
leeward
My boot time is roughly 1 eyeblink with systemd, but this machine is super fast.

1592855413
oats
but my use case is thoroughly average

1592855528
ifreund
my main issue with systemd is that it tries to do far too much and is way too complicated for me to reasonably understand

1592855584
oats
ifreund: we should rewrite it in zig :>

1592855593
oats
RIIZ

1592855599
oats
ZESF

1592855603
ifreund
no, why?

1592855615
blinghound
is github down?

1592855618
oats
sorry, I was memeing (poorly)

1592855638
ifreund
blinghound: seems to work for me

1592855638
oats
blinghound: not to me

1592855660
mq32
ZigLinux, no libc involved

1592855679
ifreund
i think you mean ziglibc

1592855686
mq32
hm?

1592855688
blinghound
dayum, it must be my region or something

1592855724
ifreund
i've heard rumors that we will eventually ship a libc implementation in zig instead of musl/glibc/whatever

1592855740
blinghound
that's so cool

1592855757
blinghound
I'm getting github anxiety of not being able to push or pull

1592855782
CommunistWolf
git is decentralised

1592855786
CommunistWolf
you'd never know it

1592855802
mq32
ifreund: there is already stuff implemented

1592855811
ifreund
compiler-rt right?

1592855824
mq32
no, that's compiler_rt :D

1592855841
mq32
(which is supplement for non-implemented instruction primitives)

1592855857
ifreund
ah you're a pedant :D

1592855881
mq32
well, that's not shipped in a libc!

1592855889
mq32
and you need compiler_rt when compiling C code without libc

1592855893
mq32
(freestanding)

1592855955
companion_cube
rewriting systemd in zig would be awesome

1592855960
companion_cube
it's much better than C for that

1592856000
companion_cube
there was "uselessd" once, but it died

1592856014
leeward
Have people already successfully written Linux kernel modules with Zig?

1592856041
nephele
I only know a (early) kernel written in zig, not about modules for linux

1592856066
leeward
It seems like a worthwhile project, and not too hard to get a trivial one working.

1592856068
mq32
i think daurnimator tried to do so

1592856079
mq32
i have build "Zig-HW-Linux"

1592856088
mq32
which is a linux distro with a single application that prints … hello world

1592856091
mq32


1592856111
nephele
so, just put a zig hello world into /init ? :)

1592856116
mq32
exactly!

1592856121
mq32
/sbin/init though

1592856130
nephele
eh /init is nicer

1592856135
nephele
in the initramfs

1592856138
mq32
is that allowed?

1592856144
nephele
its the default for initramfs

1592856154
nephele
you can also then put it into the kernel image

1592856158
mq32
i didn't have a initramfs :D

1592856161
mq32
i just had disk

1592856167
fengb
Zig is pid1?

1592856170
fengb
At that point, do we even want a kernel

1592856185
mq32
"zig run-os /os/my-os.zig"

1592856193
fengb
Oh wait... I'm slowly catching up

1592856196
nephele
mq32, well, its easy to test, compile the kernel, have the initramfs in it and put it as an efi executable in the ESP :P

1592856211
nephele
atleast that is how i did it for a "minimalistic" distro

1592856220
nephele
not that that ever went anywhere substantial

1592856231
mq32
hm

1592856236
mq32
but it's appealing

1592856241
mq32
we need thin clients at work

1592856248
mq32
right now they use sytemd and stuff

1592856263
mq32
but i could also just use arch and rip out the whole init process and replace that with a bash script :

1592856281
nephele
If you just want more minimalistic i would pick alpine or something

1592856290
nephele
also keep in mind that bash itself is no tiny dep :D

1592856297
mq32
heh

1592856302
mq32
firefox is neither :D

1592856307
nephele
:(

1592856315
mq32
it's a desktop that only needs a modern web browser and displays a web page :D

1592856326
leeward
So...a chromebook?

1592856337
mq32
without storage

1592856339
mq32
or folders

1592856340
mq32
or anything

1592856350
mq32
or users

1592856359
fengb
But the browser is the new OS layer

1592856361
fengb
So might as well run the browser as a kernel

1592856362
nephele
I had one single purpose display in a fire department that shows a webpage, so i test ping 8.8.8.8; to see the network and launched chromium --app=something :D

1592856364
leeward
Didn't Oracle try to push thin clients in the '90s?

1592856388
nephele
seemed overkill that debian with sysd ran on that, but i wasnt goign to replace the whole thing and make it /my/ maintenance burden hehe

1592856396
mq32
leeward: thoose are something different

1592856403
mq32
modern thin client is "runs a single application"

1592856423
mq32
oldschool thin client is "use a small machine to have a full desktop env on a remote machine"

1592856453
nephele
conceptually similar though :)

1592856457
leeward
So you need a good amount of CPU and RAM to run all that javascript locally then.

1592856472
mq32
it depends

1592856478
mq32
RPI2 is "good amount"

1592856481
nephele
I am looking forward to Xtensa in upstream LLVM to run zig code on my ESP

1592856486
fengb
RIP Pi0 :(

1592856492
leeward
Depending on the web pages you want to use and how many of them...

1592856500
fengb
wtb more ram

1592856506
mq32
exactly one, displaying PDF and Markdown

1592856506
mq32
:D

1592856523
leeward
Displaying markdown is displaying html, since it's rendered server side.

1592856543
fengb
We can render markdown locally

1592856589
ifreund
why would we rewrite systemd in zig, we could make something better instead :P

1592856598
mq32
systemd ain't that bad

1592856611
mq32
i like the declarative approach

1592856629
ifreund
the services themselves are fine yes

1592856638
mq32
(that'S what systemd is for me)

1592856650
ifreund
it shouldn't run as pid 1 though

1592856665
ifreund
and should not be require to use e.g. logind

1592856670
leeward
I'll take systemd over sysV init scripts any day.

1592856681
mq32
zinit!

1592856703
ifreund
i'm not saying that sysV init was better, but imo runit and the s6 suite both are

1592856723
mq32
ln -s /bin/false /sbin/init

1592856724
mq32
done

1592856730
ifreund
heh

1592856732
companion_cube
just have a small pid1, and a pid2(?) that manages services in the systemd styl

1592856734
oats
now that's a suckless init

1592856735
companion_cube
e

1592856737
companion_cube
and everyone will be happy

1592856753
mq32
oats: it will never fail

1592856756
fengb


1592856769
ifreund
companion_cube: indeed that would be alot better, now ask the question "why did they not do that?"

1592856800
companion_cube
feature creep? I don't know how Lennart's brain works

1592856801
ifreund
the fact that they didn't doesn't exactly inspire faith in their design principles

1592856861
leeward
I'm confused. What does pid1 do?

1592856869
leeward
In this hypothetical system

1592856878
fengb
In systemd, just about everything :P

1592856885
leeward
No, in the thing companion_cube proposed

1592856900
mq32
start systemd and bash :D

1592856973
companion_cube
start and monitor the actual service manager

1592856986
fengb
Oh... I actually meant to link this talk:

1592856995
ifreund
this page is pretty informative:

1592857009
leeward
This sounds like the beginning of a systemd flame war. I'll stop.

1592857051
mq32
ifreund: going to read that

1592857060
mq32
want to inform me about more init systems anyways

1592857062
fengb
I mean... that's how every systemd discussion ends up right? :P

1592857066
mq32
faster boot → better

1592857091
ifreund
the argument can definitely be made that runit is too limited

1592857101
companion_cube
less shell -> better :D

1592857121
andrewrk
when I reboot, it fails to shut down some service correctly, and takes 1.5 minutes doing nothing before it gives up and times it out. so add +1.5 minutes to boot time if you're doing a reboot

1592857127
ifreund
the s6 suite looks very promising though as more fully featured alternative that maintains a simple and focused design

1592857169
mq32
andrewrk: same here, absolut horror :D

1592857187
mq32
i would love to have an OS that allows rebooting in sub-10-seconds

1592857198
ifreund
yup, i used to get that on arch as well.

1592857215
ifreund
mq32: voidlinux almost certianly will pass that test if you should choose to try it out

1592857240
mq32
i discussed with some and they told me that void may not be the distro for me

1592857365
companion_cube
ifreund: do you know if other people moved from arch to void with satisfaction?

1592857392
ifreund
companion_cube: I believe that's an extreemly common move to make

1592857413
ifreund
pop over to #voidlinux and ask how many switched from arch if you're curious :D

1592857466
companion_cube
how's xbps compared to pacman/yay, if I may ask?

1592857489
ifreund
better, it's impossible to break your system with a partial upgrade

1592857541
ifreund
and you dont need the AUR cause anyone can just open a PR to the main repo and get their package included in core

1592857609
companion_cube
I meant the cli tool

1592857880
companion_cube
oh damn, looks a lot like pkgbuild files

1592858023
ifreund
the cli can do all the same stuff you'd expect from a package manager, not sure I really get the question

1592858033
ifreund
we're definitely off topic for #zig at this point though

1592860697
THFKA4
package managers are going to become on topic soon, right?

1592860816
leeward
Oh please yes.

1592861545
traviss
can anyone remind me what i need in build.zig to be able to pass arguments to tests like this: $ zig build test -- --test-filter test_name

1592861653
traviss
or is this not supported for tests?

1592862819
andrewrk
I think you have to set that up yourself using build options and options to the addTest function

1592862823
andrewrk
look at zig's own build.zig

1592862862
andrewrk
there's a setFilter function on a test build artifact

1592865163
traviss
ah thanks. i'll take a look.

1592866852
traviss
i was hoping there would be a way to pass the arguments on to the test.  it doesn't seem like this is possible.

1592866912
traviss
i can access the args (--test-filter and test_name) via b.args.  and main_tests has a property exec_cmd_args: ?[]const ?[]const u8.  but i'm not seeing what this is for.

1592867870
andrewrk
traviss, it's possible you might be overextending the testing framework and would be better advised to just build and run your own testing harness

1592867908
andrewrk
that being said, ability to send test arguments with the default test runner could be a reasonable addition to make

1592868504
traviss
makes sense to me.  similar to passing -Drelease-mode feels like all of the --test-* arguments could be used with `zig build test`

1592870110
daurnimator
nephele: there's an open project on github for a linux kernel zig module

1592870125
daurnimator
nephele:

1592870150
daurnimator
currently blocked on C bitfield support

