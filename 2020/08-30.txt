1598749880
pixelherodev
Nice!

1598753660
ronsor
2.3k lines of code

1598756211
ronsor


1598757226
pixelherodev
ronsor: neat!

1598757249
pixelherodev
Personally, I'd appreciate raw links in the future (instead of html ones), but that doesn't detract from the actual kernel :)

1598757479
ronsor
I'm not sure how much I've abused `comptime` in making the wasm interpreter bindings

1598757629
pixelherodev
ronsor: does it build in under sixty seconds on reasonable hardware? :P

1598757686
ronsor
yes

1598757736
pixelherodev
Then it's within an acceptable amount lol

1598757774
ronsor
exactly 54 seconds actually

1598757781
ronsor
that includes userspace too tho

1598757787
ronsor
and the C dependencies

1598775921
bgiannan
does any of you has some experience using Qt with Zig? I'm looking for a lib with some high level text display features and I'm not finding anything else.

1598775922
daurnimator
bgiannan: I don't know of anyone doing that off the top of my head. there would need to be some zig<>qt layer.

1598775924
daurnimator
Qt code isn't even normal C++: you have to use the special Qt compiler wrapper thing

1598778981
bgiannan
right, i know nothing about qt

1598778985
bgiannan
just saw QML

1598779000
bgiannan
seems like a whole lot to get into

1598779062
bgiannan
but don't know anything else than can display formatted text easily, or i'd have to go the low level route with Cairo or Skia

1598779652
daurnimator
what do you mean by "formatted text"

1598779682
daurnimator
(like, you have a string you want to render? or you have a pixel buffer?)

1598779693
daurnimator
and also... what do you mean by "display"... render to the screen? cross platfomly?

1598779709
daurnimator
and for the latter: I thought you were using SDL?

1598779814
daurnimator
or are you talking about font shaping? in which case you need e.g. harfbuzz

1598791171
mkchan
so zig source files are implicitly structs with pub "global" variables and functions being the instantiated type's member variables and functions?

1598791450
mkchan
in the stdlib i've only seen files used as namespaces although most of it seems to be because they are type-returning functions so i'm not sure if this style is used much

1598791508
alexnask[m]
example usage: src-self-hosted/link/Elf.zig

1598791625
mkchan
ah it's like an actual struct definition instead of pub variables, thanks for the clarification and example

1598794026
ifreund
yeah there's nothing special about files, they're just like any other struct

1598794856
mkchan
so that means compilation kind works like a tree where leaves are the independent struct-files

1598796385
ifreund
in that there is a single root source file sure. There's no semantic difference between declaring a struct in-line or using @import() though

1598802078
frett27_
hi, i would like to create a struct union, with additional fields depending on a common field, like discriminant records in Ada, or some object oriented in C ? i think this is possible in zig, but look for some idiomatic patterns for this

1598802089
frett27_
are there some examples ?

1598802097
frett27_
in std ? or other place ?

1598802194
fengb
Discriminated records = tagged unions

1598802294
frett27_
fengb, from my understanding, it change the whole structure,i wish to extend the fields if a field = something

1598802340
frett27_
Oh, i see .. , embed the tagged union into the struct ? does that make sense ?

1598802413
frett27_
like  struct { commonfields: types, type: union(discriminent) { my additional fields } }

1598802492
fengb
Yeah, keep the shared data in the struct and separate values in the union

1598802530
fengb
This is for known types ahead of time, not extensible

1598802565
fengb
For an extensible type / interfaces, we’ve been using @fieldParentPtr like Allocator

1598802746
frett27_
fengb, thank's for your feedback, but in my case i really want to have a statically known structure and force the implementation of both. I don't have much sub types and in a system process.

1598802866
frett27_
for information, ada allow in this case some common fields ->

1598802897
frett27_
i like zig (not spawning a troll :-))

1598802916
fengb
I don’t know ada >_>

1598803868
ifreund
the other pattern you can use here is to put the common fields in a "base" struct and create specialized structs containing this base struct as a member

1598803896
ifreund
then pass the base struct around and acces the specialized version with @fieldParentPtr()

1598803913
ifreund
this is fairly commonly used in the self hosted compiler

1598803951
ifreund
I'll admit that I don't understand exactly what you're looking for though, I also don't know ada

1598803957
Nypsie[m]
^ Can see this in action in std/zig/ast.zig

1598804491
alexnask[m]
Afaict that Ada example is defining a struct field dependng on a comptime value

1598804522
alexnask[m]
this is easy with a switch statement in zig if you want the field to have the same name, otherwise youd need some @Tyape(.Struct) trickery

1598808637
klltkr
I'm looking to use the std lib JSON parser to parse into a union (of structs). The JSON in question has a field called "type" with different values (e.g. "number", "string") that I want to use to switch which particular union value gets created. It looks like what I want is a comptime struct field, e.g. `comptime @"type": []const u8 = "number",` in each struct that the union can contain. However, the parser gets upset here

1598808637
klltkr
/blob/master/lib/std/json.zig#L1486 and

1598810573
bgiannan
daurnimator, i want something that can handle work wrapping, margins, line heights, fonts etc.

1598811031
ifreund
pango provides that level of abstraction, should do what you want

1598815146
Patrice_
ifreund, fengb , alexnask for your perspectives and help

1598815156
Patrice_
thank's

1598815327
Patrice_
klltkr, found an example (that helped me):

1598817694
yunree


1598817704
yunree
woowie

1598826957
ifreund
so, looks like arch linux updated their glibc to 2.32.0 recently which causes an "Unrecognized glibc version" error with zig 0.6.0

1598827010
ifreund
any way to work around that? or are people trying to build river on arch out of luck without a zig update

1598827057
ifreund
I've tried native-native-gnu.2.31.0 as the target but that seems to cause linking error with the C libraries

1598827390
alexnask[m]
Yeah this has been an issue for a few days, building with musl may work

1598827442
ifreund
nah, translate-c chokes on musl's timespec

1598827471
alexnask[m]
Ah, unfortunate

1598827479
ifreund
maybe this is a good time to try another workaround for that though

1598827530
Sahnvour
ifreund: #6166

1598827587
ifreund
yeah, but I don't want river to require zig master

1598829805
andrewrk
ifreund, I'm in the middle of merging the glibc update, should be done soon

1598829826
andrewrk
ah just saw the bit about 0.6.0. OK, I see the problem. there is an issue open for this...

1598829852
andrewrk


1598829882
andrewrk
apologies for this not making it into 0.6.0

1598829890
andrewrk
it would have avoided this issue

1598829924
ifreund
is using native-native-gnu.2.31.0 as the target expected to work on 0.6.0?

1598829997
ifreund
actually, even on my 2.30.0 system the native-native-gnu.2.30.0 target breaks things

1598830004
ifreund
that's kinda odd

1598830920
andrewrk
hmmm

1598831719
andrewrk
yeah I would expect native-native-gnu.2.31.0 to work on 0.6.0

