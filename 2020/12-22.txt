1608599874
quajzen
hello all, can someone help me troubleshoot linking a C library? I am trying to link xcb/randr.h but lld is not recognizing some functions, specifically xcb_randr_get_monitors.

1608602581
shachaf
randr.h isn't a library you link, it's a header.

1608602606
shachaf
You probably want something like libxcb-randr.so.

1608602685
shachaf
Oh, they're gone.

1608648835
dutchie


1608648940
dutchie
or am i getting in a const muddle? it works fine if i make owned_slice non-const.

1608649014
scientes
dutchie, you can't const something and then use it as non-const

1608649037
dutchie
i don't want to use it as non-const, i just want to free it and replace it with something else

1608649061
dutchie
i could just allocate, memcpy and then free, but isn't realloc supposed to be a shortcut for that?

1608649083
fengb
Also you’re reallocing something that isn’t owned: &[0]u8

1608649113
fengb
Hmm... is it guaranteed that reallocing empty slice is just an alloc?

1608649134
dutchie
according to the impl of reallocAdvancedWithRetAddr i have open now, yes

1608649152
dutchie
idk if there is a better way to write "owned empty slice"

1608649238
fengb
It doesn’t exist right now due to zero sized pointers, but some point in the future you can make owned zero slices

1608649256
fengb
So the impl works right now but that may not be guaranteed

1608649269
dutchie
yea, i found #6706

1608649385
dutchie
but i don't see in my original code where i'm trying to modify through a const

1608649395
dutchie
(other than the implicit free)

1608649410
fengb
owned_slice: []const u8,

1608649449
dutchie
that means i can't change the bytes on the other side though, doesn't it? i thought i can change where it's pointing

1608649548
dutchie
if i have `var p: *const u8` i can change what integer it's pointing at. isn't that the same thing i'm doing here with a slice?

1608649835
ifreund
Yeah, I think that realloc should be ignoring the constness like destroy does

1608650038
dutchie
i did wonder if it was a realloc bug, but i thought that was much less likely than me not understanding const properly ;)

1608671300
jaredmm
Is there an active Zig project creating an API agnostic (preferably multithreaded) rendering library supporting D3D12/Vulkan/etc?

1608673132
pixelherodev
There's sokol bindings, I think

1608673155
pixelherodev
Not aware of anything specific, but that doesn't mean there isn't anything

1608673643
jaredmm
Been trying some of the popular ones with C APIs. The ergonomics of the C interface is usually poorly documented and leaves a lot to be desired. sokol is nice, but it doesn't do D12/Vulkan. Was thinking about contributing to something, but don't know that my knowledge of the different APIs is holistic enough to build an abstraction that isn't terrible by myself.

1608674751
andrewrk
in about an hour I plan to stream working on TSAN stuff

1608675621
ifreund
cool, I think your approach of improving the tooling untill the bug can be found/fixed is a great idea by the way

1608675766
shachaf
Missed quajzen again.

1608675872
ifreund
hopefully they read the logs :?

1608676048
shachaf
They did, and sent me a message, and then disappeared.

1608680194
seadragon-droid
dutchie: I'm inclined to agree with you - it seems like realloc should be able to accept slices of const types, provided that it returns a new slice of const types, as well - however, that doesn't seem to be currently supported

1608680228
ifreund
It's just waiting for someone to open a PR to fix it

1608680613
seadragon-droid
point taken, haha

1608681112
fengb
What's the point of returning a slice of const? It's basically useless unless you invoke the nuclear option

1608681520
pixelherodev
Probably going to do a stream explaining zyg design and spending some time working on it in about thirty minutes if anyone's interested

