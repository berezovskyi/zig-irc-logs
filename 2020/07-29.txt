1595982462
frmdstryr
Is there any way to check if an async fn frame is returned (with/without an error) without using await?

1595983849
ronsor
I'm wondering if it's possible to

1595983853
ronsor
e.g. hello.wasm -> hello

1595984111
andrewrk
stage2 has -femit-bin=hello but it's not backported to stage1 yet

1595984192
ronsor
ah well then, I'll just rename it after compilation then

1595984648
ronsor
matrix gateway crasheed

1595984921
pixelherodev
Ugh, stupid matricies

1595984924
pixelherodev
matrices*

1595985033
leeward
Replace them with tensors?

1595985479
pixelherodev
andrewrk: I assume that branch will be pushed to master soonish?

1596004086
pixelherodev
What's a quick single-sentence explanation of the semantic analyzer?

1596004109
pixelherodev
Ah, good old commit logs

1596007446
andrewrk
so far all my work on stage2 has caused no regressions (after compile errors fixed)

1596007456
andrewrk
zig code is quite resilient

1596007471
andrewrk
I mean all my work, in total. I have never had to debug a regression so far

1596011386
andrewrk
it takes a minimum of 7 bytes of x86_64 just to pass the result of an integer comparison to a function parameter

1596011426
andrewrk
10 if you count the cmp

1596011442
andrewrk


1596011483
gruebite
that's awesome

1596012341
andrewrk
I wonder why it doesn't use  rex.W sete dil, it would be 3 fewer bytes

1596012448
shachaf
Godbolt "compile to binary" doesn't work for Zig?

1596012671
andrewrk
woohoo my test case passes

1596012679
andrewrk
look at this beautiful codegen

1596012798
andrewrk


1596012801
andrewrk
in particular the add function

1596012897
shachaf
Hmm, does rex.W even do anything to setcc? I'm confused.

1596012956
andrewrk
yeah, it writes 0s to the upper bits

1596012988
andrewrk
well and without it, it would be dh and not dil

1596013006
shachaf
I don't think it clears the upper bits.

1596013011
andrewrk
maybe I'm missing something

1596013051
shachaf
A plain REX makes it write to dil instead bh, but I'm not seeing the W doing anything.

1596013144
andrewrk
oh, I see. pixelherodev made it omit the REX if you don't set W so I guess I was accidentally setting something unrelated and getting second-order effects

1596013199
shachaf
Ah, that makes sense.

1596013209
shachaf
Plain REX is pretty unusual and the W doesn't do anything here, I think.

1596013230
shachaf
But I don't think there's a way to clear the rest of the register with setcc.

1596013266
andrewrk
I see, so that's why the other strategy is always used

1596014095
shachaf
(Normally a disassembler doesn't even print the REX prefix instruction, so if it shows rex.W that means something weird is going on.)

1596014136
andrewrk
yeah I have a TODO comment here to audit that particular codegen

1596014157
andrewrk
have a look at that add() codegen though, I think it's quite reasonable for a debug build

1596014205
andrewrk
it's missing integer overflow safety checks

1596014237
shachaf
Oh, I didn't see that.

1596014246
shachaf
Is 0xaaaaaaaa the undefined value?

1596014248
andrewrk
that's what I've been working towards the last few days

1596014251
andrewrk
yes

1596014282
andrewrk
oh the stack variable is at slightly the wrong offset; about to fix that

1596014509
shachaf
Looks like it does what it says on the tin (other than the stack thing).

1596014561
shachaf
Is it 0x10 to keep the stack pointer aligned or something? I never remember what the requirements are exactly.

1596014826
andrewrk
yeah so that every function can assume at least a minimum aligned amount (depending on calling convention). that way functions which don't need > 16 byte align (which is most) can omit instructions to align the stack

1596015012
andrewrk
alright, pushed to master. and I'm taking a day off tomorrow. good night all

1596017602
ask6155
hello!

1596017649
ask6155
I'm not able to compile the master branch of zig. Is it because I don't have clang 11?

1596017737
ikskuh
i think there was a change to 10.0.1 yesterday?

1596017837
ask6155
I do have clang 10.0.0.1 but when I run cmake .. It says not found CLANG_LIBRARIES

1596017942
ifreund
ask6155: what OS/distro? have you ever successfully built master before?

1596017946
ask6155
yes

1596017950
ask6155
arch linux

1596017996
ifreund
ask6155: did you passt -DZIG_PREFER_CLANG_CPP_DYLIB=ON ?

1596018005
ifreund
you need that on arch

1596018008
ifreund


1596018065
ask6155
oh yeah I forgot to do that

1596025118
pixelherodev
andrewrk: REX should be emitted as long as

1596025121
pixelherodev
just w *

1596025204
ifreund
pixelherodev: are you itching to write a wasm backend? if not I might give it a shot (though may need some guidance)

1596025217
pixelherodev
ifreund: go for it :)

1596025230
pixelherodev
I'm finishing up my How To Backend thingy right now

1596025242
pixelherodev
feel free to ping me here

1596025243
ifreund
I was reading the wasm spec yesterday and it seems quite nice

1596025269
ifreund
oh definetly ping me when you get that writeup finished :)

1596025468
ask6155
Hey, can anyone give me some insight on raylib? will it work well with zig?

1596025568
ikskuh
ifreund: yeah, wasm spec is really well-made

1596025621
ifreund
ask6155:

1596025641
ifreund
also

1596025701
ifreund
ikskuh: I have a dream that someday javascript will be forgotten :D

1596025715
ikskuh
ifreund: we need some API for the DOM first

1596025722
ifreund
indeed

1596030917
dimenus
did clang change it's triple/target format in 10.0.1?

1596030923
dimenus
even a simple hello world with zig cc fails to build

1596031062
pixelherodev
Zig master?

1596031065
dimenus
yessir

1596031072
dimenus
it'

1596031072
pixelherodev
I can't test, sorry :(

1596031077
pixelherodev
Clang 10's build is still broken

1596031078
pixelherodev
ugh

1596031079
dimenus
it's cc1as failing actually

1596031091
dimenus
the code itself generates o files np

1596031114
pixelherodev
Static build works fine for me

1596031130
dimenus
i'm on arch :(

1596031216
dimenus
i'll do a bootstrap build and then swap 0.6 with master and re-test

1596031220
dimenus
probably a clang issue

1596031358
pixelherodev
I'm on Gentoo

1596031367
pixelherodev
I just manually extracted the tarball

1596031386
pixelherodev
LLVM is broken, and IIRC the distro refused to fix it

1596031394
pixelherodev
the distro's maintainer*

1596032149
dimenus
i don't blame them

1596032189
pixelherodev
I do.

1596032195
pixelherodev
It's like a two line ebuild patch.

1596032206
dimenus
ah

1596032213
pixelherodev
Hmm, I'm going to try proposing it as a USE flag this time

1596032323
dimenus
do you have a link to the issue?

1596032392
pixelherodev
Not offhand

1596032395
pixelherodev
I could probably find it

1596035357
dimenus
pixelherodev: i just downgraded clang. Working as expected now

1596035710
pixelherodev
:P

1596035818
dimenus
:)

1596036933
blinghound
is there a way I can convert a multidimensional array to a flat slice?

1596036971
fengb
If you know the size, you can manually convert the root pointer and slice it

1596037004
fengb
But that might be harder and more brittle than starting with a flat array and manually slicing multi-dimensions

1596037129
blinghound
I do know the size, I'm generating vertices for terrain in varying LODs in chunks using a 5 dimensional array to make the calculations easier

1596037138
blinghound
so can I just cast the first element and then slice?

1596037164
fengb
Yep

1596037201
fengb
`@ptrCast([*]T, array)[0..len]`

1596037229
fengb
Oops, that's supposed to be `&array`

1596037364
blinghound
ah brilliant, thanks fengb

1596037387
blinghound
I'm still getting to grips with slices/arrays/ptrs

1596037592
leeward
Array: chunk of memory. Slice: Pointer with length. Pointer: address of a single thing

1596037657
blinghound


1596037672
blinghound
got all the terrain rendering in a single draw call

1596037754
leeward
(pointer in a slice is in the C sense, not the "single thing" sense)

1596037770
leeward
blinghound: Ooh, nifty

1596037792
blinghound
cheers leeward! Jumping between c++ and zig confuses me sometimes

1596037858
leeward
Yeah, subtle differences can be hard to keep straight.

1596037904
ifreund
so, llvm 10.0.1 totally breaks the 0.6.0 arch package

1596037914
ifreund
I guess we probably need to fix that

1596038101
leeward
Ooh, an 0.6.1?

1596038177
fengb
0.6.0-2

1596038199
ifreund
though, shouldn't the zig package have been rebuilt? Or is 10.0.1 ABI compatible?

1596038240
pixelherodev
I highly doubt it

1596038292
ifreund
same

1596038871
dimenus
ifreund: I just downgraded clang to 10.0 and that works

1596038874
dimenus
llvm is still 10.0.1

1596038881
dimenus
(on arch)

1596039212
ifreund
Oh im not on arch myself (void now), but someone mentioned it in my #river channel

1596039257
ifreund
interesting that downgrading only clang fixed it though

1596039307
pixelherodev
clang bug

1596039319
pixelherodev
At this point, I'm more surprised when LLVM + Clang works than when it fails

1596041243
ifreund
well I pulled out my old arch laptop to try simply revbumping the zig package

1596041250
ifreund
looks like that fixed it

1596041264
ifreund
guess I'll send daurnimator a mail

1596050739
DarkUranium
I was told to talk to aurame & Alex Nask in this channel. My question is unrelated to Zig specifically, but apparently, I could get some advice about something from 'em.

1596050742
DarkUranium
Are they around?

1596050756
DarkUranium
(my question is about language server stuff)

1596050801
ifreund
DarkUranium: don't either here currently, they're more active on the discord

1596050808
ifreund
*don't see

1596050825
DarkUranium
I'll just idle a bit then.

1596051164
ronsor
>discord

1596051167
ronsor
ah proprietary chat

1596051178
ifreund
yep :/

1596051198
pixelherodev
:( yeah

1596051211
pixelherodev
I'm deleting my Google account shortly, maybe Discord should follow

1596051221
pixelherodev
Also, heads up that all my old commits are now marked as unverified :P

1596051235
pixelherodev
I changed my GitHub / GPG email

1596051237
ifreund
oof, you been using a gmail?

1596051241
pixelherodev
I was, yes.

1596051251
pixelherodev
Now I've got something much much nicer: noam@pixelhero.dev

1596051253
pixelherodev
:D

1596051268
ifreund
man, pixelhero.dev is great

1596051280
ifreund
only downside is that google owns the tld no?

1596051304
pixelherodev
Yep

1596051327
DarkUranium
pixelherodev, I do have a Matrix->Discord bridge, FWIW.

1596051329
pixelherodev
But I figure that I'm getting rid of my google account anyways, so using something on their TLD is a sorta parting middle finger

1596051339
pixelherodev
DarkUranium: want me to DM you the server ID?

1596051339
DarkUranium
But I can't guarantee anything. Also, the bot would have to be invited to the server.

1596051343
pixelherodev
Ah

1596051359
DarkUranium
The only reason that bridge exists is because of a D&D player.

1596051472
pixelherodev
lol

1596051485
pixelherodev
I can ask them if they want to invite it?

1596051496
DarkUranium
If I remembered how!

1596051526
pixelherodev
hahaha

1596051538
pixelherodev
Zig -> GLSL when?

1596051545
pixelherodev
Wait

1596051548
pixelherodev
I could actually do that

1596051552
pixelherodev
Wait dammit

1596051554
pixelherodev
Oops

1596051559
gruebite
:D

1596051560
pixelherodev
Switched chats halfway through typing

1596051677
gruebite
that would be cool. haxe/heaps has something similar where you write shader code in haxe

1596051935
DarkUranium
It's something I'd like to do for my own Coyote language at some point.

1596051937
DarkUranium
But one problem at a time.

1596056913
pixelherodev
Going to do a stage2 stream soon :)

1596059441
pixelherodev
Alrighty, starting

1596063332
gruebite
pixelherodev: where are you streaming?

1596063357
pixelherodev


1596063359
pixelherodev
IIRC*

1596063364
pixelherodev
Typed from memory so YMMV :P

1596063828
pixelherodev
andrewrk: is there a reason that createElfFile is public?

1596063962
pixelherodev
Also, why use an enum for pointer width within the linker, but integer in std.Target?

1596064000
pixelherodev
I guess hypothetically it could be useful for supporting e.g. 15-bit architetures, but realistically I think that would scale to u16 for all intents and purposes

1596064022
pixelherodev
Well, not for ELF - hm, I guess it does make sense

1596066543
gruebite
is it weird for a library to ask the user to add `exe.addCSourceFile`?

1596067120
pixelherodev
Kinda

1596067167
pixelherodev
We need to figure out a good API for that

1596067184
gruebite
that's what my gut says. `translate-c` isn't good for 100% of C right now, yeah?

