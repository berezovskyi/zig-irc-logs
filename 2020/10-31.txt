1604116445
dominikh
is there a good workflow for translate-c'ing things in isolation, without them each having their own definitions of shared includes, like the stdlib? say I want to translate and clean up libfoo, and later libbar, and the two have a common dependency on somethingâ€¦ if people were to use the libfoo and libbar bindings, they'd have to deal with duplicate types, and needing explicit casts between them.

1604120200
endragor
How do you pass a comptime flag as a build option?

1604121316
daurnimator
endragor: you mean in build.zig?

1604121341
justin_smith
dominikh: I make a single file use all the c libs, and everything else grab it from there

1604129910
tane_
howdy

1604131271
endragor
daurnimator: I mean pass a flag from build.zig to the code. Similar to defines in C.

1604132662
daurnimator
endragor: the zig build system creates a special import `"build_options"`

1604132680
daurnimator
use e.g. `const build_options = @import("build_options");`

1604148611
scientes
Daniel J Bernstein bragging that his 20-year-old bug report in GCC is finally getting attention

1604149831
Barabas
Hello

1604149952
Barabas
If I have a function which takes a `type` parameter. How do I give it a `const` type? Just like with slices you can do `[] f32` and `[]const f32`, but I can't seem to do `myFun(const f32)`.

1604150178
scientes
Barabas, pass-by-value is always const

1604150335
dutchie
what's the best tool to profile memory usage?

1604150383
scientes
given the way zig allocates memory, a memory profiler would be nice to have

1604151060
Barabas
scientes that's not what I meant.

1604151172
Barabas
For example this case `fn myFun(t: type) struct { return struct { p:

1604151869
daurnimator
`p: *const t`

1604152269
frmdstryr
daurnimator: Thanks for the review. Any chance you could try the code I had there and see if you can get the same error as in #6590?

1604152387
daurnimator
frmdstryr: the error seems familiar

1604152433
frmdstryr
Yeah I remember seeing it a while back, idk if it was ever resolved

1604152434
daurnimator
frmdstryr:

1604152454
daurnimator
was difficult to replicate; but always came up in a sufficiently complex program

1604152471
daurnimator
I can't find an open issue for it though aside from the 6590 you mentioned

1604152525
daurnimator
frmdstryr: however, I think you should start plumbing in the stuff required for proper SIGPIPE handling

1604152553
frmdstryr
The way the event loop is designed idk if it is possible

1604152564
daurnimator
frmdstryr: on linux it should be as simple as using MSG_NOSIGNAL when you call send()

1604152579
frmdstryr
It has to choose a proper write fn based on what it's writing to but it only uses the fd

1604152596
Barabas
daurnimator -.-

1604152639
daurnimator
on other platforms, you will need to check (via e.g. fcntl + F_SETNOSIGPIPE) if its set on the socket; and if not... temporary unset and set the signal handler around send() calls

1604152690
daurnimator
which then implies you should set `F_SETNOSIGPIPE` and equivalents by default on new sockets to avoid the signal mask setting dance for every read/write call

1604152697
daurnimator
:)

1604152709
Barabas
Sometimes I want a `f32` sometimes I want `const f32`. I don't want to hardcode it in my struct (and write two version, one for when it's const and one for when it's not).

1604152741
daurnimator
Barabas:

1604152774
daurnimator
Barabas: though in reality I haven't run into it outside of iov/msghdr.... yet

1604152837
daurnimator
Barabas: perhaps comment on that issue with your usecase

1604152853
Barabas
That seems like a slightly different issue.

1604153008
Barabas
That's about propagating const to types pointers point to, which I think is a bad idea, but I'll comment on it.

1604153640
Barabas
I made this

1604153813
tane
does a slice of cost types make any sense?

1604153816
tane
const*

1604153916
tane
I can see use of a const slice of T and for a slice of pointers to const-T, but a slice of const-T?

1604154143
Barabas
What do you mean?

1604154163
Barabas
There are build in slices in the language `[]f32` and `[]const f32`.

1604162315
ask6155
It's a but offtopic but in zig if you want the most optimized version of the code you have written you do --release-fast. It gives the best optimizations. But in c there are things like -O1 -O2 and I think -O3 too. But whenever I check makefiles or cflags it always only has -O2. Why is that? isn't -O3 better?

1604162445
scientes
ask6155, gcc does alot of crazy things with -O3, so its recommended to use -O2 with C code

1604162465
ask6155
What about clang?

1604162474
scientes
not as crazy

1604162491
scientes
gcc has a autovectorizer that gets turned on with -O3

1604162532
scientes
-O3 is also much more likely to break code, both incorrect and correct code

1604162553
ask6155
That's weird

1604162556
scientes
as we check for most of those issues in zig, zig compiles with -O3 with --release-fast

1604164860
tdeo
ifreund: happened to be checking the irc logs and saw your question about the licensing of my xml parser, you can use it under the same license as your repo (expat MIT)

1604164886
tdeo
you can consider that a license grant, or I can submit a PR with an explanation in the commit message instead

1604165307
ifreund
tdeo: thanks, I appreciate it. If you wouldn't mind, submitting the xml.zig file yourself as a PR would probably the most clear way to handle this

1604165332
ifreund
(I haven't merged my work using it to master yet and could rebase)

1604166423
ifreund
thanks :)

1604166854
dutchie
woo i made threading work

1604166874
dutchie
i'm not entirely convinced that .Monotonic is correct but i think so

1604167066
tane
I see a lot of people move over to sourcehut, what's the motivation?

1604167133
ifreund
not having to deal with github's BS, email driven workflow, open source, etc.

1604167139
dutchie
for me, mostly 100% foss

1604167168
dutchie
and emailed patches > pull reqs

1604167187
Nypsie[m]
I wish it had better UX, and maybe more exposure.

1604167190
tane
thanks, it has been on my radar for a while

1604167216
tane
does one actually need drew's aerc mail client to handle these patch emails effectively?

1604167227
ifreund
no, you can use any functioning mail client

1604167238
tane
ok, nice

1604167266
dutchie
you don't even need a mail client at all, just `git am`

1604167276
ifreund
indeed

1604167302
ifreund
though a mail client may be useful for discussing/reviewing patches :D

1604182443
adamkowalski
is there any documentation on result location?

1604182483
adamkowalski
I want to create a struct on the stack which takes in an allocator in init

1604182517
adamkowalski
and it will create an arena allocator internally for memory management

1604182548
adamkowalski
but when it returns it, it seems like there are problems

1604182582
adamkowalski
I end up having to first allocate it using the parent allocator, and store a reference to the arena and the parent allocator, then deinit the arena and then destroy it with the parent allocator later

