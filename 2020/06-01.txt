1590975388
leeward
ifreund[m]: thanks

1590976393
satchmo
how come you have to call cwd() before openFile()? It seems a bit awkward when you're opening a file that's not under the cwd

1590976847
daurnimator
satchmo: because that's actually how modern operating systems work

1590976864
satchmo
ah, i see

1590976926
daurnimator
it also encourages good practice: absolute paths should only rarely be used

1590976984
companion_cube
wait, what?

1590976998
daurnimator
satchmo: also note that `cwd()` is effectively "free": on posix systems its a constant; on windows its a TEB reference.

1590977000
companion_cube
relative paths should rarely be used, you mean?

1590977008
daurnimator
companion_cube: no. absolute should rarely be used

1590977018
companion_cube
I strongly disagree :D

1590977027
companion_cube
"current directory" should not even be a thing outside a shell :/

1590977035
companion_cube
(it's not even thread-local, is it?)

1590977037
daurnimator
companion_cube: I didn't say cwd relative

1590977076
satchmo
daurnimator: didn't know that, that's pretty interesting

1590977082
daurnimator
relative to

1590977104
companion_cube
ah, I see.

1590977120
companion_cube
(well I mean, I'd rather have a package manager do that for me anyway)

1590977127
companion_cube
(like, pacman/yay)

1590977135
companion_cube
just use `install` instead of copy

1590977138
daurnimator
so you'd do: `const install_prefix = try fs.cwd().open(prefix_arg_from_user, ......)` (which could be relative or absolute!) -> and then you would install everything into that

1590977172
daurnimator
just giving an example here... and somewhere out there is the code that implements your package manager

1590977237
satchmo
If only absolute paths will be passed it would probably be better to use openFileAbsolute() though right?

1590977271
daurnimator
satchmo: perhaps? though IIRC that's just a wrapper around fs.cwd().open anyway

1590977286
satchmo
oh you're right, it is just a wrapper lol

1590977404
satchmo
now, what if O_CLOEXEC needs to be passed as an open flag? Would I have to resort to os.open() since OpenFlags doesn't have a field for it?

1590977448
daurnimator
`O_CLOEXEC` is the default in zig

1590977453
satchmo
oh is it?

1590977463
satchmo
whaaaaaaaaaat

1590977538
satchmo
oh it is, nicee

1590977708
companion_cube
daurnimator: anyway, most of the time, I normalize paths as soon as possible :)

1590978368
daurnimator
companion_cube: best to never normalize until the last minute

1590978506
satchmo
ah shoot, apparently some people need to open /dev/kvm without O_CLOEXEC..

1590978521
satchmo
guess its os.open for me

1590978699
daurnimator
satchmo: "need"?

1590978732
daurnimator
however, we should have an option in OpenFlags to allow non-O_CLOEXEC if they want

1590978799
satchmo
daurnimator: apparently. some comments in rust-vmm say "one usecase is opening /dev/kvm before exec-ing into a process with seccomp filters"

1590978814
daurnimator
satchmo: you can un-set O_CLOEXEC after open.

1590978832
daurnimator
satchmo: infact std.ChildProcess has something for that already IIRC

1590978917
satchmo
I'll probably do that then, thanks!

1590978984
satchmo
it's funny though, rusvmm has kvm::new() always open /dev/kvm with O_CLOEXEC even with their comment

1590979049
daurnimator
essentially the only times you should use `open` without O_CLOEXEC are: 1. after fork() and before exec(). 2. if you're writing a shell

1590985314
scientes
or in systemd

1590985504
pixelherodev
?

1590985539
scientes
systemd socked activation

1590985545
scientes
where it passes fds to the child process

1590985687
daurnimator
scientes: that's case 1. (systemd does the fork and exec)

1590986150
scientes
oh yeah, you are right

1590986195
daurnimator
so did I...

1590986510
pixelherodev
...

1590986518
pixelherodev
and here, I thought we were friends.

1590986532
pixelherodev
:(

1590988660
leeward
I have a [size]u8 called chunk and want to read from an InStream in size-sized chunks. Is there a better way than `var bytes: usize = size; while (bytes == chunk.len) : (bytes = stream.readAll(chunk[0..]) { // do stuff }`

1590988661
leeward
?

1590988704
pixelherodev
There should be a readBuf or something, no?

1590988732
leeward
There's a readAllArrayList...

1590988758
pixelherodev
readBytesNoEof?

1590988760
leeward
I don't need to hold all the chunks in memory at once though.

1590988771
pixelherodev
// Reads exactly `num_bytes` bytes and returns as an array

1590988830
pixelherodev
Is readByesNoEof not what you want?

1590988847
pixelherodev
while (istream.available()) { chunk = istream.readBytesNoEof(size); } `?

1590988848
leeward
I don't think it is. If the number of bytes remaining doesn't fill the buffer, I still want them.

1590988863
leeward
ooh, istream.available() helps though

1590988883
leeward
except I don't see that in in_stream.zig.

1590988894
pixelherodev
Then yeah, I think you're doing it right

1590988903
pixelherodev
I don't think there is an available(), actually

1590988920
leeward
My issue is that the loop is awfully awkward.

1590988922
pixelherodev
If you're reading from a file, you could stat() the file ahead of time

1590988933
leeward
It's a stream; could be a file or stdin.

1590988953
pixelherodev
Then yeah, no way of knowing size ahead of time that I know of (at least, not in stdlib currently)

1590988954
leeward
For the moment, it's actually stdin

1590988959
pixelherodev
Well, gl

1590988973
leeward
thanks

1590990116
daurnimator
leeward: you don't want short reads?

1590990167
daurnimator
leeward: what are you going to do with the chunks after you have them?

1590990172
leeward
daurnimator: They're not necessarily short; they're chunk sized.

1590990176
leeward
I'm decrypting them.

1590990236
daurnimator
leeward: exactly chunk sized? or max?

1590990242
leeward
Exactly chunk sized.

1590990254
daurnimator
> I don't think it is. If the number of bytes remaining doesn't fill the buffer, I still want them.

1590990261
leeward
The encryption process spits out an integer number of chunks.

1590990284
leeward
Oh, yeah, I was thinking about the encryption side.

1590990300
leeward
So if I'm encrypting, the last chunk is allowed to be smaller.

1590990324
daurnimator
if you're encrypting then why exactly chunk sized?

1590990342
leeward
For the reads? For simplicity.

1590990354
leeward
I don't care about speed yet; when I do, I can buffer the input.

1590990359
daurnimator
reads of encrypted or decrypted?

1590990379
daurnimator
in general, you shouldn't care about amount of data unless you have to

1590990393
daurnimator
ask for (e.g.) 4096 bytes; if you get less then work with what you got

1590990397
leeward
The encryption side reads plaintext in chunks, and spits out chunk+stuff sized chunks.

1590990453
leeward
If there's more coming, I don't want to waste the rest of the chunk. Cryptotext can't be compressed.

1590990458
leeward
er, ciphertext

1590990464
leeward
It must be getting late.

1590990534
daurnimator
if you're e.g. listening to stuff I typed into the terminal

1590990539
daurnimator
then I might not type anything for a while

1590990572
leeward
Right, and if you don't, I don't want to generate another block of encrypted data until you've typed enough to fill a chunk, or sent an EOF.

1590990602
daurnimator
what if I've typed in e.g. a command and I'm waiting a the reply? (I don't know anything about your usecase)

1590990602
leeward
I can imagine a tool where that's not true, but it's not this tool.

1590990664
leeward
Yeah, not a thing I'm worried about. This is for encrypting files, not interactive terminal sessions.

1590990731
daurnimator
and does your encryption algorithm need a whole block? or is it happy emitting data as it goes?

1590990741
leeward
It needs a whole block.

1590990826
leeward
Trust me, I don't want to read a little bit, do stuff with it, then read more. I need whole chunks for everything but the last chunk.

1590990828
daurnimator
looks like you want `while (true) { const bytes = try stream.readAll(&buffer); encrypt_block(buffer[0..bytes]); if (bytes < buffer.len) break; }`

1590990839
leeward
Yeah, that's actually what I ended up with.

1590990853
leeward
It feels like an appropriate place for a do..while, but Zig doesn't have those.

1590990901
leeward
Oh hey, &buffer is the same as buffer[0..]?

1590990946
leeward
where buffer is `var buffer: [number]u8 = undefined`?

1590990955
daurnimator
not quite. &buffer would give a `*[4096]u8`; while `buffer[0..]` gives a `[]u8`

1590990967
leeward
hmm

1590990970
daurnimator
`*[4096]u8` can cast to a `[]u8` though

1590990977
leeward
Ahh, ok

1590990978
daurnimator
essentially its a slice with comptime-known length

1590991001
leeward
That is a good thing to know. I had been slicing all my arrays to pass them around.

1590991111
daurnimator
slicing with comptime known indicies does the same thing

1590991142
leeward
Yeah, but it's 5 characters instead of 1.

1590991144
daurnimator
--> `buffer[0..buffer.len]` will give a `*[4096]u8` I think?

1590991160
daurnimator
maybe the [0..] even does the same thing

1590991162
daurnimator
I'd have to check

1590991216
leeward
Having problems because the standard library code you're looking at is newer than the version you're building against: fun times.

1590991307
leeward
nifty, it works

1590991516
leeward
Is there a canonical Zig equivalent of getopt?

1590991641
daurnimator
no

1590994770
scientes
also zig's arg handling is a bit strange

1590994797
scientes
I wanted to write something so that you get what you want from the ARGV vector, and then it actually shifts back the stack pointer and writes over it

1590994815
scientes
because the ARGV vector size is unbounded to a percentage of the stack size

1590994829
scientes
and it can be huge, and there is alot of waste, like ARGV[0] is passed twice

1590994835
pixelherodev
?

1590994844
pixelherodev
What passes it twice?

1590994851
scientes
one is unforgable

1590994866
pixelherodev
?

1590994870
scientes
ARGV[0] can be set by the calling process

1590994885
scientes
and it is also passed in another place that is what was actually passed to execve()

1590994919
scientes
pixelherodev, the kernel passes alot to new processes, which is all placed before the stack pointer

1590994933
scientes
this means that environment variables are very wasteful of RAM

1590994934
pixelherodev
But that's not argv[0].

1590994943
pixelherodev
argv[0] can be literally anything.

1590994950
pixelherodev
It doesn't actually have to be the program path

1590994964
pixelherodev
You can pass oasudhauahoa as the argv[0] to a called process

1590994973
pixelherodev
argv[0] shouldn't really be relied upon

1590994988
scientes
well all this stuff takes up memory

1590995019
scientes
and because it is variable and unpredicatable it means you have to overcommit stack space

1590995043
scientes
so I wanted to have zig reset the stack pointer to write over ARGV and ENV (after copying what it wants)

1590995141
pixelherodev
There's... really no need?

1590995162
pixelherodev
If you're in an environment with argv (linux-esque), you can afford to waste - what, a few hundred bytes?

1590995174
pixelherodev
There's plenty of bigger fish to catch here

1590995200
scientes
pixelherodev, it can be up to 25% of the stack size

1590995234
scientes
but yeah, bigger fish

1590995269
scientes
it is just after all the analness again unbounded stacks (which I never understood

1590995310
scientes
I was always like--why not make stacks massive---like 4GB on 64-bit

1590995416
pixelherodev
Because on older microarchs it was really really inefficient

1590995422
pixelherodev
If you need that much memory, you shouldn't be using the stack at all

1590995437
scientes
but it is allocate-on-demand

1590995439
pixelherodev
On newer archs (like Ryzen), the Stack Engine means that it's mostly fine though, but still nowhere near as efficient

1590995445
pixelherodev
Yes, but it's not about the allocations

1590995450
pixelherodev
The pushes and pops themselves are slower

1590995460
pixelherodev
Though I suppose that's not really accurate for generated code as muhc

1590995463
pixelherodev
much*

1590995469
pixelherodev
since it does it in chunks and does e.g. `add %sp`

1590997658
pixelherodev
Whoaa

1590997667
pixelherodev
After switching to Musl, ZLS still just...

1590997670
pixelherodev
I didn't have to recompile it

1590997675
pixelherodev
(though Kak-LSP had issues)

1590997702
pixelherodev
Statically linked by default, apparently?

1590997704
pixelherodev
:)

1591005466
tdeo
pixelherodev: yeah, i really hate depending on libc unnecessarily and there aren't really many languages that can do that

1591005472
tdeo
i wish it was easier to do in rust

1591005502
tdeo
most of the ecosystem is based on raw calls to libc because that's the level of platform abstraction they chose

1591005530
tdeo
and not more os abstraction in the standard library, which would let you switch out libc/direct

1591005553
pixelherodev
In other words

1591005555
pixelherodev
Zig = <3

1591005583
tdeo
i would write more c if i didn't hate null terminated strings so much

1591005591
tdeo
adding slices to c would immediately make it 2x better

1591005640
pixelherodev
True

1591005652
pixelherodev
I mean, extending C is rather easy if you have your own compiler, but, it won't be standard

1591005656
pixelherodev
You'd need GNU-level pull

1591005663
pixelherodev
Get it in GCC or Clang and you're good

1591005801
tdeo
i have been thinking of trying to write a language

1591005812
pixelherodev
Lol, nice

1591005815
tdeo
basically c's features with rust's syntax plus simple generics and slices

1591005825
pixelherodev
It's a nice age for langdev :D

1591005841
pixelherodev
Zig, Nim, Rust, Jai, Odin, and a few others that I know of

1591005844
tdeo
i have some of the grammar written but not much actually written because i hate writing parsers

1591005856
tdeo
not much actual code written*

1591005857
pixelherodev
Heh

1591005870
pixelherodev
One sec

1591005974
alecthomas
hello

1591005997
tdeo
hi

1591006269
pixelherodev
Greetings! :)

1591012007
drp
I am compiling the bootstrap and zig on powerpc64le-unknown-linux-gnu and get almost exactly the same error on stage 2, is there a way to send this without using github?

1591012078
pixelherodev
DCC, but please don't :P

1591012091
pixelherodev
What's the crux of the issue?

1591012094
pixelherodev
ohh wait

1591012104
pixelherodev
drp: are you asking for an alternate method of reporting the issue?

1591012141
drp
pixelherodev: yes

1591012143
pixelherodev


1591012151
pixelherodev
Wait a sec

1591012157
pixelherodev
why haven't I been getting mail for it??

1591012163
pixelherodev
overeager filter

1591012166
pixelherodev
that's why

1591012239
drp
lol, you've heard of email based development, now have irc development with patchfiles sent via DCC and dances! :D-\-<

1591012298
pixelherodev
I'd take you to court for emotional abuse or something

1591012395
drp
basically, when doing the zig compile I get ./lib/std/time.zig:146:23: error: container 'std.os' has no member called 'timespec'

1591012410
drp
and the bootstrap starts at ./lib/std/time.zig:146:23: error: container 'std.os' has no member called 'timespec'

1591012421
drp
but then gets to the same timespec issue a few lines down

1591012495
drp
which has be kinda suprised as I would have assumed the issue would happen before stage2, running zig0 appears to work

1591012499
pixelherodev
drp: mispaste?

1591012503
pixelherodev
ahh wait I see

1591012507
pixelherodev
... wait no

1591012511
pixelherodev
you gave the same error both times?

1591012526
pixelherodev
what OS are you targeting?

1591012553
drp
I am running void linux on ppc64le

1591012622
pixelherodev
one sec, going to take a look

1591012651
pixelherodev
uhh

1591012653
pixelherodev
hmm

1591012658
pixelherodev
you get that issue building master, too?

1591012691
drp
haven't tried to be honest, I've only tried 0.6.0

1591012695
pixelherodev
Ahh

1591012713
pixelherodev
Try with master, maybe?

1591012788
pixelherodev
Willing to bet it's been fixed

1591012797
pixelherodev
Bootstrap won't be updated yet though :(

1591012815
drp
yeah well I don't really need bootstrap, I just thought I'd give it a go

1591012840
drp
famous last words

1591013063
drp
nah same error

1591013084
pixelherodev
cruds

1591013099
pixelherodev
Submit the full log to the mailing list and I'll take a look

1591013937
drp
do you prefer attachments per log or just a superlong single email?

1591014462
pixelherodev
Doesn't matter to me

1591017275
sacredbirdman
Hi, what's the current method to traverse a directory? I found some code in zig/tools/process_headers.zig  but it does not seem to be current/valid

1591017488
r4pr0n
ifreund: hey, I saw your talk and q&a about river and i was wondering: what do you think about implementing "fancy compositor features" like e.g. blur? you said that with wayfire you could do stuff like that, but the problem is if you use wirefire for that, you have to use it for the whole compositing, right?

1591017777
ifreund
r4pr0n: no plans to do so at the moment, though perhaps down the line once the core functionality has stablized

1591017825
ifreund
note that wayfire has powerful plugin system which should be able to accomplish just about whatever you want with regards to window management

1591017906
r4pr0n
well besides that I would like a window manager exactly like river I guess, switched from sway to dwm recently, because of the dynamic window management but also because I missed some of the modularity of x11 like e.g. that you can use compton

1591018093
ifreund
yeah, I wouldn't be opposed to supporting "fancy" effects in river, but dont plan to work on stuff like that anytime soon

1591018193
r4pr0n
I wasn't expecting that, those effects are pretty much the most low priority stuff there is at the moment, just wanted to ask given that the sway author said that it was out of scope

1591018232
companion_cube
I still just use i3 🤷

1591018241
companion_cube
does wayland allow to have different font size on different screens?

1591018322
ifreund
sure

1591018328
tdeo
yeah, wayland compositors generally have much better multi-dpi support than xorg does

1591018350
afontain_
different dpi settings, yes

1591018364
tdeo
assuming the question i answered is what you meant to ask

1591018373
tdeo
something something just a protocol

1591018378
ifreund
yup

1591018389
dimenus
xwayland is still blurry even on sway atm, but there's MRs out there to resolve that as well

1591018397
dimenus
sway in general though is easily the best with mixed dpi imo

1591018411
companion_cube
I just have a high density laptop screen, and less dense second monitor

1591018424
companion_cube
so that might be the one thing that makes me re-try sway instead of i3…

1591018468
ifreund
well, i just got the `map` command implemented in river

1591018480
ifreund
time to de-hardcode all the keybinds

1591018495
tdeo
i thought of the functional sense of map first and wondered how that'd work

1591018505
ifreund
heh

1591018517
ifreund
map as in the kakoune command :)

1591018524
companion_cube
so I missed the context, is river a WM in zig?

1591018535
ifreund
aye

1591018559
tdeo
compositor/display server being the correct terms

1591018576
companion_cube
ugh, whatevs :p

1591018580
dimenus
i've been working on my wayland vnc client and I found a couple bugs in wayvnc :P

1591018584
companion_cube
it's the thingie that manages windows

1591018587
tdeo
i think it would be cool to actually have a window-manager based wayland compositor

1591018602
gonz_
What are the practical upsides to wayland?

1591018608
tdeo
even though it's a bad idea in most situations, it's cool to be able to make something quickly

1591018609
gonz_
I never ran it when I ran Linux

1591018617
dimenus
gonz_: perfect frames every time

1591018619
companion_cube
gonz_: I guess DPI mixing is the oe…

1591018622
companion_cube
one*

1591018635
dimenus
mixed dpi support. leaner.

1591018645
tdeo
i like that the whole thing is just way, way simpler and more efficient

1591018648
gonz_
DPI mixing sounds useful, I suppose. Does it actually work or is it one of those "Yeah, this is possible in certain circumstances"?

1591018667
dimenus
it's a 98% solution on sway, kwin is getting there as well

1591018679
ifreund
i mean, river is also a window manager, not just a compostior/display server

1591018680
tdeo
ha, xorg is where it only works if you spend a week configuring it and only for half your apps

1591018689
tdeo
works just fine on most/all compositors

1591018697
companion_cube
gonz_: yeah otherwise it makes other things more difficult, like screenshots and whatnot :/

1591018701
tdeo
other than blurry x windows as mentioned

1591018712
dimenus
screenshots are a solved problem

1591018724
dimenus
screen sharing however is still getting there

1591018731
dimenus
the spec is written but no major vendors have it implemented

1591018732
tdeo
it's sad that gnome hates actually using wayland and loves dbus

1591018745
tdeo
because they refuse to implement things like a wayland screenshot extension

1591018760
tdeo
but i'm happy with sway and its wayland support for gamma control/screenshots/etc

1591018763
gonz_
Display stuff was always a bitch to me on Linux, so it's not as if I'm doubting that there are improvements to be made. But most alternatives to things usually just present new issues.

1591018767
ifreund
they just want a dbus-based display protocol

1591018769
companion_cube
also you have to give up on all the tools you know in X

1591018774
companion_cube
that annoys me :/

1591018791
tdeo
what are you missing?

1591018810
tdeo
as long as you're not using gnome, there's usually some alternative

1591018828
tdeo
recently working on a clone of an X tool myself, actually

1591018829
companion_cube
rofi, scrot, I guess

1591018833
companion_cube
I got my habits

1591018845
ifreund
yeah, so you got wofi, and grim

1591018846
tdeo
ah yeah the equivalents aren't exactly the same but similar

1591018894
dimenus
sway has a wrapper script for grim/slurp in their repo

1591018900
dimenus
works great

1591018920
companion_cube
yeah but does wofi accept the extensions of rofi?

1591018926
companion_cube
there's a lot of small changes

1591018951
tdeo
wofi is gtk, which kinda bothers me, but i'll probably make my own replacement eventually too

1591018961
ifreund
yeah i use bemenu personally

1591018964
tdeo
in zig, hopefully

1591018969
pixelherodev
Sway in general is just the best

1591018987
pixelherodev
I use it always

1591018987
tdeo
sway's latency tuning has gotten so good

1591018990
pixelherodev
well

1591018990
ifreund
been considering writing a fuzzy wayland dmenu in zig, but i have too much to do right now

1591018991
pixelherodev
except right now

1591018994
dimenus
drew's challenging at times, but those guys produce excellent code

1591018996
pixelherodev
because alacritty is broken

1591019004
tdeo
what's broken

1591019014
ifreund
pixelherodev: are you using master branch alacritty?

1591019016
pixelherodev
compiling it

1591019018
pixelherodev
Rust is broken.

1591019022
pixelherodev
I'm on musl :P

1591019032
pixelherodev
So... a lot of shit is broken.

1591019038
pixelherodev
Or requires patches.

1591019046
tdeo
i want to make a gpu terminal emulator eventually

1591019051
tdeo
there's just so many things i want to make

1591019055
companion_cube
tdeo: alacritty does that

1591019056
pixelherodev
I have a patch I stole from Alpine (thanks to someone in #gentoo-hardened who pointed me the right way)

1591019058
pixelherodev
for Mesa

1591019060
tdeo
yeah but in zig

1591019073
pixelherodev
Is Kitty any good?

1591019092
tdeo
i do not like kitty because it is written in python

1591019094
companion_cube
I like it

1591019098
companion_cube
it's reasonably fast

1591019102
companion_cube
and it has tabs :-°

1591019196
afontain_
I'm using alacritty on Alpine, works for me :P

1591019209
afontain_
(and sway)

1591019516
ifreund
i mentioned master branch alacritty because it now uses frame callbacks on wayland

1591019547
dimenus
what were they doing before?

1591019557
tdeo
oh does it? i have to update

1591019570
ifreund
dimenus: just rendering whenever they felt like i guewss

1591019574
dimenus
heh

1591019578
tdeo
not for any reason, just better behaved wayland support seems like something to update for lol

1591019591
ifreund
it also has a "vi mode"

1591019626
gonz_
> drew's challenging at times

1591019634
gonz_
Understatement of the year so far.

1591019654
dimenus
did he do something new?

1591019740
companion_cube
he's just very rough on the edges

1591019754
gonz_
No, not that I know of. I think there's enough historical record to say it's an understatement.

1591019795
gonz_
Even when you agree with him a fair amount it's almost impossible to take his side, IMO.

1591019858
companion_cube
depends on the issue, I liked his post on accessibility via simplicity

1591020045
gonz_
I like his composite view of what (likely) makes good software, but only a minor part of the arguments he would make for it.

1591020059
gonz_
Because he makes completely ridiculous leaps of logic to make those points, usually.

1591020077
companion_cube
ah, this I think I can agree on

1591020083
gonz_
His post about how Rust isn't an alternative to C is agreeable in premise, but almost none of the arguments make any sense.

1591020087
companion_cube
(I'm still salty on the rust post)

1591020092
companion_cube
ahah yeha

1591020444
fengb
“Concurrency is generally a bad thing” wat

1591020493
companion_cube
yeah his

1591020568
companion_cube
(the argument against rust is hilarious there too)

1591020645
fengb
Concurrency is hard. No sense making it easier!

1591020668
companion_cube
if your compiler makes it easier, it's lying to you

1591020896
fengb
I generally agree with this premise... but he makes it impossible for me to agree with him lol

1591020917
fengb
Share nothing is a lot easier to scale but the way he’s trying to convey it is...

1591020970
companion_cube
I mean sometimes, threads with shared memory is the most efficient

1591020989
companion_cube
for compression, encoding, or whenever communication costs would be too high

1591021037
fengb
He must love JS’s model of concurrency then! :P

1591021138
companion_cube
for some reason he really hates rust

1591021159
scientes
> On a long enough time-scale, all programs will be proven incorrect.

1591021161
scientes
hahahahaha

1591021440
fengb
I've seen people focus on simplicity by ignoring complicated things

1591021454
fengb
Not saying that's what ddevault is doing... but you see this often around Clojure

1591021514
companion_cube
kind of, though

1591021517
companion_cube
sometimes things are complicated

1591021584
fengb
Yeah I agree

1591021859
drp
I think some scales of the two sides haven't been taken into account with simplicity vs complexity

1591021973
drp
complexity is clearly winning, yes some things are just complicated but we're lightyears away from defending your complex algo from a marauding suckless horde

1591022029
fengb
I think overengineering and complexity is a big problem yes

1591022044
fengb
"Accidental complexity"

1591022055
fengb
But that doesn't mean you can just sweep all complexity under a rug

1591022076
companion_cube
"suckless horde" I like that

1591022078
fengb
And a lot of accidental complexity comes from not understanding the problem space, and not choosing the wrong tools

1591022097
ikskuh
fengb: true dat

1591022537
drp
accidential is pretty broad

1591022672
drp
is electron accidentially complex? I am pretty sure their goal has a lot of purposeful complexity.

1591022720
fengb
No, but it solves a problem: enabling native-ish UI for web developers

1591022751
fengb
Can we do better? Absolutely. But that doesn't mean it doesn't serve a purpose and should be destroyed

1591022808
fengb
And unfortunately, Electron is actually one of the better cross-platform UI systems out there

1591022816
fengb
This sucks a lot

1591022848
ikskuh
yes

1591022873
pmwhite
Solving a developer problem doesn't make it not accidental, right? Essential complexity is what solves

1591022979
drp
It's one of the better if you're the big 3, electron is absolutely not the best if you like BSD

1591023004
fengb
I mean Electron makes it easy for developers. No other UI toolkit does

1591023009
fengb
And yes it's awful for endusers

1591023194
pmwhite
My experience with XAML was not too bad. Isn't that cross-platform now?

1591023271
pmwhite
But it sounds like you're saying electron makes it easy for developers to awful programs, which is amusing to say the least.

1591023288
pixelherodev
ij wit

1591023298
pixelherodev
whoops

1591023299
pixelherodev
uh wut

1591023305
pixelherodev
Electron is awful on every OS

1591023341
pixelherodev
If 'easy for developers' is a priority at the expense of end users, you're doing it wrong.

1591023343
pmwhite
s/to awful/to write awful

1591023366
pixelherodev
But yeah, I second what pmwhite said

1591023370
ifreund
hah, fun bug

1591023375
pixelherodev
Making it easy to make shit isn't an accomplishment.

1591023377
drp
I never made anything serious with python tkinter but I enjoyed it

1591023380
ifreund
i exec'ed arg 0 instead of arg 1

1591023403
nycex
it's not a bug if it's a cool-looking feature ^^

1591023433
ifreund
if it's not clear, what's happening is river is imediately starting another nested river session on start up

1591023439
ifreund
recursively

1591023470
nycex
it

1591023552
ikskuh
ifreund: killall

1591023561
ikskuh
most helpful tool :D

1591023580
ifreund
well, killing the outermost one is sufficent in this case, the rest panic

1591023586
ikskuh
ah, good :D

1591023589
ikskuh
hm

1591023592
ikskuh
is that good? :D

1591023647
ifreund
yeah, i think it's the right thing to do in this case

1591023666
ikskuh
probably, yes

1591023680
ifreund
when you're running as a wayland client and your compositor crashes you should exit

1591023691
ifreund
though maybe not panic,

1591023697
ikskuh
how does graphics output in wayland work?

1591023731
ikskuh
so, how does your compositor output graphics?

1591023740
ifreund
in this case wlroots is doing all the heavy lifting for me. They abstract over several backends including a wayland backend

1591023755
ifreund
so my compostior can function as a wayland client as seen here

1591023782
ifreund
it can also be run directly from a tty and use KMS

1591023811
ikskuh
ah

1591023835
ikskuh
i have to check out how to do some OpenGL or Vulkan output without wayland/X11

1591023847
ifreund
the protocol itself doesn't require any particular output method

1591023848
ikskuh
would be nice for non-desktop apps

1591023871
ifreund
an alternative might be something like cage, it's a very lightweight wayland kiosk

1591023877
ifreund


1591023903
ikskuh
hm, sounds good!

1591023914
satchmo
+1 for cage, it's slick

1591023915
ikskuh
so, wayland+opengl→ smooth graphics without tearing

1591023925
fengb
I'm saying that people "valuing simplicity" don't understand developers

1591023926
fengb
And if you make your shit hard to use, people will flock to something easier

1591023939
fengb
If we had a toolkit that works better and is easy to use, people will use that

1591023974
fengb
But we don't. And most companies won't spend an extra 2x time to work around developer issues

1591024077
nephele
ifreund, huh? shouldn't you try to reconecct to the compositor?

1591024106
ifreund
how? the compositor crashed

1591024125
ikskuh
restart compositor?

1591024134
ikskuh
then reconnect

1591024146
ikskuh
way better than losing all of the session content

1591024209
ifreund
i don't know of any wayland clients that do that tbh

1591024568
companion_cube
what's "tearing"?

1591024578
drp
strangely there appears to be 10 times more documentation on wayland compositors than wayland clients

1591024641
ifreund
companion_cube: tearing is when you get parts of two separate buffers rendered on your screen, causing some kind of discontinuity or "tear" in the frame

1591024692
companion_cube
hmm ok, is that a common thing?

1591024700
ifreund
companion_cube: on X11 yes

1591024723
ifreund
though using a compositor helps things a lot afaik

1591024734
fengb
Ah tearing. Does X11 not have double buffering?

1591024736
companion_cube
maybe I'm just lucky…

1591024742
ifreund
drp: drew's wayland book is mostly focused on the client side

1591024747
fengb
I had to fix that in my emulator :P

1591024785
drp
it used to be much more common than it is today

1591024811
pmwhite
if you want to see tearing, just scroll your web browser.

1591024829
drp
ifreund: thankyou, I bought the book back when it was under paywall

1591024848
drp
it was more of a comment on the state of documentation in wayland rather than there being no documentation on wayland clients

1591024873
ifreund
ah like the docs in wayland.xml itself?

1591024902
drp
as in generally on the web

1591024939
drp
searching for wayland examples leads to compositors more than clients

1591024942
ifreund
i mean part of that is probably that clients are a lot simpler, so they don't need as much in the way of docs

1591025004
ifreund
if you're looking for examples this one is pretty up to date

1591025126
ifreund
also see the weston example clients

1591025232
satchmo
oh my god

1591025252
satchmo
I've been trying to use fcntl all day but couldn't find it in stdlib, turns out i was typing fnctl

1591026449
drp
ifreund: thank you, I didn't have that hello-wayland, bookmarked.

1591030379
scientes
why is my function getting a .exit that looks for stderr and writes to it?

1591030388
scientes
even with --release-fast

1591030411
scientes
it is a very simple function

1591031491
pixelherodev
A panic?

1591031501
pixelherodev
Paste the output also?

1591031514
pixelherodev
(has to be pure JS-free text, as I don't have a proper web browser right now :P)

1591031792
pixelherodev
`export`ed functions are definitionally C ABI, right>

1591031794
pixelherodev
?

1591031899
scientes
pixelherodev, generally

1591031909
scientes
maybe a few other ABIs too

1591031923
scientes
it would be nice to get a back-trace when hitting @compileError

1591031935
scientes
then i could figure out what is dragging in this debug stuff

1591032007
pixelherodev
wouldn't work

1591032012
pixelherodev
At least, not consistently

1591032016
pixelherodev
There can be multiple callers

1591032022
scientes
a what-includes-what back-trace

1591032032
scientes
yeah but i want to eliminate all callers

1591032041
scientes
and you could use a comptime check to filter

1591032041
pixelherodev
huh

1591032044
pixelherodev
that might be doable

1591032051
pixelherodev
implementable I mean

1591032065
pixelherodev
It'd basically mark the compilation as a failure and print a backtrace whenever run

1591032067
pixelherodev
then just

1591032069
pixelherodev
keep going

1591032096
pixelherodev
once semanisis is done, fails properly

1591032106
pixelherodev
... there is no good way to contract semantic analysis

1591032225
scientes
oh @compileLog already prints a back-trace

1591032265
pixelherodev
Neat :)

1591032283
scientes
oh no

1591032288
scientes
just the reference

1591033149
pixelherodev
Has there ever been a proposal to use function instead of fn?

1591033165
pixelherodev
`Favor reading code over writing code`

1591033173
pixelherodev
If there has, I'd rather not tread old ground

1591033181
ikskuh
i think `fn` is okay

1591033252
pixelherodev
That's what I said ten minutes ago :P

1591033260
pixelherodev
Then I thought it over some more

1591033283
leeward
For what it's worth, it's easier to read code when the lines are shorter. Meaningful names are important, but fn doesn't add cognitive load (for me, at least).

1591033345
fengb
We should use λ instead

1591033381
ifreund
i agree with leeward

1591033383
leeward
That would certainly shift the balance strongly towards easy to read and hard to write.

1591033422
pixelherodev
How about just `f`?

1591033472
leeward
I dislike single-letter names on principle, but other people don't so `f` seems more likely to collide with variable names.

1591033492
ifreund
it's also less readabel than fn

1591033492
ikskuh
<ifreund> i agree with leeward +1

1591033510
ifreund
I think fn-func is the sweet spot personally

1591033515
leeward
agreed

1591033530
ikskuh
fn-func(i: i32) i32

1591033532
ikskuh
perfection!

1591033534
leeward
I particularly like fun, but that's just because I like puns.

1591033595
ikskuh
i had fun once. it was aweful

1591033635
fengb
Zig doesn’t really understand pure functions so we should use procedure instead

1591033643
ikskuh
proc

1591033648
ikskuh
but procedures can't return values

1591033655
ikskuh
let's do the VHDL way!

1591033660
ikskuh
impure function(i:i32) i32

1591033660
fengb
Proction

1591033664
foobles
ok wait, in `fn`, is it `FunctioN` or `FuNction`

1591033669
leeward
Particularly in Zig, where function prototypes tend to be long (int main(int argc, char *argv[]) vs (fn main(argc: usize, argv: [][]u8) anyerror!usize)

1591033670
foobles
which N is it?

1591033670
ikskuh
Funcedure

1591033695
pixelherodev
Funcit

1591033700
ikskuh
funk

1591033702
pixelherodev
Functiot

1591033768
leeward
It's actually short for "the Following block defiNes a procedure"

1591033820
leeward
That's how I read it, anyway.

1591033850
fengb
My prof joked that nop stood for not-optimized-properly

1591034181
leeward
But nops execute so fast!

1591034206
leeward
1 cycle on every architecture there is.

1591034219
scientes
lol

1591034240
pixelherodev
Nope.

1591034241
fengb
It’s the Uber business model: we don’t make anything per unit but we’ll make it up in volume!

1591034252
companion_cube
we lose money on each unit*

1591034256
scientes
they make plenty

1591034260
pixelherodev
Nops on x86 can take less than a cycle

1591034269
leeward
So fast!

1591034272
scientes
its just that they provide so little

1591034286
pixelherodev
scientes: IIRC, their most profitable division is Uber Eats

1591034301
pixelherodev
Which had a net profit of negative four hundred billion in a single quarter

1591034305
pixelherodev
So

1591034307
pixelherodev
Yeah.

1591034323
scientes
pixelherodev, mass transportation is profitable in south america

1591034344
pixelherodev
Too bad Uber is in North America then, isn't it?

1591034349
scientes
it is down there too

1591034351
companion_cube
uber loses money all the time

1591034354
scientes
you just need to change your expectations

1591034361
scientes
but it isn't about money

1591034363
fengb
But... self driving cars

1591034366
leeward
Their business model is "use VC money from people who don't care to put the competition out of business, then profit."

1591034366
pixelherodev
Well, it is about money

1591034374
scientes
it is about arrogance

1591034375
pixelherodev
It's about money.

1591034375
fengb
They’re manufacture the next market!

1591034378
pixelherodev
Just not for the company.

1591034379
fengb
You just don’t get it

1591034383
pixelherodev
How much does the CEO make?

1591034387
companion_cube
it's about the potential of making money in the future

1591034397
scientes
ok, wrong channel

1591034404
leeward
scientes: ++

1591038683
leeward
Is there a way to convert from a [*:0]u8 to a [:0]u8? @ptrCast doesn't, since slices aren't pointer types.

1591038963
pixelherodev
You can slice it

1591038970
pixelherodev
e.g. if it's currently called `ptr`

1591038972
pixelherodev
`ptr[0..len]`

1591038981
pixelherodev
std.mem.span(ptr) is the best way

1591038994
pixelherodev
It determines the length in the most efficient way possible and returns it as a slice

1591039000
pixelherodev
Found that one out this morning :)

1591039032
leeward
I don't see span in mem.zig.

1591039114
leeward
oh, looking at the wrong mem.zig

1591039117
leeward
I'm clever.

1591039135
ifreund


1591039137
ifreund
lol

1591039251
leeward
thanks

1591039272
leeward
That is exactly what I was looking for.

1591039372
leeward
I feel like there should be another document that's like the language introduction, but for the standard library. Want to write to a file? This is how. Want to interact with C libraries? Here are the essentials.

1591039419
leeward
Maybe I'll turn my cheat sheet into something with broader use.

1591039523
ifreund
yes, that would be very awesome to have

1591039556
ifreund
the standard library is planned to recieve a big cleanup and documentation effort shortly before 1.0

1591039617
leeward
Yeah, it needs it. Hard to do now with how much flux there is.

1591039654
marijnfs
I just found out about Zig Showtime. When was that event?

1591039754
fengb
The previous Saturday. Upcoming show is on Sunday

1591039908
ifreund
marijnfs: link here if you want to catch up

1591039908
marijnfs
nice is it several talks?

1591039913
marijnfs
Ah thanks

1591039922
marijnfs
I was wathcing the emulator talk but there is no master link say

1591039927
ifreund
yeah fengb and I were the speakers for the first event

1591042384
leeward
Is there a way to get access to all the build options in LibExeObjStep from within the program? Specifically, I want to know what the name of the executable will be.

1591042459
ifreund
you can access them like so

1591042476
leeward
Sweet, thanks

1591043546
marler8997
anyone else see some weird behavior with deps/SoftFloat-32/COPYING.txt and README.txt?

1591043559
marler8997
git says they have changed, but whenever I revert the changes, they still say they have changed

1591043587
pixelherodev
Update to master

1591043589
pixelherodev
It's been fixed

1591043601
pixelherodev
Which is good

1591043603
marler8997
I can't update to master because it says I need to handle those changes first :)

1591043606
pixelherodev
because it was really annoying

1591043608
pixelherodev
Uhh

1591043610
pixelherodev
hmm

1591043612
pixelherodev
okay so here's what you do

1591043618
pixelherodev
you add them, and commit

1591043626
pixelherodev
then, do a rebase and wipe them

1591043632
pixelherodev
... after pulling

1591043634
pixelherodev
probably

1591043641
pixelherodev
I did something along those lines and it worked

1591043687
marler8997
adding/committing worked

1591043691
marler8997
what they heck was going on there?

1591043705
pixelherodev
Line endings.

1591043720
ikskuh
pixelherodev: \r\n

1591043725
pixelherodev
Exactly

1591043731
pixelherodev
It's ridiculous

1591043739
marler8997
but how does that mess up git?

1591043758
ikskuh
marler8997: read something about autocrlf ;)

1591043760
ifreund
git likes to automatically tweak your line endings on windows apparently

1591043762
fengb
Git likes to convert line endings

1591043768
marler8997
git checkout, git reset, and git restore all didn't work

1591043775
fengb
And then gets confused when it’s doing it

1591043781
marler8997
even deleting them and checking them out again, it still said they were modified

1591043787
marler8997
I'm familair with autocrlf

1591043817
marler8997
it's not enabled on my machine anywhere

1591043823
pixelherodev
Git.

1591043826
pixelherodev
Git uses it.

1591043828
marler8997
this is linux by the way

1591043879
leeward
Why must Git be such a...git?

1591043905
marler8997
I still don't understand though, I'm on linux, autocrlf is not enabled

1591044586
pixelherodev
It is.

1591044591
pixelherodev
I'm on Linux too

1591044595
pixelherodev
Just...

1591044599
pixelherodev
don't think about it too hard.

1591044602
pixelherodev
It only makes it worse.

1591044797
fengb
Git auto enables it

1591045101
marler8997
andrewrk: I'd like to make some progress on

1591045348
andrewrk
marler8997, ah yes. I'll take a look today and try to help make progress on it

1591045374
andrewrk
is #5151 related as well?

1591045378
marler8997
I don't like that the change requires changes to every single allocator, I would prefer smaller changes but I wasn't sure how to break it up

1591045397
marler8997
it's "related" in that it also deals with allocation

1591045405
marler8997
but they're really separate things

1591045428
marler8997
I think we should probably decide on issue 4431 before we look at 5151

1591045443
andrewrk
ok

1591045461
marler8997
5151 is still more meant to be exploratory/experimental

1591045535
marler8997
I'm stepping away from my second job to have more time to work on personal projects and Zig.  If you have other directiosn you need help with let me know as well

1591045638
xackus_
andrewrk slice layout is not guaranteed, right?

1591045658
fengb
2nd job? Sheesh

1591045659
xackus_
ptr and len

1591045687
marler8997
Did it for about 6 months, was a good experience

1591045719
andrewrk
xackus_, correct and currently it is not planned to change that

1591045720
marler8997
With a company that uses D (not too many), but I'm moving away from the language as I see where the language is going

1591045735
xackus_
thanks for the confirmation

1591045745
leeward
Wow, there are companies that use D?

1591045748
andrewrk
xackus_, it is also not stabilized whether or not a (ABI-aligned) pointer to the individual fields (ptr/len) will be available

1591045750
leeward
Where are they hiding?

1591045783
marler8997
There's a few, a game developer, some investments companies and other tech/tooling companies

1591045834
marler8997
For them I wrote a tool that allows you to call managed code from a native process written in D.  Was thinking of supporting Zig as well if the need ever comes up, but it might not.

1591045867
xackus_
the company i work at has some production code in a custom language

1591045873
marler8997
here if there are any .NET developers interested:

1591045901
xackus_
i haven't touched it though

1591045931
xackus_
but from what i've heard it's no zig

1591045948
pixelherodev
Which one is 4431?

1591045950
leeward
I worked at a place that liked to build DSLs for a while. The tools were amazing.

1591045960
marler8997
Improve Allocator interface...

1591045967
pixelherodev
Ahh gotcha

1591046058
xackus_
problems start when the only person maintaining the language quits

1591046157
leeward
It's true, but we had 3 people who did that kind of stuff, one of whom was the CTO.

1591046187
leeward
Of course, all 3 of us are no longer there now.

1591046760
gonz_
marler8997: Wasn't that Ethan Watson guy doing something like this with Binderoo?

1591046835
marler8997
ethan was one of the guys who worked for the game company that used D, Remedy

1591046843
gonz_
Mhm

1591046850
marler8997
As I recall, this was a cross-language framework

1591046869
marler8997
but .NET is done completely differently

1591046939
fengb
"problems start when the only person maintaining the language quits" 🤔

1591046974
fengb
Reminds me of this old story:

1591047023
gonz_
I have a feeling some of the Elixir macros I wrote for my last employer might've been rewritten now. Though I wouldn't be surprised if they turned the whole code base into Scala at this point.

1591047052
gonz_
s/rewritten/"yeeted", as the kids say,/

1591047072
via
yat

1591047083
gonz_
Ah, thanks for correcting my grammar.

1591047089
gonz_
yat indeed

1591047105
gonz_
It's important to stay in touch with the kids...

1591047113
gonz_
Phrasing.

1591047126
andrewrk
perhaps we should rename `zig translate-c` to `zig yeet`

1591047169
gonz_
:D

1591047203
xackus
yet another stage1 bug squashed, making a pr soon

1591047318
pixelherodev
Nice

1591047432
marler8997
this BoxX thing is satire right?

1591047456
xackus
we could make `zig yeet` a secret alias of `zig translate-c`

1591047479
gonz_
I never figured out whether or not The Daily WTF was satire or not

1591047530
xackus
after some of the code i've seen at work i'm willing to believe anything

1591047543
gonz_
I always remembered this one:

1591047556
gonz_
It's crazy that this was back in 2005

1591047587
fengb
True, False, FileNotFound

1591047589
andrewrk
I once read a critque of The Daily WTF that changed my life. It pointed out that it didn't really matter that it was making fun of bad code / bad practices. At the end of the day, it celebrates mediocrity, and comes at an opportunity cost of celebrating excellence

1591047600
companion_cube
gonz_: you can't invent some of these

1591047615
fengb
I'm not sure "celebrate" is the right word

1591047625
gonz_
It's certainly spotlighting it.

1591047655
fengb
One thing that's true though... the best code is often unnoticed

1591047663
alehander92
andrewrk very true, i haven't seen it like that before

1591047682
gonz_
When I read this one nowadays I feel a bit bad for Paula, to be honest.

1591047689
gonz_
In 2005 I didn't

1591047712
alehander92
it's almost like a chekhov story

1591047730
leeward
If only they had had Zig: They just needed a FileError!bool.

1591048336
marler8997
wow thanks for the link, and the laughs :)

1591048656
torque
that paula bean one hits a little too close to home

1591048682
torque
we had a "senior architect" contracting for several months who was let go when someone did an audit and realized he had not committed any code in that time

1591048715
companion_cube
so what did he do?

1591048729
gonz_
torque: Does the name Quanterall mean anything to you?

1591048744
leeward
This is why I make people write code in interviews.

1591048846
pixelherodev
So that they can wait to not write code until after the interview?

1591048880
pixelherodev
alrighty, stage2 time

1591048894
pixelherodev
Fortunately, I don't need to set up Zig; I can just keep remote-ing it :P

1591048927
pixelherodev
Going to get that error_tests branch fixed up now

1591048944
gonz_
When I was working at Crytek/Creative Assembly our lead got tasked with creating a new service. We ended up making half of it when he up and left after sitting on the project for like half a year or something.

1591048967
torque
gonz_, haha nope

1591048978
leeward
pixelherodev: Sure, or so I know that they at least can write code if they need to. If someone goes several months without writing any code, and nobody at the company notices, there are deeper problems.

1591048985
fengb
You worked at Crytek?

1591048988
gonz_
torque: Ah. That guy ended up working for that company, is why I ask. It felt so familiar. :D

1591049002
pixelherodev
andrewrk: the idea is to have any N number of stages, which can either succeed (check output), fail (check errors), transform (check output ZIR)?

1591049021
gonz_
fengb: Yes, on a MOBA that never released, then we got sold to CA. I have a Crytek credit for a game I never even saw, though.

1591049044
gonz_
At CA I worked on another MOBA that never ended up releasing as well.

1591049050
pixelherodev
CA?

1591049053
pixelherodev
Ahh

1591049056
gonz_
The Creative Assembly

1591049059
gonz_
Total War series

1591049060
pixelherodev
Yeah, I saw

1591049064
pixelherodev
You mentioned that just above

1591049077
andrewrk
pixelherodev, the "check output ZIR" one will probably be different than "compare output". but yeah the idea is that you have a list of "updates" to source files, and each "update" will either succeed with some expected output, or fail with expected errors

1591049083
companion_cube
gonz_: cool cool

1591049116
fengb
I find the MOBA scene pretty fascinating. Nobody can dethrone the top two

1591049153
gonz_
Crytek worked on it for, I kid you not, 7 years before I showed up. It was an MMORPG initially.

1591049156
gonz_
Completely crazy project

1591049160
fengb
o_O

1591049172
gonz_
They also made a Steam competitor, or were in the process of making one.

1591049182
fengb
They've tried everything

1591049188
gonz_
Absolute madlads

1591049226
gonz_
If you get the chance I recommend CA, though. It's a great company.

1591049345
pixelherodev
andrewrk: would it make more sense to pass in a slice of a tagged union of stages, or use e.g. a builder type?

1591049350
gonz_
If you know Erlang they probably still use it even though that specific project was shut down.

1591049372
pixelherodev
I think I should also reimplement the current tests

1591049377
leeward
I miss Erlang. Nobody wants me to use it these days.

1591049402
leeward
Of course, nobody wants me to use Zig either, but here I am.

1591049406
pixelherodev
heh

1591049445
pixelherodev
20MiB/s internal wireless network is ncie

1591049448
pixelherodev
nice*

1591049452
fengb
I want you to use zig

1591049470
pixelherodev
It doesn't get that high for actual internet access, but for my SSH builds? It's more than enough :D

1591049474
gonz_
fengb: Make one of those Uncle Sam posters, plox

1591049477
leeward
Thanks, fengb. That means a lot.

1591049486
pixelherodev
Heh

1591049492
pixelherodev
I second gonz_'s idea

1591049497
dimenus
i was lukewarm on zig back in 2017

1591049502
dimenus
but it's progressed nicely

1591049504
pixelherodev
Gonna be honest

1591049513
pixelherodev
I looked at Zig like six times before I bothered trying it

1591049514
fengb


1591049520
pixelherodev
Then I used it to write a kernel

1591049522
fengb
I suppose I should photoshop the face too

1591049523
pixelherodev
and, well

1591049533
pixelherodev
I've written maybe 1K lines of C since

1591049541
pixelherodev
Which might sound like a lot, but it really isn't

1591049554
leeward
Sounds like you don't write C for money, pixelherodev.

1591049560
pixelherodev
I don't write for money at all

1591049565
pixelherodev
I don't do anything for money, in fact

1591049568
leeward
That does make things simpler.

1591049572
pixelherodev
Yeah

1591049575
pixelherodev
I mean, harder too

1591049584
leeward
Simpler isn't the same as easier.

1591049586
dimenus
writing against a moving target for a salary doesn't sound like a good idea :)

1591049586
pixelherodev
I know

1591049596
gonz_
pixelherodev: This sounds either like a great existence or miserable. Are you looking?

1591049602
pixelherodev
sorta

1591049613
pixelherodev
I'm currently interning for SourceHut

1591049615
companion_cube
dimenus: you mean C++, right?

1591049618
fengb
He's working for ddevault :P

1591049623
dimenus
companion_cube: hah!

1591049627
pixelherodev
I just graduated high school, and my school required every senior to have an internship

1591049628
gonz_
Ohhh, what, he has interns?

1591049634
pixelherodev
One intern

1591049637
pixelherodev
Hi

1591049641
leeward
Yeah, there's no way I'm using Zig for work until 1.0. That said, once it lands, I'm going to be pushing for it.

1591049644
gonz_
Hello, intern :D

1591049657
pixelherodev
Yeah, I reached out to him when my school said I needed an internship

1591049659
gonz_
That's great, though, you get to work on real stuff right out of HS.

1591049664
pixelherodev
Yeah :)

1591049666
gonz_
Congrats

1591049669
pixelherodev
I mean, I'm also working on Zig :P

1591049675
dimenus
does he have one fulltime employee atm? emersion?

1591049680
andrewrk
you should know, you can get paid for a computer science internship

1591049682
pixelherodev
AFAIK yeah

1591049688
pixelherodev
andrewrk: I'm aware

1591049689
fengb
Maybe ZSF can hire you

1591049696
pixelherodev
That'd be nice :)

1591049697
leeward
Yeah, unpaid internships are bs.

1591049706
torque
how do you even define an unpaid internship working on open source software

1591049718
leeward
I have strong feelings about the ethics on that one.

1591049718
torque
how is this distinguishable from just being an open source contributor

1591049721
pixelherodev
"more of what I've been doing for years"

1591049728
pixelherodev
"except now my school's off my back"

1591049732
leeward
torque: someone's making money from it.

1591049741
pixelherodev
leeward: not in this case

1591049760
dimenus
andrewrk: are you still in NYC?

1591049804
andrewrk
yeah

1591049829
dimenus
i give you a lot of credit for being willing to go OSS fulltime living there

1591049832
leeward


1591049841
pixelherodev
leeward: yes, but I'm not contributing to sr.ht proper

1591049849
pixelherodev
I'm working a project called Ikiru, which I have control over

1591049856
companion_cube
are you working on the webmail?

1591049858
pixelherodev
Nah

1591049861
pixelherodev
Uptime system

1591049867
pixelherodev
Just fixed the HTML layouts, actually :)

1591049877
pixelherodev
Simple prometheus frontend, effectively

1591049894
pixelherodev
It's how I was able to quickly get my gotta-go-fast graphgen working

1591049896
companion_cube
ah yes, right

1591049901
companion_cube
do you have a demo page for that?

1591049902
pixelherodev
because it's basically the same thing Ikiru does :P

1591049908
pixelherodev
companion_cube: the repo is public?

1591049918
pixelherodev
I can pastebin one if you want

1591049924
pixelherodev
the generated HTML has the SVGs inlined

1591049931
companion_cube
ahh nice

1591049935
pixelherodev
Yeah

1591049937
companion_cube
yeah I'd like to see what this look like

1591049940
pixelherodev
Sure thing

1591049969
pixelherodev
... wait shit. I don't have a web browser :P

1591049983
pixelherodev
Dammit, going to have to reboot :(

1591049989
pixelherodev
Or try chrooting maybe

1591050030
leeward
So if you're contributing open source code under a license like the GPL, that's one thing. If you're assigning ownership of your work to someone else who can do what they want with it for free, that's...not cool.

1591050061
ifreund
pretty sure most if not all of sourcehuts stuff is GPL'd

1591050062
leeward
pixelherodev: I'm not going to tell you what to do, and I don't know the details of your situation, but unpaid internships are bs.

1591050067
companion_cube
pixelherodev: wtf no browser? :D

1591050083
pixelherodev
leeward: that's not what's happening though

1591050089
pixelherodev
I have ownership of the project

1591050094
leeward
shiny

1591050102
pixelherodev
It

1591050114
pixelherodev
companion_cube: it's a fresh install

1591050115
companion_cube
almost surprised it's not AGPL :D

1591050116
pixelherodev
sue me

1591050124
pixelherodev
and I'm still trying to find a way to get an X11-less browser

1591050124
companion_cube
ah, the smell of a fresh install…

1591050130
pixelherodev
I need to patch QT later

1591050134
pixelherodev
So i can get OBS working in Wayland native

1591050135
leeward
pixelherodev: links?

1591050140
companion_cube
elinks or w3m must work :p

1591050141
pixelherodev
leeward: yeah just a sec

1591050147
pixelherodev
companion_cube: yeah, but not for pasting a file

1591050149
leeward
heh, I meant links the browser

1591050154
pixelherodev
lol

1591050156
pixelherodev
w3m for me

1591050162
pixelherodev
Not too familiar with it

1591050167
pixelherodev
but it used to be my daily driver lol

1591050169
ifreund
why do you need a browser to paste a file?

1591050175
pixelherodev
I had a 2003 pentium which...

1591050177
ifreund
just curl into your patsebin

1591050178
pixelherodev
well

1591050180
pixelherodev
nuff said

1591050182
pixelherodev
ifreund: good point

1591050184
pixelherodev
except

1591050190
pixelherodev
I don't remember the API :P

1591050194
pixelherodev
and it's easier to just chroot

1591050226
ifreund
then curl

1591050234
pixelherodev


1591050265
pixelherodev
That's the exact output of `curl localhost:8080/example` from a few minutes ago :)

1591050285
pixelherodev
Source is

1591050575
dimenus
did anyone order a pinebook pro?

1591050604
pixelherodev
I was going to, but they ran out of stock :(

1591050608
pixelherodev
Well

1591050613
pixelherodev
First, the bank thought it was fraud

1591050617
dimenus
hah

1591050620
pixelherodev
Then once that was taken care of, they were out of stock

1591050623
pixelherodev
Yeah

1591050647
pixelherodev
Downside of working outside: I may have just swallowed a bug. Ew.

1591050671
leeward
You've been outside in the past 3 months?

1591050698
pixelherodev
I'm outside right now

1591050704
pixelherodev
Back "yard"

1591050718
leeward
😱

1591050770
pixelherodev
there's a nice table

1591050778
pixelherodev
it's a nice day

1591050779
leeward
No teargas?

1591050781
pixelherodev
only downside are the bugs

1591050789
pixelherodev
Not here, no

1591050802
pixelherodev
By which I mean this street

1591050810
pixelherodev
Not too sure about the surrounding area

1591050818
pixelherodev
I'm more concerned with the bug

1591050821
leeward
The police spent about an hour last night announcing that they were going to deploy gas if people didn't disperse.

1591050828
leeward
Bugs are high in protein. It's good for you.

1591050832
pixelherodev
I think it's trying to get out now

1591050857
pixelherodev
I'm not in an area where that's an issue, thankfully

1591050860
pixelherodev
Off by a few miles

1591050875
pixelherodev
I'm the good ol' toxic waste dump capital

1591050879
pixelherodev
in the*

1591050887
leeward
Garden state?

1591050910
pixelherodev
NJ

1591050913
pixelherodev
So

1591050916
pixelherodev
I think so?

1591050921
pixelherodev
yeah

1591050924
pixelherodev
i remember now

1591050928
pixelherodev
but only because I found the term amusing

1591050938
fengb
the armpit of America?

1591050944
pixelherodev
There we go

1591050945
leeward
I thought that was PA.

1591050961
pixelherodev
Do

1591050963
pixelherodev
;)

1591050975
leeward
I mean, RI is clearly an armpit. The cape is flexing.

1591050980
fengb


1591050981
companion_cube
here we have a proper curfew :s

1591051004
leeward
fengb: I stand corrected.

1591051019
pixelherodev
ouch

1591051082
fengb
Chicago actually needs more police. The gangs are defending neighborhood stores now :(

1591051119
leeward
That is simultaneously awesome and terrible.

1591051143
fengb
They were working with the police

1591051158
fengb
It’s all kinds of bad

1591051160
pixelherodev
That's...

1591051163
pixelherodev
wow

1591051165
pixelherodev
fuck 2020.

1591051169
pixelherodev
just sayin'

1591051206
leeward
Sounds like a heartwarming tale about things that never should have happened to me.

1591051245
pixelherodev
Anywho

1591051248
pixelherodev
stage2 awaits

1591051252
pixelherodev
pun intended

1591051491
alehander92
fengb are you in Chicago?

1591051506
fengb
Yep

1591051531
alehander92
is it really that bad

1591051594
alehander92
i am sorry if this is insensitive, just that i've only seen some random videos online and thought it's just something like the ferguson events

1591051611
fengb
Some neighborhoods are yeah. My area is comparatively more quiet but the stores got hit

1591051640
dimenus
we had protests 2 blocks from my house (mayor livs around the corner), but they AFAIK peaceful

1591051641
fengb
Most of the business districts are mass chaos. Downtown is trashed

1591051650
dimenus
*lives

1591051688
alehander92
bizarre: i can't really imagine this here

1591051689
dimenus
yeah, many big cities are a mess right now

1591051691
fengb
There was a gunfight around the block from my coworker

1591051697
pixelherodev
side benefit of the new Gentoo-musl install: power consumption is apparently noticably down

1591051708
alehander92
i thought it's mostly like la riots 92 at the worst

1591051740
fengb
I wonder if it’s because of COVID. No jobs, sitting around, excuse to go rioting

1591051744
alehander92
i hope they stay peaceful, stay safe

1591051755
ifreund
pixelherodev: what were you running before?

1591051772
pixelherodev
Gentoo + glibc

1591051781
pixelherodev
I'm guessing it's the kernel upgrade though

1591051791
pixelherodev
I remember seeing something about a patch that improved power management

1591051799
ifreund
yeah, that would make more sense

1591051802
alehander92
yeah, and this is also a bit bizarre: at one point everyone was afraid of covid19, and suddenly people just gather everywhere

1591051807
dimenus
fengb: there's a ton of legitimate angst going on right now, but that's probably part of it. It also only takes a few people to turn a peaceful protest into a mob

1591051851
fengb
Yeah I know. It’s just hard for me to focus on the protests when there’s looting right outside my doors

1591051878
pixelherodev
I don't think it's that people aren't afraid of CoViD-19 anymore, and more that they're

1591051894
pixelherodev
People act irrationally when they're afraid

1591051901
fengb
And in general, Chicago police are terrible, but they’re much better than what’s going on

1591051967
dimenus
fengb: correction, Illinois is terrible :P

1591051971
fengb
And at least here, it wasn’t police incited unlike some other cities

1591051995
alehander92
i see

1591051999
rom1504
seeing this from France it's so weird. We have protests every year here and I used to think they were a bit violent, but compared to what's happening in the us, they would be considered as very peaceful. It's seems US is not used to protests so when they do, it has to be very violent.

1591052021
alehander92
i agree, those protest sound like the greek ones to me

1591052032
fengb
We just arrested a guy who’s being charged for terrorism. Apparently he’s incited some rioting in Minneapolis too

1591052034
dimenus
the US has a far more militarized police force than basically the entire first world

1591052039
fengb
Oh this isn’t normal...

1591052042
alehander92
i cant imagine the police letting things get to that point here (in bulgaria)

1591052048
alehander92
the army would be on the streets

1591052069
pixelherodev
The American concept of freedom is... werid

1591052071
pixelherodev
weird*

1591052078
fengb
We’ve deployed the National Guard. Our military doesn’t generally have jurisdiction on soil

1591052102
alehander92
interesting

1591052105
pixelherodev
s/doesn/isn't supposed to

1591052115
pixelherodev
s/doesn/doesn't

1591052115
fengb
Of course it doesn’t help that our police is militarized

1591052117
pixelherodev
:P

1591052140
fengb
Or maybe it does in this case? I’m not sure anymore

1591052143
alehander92
i hope some kind of peaceful movement similar to mlk's one arises

1591052150
leeward
Civilians also have much easier access to the kinds of weapons that only the military has in most other developed countries. It's an arms race.

1591052187
fengb
They were supposed to be peaceful -_-

1591052192
leeward
Many were.

1591052195
ifreund
i've been away from the US for a while (studying in germany) and I'm feeling more and more that america is totally insane

1591052211
dimenus
i think social media has turned out to be an awful experiment

1591052216
alehander92
ah, that explains your nick

1591052225
fengb
Chicago is pretty different :p

1591052238
ifreund
my nick? it's just my name lol

1591052239
alehander92
i have a friend in Chicago! good thing you reminded me of him

1591052240
ifreund
Isaac Freund

1591052242
fengb
Although usually the violence is pretty localized away from rich neighborhoods

1591052247
alehander92
ah ok :D

1591052250
ifreund
though may name is german :D

1591052285
alehander92
yeah, friendly isaac

1591052306
ifreund
exactly, i'll be everyone's friend

1591052330
fengb
Hi friend. You look nothing like what I had expected :P

1591052342
alehander92
yeah, and isaac means something like "will rejoice"

1591052345
alehander92
pretty cool

1591052364
ifreund
news to me

1591052401
ifreund
I mean i knew it was hebrew/biblical but never looked up the literal translation

1591052446
pixelherodev
I thought it was from the binding game thing?

1591052463
pixelherodev
Some friends are obsessed with that. I think

1591052467
pixelherodev
Were obsessed?

1591052468
ifreund
all the names in that game are biblical, didn't you play it?

1591052468
pixelherodev
Probably

1591052469
alehander92
yeah, iirc it was because the mother laughed when she realized she would have isaac :P

1591052475
pixelherodev
ifreund: nah

1591052501
ifreund
it has a very weird story

1591052513
ifreund
i only played it cause of the name lol

1591052612
pixelherodev
whoaaaa

1591052620
pixelherodev
I quantified the battery life differences

1591052621
pixelherodev
this is

1591052629
pixelherodev
something like 40% longer now

1591052641
pixelherodev
If my quick mental numbers are accurate, at least

1591052696
pixelherodev
Went from 3-4 hours to 5-6

1591052710
pixelherodev
So depending on the exact improvement... this is

1591052729
pixelherodev
I mean, apparently my bluetooth headphones use 2W, which lowers it right back to where it was

1591052732
pixelherodev
but aside from that :P

1591053020
pixelherodev
huh

1591053030
pixelherodev
yeah, it's basically

1591053034
pixelherodev
with the hadphones, i mean

1591053037
pixelherodev
that's sick

1591053479
dimenus
powertop always gives me an insane number

1591053486
dimenus
like way lower than i would expect

1591055005
pixelherodev
Is there any reason to not just hit "okay" to all of the powertop tunables and mark em good?

1591055027
shakesoda
nope

1591055037
shakesoda
i always just set it to auto tune everything

1591055082
pixelherodev
actually, there's one I'm going to tune manually

1591055084
shakesoda
it's never caused any meaningful issue

1591055087
pixelherodev
USB keyboard auto shutoff time

1591055090
shakesoda
or any at all that i can think about

1591055092
pixelherodev
Sliiightly too fast by default

1591055114
pixelherodev
which is annoying because i try typing

1591055131
pixelherodev
which is weird because it can instantly wake up afterwards

1591055878
pixelherodev
Whoaaa

1591055885
pixelherodev
I know I said it's awesome already

1591055888
pixelherodev
But it's

1591055907
pixelherodev
e.g. when I was streaming Project Tricarbon, battery left went so high it would be akin to ~80-90 minutes at full

1591055914
pixelherodev
s/left/usage

1591055922
pixelherodev
Now, the same workload leaves me with nearly three hours

1591055925
pixelherodev
:D

1591055952
pixelherodev
three hours *at ~75%`

