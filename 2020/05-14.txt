1589422162
andrewrk
stage1 is jealous of self-hosted:

1589422172
andrewrk
don't be jealous, stage1. you've had your time to shine

1589422202
fengb
LLVM errors always look so scary

1589422276
andrewrk
this is what I get for writing...

1589422681
andrewrk
hmm seems to be a bug with breaking out of a block with defers in scope

1589422914
andrewrk
alright, after 10 hours of looking at compile errors I have something built. now on to the debugging phase!

1589422930
foobles
im scared because i started messsing with basic blocks and now im getting "assertion failed" with no other info ;D

1589422942
foobles
comptime works like a charm tho!

1589429842
marler8997
what's the simplest cpu arch that zig can compile to?

1589429963
daurnimator
simplest in terms of?

1589429990
pmwhite
can we compile to a mano machine?

1589430007
daurnimator
instruction set? implementation effort?

1589430052
marler8997
smallest instruction set

1589430100
marler8997
don't see mano

1589430105
daurnimator
subleq? :)

1589430123
marler8997
don't see subleq either

1589430126
daurnimator
(

1589430240
marler8997
lol, reminds me of a youtube video I saw a few years ago of a guy who implemented a full-compiler that only generated MOV instructions

1589430259
daurnimator
the trick with that is there MOV on x86 has a lot of different forms

1589430278
daurnimator
marler8997: riscv32 is at least easily synthesizable

1589430305
marler8997
yeah, and I remember it couldn't mov into the PC, so he had to run the entire program in a disabled mode to jump backwards...lol

1589432050
marler8997
is there a way to disable zigs panic handler?

1589433180
daurnimator
provide your own in main?

1589433187
daurnimator
s/main/root/

1589433229
marler8997
what do you mean provide my own root?

1589433348
daurnimator
in your root file module, provide a panic function

1589433367
daurnimator
your root module is the one you pass to zig

1589433371
marler8997
gotcha

1589433384
daurnimator
(available with `@import("root")`)

1589433609
marler8997
last thing in my binary is std.target.Arch.isWasm

1589436071
daurnimator
yeah that tends to hang around :P

1589436090
daurnimator


1589441552
hermier
Hi, I'm trying to compile zig on my distro and it fails to "CommandLine Error: Option 'mc-relax-all' registered more than once!"

1589441618
hermier
Due to distro, I have to use: -DZIG_PREFER_CLANG_CPP_DYLIB=Yes -DZIG_STATIC_LLVM=True if that has some importance

1589441836
hermier
I also have a

1589442229
ifreund[m]
hermier: what distro? when I updated the package for void i was getting the same error, but disabling `-DZIG_PREFER_CLANG_CPP_DYLIB=Yes` fixed it

1589442248
hermier
frugalware

1589442298
hermier
infortunatly I can't disable that, because I only have libLLVM.so or all the *.a

1589442437
ifreund[m]
so you're probably running into the same fiasco that is messing up the homebrew package for mac users

1589442453
ifreund[m]
might want to read through this issue and the threads it links to

1589442469
ifreund[m]
i definitely remember seeing that error mentioned somewhere in there

1589442567
hermier
thank you, it didn't showed when I tried to google the issue

1589450257
cren
Hello. I'm trying to make an array of multi-line strings. Why isn't it working? Here is the literal:

1589450275
cren
I'm getting ./main.zig:12:5: error: expected token ';', found ','

1589450287
cren
(that's the first comma in the array)

1589450390
ikskuh
cren: string literals are not arrays anymore

1589450396
ikskuh
they are pointer-to-arrays

1589450424
cren
so it's the type of the array that's wrong?

1589450510
ikskuh
there's also a semicolon missing at the end

1589450517
ikskuh
but it's a syntax error

1589450520
alexnask
Well the type is wrong too but the `= {` is the issue

1589450541
ikskuh
oh yeah

1589450548
ikskuh
that'S a code block, not an array literal

1589450549
alexnask
`const hangman_pics = [_][]const u8 {` is what you want

1589450565
alexnask
Or &[_][]const u8 if you only need a slice

1589450605
cren
oh yeah

1589450627
alexnask
In the future `.{` will work there too but it is a compiler todo atm

1589450730
cren
why is the syntax different for an array compared to that for a normal type? I think of arrays as being just a special case of type with a more complex literal syntax

1589450755
ikskuh
they aren't

1589450770
ikskuh
the syntax for type construction in zig is 100% equivalent for all types:

1589450772
ikskuh
T { }

1589450780
ikskuh
for arrays, T is an array type

1589450782
ikskuh
[3]T { }

1589450793
ikskuh
for structs, you use your struct type: Point { }

1589450796
ikskuh
and so on

1589450867
cren
ah so the []u8 in an array of u8 is part of the construction and not the type declaration

1589450895
alexnask
Yes it is part of the array literal

1589451090
cren
what is the difference between [] and [_] when you construct an array

1589451234
alexnask
[] is invalid, you need  to specify the size with [N], [_] just means the size is inferred from the initialization list

1589454784
ikskuh


1589454789
ikskuh
Names that begin with either ‘is’ or ‘to’ followed by a lowercase letter may be used for additional character testing and conversion functions. See Character Handling.

1589454790
ikskuh
the heck?!

1589454804
ikskuh
total() and tolerance() are reserved names

1589454808
ikskuh
in C

1589454915
Amun_Ra
how to assing to x in: for foo |x| { …; } I can't seem to find it

1589454926
daurnimator
Amun_Ra: you can't. its const

1589454940
Amun_Ra
uhm, thanks

1589454944
daurnimator
Amun_Ra: `for (foo) |*x|` might be what you want?

1589455057
Amun_Ra
that's it, thanks

1589455234
hermier
ifreund[m]: fixed the issue, I need to understand the situation now

1589456031
ifreund
hermier: nice!

1589456062
ifreund
i don't really understand it either tbh, i just tried some things and it turns out that the simplest option worked for void

1589456192
hermier
ifreund: I think the issue lies down to the fact that the embded Find*.cmake are broken, by producing incomplete *_LIBRARIES

1589456383
hermier
ifreund: Do you know why the official llvm/clang ones are not used ?

1589456499
ifreund
hermier: i believe andrewrk implemented it but it was reverted due to breaking the bootstrapping build from source

1589456587
ifreund
there was also this attempt to rework things but it also had issues

1589456908
hermier
ifreund: My issue was related to the fact that I missed the clang package dev/static libraries. It resulted in an invalid combo at compiletime resulting in alink issue detected at compiletime

1589461108
cren
Hello. I'm learning Zig. Can I make an array of strings of different lengths?

1589461175
ifreund
cren: what you want is an array of pointers to the strings

1589461185
ikskuh
you can use slices for this

1589461187
ifreund
objects in an array must all have the same size

1589461218
cren
ah I see. Sorry if the answers to my questions seem obvious, I'm coming from Python so I'm not used to a language with so many limitations :p

1589461222
ikskuh
a slice is pretty much an array with variable size (and you need a memory for backing the storage)

1589461232
ikskuh
cren: strings in zig are also only slices/arrays

1589461234
ikskuh
so

1589461236
afontain_
you can do like in C where there is a `**char`. [3][:0]char = { "hi", "hello", "goodbye" }

1589461246
ikskuh
"a" is a pointer to an array of 1 element + NUL-terminator

1589461335
afontain_
in my example, it works because the strings are null-terminated. With slices, it works because the size is stored in each element.

1589461346
afontain_
that's two ways of doing that

1589461569
ifreund
to explain why all objects in an array must be of the same size, an "array" is really just a pointer to a block of memory containing evenly spaced elements

1589461591
cren
That makes sense

1589461593
ifreund
to access an element of the array, you just add the index of the element to your pointer

1589461614
cren
Yes, I was reading The C Programming Language and C pointers/arrays seem to work the same

1589461624
ifreund
so if the items weren't all the same size it wouldn't work at all :P

1589461643
ifreund
yeah all real arrays work the same way in the end

1589461683
ifreund
afaik python wraps literally every object in a ref-counted heap-allocated thing

1589461718
ifreund
and so a python lists are actually lists of pointers as well

1589461755
afontain_
but if the elements of the array are pointers, and you know you can keep reading until you find a 0, or a pointer + a size, and you know you should keep reading for this size; it works!

1589461758
ifreund
but it abstracts it all away so you don't have to worry about the details, for which you then pay a hefty performance penalty

1589461845
cren
I'm trying to change the array of arrays to an array of slices, but I can't figure out what the syntax is for a slice

1589461851
cren
(type of a slice I mean)

1589461859
ifreund
[]u8

1589461873
ifreund
or probably []const u8 in your case

1589461934
cren
so for an array of strings, `[_][]const u8` to infer the length of the array?

1589461944
ikskuh
yep

1589461988
cren
compiler is complaining about that. "Expected type `[]const []u8`, found `[14][]const u8`

1589462002
ifreund
try &[_][]const u8

1589462016
ifreund
or wait no, that won't work

1589462023
ifreund
you need to mutate these strings?

1589462028
cren
no

1589462052
ifreund
eh, well try what i put then it'll probably work

1589462077
ifreund
the & will take the address of the array which coerces into the slice the compiler wants

1589462108
cren
It doesn't :p  : "Expected type []const []u8`, found `*const [14][]const u8`

1589462123
cren
`[]const []u8`, found `*const [14][]const u8`

1589462129
cren
I mean

1589462153
ifreund
yeah, so the problem is that []const u8 cant coerce into []u8

1589462168
ifreund
maybe you could paste the code somewher?

1589462209
cren


1589462222
cren
Here it is, but there's nothing surprising about it

1589462313
ifreund
cren: what are you doing with `words`?

1589462354
cren
It gets referenced in a test right afterwards. I'm trying to pull a word out at random

1589462363
cren
That's what the test tries to do

1589462396
ifreund
hmm, it seems like the compiler thinks whatever you are doing with it requires the []u8's to be mutable

1589462409
cren
I've just commented the test

1589462499
cren
- You're right, it is what I'm doing with it because commenting the test and adding another test that just makes 1 assignment works

1589462593
cren
What I'm doing with it is passing it to a function

1589462614
ifreund
what's the signature of the function?

1589462638
cren
Here's the snippet

1589462713
ifreund
make it `word_list: []const []const u8`

1589462735
ifreund
it would also need to return a []const u8 then

1589462755
cren
l think my return type is wrong for the function anyway

1589462851
alexnask
This may be helpful:

1589462875
alexnask
(except for that weird `^T` syntax they used for the graphic :D)

1589462941
cren
For the words array, it's still complaining: "expected type `*const []u8`, found `*const [3:0] u8`

1589462951
ifreund
cren: here

1589462974
afontain_
you could replace [] with [:0] in you declaration

1589463019
cren
afontain_: that just gives the same for "found" while changing "expected type"

1589463028
cren
oh

1589463031
ifreund
or actually, I think this is a little nicer

1589463033
cren
this might be relevant

1589463083
afontain_
cren: right

1589463106
cren
ignore that last

1589463113
fengb
I’m starting to think const can be better placed. Translating from array pointer to slice looks like `*const [N]T` => `[]const T`

1589463115
cren
it's working now with ifreund's second example

1589463127
cren
at least the array declaration is

1589463139
fengb
Feels super weird that they look so different

1589463145
ifreund
you can also use null terminated pointers everywher, or mix and match

1589463166
cren
when I put `[]const T`, what's const? Is it the T or the []?

1589463174
ifreund
the T

1589463197
ifreund
const a: []T,

1589463202
ifreund
then the [] is const

1589463202
cren
oh right because const or var of the array is the first thing you write on the line anyway xD

1589463213
fengb
Think of it as “slice of const T”

1589463223
ifreund
yeah no reading in loops like in C

1589463247
cren
what do you mean by that?

1589463258
ifreund


1589463264
fengb
It feels weird at first but it’s a lot less ambiguous than “const slice”

1589463336
cren
Do you ever actually get to the point of writing ^^ that kind of gibberish with C? (I mean does it come up under real life constraints)

1589463356
fengb
Yes it comes up all the time with function pointers

1589463365
ifreund
yes

1589463390
fengb
Without typedefs, any function pointer declaration start to look like gibberish

1589463422
ifreund
it's also dumb that `const thing *` and `thing const*` are the same

1589463427
ifreund
like just pick one C

1589463458
fengb
const thing const*const

1589463475
cren
pretty const my dude

1589463482
ifreund
right pick one or both if you want it do be double const

1589463494
ifreund
thing *const is different though of course :P

1589463634
cren
Can you coerce an array to a slice?

1589463653
ifreund
only a pointer to an array

1589463660
ifreund
and the constness must match of course

1589463924
cren
so a slice is more like a pointer than an array?

1589464069
ifreund
a slice is a pointer + a length yeah

1589464097
ifreund
while an array is a block of memory

1589464308
alexnask
west const best const

1589464379
ifreund
i wonder how much code uses double const

1589464405
ifreund
const int const *help;

1589464412
ifreund
it just looks so wrong

1589464439
alexnask
Yeah C makes it so awkward to actually const what you want to const

1589464650
fengb


1589464669
fengb
I didn’t realize the spiral also pertained to const

1589464812
cren
Does Zig copy values when you pass them to a function, like C?

1589464848
ikskuh
cren: that is unspecified

1589464853
alexnask
Arguments are all const, so the compiler decides what to do

1589464856
ikskuh
zig allows the const-pointer optimization

1589464861
fengb
Zig decides how the best way to pass args. Sometimes it’s by value and sometimes it’s by const reference

1589464868
cren
what's the const-pointer optimisation?

1589464870
ikskuh
when it's more efficient to allow passing a const pointer, the compiler may do this

1589464878
cren
okay

1589464901
fengb
It’s undefined behavior to rely on the address of an argument

1589464904
alexnask
You only need to explicitly pass by pointer when you want to modify the input

1589464929
ifreund
or compare by pointer

1589464936
fengb
It means Zig is choosing the fastest way to pass the data around

1589464946
alexnask
gotta go fast

1589465232
cren
I saw ifreund use syntax for string formatting (like printf stuff) in an example a minute ago but I have since closed that tab, can someone put the syntax up

1589465264
ifreund
cren: std.debug.warn("{}", .{mything});

1589465272
cren
thanks

1589465528
cren
Okay here's a question. Can I add new characters to the end of a string if the string is mutable?

1589465541
ikskuh
no, not directly

1589465550
ikskuh
you have to track the memory of the string

1589465558
ikskuh
if you allocated it yourself, you can use std.mem.concat

1589465570
ikskuh
that allows you to allocate a "sum" of two or more slices

1589465599
cren
Is there a better way to make a string that is the same character repeated `n` times where `n` is known only at runtime?

1589465626
ifreund
you can allocate an array of size `n` and memset it

1589465868
cren
okay that looks hard so I'm gonna take a break now. Thanks for all your help everyone

1589466124
andrewrk
cren, maybe look into using std.ArrayList

1589466398
ifreund
yes, an ArrayList(u8) is probably closer to the resizeable python strings you're used to

1589466611
cren
I'm practising Zig by translating a Python program into Zig, so it doesn't translate terribly well.

1589466646
ifreund
though the allocation + memset isn't that scary `const n_times_a = try myalloc.create([n]u8); std.mem.set(u8, n_times_a, 'a');`

1589467507
andrewrk
ifreund, probably would be myalloc.alloc(u8, n)

1589467515
andrewrk
if your n is runtime known

1589467531
andrewrk
if it is comptime known you could do [1]u8{'a'} ** n

1589467587
ifreund
andrewrk: that makes sense, the length of the array is definitely part of the type

1589467604
ifreund
i did try this out by my n was implicitly comptime

1589468274
fraktor
Is there a way I can compare two enums to see which one is greater, like in C?

1589468300
fraktor
I tried `const Enum = enum(u8) { ... }` but that did not work.

1589468346
ifreund
fraktor: you need to specify the tag type iirc

1589468366
fraktor
With a @TagType call?

1589468373
ifreund
const MyEnum = enum(u8) { .One, .Two, .Three };

1589468412
fraktor
Right, I tried that but it still rejected that.

1589468534
andrewrk
fraktor,

1589473012
cren
Is there an example of how to use ArrayList?

1589473055
ikskuh
look in the tests in arraylist.zig

1589473820
cren
Also, is there any documentation about getting user input (from the command line)?

1589473946
alexnask
std.io.getStdIn() returns the stdin File

1589473970
alexnask
You can get the .inStream() and work with it like any other inStream or use the read* functions on File

1589474137
cren
got it

1589477280
ikskuh
huh

1589477288
ikskuh
it looks like getentropy isn't in libc?

1589478216
andrewrk
hmm. does it matter whether function machine code is aligned?

1589478231
andrewrk
I doubt it

1589478261
kristoff_it
Hi all, I've created a Zig meetup CfS as a google form. I believe there's a lot of people that have something interesting to share so please take a look, let me know if you have any feedback, but most importantly, apply!

1589478297
andrewrk
exciting!

1589478307
andrewrk
I'm looking forward to this :)

1589478331
andrewrk
It's looking like I'm going to be at a point in a few hours where I can do a live stream and I'll be sure to promote this

1589478393
fengb
🎉

1589478712
kristoff_it
nice, let us know at what time you're going live, so I can raid you if I'm still online.

1589478913
dimenus
andrewrk: I just got here but it might depending on the platform. eg I have a weird bug with alignment on aarch64 that goes away if I inline all of the calls

1589478962
dimenus
this with qemu emulating a raspi3

1589479027
FireFox317
dimenus, did you install expection handlers? So you can see if an alignment exception is actually generated. Aarch64 is really strict about alignment

1589479105
foobles
does anyone who knows how 2nd-pass IR is validated take a look at my PR? It's generating basic blocks that apparently cause assertion errors. I think it has to to with me not properly communicating that they are not supposed to correspond to matching IrInstSrc instructions

1589479112
foobles
since they are just generated during the 2nd apss

1589479116
foobles
s/apss/pass

1589479121
dimenus
Firefox317: no not yet. excellent point though

1589479157
FireFox317
dimenus, also did you properly setup the target using zig cpu features? that might also make a difference

1589479180
foobles


1589479254
ifreund
hmm, would people find a presentation on writing a wayland compositor in zig interesting? maybe I should try and put something together

1589479275
ifreund
not really sure if i'd have enough to fill 30min or not

1589479276
fengb
I’d love to hear it

1589479361
andrewrk
it sounds interesting to me. also the form says 20-30min

1589479369
dimenus
FireFox317:

1589479409
dimenus
Just targeting a cortex_a53 right now, no specific features

1589479410
ifreund
been thinking about doing my first actual blog post on it too after reading about people trying to write them in rust

1589479411
andrewrk
kristoff_it, what do you think about lowering the minimum even more? 10-30min, so that way it feels less like a big pressure to do a whole thing

1589479438
andrewrk
short presentations can be quite enjoyable as well

1589479486
FireFox317
dimenus, looks good! It might help to enable the cpu feature "strict_align", i think that forces llvm to have everything properly aligned. Might not be optimal for performance tho

1589479512
ifreund
i could definitely fill a 15 minute slot, not really sure how much I have to say tbh

1589479559
dimenus
FireFox317: it only happens with the flat binary, not the elf file - but good to know

1589479606
kristoff_it
andrewrk: I'm fine with lowering the time limit, although in my experience 10min talks are harder than 20min talks, but from an organizational point of view, I have zero issues with either

1589479634
FireFox317
dimenus, that is a good hint. In a elf file everything (code, data) is page aligned, and when you ask a flat binary it is all smashed together so alignment might be wrong indeed

1589479635
fengb
ifreund: rant about how bad X11 is 🙃

1589479681
ifreund
fengb: my experiance with X11 programming is literally starting to read the docs, then going "oh, may i should switch from i3 to sway and see if wayland is nicer"

1589479691
ifreund
turns out working with wayland is a lot of fun

1589479695
kristoff_it
ifreund: I have no idea what a wayland compositor is, so you already have 1 person interested in your talk :) if it ends up being 10 mins long it's perfectly fine!

1589479735
fengb
Sounds like my experience with Rust :P

1589479755
ifreund
kristoff_it: alright, yeah if i'm giving a brief intro to wayland as well i can do 30 minutes, and it sounds like i should do that :D

1589479842
dimenus
i would highly recommend Drew Devault's wayland book as well, he changed the license recently.

1589479857
dimenus


1589479896
companion_cube
just avoid his rants

1589480035
fengb
Ah neat

1589480089
ifreund
yeah drew's book is pretty good, as are the docs on the freedesktop site

1589480099
ifreund


1589480551
pmwhite
companion_cube: i kinda like his rants

1589480591
companion_cube
yeah, they're entertaining

1589481612
ifreund
kristoff_it: submitted the form, do you have a sense of when this is going to happen yet?

1589481653
kristoff_it
Let's say teantively next month. My plan is to get a few submissions and then work with the speakers to find a date that works for them

1589481707
ifreund
cool, sounds good to me

1589481735
ifreund
i wonder how much I can mature my project in another month

1589481867
fengb
Times are not great :(

1589481945
ikskuh
damn you, global communities!

1589482193
fengb
We need to be on galactic standard time

1589482225
ikskuh
UTC is enough

1589482377
fengb
Is it really universal though?

1589482391
fengb
Should be called global instead 🤔

1589485476
dimenus
has anyone done any xml parsing in Zig?

1589485602
fengb
Have you tried regex? 🙃

1589485676
dimenus
negative, haven't tried anything yet

1589485686
companion_cube
bind to a C library? :p

1589485711
dimenus
yeah, i spose reinventing the wheel in xml parsing isn't a good idea when libxml exists :P

1589485724
fengb
RIIZ

1589485735
dimenus
i started out wanting to build a wayland vnc client in zig, and then i decided i wanted to parse wayland's xml files myself instead of relying on wayland-client

1589486346
ifreund
i think tdeo may have

1589486760
andrewrk
anyone want to play around with readelf/objdump and figure out why this small ELF binary is giving EINVAL when I try to execve it?

1589486852
andrewrk


1589487462
tdeo
i have a working parser for wayland.xml, yeah

1589487487
tdeo
i'll just make my zwl repo public even though it's not close to working yet

1589487595
ifreund
yay!

1589487609
tdeo
ifreund, dimenus:

1589487741
tdeo
i know the xml parser is bad, but it works and it's small :)

1589487775
fengb
No license. It's a secret to everybody

1589487798
tdeo
ah, i'll add one

1589487832
fengb


1589488018
ikskuh
i feel fooled. the field with the ninja emoji in it is … empty

1589488025
ikskuh
but: ninjas are invisible … so it might be there

1589488065
alexnask
Wait, there are emoji modifiers? TIL

1589488157
companion_cube
even "é" can be a composite unicode char, so yeah

1589488196
fengb
Only emojis: where I can be a black man with blonde hair 👱🏿, but I still can't be asian

1589488201
alexnask
Sure, I know about the diacretics/composites, just didnt expect it to be the case in emoji

1589488205
alexnask
idk why

1589488268
ikskuh
it's quite ingenious to use ligatures for combining such features :D

1589488274
ikskuh
if it's ligatures :D

1589488295
ikskuh
but yeah, you can merge multiple people into a family :D

1589488300
alexnask
lol

1589488306
ikskuh
and with backspace, you delete persons from the family 😱

1589488314
ikskuh
👩‍👩‍👧‍👧

1589488350
companion_cube
it's below the level of ligatures, afaik

1589488355
companion_cube
you combine codepoints to make a grapheme

1589488474
andrewrk
ok I'm for sure going to be able to stream today

1589488602
andrewrk
18:00 my time zone. that's in 1.5 hours from now

1589488700
alexnask
🎉

1589488717
oats
alexnask: you're in NYC, right?

1589488722
oats
er, *andrewrk

1589488730
andrewrk
both of us are I believe

1589488735
oats
heh, ok then

1589488737
alexnask
nah :P

1589488739
companion_cube
ah, the move to CA was delayed because of covid?

1589488740
oats
andrewrk: looking forward to it!

1589488815
ikskuh
andrewrk, i'm so getting no sleep tonight :D

1589488825
alexnask
EU life

1589488832
andrewrk
alee didn't get into santa cruz :( so another year in NYC it is

1589488842
oats
time zone buddies \e/

1589488851
andrewrk
I used to say "EST" but then I realized that the time zone doesn't stay constant for daylight savings. the

1589488867
oats
yeah, we're in "EDT" :P

1589488878
andrewrk
but you can't say EDT either. one day you will be wrong

1589488898
andrewrk
I suppose I could say NYC time zone

1589488902
alexnask
^

1589488906
ikskuh
andrewrk, just announce times in UTC

1589488906
oats
could just do UTC :P

1589488911
oats
let everybody else figure it out

1589488917
alexnask
Hah europeans mad /s

1589488918
andrewrk
that's not rigth either though

1589488919
ikskuh
let

1589488932
andrewrk
because your local municipality can change its time zone and then your UTC date is wrong

1589488943
ifreund
man i've been building up stream hype for 3 days now :P

1589488951
companion_cube
that sounds amazing

1589488952
andrewrk
the truest way to tell someone a time is with a tuple (geographical_location, local_time)

1589488961
kristoff_it
I think you can say ET to be daylight-savings-agnostic

1589488964
companion_cube
just imagine a local city of 20k habitants, with its own timezone

1589488971
oats
andrewrk: start a campaign for timekeeping reform and I will happily jump on the bandwagon :P

1589488986
alexnask
Yes, we just need a new standard

1589488998
companion_cube
or a bot with a counter

1589489001
companion_cube
"stream in 1.5h"

1589489009
companion_cube
durations are sometimes easier than datetime

1589489024
andrewrk
I also decided to play my new favorite game in the ~10 min while waiting for ppl to join

1589489032
andrewrk
"Getting Over It with Bennett Foddy"

1589489180
ikskuh
alexnask: i still wonder about europe removing DST

1589489263
alexnask
Im generally favorable to it but I havent really given it much thought :P

1589489348
ikskuh
yeah

1589489354
ikskuh
it will break a lot of embedded devices though :D

1589489671
fengb
UTC would be correct if you're talking about "instant in time", but not necessarily about future scheduled times

1589489697
fengb
So if it's an hour away, broadcast in UTC :P

1589489925
sjm
how come this code compiles on linux but not on windows?

1589489931
andrewrk
fengb makes a good point

1589489950
sjm
on windows i get ".\main.zig:13:56: error: expected type '*[98302]u8', found '*[260]u8'"

1589489964
redj
:(

1589490224
sjm
my guess is that certain stdlib functions expect the path to be a certain length that's incompatible with PATH_MAX but i'm a noob so it's probably just that i'm missing something

1589490310
ikskuh
use std.fs.MAX_PATH_BYTES instead of PATH_MAX

1589490312
andrewrk
sjm, maybe this helps explain a little bit:

1589490346
sjm
andrewrk: thanks

1589490369
andrewrk
sjm, there is also fs.realpathAlloc which might be easier to use

1589490392
andrewrk
also consider that you might be able to get away with using dir fds rather than realpath, which could have nicer semantics

1589490618
ikskuh
btw, i successfully hooked up Zig and BearSSL to connect a TLS1.2 socket stream :)

1589490731
andrewrk
nice

1589490767
sjm
andrewrk: which function(s) would i use to do that?

1589490820
andrewrk
sjm, everything in std.fs.Dir

1589490835
andrewrk
so you'd start with std.fs.cwd() and then go from there

1589490868
andrewrk
I'm not sure what your use case is for realpath, maybe this is not helpful advice

1589491025
sjm
andrewrk: it's all good. i'm just messing around experimenting trying to wrap my head around the language. doesn't help that i've probably forgotten most of the system programming stuff i'd learned while teaching myself c years ago.

1589491174
FireFox317
andrewrk, in the binary you send i see twice the program header LOAD, where one has flags rx and the other only has the r flag. Is that correct?

1589491196
andrewrk
FireFox317, I got the problem worked out - it was the .got section not having an aligned file offset

1589491222
FireFox317
Ah nice! Looking forward seeing you demo this on stream :D

1589492853
fengb


1589493397
foobles
oh crud did  i just miss the stream

1589493403
foobles
or has it not happened yet?

1589493413
kristoff_it
starts in 3m

1589493421
foobles
whoo! ok thanks

1589493425
foobles
that was close

