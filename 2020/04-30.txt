1588205296
pixelherodev
What's the libc target for windows/

1588205297
pixelherodev
?

1588205319
pixelherodev
For cross-compilation

1588205344
pixelherodev
Is there no supported one?

1588207346
foobles
how do a turn an LLVMValueRef representing an instance of some type T into an LLVMValueRef representing a pointer to T?

1588207358
foobles
I also have it as an IrInstGen

1588207363
foobles
do I just use result_loc?

1588207369
foobles
do I have to store it first?

1588214417
Cadey
i wonder how far the TCP chat server example is from being an IRC server

1588215277
foobles
anyone here available to talk about generating LLVM IR? I am trying to unwrap an optional, which requires a pointer to the optional object, to do LLVMBuildGEP

1588215281
foobles
im not sure how to accomplish that

1588215355
foobles
also there are some strange things i'm seeing, like handle_is_ptr

1588215461
foobles
what does that actually check, when called on an optional type?

1588220001
andrewrk
pixelherodev, x86_64-windows-gnu or i386-windows-gnu

1588220307
andrewrk
foobles, have you seen this resource yet?

1588220348
foobles
......no

1588220351
foobles
thanks xD

1588220371
foobles
because most of this is not zig-specific righ?

1588220425
andrewrk
this describes LLVM IR. so there is a corresponding LLVMBuildFoo function for every instruction listed here

1588220465
foobles
awesome

1588220466
foobles
cool!

1588220468
andrewrk
the direct answer to your question is yes, none of this is zig specific

1588220504
foobles
i was just a bit surprised when I saw that ir_render_ref did a store to the result_loc

1588220535
foobles
also some of the zig helper functions seem to handle special cases that i dont understand, but Ill just try my best :v

1588220541
foobles
thanks :thumbsup:

1588227078
pixelherodev
Thanks!

1588242176
alexnask
andrewrk, Are there any plans to change the way generic functions are type erased in stage2?

1588242216
alexnask
More specifically, currently every arg after the first generic arg (+ the return type) are erased, I believe it would be more convenient for metaprogramming code to only erase generic args (and the return type if it depends on them)

1588242238
alexnask
Sorry if I've missed some issue or discussion on this, I looked at the issue tracker but can't find anything relevant

1588242332
mikdusan
fn(type,var,var) var

1588242518
mikdusan
and maybe require `comptime` keyword for each comptime arg

1588242533
ikskuh
mikdusan: i don't think that was alexnask' point

1588242555
mikdusan
which part? the comptime?

1588242557
alexnask
By 'erased' I am talking about the type turning to 'var'

1588242563
ikskuh
two functions:fn(size: usize, comptime T: type)

1588242566
ikskuh
and

1588242571
ikskuh
fn(comptime T: type, size: usize)

1588242588
ikskuh
second one has signature fn(type,var), first one has fn(usize,type)

1588242661
mikdusan
ikskuh: all I'm saying is (probably because of) type erasure, `fn(comptime T0: type, T1: type)` is allowed today. there's a smell to that.

1588242709
alexnask
Wait, this actually compiles? I thought ccomptime only types needed to be comptime to appear as arguments

1588242736
mikdusan
2nd, 3rd,.... comptime keyword not required afaik

1588242750
alexnask
Right, it could be that the check happens after they are erased?

1588242757
alexnask
I should look into the funcdecl code in detail

1588242803
mikdusan
right, so this is particularily odd to me... `fn(one: bool, comptime T0: type, T1: type)`

1588243255
marijnfs
Is it feasible now to add external cpp libraries by source, like you might a c library in Zig?

1588243260
marijnfs
since zig can do c++ now right?

1588243550
mikdusan
marijnfs: there were some recent successes with that but couple of caveats; it's fairly new and since this is c++ we are talking about, any other native dep (recursively) using c++ must also be built with zig

1588243626
ikskuh
marijnfs: my experience is that you have to add all deps then

1588243633
ikskuh
but it's worth it for crosscompilation :)

1588243671
tdeo
if i have a ZigTypeIdPointer pointing to a single element, i can use ir_read_const_ptr to read the value from it. but what if i have one to multiple items (from a slice)?

1588243943
tdeo
oh, maybe i can change ConstPtrValue.data.base_array.elem_index?

1588243979
mikdusan
slices are repr as structs with 2 fields. [slice_ptr_index] [slice_len_index]

1588244050
tdeo
yeah i have that part already, but i'm struggling with using the ptr value from it

1588244479
mikdusan
maybe this will help: inside ir_analyze_ptr_cast() look for `// For slices, follow the `ptr` field` and how it sets up ir_analyze_struct_field_ptr()

1588246255
marijnfs
mikdusan: ikskuh: I see, interesting

1588246294
marijnfs
I basically had this issue that I was linking from build.zig to libc++, but the library I linked to was probably built with another version and I got crazy crashes

1588246316
marijnfs
took ages to figure out, but I figure these issues would be relieved if I build the whole library in my project directly.

1588246331
marijnfs
Or stop blindly linking to libc++

1588248058
tdeo
can someone who knows the compiler review #5203 thanks

1588252833
FireFox317
yo, anyone in here knows a good single board computer (like raspberrypi) but that doesnt have a close source gpu/bootloader and has good documentation?

1588252999
FireFox317
i'm interested in low level stuff, but the raspberry pi is just so annoying to work with since broadcom -_-

1588253008
ikskuh
FireFox317: relatable

1588253015
ikskuh
but i would not use a SBC on PI level

1588253025
ikskuh
those SOCs are so large-scale that it's a pain to work with

1588253057
FireFox317
i mean there should be SOCs that have good documentation and stuff right?

1588253067
ikskuh
hah you wish

1588253069
ikskuh
there are SOCs

1588253072
ikskuh
but smaller ones

1588253087
ikskuh
as soon as you have a GPU on board, it's mostly "boots linux with blob"

1588253124
FireFox317
hmm yeah i see, so what with smaller socs you are more talking about stm32 stuff i think?

1588253145
ikskuh
yeah

1588253148
ikskuh
there was one board though

1588253154
ikskuh
ultra-high powered soc

1588253158
ikskuh
cost-level of stm32

1588253177
FireFox317
maybe rpi is the easiest then because there has been quite some research to the videocore and stuff

1588253188
ikskuh
yeah probably

1588253196
fengb
I've been thinking about getting a toy FPGA

1588253206
ikskuh
fengb: prepare for trouble

1588253211
ikskuh
"learn programming anew"

1588253212
fengb
Then you can deal with your own bootloader! :P

1588253220
ikskuh
also, reserve ~20GB of your disk then

1588253230
fengb
ikskuh: aren't you supposed to be pimping out your new CPU?

1588253230
dimenus
RPI also just recently released the actual datasheet for the rpi4

1588253237
BaroqueLarouche
Get a DE10 Nano so you can run MiSTer too

1588253238
ikskuh
and prepare for

1588253239
dimenus
the downside being QEMU doesn't really support the rpi4

1588253295
ikskuh
i have this board:

1588253305
FireFox317
yeah i'm also thinking about getting a fpga maybe, there are some nice xilinx socs that have an arm and an fpga in a single package.

1588253308
ikskuh
it's quite cool and the altera/intel toolchain is okayish

1588253315
FireFox317
However yeah tooling is so annoying

1588253319
ikskuh
yep

1588253343
ikskuh
<fengb> ikskuh: aren't you supposed to be pimping out your new CPU?

1588253344
FireFox317
I like how there are more people working on open source fpga tooling now

1588253346
ikskuh
I'm "working" :D

1588253356
ikskuh
will continue reimplementing my assembler in zig later

1588253413
ikskuh
fengb: I'm developing my computer on this board:

1588253422
ikskuh
cheap and has a lot of I/O

1588253427
ikskuh
but has

1588253447
fengb
Actually... isn't HDMI pretty proprietary?

1588253471
FireFox317
no? dont think so

1588253472
ikskuh
yep

1588253474
ikskuh
it is

1588253475
FireFox317
oh

1588253480
ikskuh
HDMI costs per-device afaik

1588253488
ikskuh
DisplayPort and VGA are open

1588253491
ikskuh
Thanks VESA!

1588253546
FireFox317
Ah lattice, they have some fpga chips that are completely reversed enigneered by people <3

1588253644
ikskuh
yep

1588253648
ikskuh
lattice is nice anyways

1588253650
ikskuh
cheap chips

1588253658
ikskuh
not that powerful, but 20$ per chip is okay

1588254277
fengb
Oh I forgot about DP

1588254472
ikskuh
i still do gool ol' vga

1588254482
ikskuh
because it's WAY easier than anything newer

1588255213
nephele
I wonder, does zig allow for comments aimed at code editors only?

1588255250
nephele
I was thinking about hungarian notation and so, in many cases knowing immidiently what a variable belongs to (and where it doesn't belong) could be quite powerfull

1588255273
nephele
But i would like to do this with colors instead of a text notation, so basically telling my editor somehow "this var be red!"

1588255377
chapl
Somebody mind helping me out real quick? Just a tini tiny issue. `var cursor: i32 = 1;` and `cursor += 1;` doesn't actually increment the cursor by one, but by three instead. At least that's what `io.getStdOut().outStream().print()` is telling me.

1588255481
ikskuh
huh

1588255483
ikskuh
it should notâ€¦

1588255533
chapl
Wanna see the code? Maybe I made some stupid newbie mistake. It's about 21 lines.

1588255543
ikskuh
yeah, send it over with bpaste

1588255571
chapl
ikskuh:

1588255598
chapl
[25] mcstore>

1588255601
chapl
[27] mcstore>

1588255609
chapl
Sometimes by two, sometimes by three

1588255647
ikskuh
note that it will output 1024 zeroes every time!

1588255662
chapl
I'm aware of that. I'll fix that later. :)

1588255678
ikskuh
okay

1588255692
ikskuh
also, entering '1\r' will yield two bytes ;)

1588255705
chapl
OHHH

1588255707
chapl
fuck me

1588255708
ikskuh
readByte will read the char entered as well as the carriage return

1588255711
ikskuh
hey foobles!

1588255718
foobles
yo!

1588255722
foobles
:)

1588255727
chapl
Thank you ikskuh!

1588255727
foobles
:)

1588255744
chapl
But that doesn't actually fix the integer inc issue I have

1588255773
ikskuh
why?

1588255825
chapl
Did you have a look at the code? Line 19: `answer_cursor += 1;` - I don't read the integer in. I just do plain integer addition and instead of +1 I get +2 and sometimes +3

1588255842
mikdusan
1\r\n is 3 bytes

1588255843
ikskuh
yes

1588255847
ikskuh
the error is '\r'

1588255862
ikskuh
you will just override your first increment with the second

1588255880
ikskuh
and it's so fast you can't see that

1588255914
chapl
Oh now I get it. \r and \n account as separate read bytes.

1588255922
ikskuh
yeah, sure ;)

1588255957
chapl
That makes sense. Alright. Thank you. Much obliged!

1588256581
scientes
are zig programs PIE?

1588256611
scientes
is there such thing as static-linked PIE?

1588256617
scientes
and you could just run it by jumping to it

1588256929
nycex
scientes: you can use zig build-exe -fPIE, then it is

1588256947
scientes
and how do you know the entry point?

1588256956
scientes
i.e. could you load it from another program without exec()?

1588256990
nycex
uhm nvm i confused it with PIC

1588256993
scientes
I guess it still is an ELF with a number of sections

1588257003
scientes
nycex, they are very similar

1588257042
scientes
wait, but the loader does most of the ELF handling

1588257058
scientes
I guess the kernel does some too

1588257139
nycex
scientes: I know, but i'm not sure if -fPIC does what you want

1588257144
scientes
./fs/binfmt_elf.c

1588257145
mikdusan
scientes: I believe what happens is the elf loader decides base address to load at. being pic/pie, the baseaddr doesn't matter. then elf is used to figure offsets and determine entry

1588257158
scientes
linux/fs/binfmt_elf.c

1588270445
xackus_
i was trying to fix

1588270571
xackus_
resolve_llvm_types is just wrong and special cased to be working in common cases

1588273781
ifreund
hey, so i'm trying to work around the fact that zig cannot yet translate c bitfield such as the timespec struct in musl

1588273801
ifreund
i tried this but my program crashes instantly on startup

1588273847
ifreund
however, as far as I can tell from the musl code here there should be no padding on my system

1588273869
ifreund
since sizeof(time_t) == sizeof(long)

1588273897
ifreund
is there something I'm missing there? any idead for an alternative workaround?

1588273949
TheLemonMan
write a static assert to make sure that's the case

1588274017
ifreund
will do

1588274636
ifreund
TheLemonMan: so assuming i've correctly figured out how to do a static assert in C, it seems to pass

1588274813
FireFox317
uhm, the docs say that `readNoEof` returns the number of bytes read, but it doesnt. should it?

1588275088
ifreund
alright so my hack seems to be ok with a minimal example

1588275148
fengb
How did you steal Lol? :(

1588275243
ifreund
fengb: L o I as in iguana actually :D

1588275363
fengb
lol

1588276424
ifreund
oh well this is interesting, maybe it's not my hack that's causing the crash

1588280241
hazeycode
andrewrk: The crash I was having is something to specific to my code, with evented io on macOS it's easy to invoke the Cocoa event pump off the main thread, which is no good

1588280295
andrewrk
hazeycode, with the way that zig's async/await/resume/suspend works, it's possible to make a function called `switchToMainThread();` which works as advertised

1588283242
hazeycode
I'm having some trouble with this andrewrk, I think I'm missing something, I'll try again tomorrow. I've opened a PR to enable async io on macOS, it was easier than I thought, again, I think I'm missing something

1588283535
hazeycode
It's also not really been tested at all, and I'm quite sure some of it is incorrect. But perhaps it will attract comments such that I can go and fix :)

1588284300
andrewrk
nice!

1588285633
ikskuh
andrewrk: quick question: can i somehow emit files in subdirectories in zig-build?

1588285642
ikskuh
i want to build for three platforms in a single build file

1588285796
andrewrk
yes

1588285827
andrewrk
setOutputDir works. but probably zig build should gain some recognition of multiple install directories for this use case

1588285835
ikskuh
yeah, true

1588285842
ikskuh
i'll work it out with setOutputDir for now :)

1588285966
pixelherodev
Would it be worth improving the glibc for Zig update process?

1588285978
pixelherodev
Rather, would it be possible?

1588286886
ikskuh
okay, seems like my emulator doesn't run well on windows yetâ€¦

1588288483
fengb
Easy solution: pipe it through wasm!

1588288498
ikskuh
heh

1588288506
ikskuh
nah, it must be fixed!

1588288510
ikskuh
but not today

1588288511
ikskuh
gn8

