1608430112
dongcarl
Hey all, wondering if the best way to make HTTP requests right now is to use libcurl or sth else

1608441293
scientes
dongcarl, you should write some code

1608441311
scientes
http/1.1 is not terribly difficult, especially if you only add what you need as you go along

1608441329
scientes
and then submit it to std lib

1608441381
scientes
it only get absolutely horrible when you have to implement TLS with all its ASN.1 non-sense

1608444533
hio
Please convince me that ziglang is the future, thank you

1608444577
hio
My complaints are as follows: 1. syntax isn't really attractive 2. features are only subjectivey ~25% better than C

1608445023
chiefkemist
May I ask what makes Zig ~25% better than C for you?

1608445074
hio
the few extra safety and type features

1608445146
hio
I mean you're basically asking me to switch from C with insane undefined behavior and random crashes from a single memory byte mistakes to... another language with that too but slightly less of it. It's not that convincing of a sell

1608445454
chiefkemist
Personally "zig cc" + "cross compilation" got my attention

1608446405
pixelherodev
hio: tjat

1608446408
pixelherodev
whoops

1608446417
pixelherodev
that's really not an accurate description of either C

1608453086
andrewrk
this channel is not for arguing about whether or not zig is good; it is for working on the zig project and helping people write software

1608476952
bitmapper
is there pattern matching in zig? i can't find anything about that

1608477866
g-w1
no, the closest thing is switching on a tagged union and then capturing the payload, but that doesn't switch on the shape of it

1608477951
g-w1
can I delete merge_anal_dumps.zig? someone on discord told me that it wasn't in use, and the code is heavily bitrotted (doesn't compile, very old apis). I am trying to update some depreciated interfaces in the code and trying to do it in that and then compile it failed, then I tried to update it, but figured why do it if its not in use.

1608481721
viashimo
is there any way to connect lldb, or another debugger, to a test (from zig test)?

1608481782
dch
g-w1: I would love to see pattern matching that would be awesome

1608481804
dbohdan
Has any made an extension for the Tcl interpreter in Zig?

1608481908
g-w1
viashimo, if the test fails it will show the path of it (zig-cache/xxxxx) and then you can run it and debug it

1608481933
viashimo
g-w1: oh huh, neat. thanks!

1608486265
marijnfs
I'm trying to build an external library (nng) with zig but get a weird error

1608486271
marijnfs


1608486278
marijnfs
zig build test results in an illegal instruction

1608486287
marijnfs
sorry wrong link

1608486293
marijnfs


1608486299
marijnfs
that's my repo

1608487795
marijnfs
I get: 'testingerror: the following test command crashed' and no backtrace, so I'm mostly trying to figure out if the it's a runtime error or something else

1608488027
g-w1
its probably a bug in the c code

1608488250
marijnfs
yeah true, when I comment some stuff out from the test it's fine. I have a var sock: c.nng_socket = undefined, and pass it to a function:  c.nng_req0_open(&sock);

1608488261
marijnfs
this would work in c, so I guess something is wrong about the memory?

1608501978
marijnfs
/home/marijnfs/dev/zig-nng/zig-cache/o/b912f3836486bf7077f8bc39ecd71115/build /usr/local/bin/zig /home/marijnfs/dev/zig-nng /home/marijnfs/dev/zig-nng/zig-cache /home/marijnfs/.cache/zig test

1608502025
marijnfs
guys, what's going on there? is a build binary in zig-cache called 'build' being called with the zig executable which calls my binary?

1608502030
marijnfs
I'm a bit confused

1608502091
ifreund
yes, zig complies your build.zig into a build binary and runs it

1608502513
andrewrk
passing the zig executable to the build runner is the most reliable way for the build runner to have access to the same zig compiler you used to run `zig build`

1608507690
marijnfs
thats pretty fair, i just wonder where the crash comes from

