1600648748
kandinski
One question about this snippet:

1600648778
kandinski
if tryToAllocateFoo() fails with an error, `foo` (of type !Foo) is now an error, which will be returned.

1600648802
kandinski
`errdefer deallocateFoo(foo);` will trigger and deallocate what?

1600648873
kandinski
I understand errdefer behaviour if the error returnned is OutOfMemory or InvalidParam

1600648900
kandinski
but what's errdefer behaviour if the error returned is error.TryToAllocateError?

1600648953
kandinski
aaah, it returns from the expression with the same error, so errdefer is never reached

1600648983
kandinski
(-!- kandinski renamed channel #zig to #rubberducky)

1600649011
mattnite
errdefer is triggered when the block exits with

1600649063
kandinski
mattnite, but in the snippet it won't trigger if the error is in the tryToAllocateFoo() call

1600649093
kandinski
because `const try tryToAllocateFoo();` returns before errdefer sets up the cleanup hook.

1600649146
kandinski
(I think: I just asked a question and answered it myself; but the call to `deallocateFoo(foo)` makes no sense if foo wasn't allocated)

1600649160
kandinski
a reminder of what the snippet was:

1600649165
mattnite
Sorry wasn't exact, you're correct, you have to hit the errdefer for it to be "registered"

1600649171
kandinski
sure, thanks

1600649179
kandinski
my mental model was incorrect

1600649218
mattnite
I skimmed the code a little to fast :P

1600649223
mattnite
too*

1600649227
kandinski
(somehow in my mental model `foo = try blargh()` meant the variable now contained the error, instead of the block exiting with the error)

1600649252
mattnite
ah, yeah you'd have the error if there was no try

1600649320
kandinski
I don't really know C, I'm learning zig as an exciting opportunity to catch up on system programming without having to take on historical baggage of mentally learning about all the quirks and warts

1600674504
khr
hello folks. first foray into zig here, anyone have a simple example of a build.zig file which adds a C header include directory? the docs are a bit sparse on the subject of build.zig and std.build at the moment.

1600674518
ikskuh
heya

1600674775
ikskuh
Wohnungsgeberbestätigung

1600674777
ikskuh
dang :D

1600674778
ikskuh


1600674781
ikskuh
this should get you started

1600674910
khr
ah brilliant, this is useful, thanks

1600674957
ikskuh
you're welcome

1600674968
ikskuh
i just noticed that this build.zig is a damn good example for a lot of features

1600674978
ikskuh
(i've stripped out dependencies/pregeneration of other files)

1600675164
daurnimator
ikskuh: interesting pattern with the `const pkgs = struct {`

1600675186
ikskuh
yeah i noticed that it's way more readable as soon as you have more than one project requiring packages

1600675210
ikskuh


1600675214
ikskuh
here's a public gist. share it! :D

1600681926
ask6155
hello

1600682008
ask6155
There is a c function which returns a char32_t how do I initialize it in zig?

1600682022
ikskuh
it's u32

1600682054
ask6155
How do I know what types c types correspond to?

1600682104
daurnimator
char32_t isn't standard C type. so you need to look at the library you're using

1600682212
ikskuh
daurnimator: please update your internal c reference:

1600682229
daurnimator
ikskuh: looks like C++ to me

1600682247
ikskuh
it's c though ;)

1600682249
daurnimator
also looks like they not only named it badly; but got it wrong too

1600682251
daurnimator
ikskuh: nope

1600682256
ikskuh
it is!

1600682275
ikskuh
it's in /c/, not /cpp/, also it tells me "C11" and "C99", not "c++11" and "c++98" ;)

1600682279
daurnimator
ikskuh: seems to be C++11 only ?

1600682291
ikskuh
C11

1600682308
ikskuh
even though C++11 also has this

1600682315
daurnimator
ah crap

1600682329
daurnimator
well congrats C standards people..... you got another definition wrong >.<

1600682354
ask6155
u32 does work

1600682370
daurnimator
to represent utf-32 you need at most u21... but they've defined it as "at least u32"

1600682374
ask6155
but chare32_t is not given in the documentation

1600682389
ask6155
in zig documentation that is

1600703587
Barabas
Heya

1600703595
Barabas
How do I convert a pointer to a single element to a slice?

1600703633
leeward
I think you'd have to put it in an array first.

1600703653
leeward
Or do you have a pointer to a single element of an array?

1600703745
Barabas
No, I just have a pointer to a single object

1600703785
Barabas
And my function expects a slice. I thought it'd automatically convert, but it doesn't and a @ptrCast also didn't work on a slice

1600703792
ikskuh
you can just convert the pointer and slice it:

1600703802
ikskuh
@ptrCast([*]T, &obj)[0..1]

1600703821
fengb
`&[_]T{foo}` or `@as([*]T, &foo)[0..1]`

1600703834
Barabas
Yeah, ok. The ptrCast is quite ugly though

1600703836
ikskuh
the first one isn't really a good variant

1600703844
ikskuh
@Barabas, there is a function for that in std.mem i think

1600703861
ikskuh
fengb: because you don't point to the original value but a copy

1600703931
fengb


1600704113
ikskuh
it works for readonly data, yes

1600704172
Barabas
ikskuh I can't find the function. `span` looks like it, but that doesn't accept a single pointer it seems.

1600704235
ikskuh
hm

1600704257
ikskuh
maybe i should add it or the coercion of single item pointer to multi-item-pointer is accepted some day…

1600708524
leeward
fn toArray(comptime T: type, *T) [1]T

1600708553
leeward
mmm, that'd be a *[1]T

1600725172
dmiller
Does anyone have a little snippet handy showing how to create an AutoHashMap with strings as keys? As a systems programming newbie I'm having a hard time figuring out how to do it since strings seem to usually be represented as `[]u8` which is a pointer at the end of the day. Pointers aren't very useful as keys, it turns out!

1600725555
andrewrk
dmiller, std.StringHashMap

1600725614
andrewrk
you can see some usage examples in tools/*.zig

1600731922
johnLate
I want to read from a json file. I'm trying to simplify    var value1 = tree.root.Object.get("a").?.value.Object.get("x").?.value.Object.get("1").?.value;

1600731937
johnLate
into something like:   var value3 = J.lookup(tree.root, .{ "a", "x", "1"});

1600731967
johnLate
So far, I've achieved:   value2 = J.lookup(tree.root, &[_][]const u8{ "a", "x", "1" });

1600731987
johnLate
I'm wondering if this is the right way to do it or what I could do better:

