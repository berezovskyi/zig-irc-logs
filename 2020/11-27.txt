1606452181
voidshine
Hello and Happy Thanksgiving! First thing I want to say is, thanks for making Zig -- it looks like a fun and productive language. I am excited enough about it that I put my usual projects on hold so I can dig in and learn Zig over my holiday vacation. :)

1606452301
voidshine
I came here to see if someone can help me get started, as I seem to have misunderstood something about Zig's semantics. I was expecting copy/value semantics in the style of C, but there's something I'm missing in my first little experiment.

1606452417
voidshine
I thought an Allocator was a simple struct with a couple of function pointers...a plain data object I could copy and use just as a source of raw pointers, but it seems like maybe there's some magic in the GeneralPurposeAllocator; not sure.

1606452594
voidshine
Specifically, my question is: why can't I copy an allocator struct to the local stack frame and then pass its address to ArrayList.init? I get undefined behavior/crashes when I do this.

1606452608
daurnimator
voidshine: depending on the allocator, it may have its own state

1606452627
daurnimator
e.g. if the allocator tracks number of allocations: the allocator would have an integer that gets incremented/decremented

1606452642
daurnimator
voidshine: usually you end up passing around a pointer to an allocator.

1606452674
voidshine
But isn't the Allocator struct just a plain data struct with a couple of function pointers?

1606452698
voidshine
Or maybe it's interpreted by the allocator implementation as more than that?

1606452711
g-w1
those function pointers call stuff in the upper struct that has state

1606452722
voidshine
upper struct?

1606452768
g-w1
an allocator is a sub struct of GeneralP... for example. then u use @fieldParentPtr

1606452774
daurnimator
voidshine: most allocator implementations are intrusive structs inside of another struct.

1606452783
daurnimator
voidshine: are you familiar with the `containerof` macro in C?

1606452799
voidshine
No, it has been about 20 years since I used C, ha

1606452817
daurnimator
voidshine: do you know the term "intrusive"?

1606452831
voidshine
I think I have an idea of what you're saying -- it's like surrounding context of a struct

1606452848
g-w1
search for fieldparentptr example in this

1606452849
voidshine
I'm interested if you can point me to some reading material about this topic!

1606452857
voidshine
Perfect, thanks, I'll check it out. :)

1606452878
daurnimator
voidshine: if you google "intrusive data structures" I'm sure you'll find all sorts of material from the last 3 decades :)

1606452895
g-w1
oh, thanks. didn't know what that was called :)

1606452933
voidshine
Awesome, thanks for the quick help! I am just getting back down to the metal after a long time in high-level land. It's good to be back in the jungle. :)

1606453187
voidshine
Aha yes, so the allocator struct is embedded within a larger struct -- and the implementation looks for data around the allocator instance, assuming that larger structure to be in place.... that makes sense.

1606453224
daurnimator
voidshine: you got it :)

1606453265
g-w1
check out lib/std/heap/general_purpose_allocator.zig:579 for a direct example of this. the standard library is very readable and is super useful for learning

1606453296
voidshine
Cool, I appreciate the help. I'm going to have a lot of fun tinkering with Zig over the next 10 days.

1606453347
voidshine
If things go well, I might try to contribute a game math library or some such. Will see where things take me. Happy Thanksgiving, everyone, I'll check in from time to time. :)

1606453358
pixelherodev
That's an unusually specific number - is the world ending in ten days or something? :P

1606453400
voidshine
Practically, haha. I have an intense job and two families; I'm like not enough butter spread over too much bread. But I love coding when I can!

1606453411
pixelherodev
Good luck :)

1606453415
voidshine
Thanks

1606455407
KIMI
hi, i feel like i am doing something very very bad..

1606455410
KIMI
var spaceGlyph = &self.glyphs[spaceChar];

1606455449
KIMI
someone told me i should do that because glyphs is array of optional

1606455545
KIMI
in C i just need to do spaceGlyph->width if i checked before if it is NULL

1606455557
KIMI
how can i do similar in zig?

1606456035
l0rd_hex
amk: why the

1606456076
daurnimator
KIMI: I'm confused why you're taking the address of it?

1606456095
KIMI
daurnimator to not make a copy

1606456104
daurnimator
why not?

1606456119
KIMI
so it is faster xD

1606456133
KIMI
Glyph is big

1606456143
daurnimator
let zig figure that out

1606456159
KIMI
and i make change to it

1606456163
KIMI
so i need pointer

1606456169
daurnimator
don't do that....

1606456192
KIMI
but i need edit it how can i do that witrhout pointer?

1606456193
daurnimator
if you tell it to take the address, it

1606456199
daurnimator
okay that's a better reason

1606456213
l0rd_hex
I installed zig on my personal computer and now my hands smell like chicken, wtf?

1606456264
karchnu
l0rd_hex: yeah, just a regular zig side-effect. Don't worry.

1606456282
l0rd_hex
karchnu: it's real chickeny though

1606456318
KIMI
daurnimator: how can i do like in C do i need to use .?.* everytime??

1606456339
l0rd_hex
last time I was this chickeny I was hiking with Andy and his pep-pep

1606456380
daurnimator
KIMI: usually you'd unwrap once and do everything there: if (some_optional) |not_optional| {foo(not_optional);bar(not_optional);}`

1606456424
KIMI
can i store it on a variable directly? in here var spaceGlyph = &self.glyphs[spaceChar];

1606456442
daurnimator
that question doesn't make sense to me

1606456445
KIMI
i tried .! but it doesnt work

1606456471
KIMI
i mean on one line directly so i don't need to do if() |] everywhere

1606456522
dominikh
of course you can do const y = x.?

1606456525
l0rd_hex
"And on the 5th day Andy invented chicken hands" Zig 4:20

1606456543
KIMI
dominikh thanks

1606456631
KIMI
it doesn't work

1606456634
KIMI
var spaceGlyph = &self.glyphs[spaceChar];

1606456659
daurnimator
stop pasting the same snippet..... it doesn't help explain anything

1606456694
daurnimator
if anything share the whole function you're doing this in

1606456707
KIMI
i explained

1606456719
KIMI
glyphs is array of ?Glyph

1606456720
dominikh
you're pasting a single line of code that has nothing to do with the question at this point

1606456730
l0rd_hex
var chicken = &self.chicken[chicken];

1606456791
KIMI
i don't know how to do what i want to do this is why i ask question

1606456804
KIMI
i can't know what u need

1606456807
dominikh
and pasting the same line of code repeatedly won't answer your question

1606456817
l0rd_hex
KIMI: I tried washing my hands but it still smells like chicken

1606456826
dominikh
also what the fuck is l0rd_hex's problem

1606456828
KIMI
l0rd_hex wtf xD

1606456839
l0rd_hex
CHICKEN is my problem

1606456853
l0rd_hex
chicken hands specifically

1606456876
l0rd_hex
Step 1) Install Zig

1606456883
l0rd_hex
Step 2) Get chicken hands

1606456889
mla
anyone have a good ex of serial port usage in zig

1606456898
daurnimator
mla: what OS/hardware?

1606457023
mla
linux, x86_64; been trying to use C code translated but getting issues citing #1481 when trying to set F_SETFL

1606457055
l0rd_hex
mla: I've connected to a roast chicken at 9600 baud

1606457085
l0rd_hex
the problem is with ZMODEM because the chicken overflows into the hands array

1606457095
l0rd_hex
the "Z" is for zest

1606457205
l0rd_hex
... (lemon)

1606457242
mla
hmm, ill give you props for creativity, but i doubt your connecting to a chicken regardless of baudrate

1606457262
l0rd_hex
most modern chickens have UARTS

1606457329
KIMI


1606457389
l0rd_hex
KIMI: your pointer doesn't specify dark or white meat

1606457397
l0rd_hex
don't listen to meeeeeee

1606457412
KIMI
l0rd_hex pls stop with chicken, i'm not interested

1606457425
l0rd_hex
KIMI: how rude.

1606457457
l0rd_hex
chicken is a vital link in nature's chain

1606457502
daurnimator
mla: can you share the error message you get with F_SETFL?

1606457928
mla
daurnimator:

1606458024
l0rd_hex
So I spoke with Andy and his ex-landlord and they recommended washing my hands becuase I might not "get what you want" but if I "try sometimes" I might remove chicken-flavor molecules from my epidermus -- but, sadly, my hands

1606458378
l0rd_hex
Good news: Hulu just contacted me about filming an episode of "Chicken Hands: Smelly

1606458391
l0rd_hex
at

1606458398
l0rd_hex
(which is where I live)

1606459696
daurnimator
mla: use the standard library instead of including C headers....

1606459781
daurnimator
mla: you should be able to use `try std.os.fcntl(file.handle, os.F_SETFL, your_value);`

1606459782
mla
daurnimator: yeah thats where im headed atm, just was trying to be lazy w c import ;)

1606459807
mla
oh neat - will check out fnctl in stdlib, will be essential for nonblocking io

1606459949
l0rd_hex
or linking with -lchicken for that matter

1606464622
notzmv
g

1606464625
notzmv
oops, sorry.

1606467729
maringuu
Does anyone know how to use c `FILE`s in zig? I found std.c.fopen but it does complain when I put the returned file in a function from c which accepts a `FILE`

1606468273
maringuu
I guess I can just import `stdio.h` and use FILE from there. Thanks anyway!

1606488660
shynoob
oh tab key isnt allowed?

1606488747
dutchie


1606489339
shynoob
hm

1606489370
shynoob
where can I find list of example codes written in zig?

1606489390
shynoob
maybe I'd better get a look at the format of a zig program

1606489527
dutchie
the std library is a good place to start

1606489647
ifreund
shynoob: you can run `zig fmt` to format your code if you're not aware

1606489658
shynoob
didnt know

1606489659
shynoob
thanks

1606495288
KIMI
hi

1606495300
KIMI
i am a design that i want to improve

1606495302
KIMI


1606495308
KIMI
line 11

1606495316
KIMI
have* sorry

1606495377
KIMI
but i am not sure how exactly, should i drop optional glyph, but then how will i do quick lookup for glyph? right now i convert char to u8 to do lookup

1606495418
KIMI
@as(u8, 'K') this way

1606495651
KIMI
what confuse me is pointer cant be NULL

1606495659
KIMI
and optional can be NULL

1606497724
marler8997_
my first question would be why you are creating an array of the Glyph structs, who's only field is a usize named "width"?  Do you need it to be usize?

1606497956
TheLemonMan
yo marler8997_, are you on windows?

1606497962
marler8997_
yeah

1606497985
TheLemonMan
are you up for some quick troubleshooting?

1606497990
marler8997_
sure

1606498468
KIMI
marler8997_ the little struct is so i can send you guys a paste so you can check with minimal noise in my code :D

1606498496
KIMI
i can send u all the code if u prefer?

1606498511
marler8997_
yes please

1606498532
marler8997_
I'm the code monster, feed me code

1606498575
TheLemonMan
the off-brand cookie monster!

1606498645
marler8997_
yes, the older brother whose matured past his days of unending treats

1606499468
pixelherodev
into his days of unending pain and debugging?

1606499474
pixelherodev
and indigestion, probably

1606499485
pixelherodev
I don't think "puberty" explains a digestive system that can process abstractions

1606499822
g-w1
do static binaries work on windows? does it have to link to kernel32.dll because the syscall abi is unstable? this is just out of curiousity

1606503864
marler8997_
so, zig is borked on Windows 7, the FileNormalizedNameInformation class that we use when calling NtQueryInformationFile during a "zig build" doesn't exist on Windows 7.  However, it seems we don't support Windows 7?  But it looks like Windows 7 still has 23% desktop market share (one user incldues me)....can we reconsider this decision not to support Windows 7?

1606504014
marler8997_
it looks like there are more Windows 7 uers than all mac users combined...so if we drop support for Windows 7, then should we also drop support for all Mac users?

1606504212
TheLemonMan
I vote yes

1606504413
andrewrk
microsoft stopped supporting windows 7 years ago

1606504453
marler8997_
right, but 23% desktop market share

1606504497
andrewrk
hmm that is a good point

1606504499
marler8997_
actually, I think it's 23% share of all windows machines, which is 80% of total I think. so actualy share is around 18% I think

1606504512
andrewrk
we are also pre-1.0 though, so by the time we hit 1.0 that number may be very different

1606504534
marler8997_
you're putting me in a tight spot here

1606504549
andrewrk
how's that?

1606504558
fengb
Does Wine work on Windows? 🙃

1606504564
marler8997_
My work uses Windows 7 for example, means I can no longer use Zig on my work machines

1606504582
andrewrk
huh your work uses an OS without security updates?

1606504596
marler8997_
yeah, updates break our old legacy builds

1606504603
andrewrk
oof

1606504608
marler8997_
only developers can do this

1606504617
TheLemonMan
plot twist, he works at Microsoft

1606504624
marler8997_
lol

1606504681
ericonr
I'm not sure enabling software to work on windows 7 is a good thing to do

1606504700
ericonr
but what do I know, I'm here to test multi-libc binaries only :P

1606504701
andrewrk
what's the argument there?

1606504715
marler8997_
at some point support for all OS's can be dropped, but 18% market share seems way too soon for me

1606504730
ericonr
andrewrk: were you asking me?

1606504741
TheLemonMan
did it fall from 23% to 18% in the meanwhile?

1606504750
marler8997_
lol

1606504762
TheLemonMan
you'd be an awful lawyer heh

1606504769
marler8997_
nah, I realized the 23% number was Windows Market Share not Total Market Share

1606504778
marler8997_
and windows has around 80% Total

1606504778
andrewrk
ericonr, yes

1606504789
marler8997_
so 23% * .8 = 18% total

1606504831
ericonr
andrewrk: imo you're being irresposinble if you make it easier / more comfortable for people to keep using an outdated and insecure OS

1606504850
ericonr
*irresponsible

1606504852
andrewrk
ericonr, I gotta do some work fixing bugs / merging PRs today but after hours hope to have some time to tinker with getting musl-based void linux support for the static window app

1606504855
marler8997_
lol

1606504874
marler8997_
so, people who work on retro hardware are irresponsible?  That's a first for me

1606504889
ericonr
not if they run a linux distro :P

1606504935
TheLemonMan
people who work are irresponsible

1606504961
ericonr
and there's a difference between working on that hardware yourself and having a whole language support the insecure OS

1606504986
marler8997_
this has nothing to do with the Zig language, it's the standard library

1606505014
ericonr
andrewrk: heh, good luck :D

1606505024
ericonr
I might be able to test something or another

1606505034
TheLemonMan
that's a really shitty argument, should we only support the lastest and greatest linux kernel version then?

1606505039
andrewrk
I want to make things Just Work for people, but there is an element where I don't want to bear the burden of Microsoft's shitty decisions. If they had made Windows 10 Really Good And Not Shitty then we wouldn't have a 18% market share on Windows 7 and being pressured to increase the scope of the project

1606505058
marler8997_
andrewrk, completely agree

1606505075
andrewrk
idk though, to some extent that is the purpose of zig, to bear the burden for other people so they can take the easy street to writing great software

1606505077
GrooveStomp
The Zig 0.6.0 release notes say it makes sense to suport hobby OSes; I would assume supporting Windows 7 would be an extension of that philosophy?

1606505090
andrewrk
yeah that's another good question

1606505115
andrewrk
I don't feel like I have a solid grounds on how to make a decision on what exactly to support

1606505142
GrooveStomp
That's a very reasonable assertion to make!

1606505146
ericonr
TheLemonMan: deployments with linux 2.6 are still supported

1606505152
ericonr
not for long, but they aren't

1606505157
ericonr
s/aren't/are/

1606505160
marler8997_
whether or not a company supports their own closed source OS is a very important factor, however, when they drop support but it stil has 18% market share of all desktops in the world, I think the market share would take precedence

1606505213
marler8997_
and the problem here is not that I choose to use Windows 7, it's that some software only works (or only works well) on windows 7, and that's because of its market share

1606505255
andrewrk
there's another factor here which is that we also have this target version range thing which actually kind of encourages a wide range of supported versions in the std lib since comptime logic has access to the target version range

1606505272
andrewrk
but.... increasing scope can be dangerous

1606505287
marler8997_
right, I'm not saying let's support everything here

1606505301
andrewrk
I think it makes sense to keep the policy status quo until 1.0 and then we can consider widening the supported version range

1606505305
marler8997_
if a platform has 18 market share, you're signing up for at most 6 platforms :)

1606505309
andrewrk
until 1.0 is imminent, I mean

1606505324
andrewrk
idea being we need to keep the scope small until certain key milestones are complete

1606505344
marler8997_
so you're saying I can't use zig anymore on these machines that have to use Windows 7?

1606505372
ericonr
do browsers even work on windows 7?

1606505387
marler8997_
also going to have to reconsider what to do about my audio program I'm developing on Windows 7

1606505397
marler8997_
this really is a downer for me

1606505444
andrewrk
yeah, I'm saying that until 1.0 is coming soon, issues with zig running on or std lib support for windows 7 won't be viable for the issue tracker. However I want to note that non-invasive patches to support older versions are welcome

1606505474
ericonr
marler8997_: if you have software that needs to run on an unsupported OS, that doesn't get most security updates, you really shouldn't use said insecure OS for anything else but said software

1606505508
marler8997_
erconer, I don't know where you're getting these rules from

1606505525
andrewrk
marler8997_, I'm sorry :( one of the hardest things I have to do in this job is say "no" to people to avoid scope creep

1606505541
ericonr
marler8997_: do you connect windows 7 to the internet?

1606505547
marler8997_
if Zig doesn't support windows 7, I can't spend all my time constantly fixing it and fighting people with whether or not my changes would be considered "invasive"

1606505558
marler8997_
that's a steep uphill battle I wouldn't win

1606505562
andrewrk
understood

1606505607
marler8997_
What criteria are you using to determine what platforms to support?

1606505699
andrewrk
for proprietary OS's it's the same support as the company. Microsoft ended LTS for Windows 7 on jan 14, 2020:

1606505738
marler8997_
so if an OS has 90% market share, but the company doesn't support it, neither will Zig std?

1606505805
andrewrk
I think your market share argument is compelling and I would like to revisit it later - my reasoning right now is mainly based around keeping the scope manageable so we can make swift progress towards 1.0

1606505847
marler8997_
you don't think supporting platforms with high market shares is manegeable?

1606505852
novaskell
ericonr: Considering there are still several running windows 7 on "isolated" units and are unlikely to change for a number of years (heck, have seen XP)... it's not as simple as "shouldn't". I've probably had to deal with 5 in the last few weeks.

1606505856
marler8997_
by definition, there are only so many of them :)

1606505886
marler8997_
you're not going to get 20 platforms with 15% market share :)

1606505909
andrewrk
it's entirely likely that number will be different when zig tags 1.0. and yes, supporting older OS versions is taking away efforts from, for example, getting stage2 done

1606505954
marler8997_
I'm not sure the argument of "taking work away" is valid here, you can use that arguemnt against literally anything

1606505967
marler8997_
You said you want to keep the work mangeable (so it doesn't get out of hand)

1606505968
ericonr
novaskell: I know they are common; my point is that they should be left to the tighest scope possible

1606505979
ericonr
if you want to run new software, get another machine to run a more modern OS

1606505980
marler8997_
I'm saying that using market share keep the scope limited, manageable

1606506001
andrewrk
marler8997_, I mean what's the difference really between saying "revisit this later" and having an open bug report that is so low priority that it doesn't get addressed for years?

1606506013
ericonr
specially since connecting windows 7 to the internet, which at least half of the modern applications require, is risky

1606506074
ericonr
same for XP! we know enterprise software is a mess, but I don't think other languages should 1) pay for that; 2) encourage people to keep running on old stuff

1606506081
marler8997_
no difference, what I need from you is to say yes, we will support Windows 7 if someone wants to do the work, in which case I can work on fixing it and potentially add testing for it

1606506084
novaskell
ericonr: if I said that I'd be out of business

1606506095
marler8997_
and not to qualify it with "non-invasive" support

1606506120
ericonr
novaskell: :/

1606506161
marler8997_
looks like XP is less than 2% market share, please stay in the real world here

1606506180
marler8997_
18% market share means Windows 7 is one of the highest use Operating systems in the world

1606506230
marler8997_
I have multiple machines which run it, some of which can't run linux because of drivers and some of which can't run Windows 10 beacuse it's performance is unusable

1606506252
marler8997_
I write alot of tools in Zig, with this decision you're saying I can't run my code on those machines

1606506260
andrewrk
marler8997_, honestly you are involved enough in the zig project that the bare fact that you want windows 7 support is an important factor

1606506309
andrewrk
maybe the policy can be amended with, "and we also support Windows 7 thanks to marler8997_"

1606506314
marler8997_
lol

1606506354
marler8997_
I would probably ammend it with, platforms that share 10% of the desktop market...

1606506376
andrewrk
idk then we have to get into how that's measured

1606506386
marler8997_
Windows 7 is such an odd duck because of Microsoft's bullshit

1606506406
marler8997_
sure, but we don't have to be precise here

1606506443
marler8997_
although, I wonder if there are nother OS's in the same boat?  Older mac versions?

1606506462
andrewrk
yeah we've had some requests like that

1606506481
andrewrk
the thing I am concerned about re: the word "invasive" is what if there is a clean, cross-platform abstraction that works if you assume certain OS minimum versions, but if you want to support this older one, then the entire API has to be made more complicated

1606506509
andrewrk
maybe that's not actually something we need to worry about with windows 7 specifically

1606506514
marler8997_
andrewrk, yes that's why it would probably be impossible to support an older OS without community buy in

1606506536
marler8997_
I anticipate at least some changes would probably have to be invasive

1606506538
marler8997_
unfortunately

1606506583
marler8997_
and again, I'm fine with dropping support, I'm just making the argument here that I think it's way to soon for Windows 7

1606506606
andrewrk
zig is still an upcoming language-

1606506613
andrewrk
years away from 1.0

1606506614
marler8997_
like, my guess is it will have over 10% for another 3 or 4 years

1606506920
marler8997_
we should take a poll, what Operating Systems do yall use here?

1606506967
TheLemonMan
millennium edition => it's good 'till year 3000 rolls around

1606507001
g-w1
chromeos for school, linux, macos (im not upgrading to big sur because last time i upgraded it broke my libc)

1606507067
marler8997_
nixos, windows 7, windows 10, ubuntu are the main ones

1606507471
marler8997_
well after 11 years of using windows 7 on my main gaming rig, it looks like if I want to keep using Zig I'm going to have to upgrade to 10....wish me luck

1606507494
wilsonk
Win10, Ubuntu 20.04, Debian buster, OLD Scientific linux 6.1 and Catalina here (and I have a Win7 vm for testing...but I don't use it daily). I can also load any number of other OS's in vm's

1606507623
novaskell
guix, debian jessie, windows 10 where interaction with 7 is external

1606507656
pixelherodev
In order of favorite to least, Plan9, KnightOS (z80 calculator), Gentoo-musl, Alpine, Gentoo-glibc, a Windows VM for school  (which is a pretty compelling reason to drop out and start job hunting, not going to lie), LineageOS (and yes I readily admit I actually prefer Win10 over Lineage or any other Android-based OS)

1606507734
marler8997_
novaskell, have you compared guix with nixos?  I haven't looked into guix but heard they have similarities

1606507789
pixelherodev
lol, isn't guix the FSF/GNU one (core ideal is, in fact, an ideal), while nixos is "the distro based on Nix" (core ideal is a technology)?

1606507795
fengb
macOS Catalina, High Sierra, Archlinux

1606507836
marler8997_
pixelherodev, yeah I think I remember hearing they only support "free" software

1606508223
novaskell
marler8997_: guix is a lot cleaner in the package definitions (everything must be build from source) and all* tooling for guix exists as guile modules making it easier to automate. Less packages overall though that hasn't been much of an issue and non-free packages exist in separate repositories which can be added as channels.

1606508441
g-w1
could someone tell me why gdb just blatantly changes the type of an ArrayListUnmanaged to Compilation.ErrorMsg and Decl to Scope? This is also not only gdb, weird memory stuff is happening too (segfaults because the structure gets messed up)?

1606508691
marler8997_
novaskell yeah that syntax looks pretty clean, reminds me of lisp

1606508730
novaskell
It's scheme so not far from it

1606508744
g-w1
im inclined to say that this is a bug in stage1 if anyone doesn't see anything im doing wrong

1606508833
pixelherodev
g-w1: optimized?

1606508848
g-w1
its a debug stage2 build

1606508864
pixelherodev
... what did you link?

1606508870
pixelherodev
Not a text file?

1606508892
g-w1
a screenshot of the gdb with my editor

1606508898
pixelherodev
ohh image lol

1606508933
marler8997_
curl > myfile;  file myfile ?

1606508944
novaskell
The build scripts are also guile and there's a project to have a bootstrap scheme connected to M2-planet such that the binary seed can be reduced past the current which stands at 60MiB

1606508976
pixelherodev
marler8997_: no

1606508978
pixelherodev
just curl

1606508980
pixelherodev
:P

1606508991
marler8997_
I mean, can you use the "file" command to tell what it is?

1606508992
pixelherodev
Then a few idiotic attempts to curl | file lol

1606509008
pixelherodev
g-w1: what editor is that?

1606509029
g-w1
neovim with 2 splits showing the definition and where it is going wrong

1606509104
pixelherodev
My initial guess is either stage1 is producing bad DWARF or GDB is parsing it incorrectly

1606509108
pixelherodev
g-w1: is your GDB up to date?

1606509135
g-w1
10.1 and I would think that but its also segfaulting so I think its something deeper

1606509380
pixelherodev
g-w1: open an issue, worst case Lemon closes it a minute later linking you to the solution :P

1606509398
g-w1
ok. ill push my code and then link it in the issue, thanks

1606509520
waleee-cl
novaskell:  I'm guessing chrome & firefox is best run through flatpak? To build them from source per the nonguix-repo seems unpractical

1606509626
novaskell
ungoogled-chromium is packaged so unless there's a specific feature of chrome you want that's enough for most things. Firefox is a bit impractical though

1606509652
waleee-cl
novaskell:  yeah, went to chech if ungoogled was available on the substitution server

1606509658
waleee-cl
*check

1606509985
novaskell
and using iwlwifi requires waiting for the kernel to build when it's updated but that can always be offloaded to another machine and setting a fixed version of guix in channels.scm is generally a good thing to do anyway.

1606510069
torque
the upside of supporting a deprecated operating system is at least it isn't a moving target

1606510101
pixelherodev
I mean, that's true of a few non-deprecated OSes as well

1606510124
pixelherodev
I have a static Linux binary that's ~12 years old on my PC :P

1606510141
pixelherodev
Most Linuxes don't make that easy though :(

1606512148
marler8997
I'm back...new shiny Windows 10

1606513863
marler8997
TheLemonMan, with my new Windows 10 and your branch, "test-std" didn't crash for me...I'm running the full test suite now

1606514205
g-w1
pixelherodev: it turns out I was returning a dangling pointer (why it segfaulted) but the wrong gdb is an actual bug

1606518795
hlolli__
Does ArrayList.deinit() deinitialize the data and pointers within the list too? When passing an array around alot without copying the data, would it make more sense to handle Arrays like this: *ArrayList(*Struct) or this: *ArrayList(Struct) ?

1606519083
andrewrk
ericonr, not sure how much zig coding you do but here's my proposal to add official compiler / std lib support for libc-agnostic binaries:

1606519108
andrewrk
I expect a little bit of push back, we'll see

1606519136
ericonr
andrewrk: well, I fixed an error message in gurl, but that was all the zig coding I did :D

1606519167
ericonr
does a proposal mean the binary is working already?

1606519181
fengb
Gotta add more yaks

1606519189
andrewrk
I still don't have it working on any musl-based distro yet

1606519218
ericonr
ok

1606519298
andrewrk
fengb is right tho I gotta focus on getting 0.7.1 done

1606519314
ericonr
:D

1606520608
pixelherodev
Fix all da bugs!

