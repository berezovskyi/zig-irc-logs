1598931247
daurnimator


1598931256
daurnimator
^ talking about rust-in-kernel

1598931507
companion_cube
nice!

1598939679
BoilerOnASurf
Hi, how can I create an array of aligned types? like ```[_]align(4) u8 { 0, 1, 2 }```

1598939832
daurnimator
BoilerOnASurf: align applies to the variable not the type

1598940043
daurnimator
BoilerOnASurf:

1598940231
BoilerOnASurf
daurnimator thank you!

1598940627
BoilerOnASurf
daurnimator the duscussion in the link talk about aligning the array itself, I would like to have an array of aligned items, is that possible?

1598940925
daurnimator
BoilerOnASurf: I think you'd have to turn it into an array of structs.... `[_]struct {a align(4):u8}{.{.a=0}, .{.a=1}, .{.a=2}}`

1598940956
daurnimator
BoilerOnASurf: might be worth a proposal... I've always thought that types should have a customisable alignment....

1598941202
BoilerOnASurf
daurnimator that would be nice, there is any issue already open on that line?

1598941222
daurnimator
i was trying to find one but just found that old issue of mine I already linked.

1598941471
daurnimator
sorta related/counter proposal: #5640

1598942583
BoilerOnASurf
daurnimator Is not clear to me if in zig  the layout is considered part of the type like in C++ of some sort of metadata consumed by the allocator as in Rust?

1598943192
BoilerOnASurf
daurnimator also, the anon struct trick won't compile

1598943226
daurnimator
BoilerOnASurf: oh? hmmm. s/a align(4):u8/a: u8 align(4)/

1598943372
BoilerOnASurf
yeah the align should be at the end, thanks

1598962480
ifreund
odd, std.os.setuid takes a u32 not a std.os.uid_t

1598962739
ifreund
also, if anyone security minded is around, is it better to setuid(uid) -> mkdir -> setuid(0) to create a directory owned by an unprivileged or to mkdir and then chown it?

1598963225
ifreund
hrm, uid_t seems to be a u32 on my glibc linux system but std.os.linux has it as an i32

1598965101
KoljaKube
ifreund: Could the second method be exploited by some well-timed attack somehow?

1598965172
ifreund
that's my fear but I'm not sure if it's well grounded or not

1598965219
ifreund
I learned about SECBIT_NO_SETUID_FIXUP though so I'm using that with the first option for now

1598965234
ifreund
(I need the secbit since the parent dir is root-owned)

1598981532
Barabas
I was expecting that if I use a `std.io.fixedBufferStream` I could make a reader and a writer and the reader would read what the writer writes.But... from briefly looking at the code it seems the reader reads what's after what the writer wrote.

1598982076
fengb
Youâ€™ll need to reset the position manually

1598982081
fengb
If you need to track both sides, I believe a LinearFifo fits that usecase better

1598982377
Barabas
Do we have one in the zig std?

1598982431
ifreund
std/fifo.zig

1598982439
Barabas
The problem with resetting the position is that it doesn't know how much it can actually read

1598982539
Barabas
Ah cool, I'll try the fifo.

1598982979
Barabas
It works, thanks :)

