1597886125
cr1901_modern
Without using C fread/strtok, how might I read a file into a buffer and read the buffer with a strtok()-like in Zig?

1597886641
pixelherodev
readAllAlloc, then make a reader over it and readUntilDelimiter?

1597886673
cr1901_modern
Cool, let's see if I can do that :D... will be back if I have trouble

1597886674
daurnimator
cr1901_modern: use a linearfifo as a buffer around your file and use readUntilDelimiter?

1597886705
daurnimator
depends if your file is large or not (readAllAlloc could be expensive)

1597886711
cr1901_modern
Not large at all

1597886727
cr1901_modern
I'm doing old Advent of Code problems

1597886908
andrewrk
if you are able to read the entire file into a buffer, the mem.tokenize and mem.split functions are quite nice

1597886951
cr1901_modern
yea, that's not really a problem for a file this small. I just prefer not to assume the entire file fits

1597886970
cr1901_modern
and if e.g. a tokenize function fails, it means "need more input"

1597886990
cr1901_modern
it can* mean

1597891495
cr1901_modern
Is there more up to date docs than:

1597891695
ronsor
Online auto-generated documentation is still iffy, and I highly suggest reading the source code

1597891704
ronsor
There are missing functions, etc. in the online docs.

1597891799
traviss
zls is a great tool for exploring the std lib if you're using a compatible editor:

1597891803
cr1901_modern


1597891814
cr1901_modern
Ack I saw that, and didn't install it yet

1597891894
traviss
use std.fs.cwd().openFile(sub_path: []const u8, flags: File.OpenFlags)

1597891933
cr1901_modern
Is open() referring to the unistd.h open() in my linked comment?

1597892238
cr1901_modern
Awesome, I opened a file :D!

1597892257
andrewrk
congrats :)

1597892282
cr1901_modern
Ty :). Now to do something with said file...

1597893085
cr1901_modern
What does stat_size mean compared to max_size in readAllAlloc?

1597893135
Cadey
how do i spawn a child process in zig?

1597893316
leeward
fork?

1597893322
andrewrk
cr1901_modern, are you trying to read stdin?

1597893351
andrewrk
Cadey, std.ChildProcess

1597893362
cr1901_modern
andrewrk: No. const fp = try std.fs.cwd().openFile("day1/input.1", .{.read = true });

1597893374
cr1901_modern
const buf = try fp.readAllAlloc(allocator, 500, 1024);

1597893377
andrewrk
cr1901_modern, I think you probably want std.fs.cwd().readFileAlloc

1597893458
andrewrk
for this function you will only have to give the maximum number of bytes that are allowed before returning error.FileTooBig. if you want to allow any size, use math.maxInt(usize)

1597893485
cr1901_modern
What is this form for, out of curiosity? const buf = try fp.readAllAlloc(allocator, 500, 1024);

1597893518
Cadey
is it normal for std.log to not show up in release binaries?

1597893523
cr1901_modern
Note that setting the second param to 0 causes nothing to be read, and setting to 1024 causes "endOfStream"

1597893541
andrewrk
cr1901_modern, it's a lower-level API for when you already have done a stat syscall and know the file size

1597893557
andrewrk
it's a common pattern in zig to expose both higher and lower level APIs

1597893588
andrewrk
Cadey, I think std.log is documented pretty well if you have a look at lib/std/log.zig

1597893598
Cadey
ah

1597893613
andrewrk
it's highly configurable, so whatever the behavior is that you want, I'm sure you can get it

1597893657
Cadey
what's the printf equivalent for always printing things?

1597893677
andrewrk
std.debug.print will do a mutex-protected print to stderr

1597893698
Cadey
in release binaries too?

1597893712
andrewrk
yes

1597893736
andrewrk
are you sure you don't want to just use stdout like a normal file?

1597893756
andrewrk
I can advise if you explain your use case more

1597893781
Cadey
printing a logo on startup of a program :D

1597893917
daurnimator
misc idea re: the stderr lock: when linking with libc, should we use flockfile/funlockfile?

1597893920
Cadey
okay

1597893924
Cadey
life pro tip

1597893933
Cadey
when testing something that runs the reboot() system call

1597893936
Cadey
don't run it as root

1597893941
Cadey
that will make your system reboot

1597893944
andrewrk
hmmm logo on startup... does it print anything else over the life of the program?

1597893953
andrewrk
lol

1597893999
Cadey
ikr

1597894017
andrewrk
daurnimator, yes when linking libc, std.debug.print should use flockfile/funlockfile instead of its own mutex, assuming that's what libc does internally for fprintf

1597894067
andrewrk
Cadey, IMO for the logo, just do in main() `std.io.getStdErr().writeAll(logo) catch {};`

1597894085
Cadey
:+1:

1597894168
andrewrk
daurnimator, as well as fwrite_unlocked or whatever

1597894237
Cadey
andrewrk:

1597894342
daurnimator
andrewrk: did you need a "wtf is spdx and why should I care" intro?

1597894376
Cadey
what fun is sortware unless your project names reference obscure esports players?

1597894397
cr1901_modern
no member named 'len' in struct 'std.mem.TokenIterator'. I take it you can't iterate over tokens in a for loop?

1597894401
andrewrk
daurnimator, yes

1597894402
Cadey
soft*

1597894448
andrewrk
cr1901_modern, var it = std.mem.tokenize(foo); while (it.next()) |token| { ... }

1597894479
cr1901_modern
That would've been the next thing I tried, based on the tests for tokenize. But why isn't for() supported?

1597894492
daurnimator
andrewrk: it was created by the linux foundation as a machine findable way to put the license into the file without having to put the whole license. Essentially because people keep copying files out of the linux kernel without a copyright attribution

1597894494
cr1901_modern
B/c unknown len at compile time?

1597894528
daurnimator
andrewrk: so now there are a heap of tools that compliance departments can run over their companies codebases to find SPDX lines

1597894611
fengb
for only works on slices and arrays

1597894702
andrewrk
daurnimator, ok that's a good "why I should care" :)

1597894763
andrewrk
cr1901_modern, the zig language doesn't really have any abstractions beyond the type system and function calls

1597894770
andrewrk
there's no "iterator" type

1597894776
daurnimator
general guidance is: the

1597894787
cr1901_modern
I can live with that

1597894850
andrewrk
note that `while` in this example is not doing any magic, it's just unwrapping the optional value returned by next()

1597894873
andrewrk
same as if you did `if (it.next()) |token| {...}`

1597896143
cr1901_modern
Is switch supposed to not error if I don't exhaust all cases? Happy to post code

1597896173
andrewrk
you gotta handle everything. use `else` if you need to

1597896183
cr1901_modern
Okay I think I'm doign something wrong then

1597896190
cr1901_modern
because this isn't erroring on my end

1597896201
andrewrk
post code

1597896234
cr1901_modern


1597896340
traviss
when you switch on self.dir, i believe the cases should look like `.North => self.dir = .West`

1597896518
cr1901_modern
That also doesn't cause a compiler error when I remove a case

1597896579
traviss
are you referencing the code? zig won't compile it unless its being used

1597896589
cr1901_modern
No

1597896795
leeward
Put it in a test for easy verification.

1597896807
leeward
er, call it from a test.

1597896910
cr1901_modern
Fair enough... I'll keep that in mind for next time

1597897210
cr1901_modern
and lastly, is there an string-to-int function provided by the stdlib, or should I roll my own based on the one in the docs

1597897225
cr1901_modern
would prefer not to think about this tonight lmao

1597897498
daurnimator
IIRC there is a std.fmt.parseInt ?

1597898894
cr1901_modern
Okay awesome, first AOC question done (part 1 anyway) using Zig :). Gonna commit it and call it a night.

1597899038
cr1901_modern


1597906729
scriptnull
Hi, I am trying to find the memory page size of the underlying OS from a Zig program and couldn't figure out if it is possible in Zig. Any ideas?

1597906729
scriptnull
( To add more context, I am searching for something equivalent to

1597907140
daurnimator
scriptnull: where do you want to get it from?

1597907192
daurnimator
scriptnull: zig has `std.mem.page_size`. but as discussed in

1597912260
scriptnull1
Thanks! I think os.Getpagesize() in Go returns the result of getpagesize(2) syscall linux syscall (

1597912335
daurnimator
scriptnull1: that's not a real syscall

1597912342
daurnimator
scriptnull1: did you see my link before?

1597912384
daurnimator
(and the link in there to

1597912385
scriptnull1
yes, checking it out and trying to understand what exactly is a page size and why there could be multiple page sizes.

1597912399
daurnimator
scriptnull1: a good question might be: why do you want the page size?

1597912556
scriptnull1
I am trying to build an embedded key-value store in Zig (inspired by lmdb and bolt db). As part of it, we will need to implement a B+ tree in Zig. Both lmdb and bolt db use the notion of `page` to store a node in a B+ tree. By default they seem to assign the OS's page size as the page size of pages in the B+ tree.

1597912582
daurnimator
scriptnull1: you probably just want `std.mem.page_size`

1597912596
scriptnull1
ah ok, thanks!

1597912632
scriptnull1
Do you recommend any reads (like a webpage, book chapter, video) to understand about page sizes in detail?

1597912826
daurnimator
scriptnull1: I don't have any in mind

1597912846
daurnimator
scriptnull1: the general point is: your MMU (a component in your PC) thinks in terms of "pages" of memory

1597912861
daurnimator
which means that the kernel deals mostly in pages; rather than individual bytes

1597912877
daurnimator
things like readable/writeable/executable are all done in terms of pages

1597912913
daurnimator
likewise the virtual <> physical mapping is the size of a page.

1597912983
scriptnull1
Thanks, I am reading through

1597916534
KoljaKube
Is it possible to reinterpret packed unions? The documentation is not entirely clear on that, and if it's possible I can't figure out the syntax

1597916547
andrewrk
@bitCast

1597916552
andrewrk
good night

1597916564
KoljaKube
good night

1597916960
ikskuh
huh

1597916978
KoljaKube
Still can't seem to figure out the syntax though

1597917016
daurnimator
KoljaKube: @bitCast(DestinationType, yourvalue)

1597917020
ikskuh
@bitCast(TargetType, myvalue)

1597917049
KoljaKube
const clr = @bitCast(Vec3.Color, vec);

1597917063
KoljaKube
error: container 'Vec3' has no member called 'Color'

1597917117
daurnimator
KoljaKube: that error message seems pretty explainatory...

1597917169
KoljaKube
const Vec3 = packed union { Arr: [3]f32, Coord: packed struct { x: f32, y: f32, z: f32 }, Color: packed struct { r: f32, g: f32, b: f32 }, };

1597917200
daurnimator
KoljaKube: you want `, pub const Color = packed struct { ..... }`

1597917216
KoljaKube
Oh, that split is necessary?

1597917218
daurnimator
KoljaKube: i.e. it's a sub-type, not a member

1597917267
ikskuh
i feel trolled by the compiler

1597917317
KoljaKube
I thought I didn't need that since initializing the enum worked this way

1597917322
KoljaKube
const vec = Vec3{ .Coord = .{ .x = 1, .y = 2, .z = 3 } };

1597917342
KoljaKube
OK, now the compiler crashes with "TODO buf_write_value_bytes union type"

1597917354
daurnimator
KoljaKube: oh, maybe you want: `@TypeOf(Vec3.Color)` if that works.... or you need `@TypeOf(@as(Vec3, undefined).Color)`

1597917474
KoljaKube
First does not work, second gives me "error: accessing union field 'Color' while field 'Arr' is set"

1597917552
daurnimator
`@TypeOf(@as(Vec3, .{ .Color = undefined}).Color)`

1597917706
KoljaKube
Hehe, with that I get the same crash as with the separate struct consts

1597917729
daurnimator
KoljaKube: can you paste a minimal sample to godbolt?

1597917785
KoljaKube


1597917887
ikskuh
KoljaKube: change both const to var

1597917892
ikskuh
@bitCast has problems at comptime

1597917974
ikskuh
also note that you're not casting to Vec3, but to @TypeOf(Vec3.Color)

1597917979
ikskuh
so "clr" is of that type already

1597917995
ikskuh


1597918075
ikskuh
further simplification:

1597918098
ikskuh
and the last step: var clr = vec.Color;

1597918105
ikskuh
because bitCast is not necessary for packed unions

1597918115
daurnimator
I keep getting `TODO buf_write_value_bytes union type` for everything I try :(

1597918118
daurnimator
you have a real TODO

1597918128
ikskuh
daurnimator: that's the @bitCast at comptime todo

1597918133
ikskuh
change both vec and clr to var

1597918353
KoljaKube
Wow, I would never have got this, thanks

1597918382
KoljaKube
That var/const thing is mean

1597918419
ikskuh
yeah, that's a bit weird atm

1597918433
KoljaKube
So the compiler tries to do as much as it can at comptime, and the keyword is only to force comptime execution?

1597918443
ikskuh
yep

1597918463
ikskuh
why calculate a LUT at runtime when you can do it comptime?

1597918501
KoljaKube
Because it crashes the compiler ;-)

1597918506
ikskuh
haha :D

1597918508
ikskuh
true

1597918607
KoljaKube
Just to be clear, when I assign clr it's a copy, but accessing vec.Color.r directly is not?

1597918679
ikskuh
yes

1597918721
KoljaKube
OK, I think I can use this :-)

1597918956
KoljaKube
Huh, when I leave clr var and make vec const, the compiler refuses to coerce

1597922256
danyspin97
zig-master does not compile with llvm-10.0.1 :/

1597922597
daurnimator
danyspin97: which error?

1597923119
ifreund
works for me

1597929200
danyspin97
daurnimator: missing symbols

1597929247
danyspin97
I think it is because it cannot find libclang-cpp.so

1597929344
danyspin97
yea, zig_build_libstage2 uses the built zig0 binary without adding CLANG_LIBDIRS to LD_LIBRARY_PATH

1597956339
KoljaKube
OK, so field alignment on unions is not possible yet. But having Vector members is. Aren't Vectors aligned to do their SIMD stuff?

1597958480
andrewrk
yes

1597958877
KoljaKube
But that doesn't reflect in the type's alignment, right? testing.expectEqual(@sizeOf(Mat4f.ValueType) * Mat4f.Dimension, @alignOf(Mat4f)); results in "expected 16, found 1"

1597958907
KoljaKube
(Mat4f is a union containing 4 Vector(4, f32))

1597958930
KoljaKube
I would have at least expected 4

1597958971
KoljaKube
Then again, I understand what understand what alignment means, but not how it's determined

1597960463
fengb
Hmm it sounds like a bug if the union has smaller alignment than its members

1597965053
andrewrk
yeah the union's alignment should be the alignment of the most aligned member

1597967598
vramana
Hi, How do I generate documentation on master code?

