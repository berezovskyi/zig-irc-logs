1695438857
grayhatter!~grayhatte@user/grayhatter
which zig version compiles with LLVM 16?

1695439025
grayhatter!~grayhatte@user/grayhatter
s/version/latest commit hash

1695442724
freshcoffee!~fresh@user/freshcoffee
llvm17 merge was a63a1c5cb9fd31a57e8371e6cba5f316bd3f2a65

1695442728
freshcoffee!~fresh@user/freshcoffee
try 48e2ba3b3c1e224b59e3c97ed462ac88df4d8a4b

1695442731
grayhatter!~grayhatte@user/grayhatter
freshcoffee: <3

1695445469
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
Hello, I have a problem with @bitCast flipping everything I provide it

1695445483
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
For instance, `@bitCast([_]u8{0b00000000, 0b00000001, 0b00000010, 0b00000011})` produces `0b00000011_00000010_00000001_00000000`

1695445488
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
Is there any way around this?

1695446818
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
carterd: have you tried @bitReverse ?

1695446844
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
looks like it does what your looking for.

1695446936
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
@bitReverse still is wrong, seems @byteSwap is what I want

1695446980
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
QQ: Im using zig 0.12.0. if I am trying to print in a test to see a variable. how?

1695447003
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
carterd: Ah kk glad you got your answer

1695447042
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
`std.debug.print("{any}\n", .{val});`

1695447259
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
carterd: that didn't work for me

1695447282
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
What is the error?

1695447299
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
I am running `zig test file-name.zig`

1695447334
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
it is expecting something before my try

1695447384
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
Does it not have an output or error message?

1695447403
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
might have to `const std = @import("std");`

1695447441
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
I did that

1695447484
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
How exacctly do you know there is a problem? Why isn't it working

1695447496
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
I stored my `const print = std.debug.print;`

1695447534
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
TestUnexpectedResult

1695447890
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
I recommend against storing specific functions as a variable and just referencing them yourselves. Do the following and see if it works.

1695447891
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
const std = @import("std");

1695447898
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
test "hello world" {

1695447904
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
    std.debug.print("Hello, world! {any}", .{1});

1695447907
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
}

1695447925
carterd!~carterd@cpe-70-112-70-58.austin.res.rr.com
If that doesn't work with `zig test`, you might have a toolchain issue

1695448286
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
kk

1695448521
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
carter: it works if I comment out the `try` after

1695448545
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
so it at least works

1695448630
__donutKill!~dillonko@c-98-201-221-112.hsd1.tx.comcast.net
NVM I got it to work once the value was correct

1695481695
carter!sid14827@2a03:5180:f:1::39eb
Thereâ€™s another Carter?! Oh my

