1698064225
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
so if you have a dynamic library that's not being found, how do you debug that? Is that a zig issue?

1698068062
ifreund!2940d10f8b@user/ifreund
soupladler: where is it and how are you telling zig to search for it?

1698068119
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
it's in a subfolder of the project root, and I'm telling zig to search for it by passing a LazyPath.relative()

1698068137
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
to addLibraryPath

1698068174
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
then calling linkSystemLibrary(so_name)

1698068827
ifreund!2940d10f8b@user/ifreund
soupladler: if you know the exact path you should probably just use addObjectFile()

1698068874
ifreund!2940d10f8b@user/ifreund
linkSystemLibrary() is for when the library is provided by the system and the exact path changes based on e.g. the linux distro used

1698071608
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
so .so files are also Object files? I read that static libs are

1698071657
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
I mean, it's still failing with the same error when I do exe.addObjectFile()

1698071674
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
I think I'm going to try it with a .so that I know is non-weird

1698072122
lf94!~lf94@user/lf94
ziiiiiieeeeeeeeeeeeeg

1698073188
ifreund!2940d10f8b@user/ifreund
soupladler: .so stands for "shared object"

1698074208
soupladler!~soupladle@ip2504fbe1.dynamic.kabel-deutschland.de
I knew that, but I guess I assumed there was some kind of headers and stuff that would make *fun* happen if you don't use the right compilation switches

1698076518
flower_!~archie@46.244.61.4
why is only a boolean allowed in a if statement? 

1698076565
grayhatter!~grayhatte@user/grayhatter
I assume that's because it cuts down on a class of bugs. Explicit is better than implicit and all that?

1698076587
jacobly!~jacob@2600:1f18:1fb:6300:1d52:d474:9e12:db33
and makes the code easier to read

1698076867
flower_!~archie@46.244.61.4
ok, will try to apply it to my Go code

1698076893
grayhatter!~grayhatte@user/grayhatter
jacobly: for some people

1698082768
martin2020!~martin@2603:3015:9ea:8100:6d79:8871:c7e:3222
andrewrk, (or others who know), if I want to include your SDL-built-with-zig project in my project, what is the best way to do that? Should I just have one build.zig, basically my current one merged with yours from your SDL project? Or should I have a child directory that is your project with your build.zig and include it with my top-level build.zig?

1698083489
Earnestly!~earnest@user/earnestly
Probably build.zig.zon comes into this

1698083730
Earnestly!~earnest@user/earnestly
martin2020: I.e. https://github.com/ziglang/zig/blob/master/doc/build.zig.zon.md example: https://github.com/allyourcodebase/zlib/blob/main/build.zig.zon

1698083878
martin2020!~martin@2603:3015:9ea:8100:6d79:8871:c7e:3222
Earnestly, thanks, I'll have a look

1698086730
andrewrk!~andrewrk@mail.ziglang.org
martin2020, here is a nice example for you: https://github.com/andrewrk/sdl-zig-demo

1698087563
martin2020!~martin@2603:3015:9ea:8100:6d79:8871:c7e:3222
andrewrk, thanks! I saw that project before, but I incorrectly read it as only using the system library. Now, I see that you use the system library on linux, and you use github.com/andrewrk/SDL on other platforms. Do you know what is keeping github.com/andrewrk/SDL from working on linux?

1698087616
andrewrk!~andrewrk@mail.ziglang.org
martin2020, I spent some time updating it just now - when you looked at it before it probably had some flaws

1698087663
andrewrk!~andrewrk@mail.ziglang.org
yes what is keeping it from working on linux is the way graphics drivers work. if you want to dig into it, check out this talk I did on zig showtime: https://www.youtube.com/watch?v=pq1XqP4-qOo

1698090089
Amun-Ra!~amun-ra@retro.rocks
hmm, I saw dlopen in that example and I thought #5360 is closed

1698092191
martin2020!~martin@2603:3015:9ea:8100:6d79:8871:c7e:3222
andrewrk, thanks. That talk was educational. Given how complicated the hybrid static/dynamic example is, I guess the best/most-robust strategy for now is to use linkSystemLibrary() in build.zig and rely on distro package managers for release of my app binary?

1698092243
martin2020!~martin@2603:3015:9ea:8100:6d79:8871:c7e:3222
(for using SDL in a Zig application)

1698092260
andrewrk!~andrewrk@mail.ziglang.org
martin2020, I think that's the best you can do. if you were distributing your app via steam for example, you basically just dynamically link for an ubuntu system

1698092272
andrewrk!~andrewrk@mail.ziglang.org
I should say debian instead of ubuntu

1698092300
martin2020!~martin@2603:3015:9ea:8100:6d79:8871:c7e:3222
Thank you, that is very helpful

