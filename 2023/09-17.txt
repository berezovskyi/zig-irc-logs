1694941648
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
Hi all! I want to spawn a process using std.ChildProcess. How can I run this "async". I want to be able to run it without blocking on it, so I can send messages to it through stdin

1694942081
copygirl!~koppeh@copy.mcft.net
dzoidberg: Doesn't it already run asynchronously once you call spawn?

1694942114
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
Yes but the docs say "On success must call kill or wait. After spawning the id is available.

1694942181
copygirl!~koppeh@copy.mcft.net
It doesn't say when to call it, though.

1694942218
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
So you mean it runs before I run wait?

1694942224
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
So then why is wait needed

1694942226
Earnestly!~earnest@user/earnestly
It does, like fork

1694942243
copygirl!~koppeh@copy.mcft.net
You can presumably communicate with the process (not sure how myself) and then wait when the communication is done, which I assume releases OS resources that otherwise would leak.

1694942253
Earnestly!~earnest@user/earnestly
dzoidberg: If you don't wait for your children at the end they'll be disowned, at least under unix, and reaped by PID 1

1694942313
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
i think the better solution for me would be to communicate with the process over other means

1694942323
Earnestly!~earnest@user/earnestly
I'm not sure about Windows, but the 'The Linux Programming Interface' by Kerrisk is pretty good.  Mentioned here in zig context: https://ratfactor.com/zig/forking-is-cool

1694942350
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
Ill read that thanks

1694942373
Earnestly!~earnest@user/earnestly
fork is probably a bit too low level, but childprocess should work the same way with a bunch of nice features on top

1694942429
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
I have used fork in C

1694942449
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
One other question

1694942469
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
can I pass the process's stdin handle to another thred

1694944914
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
Is there anyway to access the stdin of std.ChildProcess while it's running?

1694945640
dzoidberg!02caebc406@2604:bf00:561:2000::3d1
I figured it out myself.

1694949728
Franciman!~Franciman@mx1.fracta.dev
is there a semantics based on lambda calculus for zig?

1694949734
Franciman!~Franciman@mx1.fracta.dev
i'd be interested in reading how it works

1694969780
grayhatter!~grayhatte@user/grayhatter
dzoidberg: no childprocess is pretty limited as far as the APIs it exposes

1694969871
grayhatter!~grayhatte@user/grayhatter
I had to reimplement it myself for [reasons] but I copied a lot of what it does because it's pretty well written. Depending on what you're trying to do with it, it shouldn't be too hard to implement a "pipe" API

1694971793
andrewrk!~andrewrk@mail.ziglang.org
dzoidberg, you might be interested in the std.io.poll API

1694971816
andrewrk!~andrewrk@mail.ziglang.org
if you grep zig's codebase you can see some example uses of it

