1696124684
krowemoh!~nivethan@142.188.63.63
fingers crossed, I have a silly error with trying to pass a zig string to a C function. I've tried a few things but I think I'm not getting something. Is there an example I could look at? I could also post a snippet if that helps.

1696124805
andrewrk!~andrewrk@mail.ziglang.org
krowemoh, sure, post a snippet

1696124996
krowemoh!~nivethan@142.188.63.63
https://pastebin.com/N8z2WjTS

1696125039
krowemoh!~nivethan@142.188.63.63
I'm probably not grokking something as its just a few lines of code

1696126034
squeek502!~squeek502@user/squeek502
krowemoh, making `s` in the C code `const char * s` should fix it

1696126099
squeek502!~squeek502@user/squeek502
if that's not possible, you'd have to use `@constCast` to get rid of the const but doing that on a string literal is basically always a really bad idea

1696126326
squeek502!~squeek502@user/squeek502
or make the string data a mutable array: `var c_string = "hello".*`

1696126379
squeek502!~squeek502@user/squeek502
(`@TypeOf(c_string)` in the mutable array case is [5:0]u8)

1696126901
init!21945@user/init
looking for some resources to learn zig 

1696127693
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
init, ziglearn.org

1696127724
init!21945@user/init
the thing is I don't have a real use case for zig 

1696127725
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
then https://ziglang.org/documentation/master/ and https://ziglang.org/documentation/master/std/#A;std

1696127755
init!21945@user/init
my initial thought was I should just use this to do leetcode challenges 

1696127772
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
write your next side project in zig, whatever/whenever that may be

1696127797
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
e.g. I'm learning discrete fourier series and audio processing with it

1696127828
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
with the challenge being I'll only use stdlib

1696127842
init!21945@user/init
I am not quite there yet in my programming journey 

1696127874
init!21945@user/init
I haven't created an actual application using code,  mostly just snippets of code to solve exercises online 

1696127899
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
well, sounds like it's time to write an actual application using code

1696127925
init!21945@user/init
yes I want to implement a spec,  something simple

1696127928
init!21945@user/init
like an irc client spec 

1696127944
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
that's perfect, write a cli irc client

1696127951
init!21945@user/init
how hard could it be!

1696128042
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
I was where you are not too long ago, until someone challenged me to write a torrent client. I was at the time complaining about how torrent clients were buggy, and crashed so much. He said why don't you write one, then I used libtorrent to write one and I was told that's cheating. I took it as a challenge and that was the first time I wrote something proper. That was in C though.

1696128054
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
Then I felt confident in writing stuff, and the rest is history.

1696128087
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
So, I'll do the same to you. Find something that grinds your gears and write a better one.

1696131169
krowemoh!~nivethan@142.188.63.63
init, I'd recommend a small gopher client. You can print out the rfc and just read it to get the idea. The best thing is you can use telnet to learn the protocol.

1696131655
krowemoh!~nivethan@142.188.63.63
andrewrk: squeek502: ty, making the C side a const worked perfectly and got everything to compile now :)

1696131736
andrewrk!~andrewrk@mail.ziglang.org
happy hacking

1696154152
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
awww so close: src\main.zig:15:40: error: TODO: implement @ptrCast between slices changing the length

1696160077
metaleap!~metaleap@p200300d9874b44deea269f72b3908e95.dip0.t-ipconnect.de
intent on using `std.http` i came across news.ycombinator.com/item?id=35996334 and was wondering which somewhat-well-matured/more-perf 3rd-party http-serving pkgs would you recommend as of today?

1696160154
blueagain!~blueagain@user/blueagain
metaleap: maybe look into what bun does?

1696160169
blueagain!~blueagain@user/blueagain
according to their claims, it should be performant

1696160222
metaleap!~metaleap@p200300d9874b44deea269f72b3908e95.dip0.t-ipconnect.de
thx blueagain will check it out

1696184562
nektro!~nektro@71-34-68-44.ptld.qwest.net
metaleap, i'd take their comment with a grain of salt given they didnt specify any details about what they were making the server do or what kind of threading they were doing

1696186908
andrewrk!~andrewrk@mail.ziglang.org
fengshaun, std.mem.sliceToBytes

1696195661
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
andrewrk, hmmm it doesn't exist! there is sliceTo, but I don't have a sentinel value. I may be overcomplicating this, just need to reinterpret a []u8 to []u16.

1696195672
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
thanks for the tip!

1696196228
nektro!~nektro@71-34-68-44.ptld.qwest.net
you can ptrCast slice.ptr and then do newslice[0..slice.len/2]

1696196257
nektro!~nektro@71-34-68-44.ptld.qwest.net
casting from [*]u8 to [*]u16 shouldnt compile error

1696196321
nektro!~nektro@71-34-68-44.ptld.qwest.net
do note that a cast like that is dependent on endian-ness of the data and your target matching so it may need further processing

1696196423
nektro!~nektro@71-34-68-44.ptld.qwest.net
depending on your use case you can also pass the []u8 to a std.io.fixedBufferStream and pull out the u16's piecemeal with fbs.reader().readInt(u16, endian)

1696196470
andrewrk!~andrewrk@mail.ziglang.org
fengshaun, sorry, std.mem.sliceAsBytes

1696196497
andrewrk!~andrewrk@mail.ziglang.org
recommended to use this rather than doing math manually with the length in order to prevent easy mistakes

