1692750153
iohzrd!~iohzrd@98.97.33.87
it would be really cool if you could compile the kernel and various other utilities with nothing but the zig compiler. by "could" I guess I just mean projects having build.zig files becoming common

1692750884
Amun-Ra!~amun-ra@retro.rocks
don't forget rust

1692751393
iohzrd!~iohzrd@98.97.33.87
yeah, i had the thought, maybe we just skip those parts lol

1692751411
Amun-Ra!~amun-ra@retro.rocks
;)

1692751429
iohzrd!~iohzrd@98.97.33.87
surprising that Linus allowed rust in the kernel at all tbh

1692752610
Amun-Ra!~amun-ra@retro.rocks
right

1692752959
jeang3nie!~jeang3nie@cpe-65-25-13-9.neo.res.rr.com
Pretty sure there's still nothing in the kernel that actually requires Rust, at least until more of the Asahi code gets upstreamed.

1692752993
jeang3nie!~jeang3nie@cpe-65-25-13-9.neo.res.rr.com
I could be wrong. I switched back to FreeBSD and stopped following it as closely.

1692753099
Amun-Ra!~amun-ra@retro.rocks
isn't rust code still panics on enomem?

1692753140
jeang3nie!~jeang3nie@cpe-65-25-13-9.neo.res.rr.com
@iohzrd I did try compiling the Linux kernel with Zig a good while back. Wasn't successful.

1692753151
iohzrd!~iohzrd@98.97.33.87
not surprising

1692753168
jeang3nie!~jeang3nie@cpe-65-25-13-9.neo.res.rr.com
You can do it with Clang though, so I'm sure that if you tricked the build system it could work.

1692753169
iohzrd!~iohzrd@98.97.33.87
I imagine it to be quite a pain to get working

1692753216
jeang3nie!~jeang3nie@cpe-65-25-13-9.neo.res.rr.com
Panics - no. They made it possible to replace the allocator and use a special one for kernel code.

1692753281
jeang3nie!~jeang3nie@cpe-65-25-13-9.neo.res.rr.com
I still think it's a kludge though. All of Rust's `std` is inconsistent with errors due to ignoring OOM.

1692754713
companion_cube!~simon@user/companion-cube
they're not going to use `std` in the kernel

1692760645
iohzrd!~iohzrd@98.97.33.87
andrewrkÂ  do you mean a build.zig that generates a Makefile config, or vice versa? I was kinda imagining a little utility that would parse a Makefile config and generate a build.zig file. could be useful beyond my initial idea.

1692764010
voroskoi!924a802ee9@2604:bf00:561:2000::15c
copygirl: there are zig bindings for flecs already

1692764062
voroskoi!924a802ee9@2604:bf00:561:2000::15c
https://github.com/michal-z/zig-gamedev/tree/main/libs/zflecs

1692766015
copygirl!~koppeh@2001:41d0:701:1100::4fb1
voroskoi: Yeah and it won't work with the new package management because it's some random sub-folder.

1692766141
copygirl!~koppeh@2001:41d0:701:1100::4fb1
I wrote my own C# wrapper around some simple C bindings before, so I'd like to try my hand at my own.

1692766191
copygirl!~koppeh@2001:41d0:701:1100::4fb1
Instead of `ecs.set(world, entity, Component, .{ ... })` I'd like to write `entity.set(Component, .{ ... })`.

1692767146
voroskoi!924a802ee9@2604:bf00:561:2000::15c
i see, have fun

1692769003
copygirl!~koppeh@2001:41d0:701:1100::4fb1
Alright so I dug into it some more, because I could for the hell of me not figure out why I could not reproduce the dependency loop.

1692769027
copygirl!~koppeh@2001:41d0:701:1100::4fb1
Except for when I run "zig build test".

1692771533
mountaingoat!~mountaing@user/mountaingoat
what happened to this pattern: `const alignment = @typeInfo(Ptr).Pointer.alignment; const self = @as(Ptr, @ptrCast(@alignCast(alignment, ptr)));` for generating generic compile-time interfaces in 0.11.0? trying to port my 0.10 code over

1692771585
mountaingoat!~mountaing@user/mountaingoat
ah `const self: Ptr = @ptrCast(@alignCast(ptr));`

1692771605
mountaingoat!~mountaing@user/mountaingoat
nvm

1692775271
copygirl!~koppeh@2001:41d0:701:1100::4fb1
I finally found it! And I think it's not my fault \o/ https://github.com/ziglang/zig/issues/16932

1692821693
dutchie!~dutchie@user/dutchie
does anybody have any tips for poking around AutoHashMap instances in gdb?

1692822475
andrewrk!~andrewrk@mail.ziglang.org
dutchie, yeah, use these: https://github.com/ziglang/zig/blob/master/tools/std_gdb_pretty_printers.py

1692822512
andrewrk!~andrewrk@mail.ziglang.org
in gdb run `source foo/tools/std_gdb_pretty_printers.py`

1692822535
andrewrk!~andrewrk@mail.ziglang.org
there's also a python file there for zig_gdb_pretty_printers.py 

1692822741
dutchie!~dutchie@user/dutchie
ah that's perfect, thanks

