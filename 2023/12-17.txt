1702780443
blueagain!~blue@user/blueagain
I have basically the same issue as https://stackoverflow.com/questions/76688056/the-exported-function-is-not-shown-at-wasm , does anyone know how to export functions such that they are visible under `instance.exports`?

1702780486
blueagain!~blue@user/blueagain
with rust I can just add #[no_mangle] to the function and then I can see it

1702792378
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
blueagain, did you try `exe.export_symbol_names = &.{"my_func"};`?

1702816536
blueagain!~blue@user/blueagain
jacobly: I'm currently using zig build-exe, is there a way to specify it as a flag?

1702816555
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
`--export=my_func`

1702816592
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
`--export=[value]               (WebAssembly) Force a symbol to be exported`

1702816809
blueagain!~blue@user/blueagain
jacobly: thanks! that did the job. I can now see the function in the exports and call it!

1702830361
dutchie!~dutchie@user/dutchie
tsujp: top level const items are implicitly comptime

1702833320
blueagain!~blue@user/blueagain
is there something similar to rust's wasm-bindgen, for zig?

1702833389
blueagain!~blue@user/blueagain
I found this: https://github.com/mitchellh/zig-js which makes it to call into JS, but I'm more interested in JS calling into Zig

1702833398
blueagain!~blue@user/blueagain
makes it easy*

1702837477
Exa!exa@irc.moe
Hello, is it possible to write some code that targets multiple versions of a library, in the case of when the ABI changed?  For example by checking if some symbols exist in the library, or comparing the version number.  Thanks.

1702857126
daurnimator!~daurnimat@vultr.daurnimator.com
exa: using `dlsym` you mean?

