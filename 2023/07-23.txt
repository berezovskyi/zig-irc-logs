1690098180
andrewrk!~andrewrk@mail.ziglang.org
32-bit arm is now available with every CI build on https://ziglang.org/download/

1690112322
driib!~driib@vmi931078.contaboserver.net
Thank you! Should it work OOB on Pi Zero and the likes? Taking into account the 0.x status and that it's a dev build, of course.

1690127223
gcoakes!~gcoakes@r74-192-31-108.bcstcmta01.clsttx.tl.dh.suddenlink.net
Is `@fieldParentPtr` expected to work when the field in the parent is optional but the pointer given to `@fieldParentPtr` is not?

1690135616
ifreund!2940d10f8b@user/ifreund
gcoakes: not currently, right now given a struct { foo: ?T, } field parent pointer would require a pointer of type *?T

1690135647
gcoakes!~gcoakes@r74-192-31-108.bcstcmta01.clsttx.tl.dh.suddenlink.net
Can I just cast my pointer? Wouldn't it coerce?

1690135762
ifreund!2940d10f8b@user/ifreund
one can't coere *T to *?T unless T is non-allowzero non-optional pointer type, otherwise T and ?T have different memory layouts

1690135803
ifreund!2940d10f8b@user/ifreund
gcoakes: what you want is possible in theory, the compiler has all the information necessary to implement a @optionalParentPtr() builtin that would do what you want

1690135828
ifreund!2940d10f8b@user/ifreund
but this feature doesn't exist and I havent really seen anyone fighting for it

1690135977
gcoakes!~gcoakes@r74-192-31-108.bcstcmta01.clsttx.tl.dh.suddenlink.net
I don't know if I really need it. I'm trying to write a `multipart/form-data` parser. I want to return a reader over the part content in a function without having a parent pointer. The part reader state would be stored in the parser, and `@fieldParentPtr` would be used to get a reference to the parent during reading.

1690136010
gcoakes!~gcoakes@r74-192-31-108.bcstcmta01.clsttx.tl.dh.suddenlink.net
Probably won't use that mechanism. Still trying to figure it out.

1690153759
andrewrk!~andrewrk@mail.ziglang.org
ifreund, I added installation instructions as you suggested into README.md and added it to the release tarballs

1690155758
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
how is http.Server supposed to be used? I'm reaching unreachable code in Server.zig. I'm currently doing response = server.accept() -> response.wait() -> response.readAll() -> response.writer().writeAll() -> response.do() -> response.reset() -> response.deinit()

1690155762
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
am I missing something?

1690155877
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
same thing with wait-read-write-finish

1690155905
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
which is what the documentation says is the order of operations (comment above struct Response in Server.zig)

1690156267
nektro!~nektro@75-164-175-226.ptld.qwest.net
close but do() goes before write()

1690156512
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
nektro, thanks!

1690156525
fengshaun!~fengshaun@71-17-154-190.regn.hsdb.sasknet.sk.ca
was going through the server state machine

