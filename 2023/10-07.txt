1696694956
grayhatter!~grayhatte@user/grayhatter
what is error 134 from `zig fmt`?

1696695243
Earnestly!~earnest@user/earnestly
grayhatter: killed by sigbus?

1696695278
Earnestly!~earnest@user/earnestly
(Not being serious, exit status of 134 would be signalled by sigbus)

1696700412
grayhatter!~grayhatte@user/grayhatter
Earnestly: you're actually closer to correct than I am, it's an error code from neovim

1696700445
grayhatter!~grayhatte@user/grayhatter
which still makes it good advice, had I not figured it out, it would have started me looking into nvim too

1696701272
lf94!~lf94@user/lf94
Is there an idiomatic way to do u8 to enum?

1696701334
|vance|!~vance@vance.land
@enumFromInt

1696701373
lf94!~lf94@user/lf94
And what if it's out of range?

1696701387
lf94!~lf94@user/lf94
ACTION goes to look

1696701532
lf94!~lf94@user/lf94
hm

1696701533
lf94!~lf94@user/lf94
not ideal

1696701549
lf94!~lf94@user/lf94
The incoming u8 is from over a unix, so it could be anything

1696701556
lf94!~lf94@user/lf94
I guess aborting though is ok

1696701561
lf94!~lf94@user/lf94
yeah yeah...

1696701696
lf94!~lf94@user/lf94
could be nice to have a "default value"

1696701707
lf94!~lf94@user/lf94
@enumFromInt(default, num)

1696701921
klltkr!~klltkr@host86-150-187-143.range86-150.btcentralplus.com
lf94 what about `std.meta.intToEnum(<enum_type>, <u8>) catch .<default>;`

1696702035
lf94!~lf94@user/lf94
it's all good

1696702043
lf94!~lf94@user/lf94
technically, I should know the values coming in

1696702052
lf94!~lf94@user/lf94
Im sure the team has talked about this

1696702125
lf94!~lf94@user/lf94
I'd use this if I really really didnt know what was coming in

