1702461013
meandrain!~meandrain@2a02:2f0e:f816:2600:6554:5fdc:1446:4477
any idea how to copy a string with variable length ?

1702461194
fifr!~fifr@user/fifr
ifreund: thanks. Are there any plans to change this in the future? Or would such a change "break too much"?

1702461282
ifreund!2940d10f8b@user/ifreund
fifr: I don't think anyone would be opposed to fixing it, feel free to open a PR

1702461295
ifreund!2940d10f8b@user/ifreund
the standard library is far from being stable

1702461310
fifr!~fifr@user/fifr
ok, thanks

1702461740
ifreund!2940d10f8b@user/ifreund
meandrain: std.mem.Allocator.dupe()?

1702461790
meandrain!~meandrain@2a02:2f0e:f816:2600:6554:5fdc:1446:4477
ifreund: thanks for the hint, I'll try

1702474464
d01phi!~d01phi@ip-088-152-188-030.um26.pools.vodafone-ip.de
Hi everybody

1702474623
d01phi!~d01phi@ip-088-152-188-030.um26.pools.vodafone-ip.de
I have a C project for which code is generated by a Python script from a schema language. So far I do not see, as a Zig newbie, how this would be done entirely in Zig. Can anyone give me a hint?

1702484218
martin`!~martin202@c-68-41-109-198.hsd1.mi.comcast.net
Hi, I have a question about ComptimeStringMap. The docs say that it is optimized for a small number of keys. I have a data file with about 33 thousand key-value pairs that I am interested in making into a comptime data structure. The keys are all equal length. Is there a (likely) better choice for me than ComptimeStringMap? I will not need to iterate the data, so lookup is more important.

1702485631
martin`!~martin202@c-68-41-109-198.hsd1.mi.comcast.net
Nevermind, I think I got a good explanation :)

1702499581
nektro!~nektro@71-34-68-44.ptld.qwest.net
martin`, it's likely fine for larger sets but comptime performance is not ideal atm so that effect will definitely be noticeable

1702501482
andrewrk!~andrewrk@mail.ziglang.org
jacobly, in x86_64/CodeGen.zig what does generateLazy() do?

1702501563
andrewrk!~andrewrk@mail.ziglang.org
well I'm still curious, but I figured out what I needed (how to get access to the owner decl)

1702502204
andrewrk!~andrewrk@mail.ziglang.org
also: can I delete src/arch/x86/ ? am I correct that if any work were done on 32-bit x86 backend, it would use the same implementation as x86_64, but with some additional CPU feature set checking?

1702511744
jacobly!~jacob@ec2-3-210-217-213.compute-1.amazonaws.com
`generate` codegens a function based on a Zig function, `generateLazy` codegens a function not based on a Zig function

