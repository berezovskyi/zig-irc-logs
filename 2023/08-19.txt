1692472851
chmod222!~chmod@user/chmod222
So after waiting for 2 days on my little VM box to compile LLVM 16 on Haiku, zig1 fails compiling zig2 with a segfault

1692472854
chmod222!~chmod@user/chmod222
How anticlimactic

1692477679
voroskoi!924a802ee9@2604:bf00:561:2000::15c
I would like to link my app to a library, which is available as a .zon dependency? How should I do that? Do You have any example for that?

1692477774
voroskoi!924a802ee9@2604:bf00:561:2000::15c
I think the artifact() function should somehow expose the lib, but can not figure out

1692479742
chmod222!~chmod@user/chmod222
Basically, you add it to your build.zig.zon, i.e. ".funky_dep = .{ .url = "...", .hash = "..." }", and then reference it inside your build.zig as a normal module. You fetch the dependency with something like "const funky_dep = b.dependency("funky_dep", .{ .target = target, .optimize = optimize });" and link it to your build artifact via "some_bin.addModule("funky_dep", funky_dep.module("whatever its 

1692479748
chmod222!~chmod@user/chmod222
exported main module is called"))" and then just @import("funky_dep") it

1692479958
chmod222!~chmod@user/chmod222
You could use some code of mine as a concrete example: https://github.com/chmod222/zuxn/blob/master/build.zig. Line 18 for the main "dependency import" into the build system, lines 84 and 102 show how to add the build dependency as a concrete module to one of your artifacts, a module and a binary respectively

1692486047
voroskoi!924a802ee9@2604:bf00:561:2000::15c
chmod222: I would like to call some_bin.linkLibrary(library_from_zon) and that does not seem to work. Also it would be nice if I could set the zon library flags in its build.zig

1692486066
voroskoi!924a802ee9@2604:bf00:561:2000::15c
for various architectures for example

1692486113
voroskoi!924a802ee9@2604:bf00:561:2000::15c
so when somebody imports the library they do not have to figure out all the build details themselves

1692486169
voroskoi!924a802ee9@2604:bf00:561:2000::15c
I am afraid, that I can not articulate my intention properly. Thanks for the reply anyway.

