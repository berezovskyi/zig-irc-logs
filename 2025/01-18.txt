1737161513
andrewrk!~andrewrk@mail.ziglang.org
back

1737164634
coleman!~coleman@static.87.86.161.5.clients.your-server.de
Andrew are you learning or teaching

1737164663
coleman!~coleman@static.87.86.161.5.clients.your-server.de
Either way, good on ya

1737165762
andrewrk!~andrewrk@mail.ziglang.org
learning

1737168888
LadyKangaroo!~OctavianP@user/OctavianPark
zag

1737170352
Affliction!affliction@idlerpg/player/affliction
"Lately I found some lovely trance music compilation albums as well as tearing through Infected Mushroom's entire catalogue, and it's been pure bliss." Excellent taste.

1737171635
squeek502!~squeek502@user/squeek502
bwbuhse, here's all the merged PRs labeled 'breaking' since 0.13 if that's helpful: https://github.com/ziglang/zig/pulls?q=is%3Apr+label%3Abreaking+merged%3A%3E2024-06-06

1737171827
LadyKangaroo!~OctavianP@user/OctavianPark
I keep thinking some dude named Zig is dm'ing me 

1737171832
LadyKangaroo!~OctavianP@user/OctavianPark
wtf is this channel

1737171846
LadyKangaroo!~OctavianP@user/OctavianPark
and why is it one of the largest channels

1737171891
torque!~tachyon@user/torque
it's for the zig programming language. I encourage you to read the topic if you want more info

1737171937
LadyKangaroo!~OctavianP@user/OctavianPark
I accidentally joined. torque, sell me Zag in 30 seconds

1737171952
torque!~tachyon@user/torque
it's cool

1737171956
raceready!uid684861@user/raceready
If you zig you must zag

1737180132
LadyKangaroo!~OctavianP@user/OctavianPark
ok theres virtually no documentation on Zig

1737180141
LadyKangaroo!~OctavianP@user/OctavianPark
why the hell would I want to learn this language?

1737180158
LadyKangaroo!~OctavianP@user/OctavianPark
what's the purpose? whats the advantage? I want to learn

1737180164
LadyKangaroo!~OctavianP@user/OctavianPark
teach me

1737180595
andrewrk!~andrewrk@mail.ziglang.org
LadyKangaroo: this channel is for getting help using zig or collaborating with each other. nobody's here to argue about zig or be your personal mentor

1737180624
LadyKangaroo!~OctavianP@user/OctavianPark
andrewrk, yeah, I'd be shocked and amused if they were lol

1737180642
LadyKangaroo!~OctavianP@user/OctavianPark
but ive never heard of Zig

1737180644
LadyKangaroo!~OctavianP@user/OctavianPark
and this channel is huge

1737180648
andrewrk!~andrewrk@mail.ziglang.org
then you don't belong here

1737180657
LadyKangaroo!~OctavianP@user/OctavianPark
why not

1737180663
LadyKangaroo!~OctavianP@user/OctavianPark
maybe im a future Zig?

1737180672
LadyKangaroo!~OctavianP@user/OctavianPark
if I just knew what the fuck it was

1737180680
andrewrk!~andrewrk@mail.ziglang.org
would you like me to show you the door?

1737180714
LadyKangaroo!~OctavianP@user/OctavianPark
you want me to leave voluntarily?

1737180915
LadyKangaroo!~OctavianP@user/OctavianPark
what rule did I break?

1737181439
LadyKangaroo!~OctavianP@user/OctavianPark
I'm not going to leave voluntarily, instead, I'm going to read everything I can on zig and surprise you all and overcome expectations 

1737181449
LadyKangaroo!~OctavianP@user/OctavianPark
and become one of the top contributing members of Zig and this channel 

1737189543
tsujp!497e1f7b6a@sourcehut/user/tsujp
andrewrk: why are you learning japanese vs another language (just curious)

1737205633
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
is there somewhere in the reference that dives a bit deeper into the rules of using dot function call syntax?

1737205777
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
e.g. how is the self parameter processed, is it just whatever's the first param, e.g. if i have a function in the struct namespace Foo: fn foo(x: i32), can i call 10.foo()?

1737206588
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
tranzystorekk: I'm not sure where in reference, but an object must be of the namespaced type to call with dot syntax. If the function doesn't take the namespace type, like your example, you wuold call it as Foo.foo(10)

1737206654
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
that's what I expect, but the reference barely glosses over a short example in the struct section

1737216129
raceready!uid684861@user/raceready
What client do y'all use for irc?

1737217309
coleman!~coleman@static.87.86.161.5.clients.your-server.de
senpai and goguma

1737217864
nki!~nki@eduext-nat.unibe.ch
halloy or limechat

1737220847
raceready_!~jeramy@user/raceready
weird, it keeps adding a _ at the end of my nickname

1737220978
torque!~tachyon@user/torque
that's because your other session has not disconnected from the IRC server's perspective

1737221004
raceready_!~jeramy@user/raceready
ah, makes sense, my internet went out here for a bit

1737221079
torque!~tachyon@user/torque
it should automatically disconnect in a little bit, though you can also use the nickserv ghost command to kill it

1737221803
raceready_!~jeramy@user/raceready
`[]const u8`.  Is that an array, or a slice?  I thought that was an array, but the article I'm reading is calling it a slice.

1737221861
raceready_!~jeramy@user/raceready
actually, is this an appropriate forum for these types of questions, or should I not pollute the chat here with this stuff?

1737221966
torque!~tachyon@user/torque
it's a slice

1737221983
torque!~tachyon@user/torque
an array always has a compile-time known length, because that is part of the type

1737222014
raceready_!~jeramy@user/raceready
but doesn't the `const` mean it must be known at compile time?

1737222019
torque!~tachyon@user/torque
(though when creating an array you can use `_` to specify the compiler should infer the length, like `[_]u8{1,2,3}`

1737222050
torque!~tachyon@user/torque
no, the type is read as `slice of const u8`, i.e. the `const` indicates that the entries of the slice cannot be modified

1737222096
torque!~tachyon@user/torque
`const` itself also doesn't imply any particular comptime semantics. it's perfectly possible to have const values that are only runtime-known

1737222126
raceready_!~jeramy@user/raceready
rgr, so that const is the same as the const in `const vs var` when declaring variables.

1737222143
torque!~tachyon@user/torque
yes, essentially

1737222152
raceready_!~jeramy@user/raceready
ty ty

1737222239
torque!~tachyon@user/torque
for example, if you are slicing an array, i.e. you have `const my_array: [3]u8 = .{1,2,3}; const my_slice: []const u8 = my_array[0..];`, the slice has to point to const elements because the array storing the memory to which the slice refers is itself const

1737222292
raceready_!~jeramy@user/raceready
and if i wanted a mutable string I could do [_]u8{'J',...} instead of []const u8

1737222335
raceready_!~jeramy@user/raceready
I'm guessing I'll learn about an easier way to do that shortly though

1737222342
torque!~tachyon@user/torque
comparatively, `var my_array: [3]u8 = .{1,2,3}; const my_slice: []u8 = my_array[0..];`  lets the slice have modifiable elements because the backing array is declared `var`

1737222406
torque!~tachyon@user/torque
in short, yes, but with the caveat that since the slice points to the memory stored in the array, you can't add any more entries to it than the length of the original array

1737222415
raceready_!~jeramy@user/raceready
so you could still modify `my_slice` even though it's const.  In that cast the const is making the variable my_slice immmutable itself, but the contents can changed?

1737222457
raceready_!~jeramy@user/raceready
wow, cast = case, "can changed" = "can be changed"

1737222457
torque!~tachyon@user/torque
you can modify the members of the slice, but not the slice itself. e.g. you could do `my_slice[1] = 50`, but you can't do `my_slice = something_else`

1737222490
torque!~tachyon@user/torque
you can of course use `var my_slice` to make it so the slice itself can be modified as well

1737222493
raceready_!~jeramy@user/raceready
rgr, that I think may take a minute to get use too.  I'm not sure you can do that in Rust.

1737222495
dsal!sid13060@id-13060.lymington.irccloud.com
Hi, I'm playing with zig with a simple tool that uses ctime(3).  I wrote it on my mac, importing "time.h" and it works fine.  But it doesn't seem to want to build on my Linux machines (or github CI) because it says it can't find "time.h".  Does anyone know why that might be the case?

1737222536
torque!~tachyon@user/torque
I believe on linux you have to explicitly link libc in order to get libc headers

1737222574
raceready_!~jeramy@user/raceready
you may also have to use 'sys/time.h' on linux

1737222637
dsal!sid13060@id-13060.lymington.irccloud.com
I was able to build a C program with time.h, but yeah, this error seems relevant:   libc headers not available; compilation does not link against libc

1737222650
raceready_!~jeramy@user/raceready
ubuntu?

1737222672
dsal!sid13060@id-13060.lymington.irccloud.com
Github CI is ubuntu.  My machines are nixos.

1737222678
dsal!sid13060@id-13060.lymington.irccloud.com
I barely understand what's going on here, though.  :)

1737222742
raceready_!~jeramy@user/raceready
is `-lc` still a valid cli flag for zig?

1737222752
raceready_!~jeramy@user/raceready
https://stackoverflow.com/questions/77094241/libc-headers-not-available-compilation-does-not-link-against-libc

1737222897
dsal!sid13060@id-13060.lymington.irccloud.com
Adding `exe.linkSystemLibrary("c");` seemed to help.

1737222962
dsal!sid13060@id-13060.lymington.irccloud.com
This won't cross compile for FreeBSD, but that's not surprising, I guess.  At least it builds on the platform.

1737223093
torque!~tachyon@user/torque
I believe the canonical way to do it is `exe.linkLibC()`

1737223177
torque!~tachyon@user/torque
the reason this is needed on linux but not macOS is that all macos executables link libc by default since libc is the system call interface. Linux has a stable system call interface that doesn't require libc, so it is not linked on that platform by default

1737223193
torque!~tachyon@user/torque
since you're using libc apis however, you want this enabled on all platforms, regardless

1737223203
dsal!sid13060@id-13060.lymington.irccloud.com
Thanks, makes sense.

1737223305
torque!~tachyon@user/torque
zig doesn't bundle libc headers for the BSDs which is why cross-compilation doesn't currently work, afaik

1737223317
torque!~tachyon@user/torque
the release notes kind of touch on this in the support tier tables https://ziglang.org/download/0.13.0/release-notes.html#Tier-1-Support

1737223447
dsal!sid13060@id-13060.lymington.irccloud.com
Yeah, I didn't really expect much once I'm leaving zig proper, but figured I'd give it a go.

1737232392
dsal!sid13060@id-13060.lymington.irccloud.com
Is there a way to get more test output?  In particular, I'd like to be able to spit out the list of tests that succeed.

1737232457
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
dsal: zig build test --summary all

1737232915
dsal!sid13060@id-13060.lymington.irccloud.com
I'm doing that, but it just tells me it's running a test, and not which test it's running.

1737232925
glguy!glguy@libera/staff/glguy
I wrote my first Zig program using the first AoC task this year. Did I miss any obvious Zig idioms that I might want to read more about? https://gist.github.com/glguy/57435a819c874f4b7bec3cf394cad5f2

1737232988
dsal!sid13060@id-13060.lymington.irccloud.com
Oh hey, it's glguy

1737235397
andrewrk!~andrewrk@mail.ziglang.org
tsujp: since I'm American I probably should have picked Spanish (especially since I grew up in Arizona) but Japanese culture is fascinating and the language is a good challenge

1737235786
dsal!sid13060@id-13060.lymington.irccloud.com
Is there an easy/reasonable way to build a static binary while also using libc?

1737235876
andrewrk!~andrewrk@mail.ziglang.org
yeah, it's the default

1737235907
andrewrk!~andrewrk@mail.ziglang.org
well I suppose it's not the default on glibc linux. in that case, you can pass -target native-native-musl

1737235931
dsal!sid13060@id-13060.lymington.irccloud.com
Oh neat.  Yeah, I can't run these bins github builds for me.

1737236015
andrewrk!~andrewrk@mail.ziglang.org
oh if you want to send them across computers don't use native

1737236023
andrewrk!~andrewrk@mail.ziglang.org
use for example `-target x86_64-linux-musl`

1737236053
andrewrk!~andrewrk@mail.ziglang.org
that uses "baseline" CPU so that it will be compatible on many computers. or you can specify the cpu or cpu features explicitly

1737236217
dsal!sid13060@id-13060.lymington.irccloud.com
What's native here?

1737236328
Earnestly!~earnest@user/earnestly
dsal: The 'native' in march=native for example

1737236351
dsal!sid13060@id-13060.lymington.irccloud.com
Yeah, I just don't quite know what that means vs. the x86_64 one.

1737236360
dsal!sid13060@id-13060.lymington.irccloud.com
Just more specific instruction sets or something?

1737236421
Earnestly!~earnest@user/earnestly
dsal: The x86_64 one will use instructions common to all x86_64 architectures rather than potentially selecting instructions unique to your specific architecture

1737236424
andrewrk!~andrewrk@mail.ziglang.org
native means it uses exactly what your CPU has to offer

1737236446
dsal!sid13060@id-13060.lymington.irccloud.com
OK, that makes sense.  I've been very far away from real computers for a long time, so I don't actually know much about them.  heh

1737236450
andrewrk!~andrewrk@mail.ziglang.org
you know how newer CPUs have new, fancy machine code instructions? if you use them,then the binary cannot be run on an older CPU

1737236466
Earnestly!~earnest@user/earnestly
You'll get "illegal instruction" errors

1737236505
dsal!sid13060@id-13060.lymington.irccloud.com
Yeah, it's pretty hard to follow CPU hardware.  I've got at least three different ARM chips running Linux in here and don't pretend to understand them.

1737236541
dsal!sid13060@id-13060.lymington.irccloud.com
My day job is haskell running on a VM somewhere in a cloud or something.

1737236549
andrewrk!~andrewrk@mail.ziglang.org
just understand that by default zig gives you an executable made perfectly for your computer alone, and if you want something more portable you have to ask for it (with -target)

1737236588
dsal!sid13060@id-13060.lymington.irccloud.com
Yeah, that makes sense.  Also explains why the github arm build didn't run on my non-nixos arm machine (though I didn't quite understand the failure, just a generic "unreachable" error)

1737237128
torque!~tachyon@user/torque
<glguy> I wrote my first Zig program using the first AoC task this year. Did I miss any obvious Zig idioms that I might want to read more about?

1737237161
torque!~tachyon@user/torque
since your two lists are the same length you can loop over them together with `for (list1.items, list2.items) |a, b| {...}` instead of using the index

1737237177
glguy!glguy@libera/staff/glguy
Oh , thanks!

1737237252
andrewrk!~andrewrk@mail.ziglang.org
furthermore, since those lists are the same length, you could use instead std.MultiArrayList(struct {a: u64, b: u64})

1737237271
glguy!glguy@libera/staff/glguy
andrewrk: I have to be able to sort them independently

1737237284
andrewrk!~andrewrk@mail.ziglang.org
yep, you can absolutely do that with MultiArrayList

1737237304
andrewrk!~andrewrk@mail.ziglang.org
it will manage a single allocation for both lists, but in memory they will be all of list1 followed by all of list2

1737237335
andrewrk!~andrewrk@mail.ziglang.org
I suggest to give it a shot, this is a neat zig thing and a perfect little example to play with

1737237344
glguy!glguy@libera/staff/glguy
OK, thanks

1737237410
andrewrk!~andrewrk@mail.ziglang.org
hint: on line 32 `list1.items` would be replaced with `list.items(.a)` (assuming you used my naming convention in the struct type passed to MultiArrayList)

1737237801
Smithx10!sid243404@id-243404.helmsley.irccloud.com
Anyone have a good set of zig snippet completions?  I'm a sucker for completions :P 

1737237832
dsal!sid13060@id-13060.lymington.irccloud.com
So you can have a struct with two fields, make an array of those structs and then sort the fields separately?  That's neat magic.

1737238041
andrewrk!~andrewrk@mail.ziglang.org
it's equivalent to having an ArrayList for each field, except they all share the same length and they share the same allocation

1737238092
glguy!glguy@libera/staff/glguy
andrewrk: How do i create a MultiArrayList? I don't see any kind of init() method in https://ziglang.org/documentation/master/std/#std.multi_array_list.MultiArrayList

1737238125
Gliptic!~glip@2a01:4f8:c012:91f3::1
glguy: .empty

1737238161
Gliptic!~glip@2a01:4f8:c012:91f3::1
the allocator is passed for every insert

1737238179
glguy!glguy@libera/staff/glguy
Gliptic: I tried that and probably misunderstood what I was doing: src/main.zig:14:61: error: struct 'multi_array_list.MultiArrayList(main.main__struct_1439)' has no member named 'empty'

1737238179
glguy!glguy@libera/staff/glguy
    var list = std.MultiArrayList(struct { a: u64, b: u64 }).empty;

1737238215
andrewrk!~andrewrk@mail.ziglang.org
zig 0.13.0? use .{} instead, like this:

1737238226
andrewrk!~andrewrk@mail.ziglang.org
var list: std.MultiArrayList(struct { a: u64, b: u64 }) = .{};

1737238289
glguy!glguy@libera/staff/glguy
ah, I'm looking at documentation for the wrong version

1737238532
torque!~tachyon@user/torque
(idiomatic master would be `var list: std.MultiArrayList(struct { a: u64, b: u64 }) = .empty;` for reference)

1737238606
glguy!glguy@libera/staff/glguy
I've got a MultiArrayList. What should I be looking for in the documention of it to know what expression I should put into a for loop to iterate over it

1737238628
andrewrk!~andrewrk@mail.ziglang.org
items

1737238645
andrewrk!~andrewrk@mail.ziglang.org
it might help to look at the unit tests of this file

1737238655
glguy!glguy@libera/staff/glguy
Oh, do I do: for (list.items(.a), list.items(.b)) ?

1737238661
andrewrk!~andrewrk@mail.ziglang.org
ya

1737238674
glguy!glguy@libera/staff/glguy
OK. I thought I was trying to get a struct { a: u64 ... out of it

1737238690
andrewrk!~andrewrk@mail.ziglang.org
the idea is that MultiArrayList "breaks apart" the struct you pass to it

1737238708
Gliptic!~glip@2a01:4f8:c012:91f3::1
you would only iterate the fields you're interested in

1737238708
andrewrk!~andrewrk@mail.ziglang.org
each field is a separate array

1737239089
glguy!glguy@libera/staff/glguy
cool. I've updated my paste (it won't surprise you as it only has your recommendations) that helped a lot. thanks

1737239144
andrewrk!~andrewrk@mail.ziglang.org
what's different now: * more efficiency since you have only 1 allocation for both lists. * now you can't make the mistake of having the lengths of the arrays mismatch

1737239154
glguy!glguy@libera/staff/glguy
For passing around my stdin and stdout reader/writers to other functions is the convention to just use an anytype?

1737239174
glguy!glguy@libera/staff/glguy
or do you tend to try and name the GenericReader(...) specifically

1737239197
andrewrk!~andrewrk@mail.ziglang.org
lately I have been experimenting with std.io.AnyReader which is type-erased (non generic)

1737239302
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
andrewrk: I think you've answered this for someone before but I can't find it right now. Is there a way to expect a specific custom compile error in a test

1737239361
andrewrk!~andrewrk@mail.ziglang.org
bwbuhse: you can do this with build.zig logic

1737239372
andrewrk!~andrewrk@mail.ziglang.org
not directly with the unit test system

1737239418
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
ah okay, thanks

1737239420
andrewrk!~andrewrk@mail.ziglang.org
related issue: https://github.com/ziglang/zig/issues/513

1737239427
andrewrk!~andrewrk@mail.ziglang.org
might need to be revisited 

1737239481
freshcoffee!~fresh@user/freshcoffee
ll

1737239645
glguy!glguy@libera/staff/glguy
andrewrk: (Assuming you're not cosplaying the same "andrewrk" :) ) I think I watched your Goto 2022 video yesterday, which is what motivated me to start playing around. thanks for making it

1737239970
andrewrk!~andrewrk@mail.ziglang.org
thanks for the kind words

1737243994
grayhatter!~grayhatte@user/grayhatter
why does std.mem.readVarInt exist?

