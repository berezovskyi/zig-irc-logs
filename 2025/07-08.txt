1751951389
andrewrk!~andrewrk@mail.ziglang.org
oops, forgot to open Konversation for a few days

1751978554
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
are IO breaking changes landing in 0.15?

1751982686
JetpackJackson!739e7f3d14@user/JetpackJackson
https://zigbin.io/84b50e i keep getting stuck on trying to get the event loop to handle drawing wayland buffer thingys while also doing the polling of the different file descriptors and i think ive gotten myself into a mess

1751983271
ifreund!2940d10f8b@user/ifreund
JetpackJackson: it's invalid to call prepareRead() again before reading like that

1751983302
ifreund!2940d10f8b@user/ifreund
also that flush() is pointless, you've already flushed in flush_wayland_and_prepare_read()

1751983329
ifreund!2940d10f8b@user/ifreund
the wayland docs I linked you yesterday should make these things clear

1751983392
JetpackJackson!739e7f3d14@user/JetpackJackson
yes but now it doesnt print when i select the window or respond to close events and the extra flush was doing that

1751983470
ifreund!2940d10f8b@user/ifreund
you're not going to fix your bug by just trying things without understanding what they do

1751983500
ifreund!2940d10f8b@user/ifreund
calling readEvents() when the niri fd becomes readable is also incorrect

1751983538
JetpackJackson!739e7f3d14@user/JetpackJackson
alright i just had that to debug so ill delete it

1751983539
ifreund!2940d10f8b@user/ifreund
you must also only call cancelRead() once for each succesful prepareRead() call

1751983548
ifreund!2940d10f8b@user/ifreund
as the wayland docs explain

1751983642
JetpackJackson!739e7f3d14@user/JetpackJackson
but i was looking at waylock and there was cancelRead in the else statements of the poll revents 

1751983677
ifreund!2940d10f8b@user/ifreund
you either call readEvents() once or cancleRead() once after calling prepareRead()

1751983683
ifreund!2940d10f8b@user/ifreund
anything else is incorrect

1751983695
ifreund!2940d10f8b@user/ifreund
I don't know how to explain this more clearly, read the wayland docs

1751983718
JetpackJackson!739e7f3d14@user/JetpackJackson
im sorry

1751983760
ifreund!2940d10f8b@user/ifreund
no need to apologize, this libwayland API is a bit clunky

1751983797
ifreund!2940d10f8b@user/ifreund
but you will do yourself a favor by spending more time reading and understanding docs and less time trying things without understanding what they do

1751983804
JetpackJackson!739e7f3d14@user/JetpackJackson
but im asking dumb questions and i thought you were getting mad at me

1751983810
JetpackJackson!739e7f3d14@user/JetpackJackson
oh

1751984082
JetpackJackson!739e7f3d14@user/JetpackJackson
im just confused cause when i tried to make a queue like in the docs it was making stuff not work

1751984487
JetpackJackson!739e7f3d14@user/JetpackJackson
ok i put a cancelRead under my call to flush_and_prepare

1751990977
janvhs!8d8fee6549@user/janvhs
I looked at the docs, but didnâ€™t find any information about it. Is it possible to use my host C compiler / toolchain and libc together with zig build / zig cc?

1751991133
andrewrk!~andrewrk@mail.ziglang.org
janvhs: what would be the purpose of that? why not use your host toolchain directly

1751991164
andrewrk!~andrewrk@mail.ziglang.org
I mean vs zig cc. if you're talking about zig build that's different

1751991220
janvhs!8d8fee6549@user/janvhs
for zig cc no reason, but I am primairly interested in zig build, since the build system is really nice

1751991493
andrewrk!~andrewrk@mail.ziglang.org
that use case is not supported yet. will be necessary to make zig build a viable alternative for C/C++ projects when it comes to distro packaging

1751991809
janvhs!8d8fee6549@user/janvhs
andrewrk: thanks, yeah that was where I was coming from, because we have some patches for glibc and gcc in openSUSE. Is there a issue u know at the top of your head? Otherwise Iâ€™ll go through the issues again

1751991851
andrewrk!~andrewrk@mail.ziglang.org
no, I just checked. I can make one

1751992245
janvhs!8d8fee6549@user/janvhs
andrewrk: sure thanks, would definitely be interesting for me. Is it still part of Zigs goal generally to be a C/C++ build system? I heard you talk about potentially eliminating clang with arocc in you presentation

1751992258
andrewrk!~andrewrk@mail.ziglang.org
janvhs: here you go: https://github.com/ziglang/zig/issues/24366

1751992347
janvhs!8d8fee6549@user/janvhs
andrewrk: Thank you ðŸ«¡

1751998213
Smithx10!sid243404@id-243404.helmsley.irccloud.com
 What version of zig will have the io interface?

1751998950
andrewrk!~andrewrk@mail.ziglang.org
Smithx10: it's unlikely to land in 0.15 which is releasing in about 1 month

1751999112
Smithx10!sid243404@id-243404.helmsley.irccloud.com
Can't wait to see how it goes

1751999153
Smithx10!sid243404@id-243404.helmsley.irccloud.com
Has any other language every implemented io like this?

1751999213
Smithx10!sid243404@id-243404.helmsley.irccloud.com
I've been waiting to start using zig at work until the async question got flushed ut

1751999225
Smithx10!sid243404@id-243404.helmsley.irccloud.com
Gonna be nice to get off go

1751999256
Smithx10!sid243404@id-243404.helmsley.irccloud.com
super fast compile, and good async support.... no turning back after that

1751999345
Smithx10!sid243404@id-243404.helmsley.irccloud.com
That demo you did in the latest roadmap video was fire.

1751999831
JetpackJackson!739e7f3d14@user/JetpackJackson
hurrah i finally got the niri stuff to print while the cat is displaying in my pseudo-status-bar thing

1751999839
JetpackJackson!739e7f3d14@user/JetpackJackson
now to display text on the bar..

1752000168
Smithx10!sid243404@id-243404.helmsley.irccloud.com
What is stopping illumos from being on the https://ziglang.org/download/ ?

1752002691
kenrap!~kenrap@user/kenrap
I would love to see Zig adopt the Python string formatting spec. Trying to figure out how to specify the padding alignment from a runtime int variable was not very easy to discover or figure out.

1752007003
JetpackJackson!739e7f3d14@user/JetpackJackson
Hmm how come my program is using 8% of the CPU?

1752008848
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
you could use tools to see where the cpu cycles go to: valgrind --tool=callgrind and friends. some kind of busy polling in your event loop?

1752009171
squeek502!~squeek502@user/squeek502
kenrap, not sure if this would interest you, but you could actually implement python-like string formatting as a third-party library; zig's formatting implementation is all just normal zig code

1752009369
JetpackJackson!739e7f3d14@user/JetpackJackson
ok i got callgrind and cachegrind logs but idk how to read/understand them

1752009400
JetpackJackson!739e7f3d14@user/JetpackJackson
also they both say in the beginning a lot of "Warning: DWARF2 reader: Badly formed extended line op encountered" until i move around

1752009633
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
 i use kcachegrind to visually display the *grind data. now i wonder, if there are any special zig tools for profiling (besides beloved poop, which is a different use case)

1752009684
JetpackJackson!739e7f3d14@user/JetpackJackson
hmm if i do a ReleaseSafe i dont get the DWARF2 stuff

1752010146
JetpackJackson!739e7f3d14@user/JetpackJackson
hmm ok kcachegrind is showing some interesting stuff

1752010158
JetpackJackson!739e7f3d14@user/JetpackJackson
is there a preferred image service to use to upload images?

1752010799
JetpackJackson!739e7f3d14@user/JetpackJackson
https://imgur.com/a/FIUkVC9 ok this link is a screenshot of what i get from kcachegrind, im not sure how to use it to fix my code tho

1752011236
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
you called poll, flush and similar functions 700.000 times. is this intended?

1752011270
JetpackJackson!739e7f3d14@user/JetpackJackson
no :(

1752011378
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
maybe your poll listens to events you dont need. maybe you have a timeout for poll that is too small.

1752011452
JetpackJackson!739e7f3d14@user/JetpackJackson
lemme send my code real quick

1752011501
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
or you render frame based, every single frame, when there was no change (a clock for example could only tick once a sec)

1752011557
JetpackJackson!739e7f3d14@user/JetpackJackson
i havent even done the clock yet rip

1752011571
JetpackJackson!739e7f3d14@user/JetpackJackson
https://zigbin.io/704bdc

1752011601
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
i suspect poll returns on events you dont need and you dont process. but every time poll retuns suchn event you call a lot of heavy functions.

1752011680
JetpackJackson!739e7f3d14@user/JetpackJackson
how can i efficiently only poll for the events i want then, so i dont have to "filter" out events that i dont want?

1752011693
ifreund!2940d10f8b@user/ifreund
you are not processing any Wayland events with that loop

1752011710
ifreund!2940d10f8b@user/ifreund
so poll always tells you that there are Wayland events to be read

1752011725
ifreund!2940d10f8b@user/ifreund
but you never read them so poll() returns instantly

1752011734
ifreund!2940d10f8b@user/ifreund
and you busy loop

1752011807
ifreund!2940d10f8b@user/ifreund
you nees to check for POLLIN on the wayland FD and read the Wayland events if set and cancel the read if not set

1752011848
JetpackJackson!739e7f3d14@user/JetpackJackson
oh

1752011853
ifreund!2940d10f8b@user/ifreund
right now you always cancel the read even if there are Wayland events to be read

1752011861
JetpackJackson!739e7f3d14@user/JetpackJackson
oops

1752011905
JetpackJackson!739e7f3d14@user/JetpackJackson
i dont know what events i would read from the wayland events cause the only wayland-y event that im wanting is the niri workspace stuff but that comes from the niri socket

1752012013
ifreund!2940d10f8b@user/ifreund
you dont need to care what Wayland events are incoming, just let libwayland read them and deal with them

1752012043
ifreund!2940d10f8b@user/ifreund
if you want to process some register a listener function with libwayland

1752012053
mortmann!~mortmann@p5dcb2758.dip0.t-ipconnect.de
can you tell wayland only to return the event types you need?

1752012103
ifreund!2940d10f8b@user/ifreund
mortmann: more or less, but that's not the problem here

1752012281
JetpackJackson!739e7f3d14@user/JetpackJackson
ok i added that and the cache stuff still looks not great

