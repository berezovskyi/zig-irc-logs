1738988579
shamelessshill!~shameless@user/shamelessshill
Will Zls v 0.13.0 work with zig 0.14.0?

1738988601
shamelessshill!~shameless@user/shamelessshill
I have build zig from source, and `zig version` shows `0.14.0`. I'm trying to set up zls to use with CoC

1738988725
shamelessshill!~shameless@user/shamelessshill
Apparently not... 

1738988739
shamelessshill!~shameless@user/shamelessshill
Any way to get zls working with zig's HEAD?

1738988750
shamelessshill!~shameless@user/shamelessshill
I'd rather not downgrade zig to 0.13.0 

1738988788
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
shamelessshill: build zls from source, they track near-master

1738988826
shamelessshill!~shameless@user/shamelessshill
rockorager: I am building from source, but using release tag 0.13.0. So you're saying just build HEAD (for zls)?.

1738988830
shamelessshill!~shameless@user/shamelessshill
I'll give it a shot and see.

1738988888
shamelessshill!~shameless@user/shamelessshill
"required Zig version: 0.14.0-dev.3042+317722b37 (or greater) actual   Zig version: 0.14.0

1738988891
shamelessshill!~shameless@user/shamelessshill
"

1738988894
shamelessshill!~shameless@user/shamelessshill
:(

1738988971
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I'm not sure why your zig version is showing 0.14.0 instead of a dev version

1738989135
grayhatter!~grayhatte@user/grayhatter
rockorager: I assume because it's using semver

1738989210
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
right but if you build from source it automatically sets the version, and you would only get 0.14.0 if you were on the 0.14.0 tag

1738989235
shamelessshill!~shameless@user/shamelessshill
Great... I checkout out 0.13.0 of zig itself, and now it needs LLVm 18.x :|

1738989269
shamelessshill!~shameless@user/shamelessshill
rockorager: I did build zig HEAD... and `zig version` does show `0.14.0` (without a commit suffix).

1738989273
grayhatter!~grayhatte@user/grayhatter
shamelessshill: install whatever version of zig you want

1738989295
grayhatter!~grayhatte@user/grayhatter
then build and install zls from source... IIRC the master branch tracks zig master

1738989301
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
https://github.com/ziglang/zig/blob/a8af36ab10562e58ba237fa3dcc582228197402b/build.zig#L250-L308

1738989393
shamelessshill!~shameless@user/shamelessshill
Like so? " zig build -Dversion-string-="0.14.0" -Doptimize=ReleaseSafe" ... gives the same error.

1738989442
shamelessshill!~shameless@user/shamelessshill
The zig commit I built off of is `6a6e72fff820fb641aa1b00700f6835430dae72e` which is from yesterday.

1738989487
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I'm not sure why the version is not coming out right, but you could download the binary from the website, build zls with it, and then you'd be set

1738989502
andrewrk!~andrewrk@mail.ziglang.org
0.14.0 is not released, if you use that version string parameter you are only going to confuse yourself and those trying to help you

1738989573
shamelessshill!~shameless@user/shamelessshill
So I have to install LLVM18? Let me try with that and see (for 0.13.0).

1738989759
andrewrk!~andrewrk@mail.ziglang.org
why bother building an old version from source anyway? if you're not trying to build latest master just grab upstream-provided 0.13.0

1738990088
shamelessshill!~shameless@user/shamelessshill
andrewrk: I'm just exploring everything right now. I wanted to build from source and set everything up so that I could keep upgrading easily, plus maybe contribute some day :)

1738990390
andrewrk!~andrewrk@mail.ziglang.org
sounds to me like you want to be on latest master then

1738990867
shamelessshill!~shameless@user/shamelessshill
andrewrk: Yeah... so building from `master` worked, and I tested some basic stuff. I was just trying to set up Vim + zls + CoC.. got stuck there.

1738990880
shamelessshill!~shameless@user/shamelessshill
Not really a biggie to be honest, but would be nice to have lsp.

1738990959
grayhatter!~grayhatte@user/grayhatter
shamelessshill: as of 2 weeks ago, I was able to get zls to build on zig master... what issues are you having?

1738991044
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
it’s failing the version string check

1738991057
grayhatter!~grayhatte@user/grayhatter
also, the zls discord is often more likely to be helpful when it comes to installing zls

1738991144
grayhatter!~grayhatte@user/grayhatter
rockorager: right, but my understanding that was with a broken version of zig, which is now fixed?

1738991180
grayhatter!~grayhatte@user/grayhatter
he said building from master seemed to work, but then it would be nice to have an LSP which I infer to mean zls is still not working as expected

1738991185
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
oh, didn’t seem to me like the version was fixed?

1738991230
shamelessshill!~shameless@user/shamelessshill
grayhatter: What rockorager said - it gives an error with the version strings

1738991248
grayhatter!~grayhatte@user/grayhatter
and, no matter what the problem actually comes out to be 0.14.0-dev.3042+317722b37 is less than 0.14.0, so that error makes no sense no matter how you account for it

1738991272
shamelessshill!~shameless@user/shamelessshill
I think it's okay... I've got llvm18 installed, and now am building zig 0.13.0. WIll see if the zls build works with that :)

1738991274
grayhatter!~grayhatte@user/grayhatter
0.14.0 is greater than 0.14.0-anything

1738991297
shamelessshill!~shameless@user/shamelessshill
There was the `dev` suffix there as well. So not sure if that matters 

1738991302
grayhatter!~grayhatte@user/grayhatter
shamelessshill: you'll need to checkout the v0.13 branch of zls

1738991325
shamelessshill!~shameless@user/shamelessshill
I did, grayhatter 

1738991328
grayhatter!~grayhatte@user/grayhatter
shamelessshill: usually... truncating parts of the error makes it harder to diagnose any given error

1738991404
grayhatter!~grayhatte@user/grayhatter
most of the advice you got is assuming you didn't change the error message 

1738991464
shamelessshill!~shameless@user/shamelessshill
grayhatter: this was the full error message (zls on tag 0.14.0, zig built on master) - https://paste.rs/gOSbm.txt

1738991481
shamelessshill!~shameless@user/shamelessshill
Why would I change the error message? :P

1738991497
grayhatter!~grayhatte@user/grayhatter
> There was the `dev` suffix there as well. So not sure if that matters

1738991546
grayhatter!~grayhatte@user/grayhatter
you're also changing or setting the version string yourself for some unknown reason

1738991547
shamelessshill!~shameless@user/shamelessshill
So, zig @ 0.13.0 + zls @ 0.13.0 built just fine.

1738991553
shamelessshill!~shameless@user/shamelessshill
I think I can work with this.

1738991586
shamelessshill!~shameless@user/shamelessshill
grayhatter: That was from a suggestion I got from rockorager (re:  https://github.com/ziglang/zig/blob/a8af36ab10562e58ba237fa3dcc582228197402b/build.zig#L250-L308)

1738991603
shamelessshill!~shameless@user/shamelessshill
That still gave the same error message though.

1738991656
grayhatter!~grayhatte@user/grayhatter
well, first, --version-string isn't the same thing as --version-string-

1738991704
grayhatter!~grayhatte@user/grayhatter
second; I assume rockorager meant you should use --version-string when compiling *zig* but it appears your only trying version string when compiling zls

1738991749
grayhatter!~grayhatte@user/grayhatter
second.2, rockorager what did you mean to suggest? because I doubt that's what you intended?

1738991778
grayhatter!~grayhatte@user/grayhatter
third, someone should file a bug report on zls because they're wrong to emit that compile error given that error string

1738991981
shamelessshill!~shameless@user/shamelessshill
I got everything set up with v0.13.0, but zls seems to be crashing - https://paste.rs/0IWZB.txt

1738991999
shamelessshill!~shameless@user/shamelessshill
I suppose I'll ask the zls folks about this.

1738992007
shamelessshill!~shameless@user/shamelessshill
grayhatter: fair point.

1738992025
shamelessshill!~shameless@user/shamelessshill
Though, zig itself (built from master) was just showing "0.14.0" with no suffix when built

1738992050
grayhatter!~grayhatte@user/grayhatter
shamelessshill: that seems unlikely

1738992056
andrewrk!~andrewrk@mail.ziglang.org
it doesn't do that

1738992062
grayhatter!~grayhatte@user/grayhatter
^ this

1738992112
shamelessshill!~shameless@user/shamelessshill
Okay, so here's what I did - cloned the repo, and followed the build instructions here - https://github.com/ziglang/zig/wiki/Building-Zig-From-Source#for-macos--homebrew (using llvm 19.1.7)

1738992183
grayhatter!~grayhatte@user/grayhatter
shamelessshill: `which zig`

1738992193
grayhatter!~grayhatte@user/grayhatter
`zig version`

1738992203
shamelessshill!~shameless@user/shamelessshill
/Users/<redacted>/dev/forks/zig/build/stage3/bin/zig

1738992230
shamelessshill!~shameless@user/shamelessshill
I didn't set any prefix ... so I presume that is the correct path? (`build` directory inside the cloned repo).

1738992248
grayhatter!~grayhatte@user/grayhatter
looks right to me?

1738992249
shamelessshill!~shameless@user/shamelessshill
Now, `zig verson` shows `0.13.0` 

1738992290
shamelessshill!~shameless@user/shamelessshill
Am on macOS 14.6.1 (Sonoma) - shouldn't make a difference though, I assume.

1738992367
shamelessshill!~shameless@user/shamelessshill
`zig env` - https://paste.rs/zsoZF.txt

1738992461
shamelessshill!~shameless@user/shamelessshill
Okay, since zls doesn't seem to be working for me anyway, I think I'll switch back to `master` and build clean. Will report back on the version string this time around.

1738992569
grayhatter!~grayhatte@user/grayhatter
I suspect it's much more likely that zls did something unfortunate instead of zig building itself with the wrong version string

1738993142
andrewrk!~andrewrk@mail.ziglang.org
new devlog entry: https://ziglang.org/devlog/2025/#2025-02-07

1738993282
grayhatter!~grayhatte@user/grayhatter
🎉

1738993468
grayhatter!~grayhatte@user/grayhatter
andrewrk any objections if I submit it to creamsicle reddit?

1738993555
andrewrk!~andrewrk@mail.ziglang.org
no objections

1738993559
shamelessshill!~shameless@user/shamelessshill
Phew... okay. I did the __exact__ same steps, and now it's showing `0.14.0-dev.3145+6a6e72fff`

1738993569
shamelessshill!~shameless@user/shamelessshill
Full data: https://paste.rs/LGbRL.txt

1738993743
shamelessshill!~shameless@user/shamelessshill
Though building zls (`master`) had build failures: https://paste.rs/nLTfo.txt

1738993756
shamelessshill!~shameless@user/shamelessshill
(built with: `zig build -Doptimize=ReleaseSafe`).

1738993774
shamelessshill!~shameless@user/shamelessshill
Still, I think I can live without zls... so it's okay.

1738994569
grayhatter!~grayhatte@user/grayhatter
andrewrk: did you compare it against muslibc?

1738994592
andrewrk!~andrewrk@mail.ziglang.org
yeah it's way faster than musl

1738994610
grayhatter!~grayhatte@user/grayhatter
rip libc 

1738994620
grayhatter!~grayhatte@user/grayhatter
you won't be missed

1738994629
grayhatter!~grayhatte@user/grayhatter
( ok, maybe a little missed :P )

1738994639
andrewrk!~andrewrk@mail.ziglang.org
lol

1738994883
grayhatter!~grayhatte@user/grayhatter
andrewrk: assuming it was implemented reasonably, would zig accept a pr for distributed build / distributed caching? I'm thinking about some build systems at $OLDJOB and one of the nice things for huge builds is that many of the complation units were prebuilt... and if they weren't the remote build farm was always faster

1738994903
grayhatter!~grayhatte@user/grayhatter
or is that outside the scope for zig directly?

1738994982
grayhatter!~grayhatte@user/grayhatter
asking because I've been wanting to upgrade my threadripper to the 79XX-X series (for gaming), but don't wanna give up all the cores I currently have lol

1738996737
andrewrk!~andrewrk@mail.ziglang.org
grayhatter: sounds interesting. I probably have opinions about how such a thing should be implemented but not a lot of time to offer to collaborate on it at the moment

1738997235
grayhatter!~grayhatte@user/grayhatter
andrewrk: don't expect anything anytime soon, I've got a lot of squirels I'm already chasing 

1738998004
andrewrk!~andrewrk@mail.ziglang.org
me too

1739028087
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
...do you all, as me, keep typing `;` to switch statements *all* *the* *time*?

1739028113
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
s/as/like/

1739028707
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
netvor: yes

1739028718
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
ok, thanks :D

1739028744
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
it's not like i'm complaining, Zig syntax is really awesome, it's a price worth paying

1739036858
grayhatter!~grayhatte@user/grayhatter
netvor, you'll get used to it

1739036869
grayhatter!~grayhatte@user/grayhatter
after about a year, I almost never do it anymore

1739036874
grayhatter!~grayhatte@user/grayhatter
....almost.... :D

1739036881
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
well, i've been trying to for couple months

1739036887
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
so year, you say :D

1739036891
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
ok :D

1739036968
taylan!~taylan@user/taylan
commas just feel wrong there tbh

1739036986
grayhatter!~grayhatte@user/grayhatter
taylan: they feel right to me

1739036993
grayhatter!~grayhatte@user/grayhatter
it's the middle of a statement

1739037015
grayhatter!~grayhatte@user/grayhatter
you shouldn't use ; within an "atomic" decision

1739037037
grayhatter!~grayhatte@user/grayhatter
atomic; using the CS theory meaning, not the ISA meaning

1739037912
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
i don't know CS but it does sound reasonable..  personally i kind of just assume that allowing `;` would necessarily make certain other expressions impossible

1739038092
grayhatter!~grayhatte@user/grayhatter
, means continue and ; means end. You don't want the compiler to stop processing the switch half way through it, do you?

1739038155
coleman!~coleman@static.87.86.161.5.clients.your-server.de
grayhatter: what about hacking on build rules for something like Buck2?

1739038186
grayhatter!~grayhatte@user/grayhatter
coleman: only one problem with that, zig build is good, and buck is trash

1739038205
grayhatter!~grayhatte@user/grayhatter
so I'd rather not ruin something good by strapping it to something bad

1739038213
coleman!~coleman@static.87.86.161.5.clients.your-server.de
I'll take your word for it :) I've only used Bazel because Envoy made me

1739038216
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
well how the compiler processes the switch is not necessarily dependent on syntax decision, is it?

1739038273
grayhatter!~grayhatte@user/grayhatter
coleman: all the bigtech build systems are cursed by the fact they're designed to be useful in a monorepo

1739038343
grayhatter!~grayhatte@user/grayhatter
a monorepo can never be done correctly, thus build systems built to cater to something fundementally broken, themselves will be plagued by that handicap

1739038394
grayhatter!~grayhatte@user/grayhatter
bazel for as good as it is, has the same problems

1739038477
coleman!~coleman@static.87.86.161.5.clients.your-server.de
I do want a tool for - at least - polyglot repos. It doesn't have to be a big tech nuclear chainsaw.

1739038615
coleman!~coleman@static.87.86.161.5.clients.your-server.de
Zig build, if you squint, isn't too different from starlark in the sense that it's... a function with access to standard stuff and extensible

1739038671
coleman!~coleman@static.87.86.161.5.clients.your-server.de
better, even. since starlark is worse-python

1739038709
grayhatter!~grayhatte@user/grayhatter
I used to have a lot more complaints about build.zig until I read ^1 and realized it actually was really simple, and it was just my own skill issue

1739038726
grayhatter!~grayhatte@user/grayhatter
^1: https://github.com/andrewrk/CarmensPlayground/blob/main/build.zig

1739041334
motiejus!~motiejus@88.223.107.21
re. allocator — curious how would that compare to mimalloc and other "alternative fast" allocators (not planning to run tests myself, would love to read results if anyone does :) )

1739043272
reykjalin!7e28cf3a41@user/reykjalin
I have an enum; `const Pos = enum(usize) { _ }` that I'm moving to a separate file. Is it possible to set it up so I can `const Pos = @import("pos.zig");` with some sort of @This(); trick?

1739043286
reykjalin!7e28cf3a41@user/reykjalin
This is as opposed to needing to do `const Pos = @import("pos.zig").Pos;`

1739043437
Gliptic!~glip@2a01:4f8:c012:91f3::1
reykjalin: no, files can only be structs, not enums

1739044394
reykjalin!7e28cf3a41@user/reykjalin
ACTION feels sad

1739044918
reykjalin!7e28cf3a41@user/reykjalin
thanks for confirming!

1739045361
andrewrk!~andrewrk@mail.ziglang.org
motiejus: it would be valuable work to get those allocators building with zig and adapted to use zig allocator interface so we can play with them, and then exploring the problem space

1739045391
andrewrk!~andrewrk@mail.ziglang.org
a program that tries a barrage of tests, first correctness, then perf, and puts the results into a giant table would be fantastic

1739046753
ezzieyguywuf!~Unknown@user/ezzieyguywuf
does anyone have any experience with https://github.com/zig-gamedev/zmath ? is this a generally stable/safe dependency to use in my project?

1739047287
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I think maybe not, only 5 commits in the repo, no official release

1739047305
ezzieyguywuf!~Unknown@user/ezzieyguywuf
*sigh* I don't rly want to reimplement this stuff myself, though I don't care about simd (for now) so maybe it won't be too painful

1739047473
ezzieyguywuf!~Unknown@user/ezzieyguywuf
https://github.com/griush/zm seems ok

1739047861
LAC-Tech!~lewis@granite-phrase.bnr.la
what's a good pattern for a StringHashMap with heap allocated keys? I guess just wrap remove() with something that frees the keys on success?

1739048679
ifreund!2940d10f8b@user/ifreund
zmath is definitely older that 5 commits

1739048703
ifreund!2940d10f8b@user/ifreund
it was split out of the zig-gamedev monorepo at some point I guess

1739049379
grayhatter!~grayhatte@user/grayhatter
number of commits is a metric like lines of code

1739049423
grayhatter!~grayhatte@user/grayhatter
it's very often inversely correlated with quality 

1739049629
grayhatter!~grayhatte@user/grayhatter
ezzieyguywuf: here I would encourage you to "own" your dependencies

1739049668
grayhatter!~grayhatte@user/grayhatter
does it do what you want right now? and in the hypothetical that it breaks, do you believe that you would be able to fix it yourself?

1739049702
grayhatter!~grayhatte@user/grayhatter
if the answer isn't an easy yes, to both, then you shouldn't consider allowing it to become one of *your* dependencies

1739049858
grayhatter!~grayhatte@user/grayhatter
you're obviously a motivated, person. Don't stay stuck in the trap thinking that 1) you can't just do it yourself (which you mentioned, you can, you just don't want to) or 2) that you couldn't do it better than they did... start with the repo who's code you think on a glance looks better... then if you find out something isn't right, just assume you'll be able to fix it yourself

1739049882
grayhatter!~grayhatte@user/grayhatter
then which repo to add a dependency on is an easy decision, because you can fix it later if you have to

1739050070
grayhatter!~grayhatte@user/grayhatter
lol, yeah if you forced me to include one or the other as a dep... I'd go with zmath over zm

