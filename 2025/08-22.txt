1755848605
dutchie!~dutchie@user/dutchie
when describing both else and _ in switching on non-exhaustive enums, is the comment in the code sample wrong? https://ziglang.org/download/0.15.1/release-notes.html#switch-on-non-exhaustive-enums

1755848618
dutchie!~dutchie@user/dutchie
it compiles and runs fine for me

1755848637
dutchie!~dutchie@user/dutchie
should it say "previously did not compile" or something

1755851905
ifreund!2940d10f8b@user/ifreund
yes, the comment in the code is wrong and the text above the code is right

1755858963
netvor!~netvor@2a00:ca8:a1f:cd0:b2de:c866:be10:f582
WAT, 0.15.1 .. a very exciting weekend guarranteed!  tanks and congrats! :-)

1755878751
Daimanta!~Daimanta@2a02-a447-c39e-0-292d-f480-9946-8ae.fixed6.kpn.net
Hi, is anybody present here at the moment, I would like to have some feedback about a possible bug

1755878772
triallax!~triallax@lacerte/triallax
irc etiquette is to ask your question directly

1755878848
Daimanta!~Daimanta@2a02-a447-c39e-0-292d-f480-9946-8ae.fixed6.kpn.net
Ok, very well. I am in the process of trying to switch to Zig 0.15. While doing so I found a nasty situation regarding compilation. When running WSL and using the Windows filesystem, I can no longer finish any compilation

1755878882
Daimanta!~Daimanta@2a02-a447-c39e-0-292d-f480-9946-8ae.fixed6.kpn.net
This only happens when I am using the Windows filesystem in a transparent matter e.g. /mnt/c/MyDir/MyNestedDir

1755878951
Daimanta!~Daimanta@2a02-a447-c39e-0-292d-f480-9946-8ae.fixed6.kpn.net
This is blocking my current development flow as I use the windows fs to share my code between Windows and a virtual Linux environment

1755883867
triallax!~triallax@lacerte/triallax
so, i had to implement a couple functions of my own for Reader and Writer 

1755883890
triallax!~triallax@lacerte/triallax
discardUntilNone and streamUntilDelimiter (which takes a sequence of bytes rather than a single byte)

1755883907
triallax!~triallax@lacerte/triallax
in my case i'm using them with an allocating writer

1755883918
triallax!~triallax@lacerte/triallax
well i guess only streamUntilDelimiter uses that, but anyway

1755883939
triallax!~triallax@lacerte/triallax
i was surprised to see it's actually quite a bit faster if i use an array list directly rather than go through the writer interface

1755884015
triallax!~triallax@lacerte/triallax
i have no conclusion just thought this was an interesting observation

1755884263
triallax!~triallax@lacerte/triallax
i kinda expected llvm would devirtualise the calls or something because the function gets inlined

1755895153
JetpackJackson!739e7f3d14@user/JetpackJackson
I have a program where I specifically don't want buffered printing (wordle game where I print, wait for input, print, etc), right now I have a flush after every print but that feels wrong. What is the right way to do this?

1755895180
JetpackJackson!739e7f3d14@user/JetpackJackson
I have a program where I specifically don't want buffered printing (wordle game where I print, wait for input, print, etc), right now I have a flush after every print but that feels wrong. What is the right way to do this?

1755895233
dutchie!~dutchie@user/dutchie
that sounds not too far off the right way. if you have an unbuffered writer and .print() to it you'll end up with a write syscall for each "chunk" of output

1755897196
bblack!~bblack@wikimedia/bblack-WMF
JetpackJackson: yeah.  probably you'd flush output either just before each input or just after each "line" of output, either way depending on needs.

1755897219
bblack!~bblack@wikimedia/bblack-WMF
you almost always want /some/ buffering somewhere, you just don't want it to get in the way of timely outputs, hence the flushing.

1755897266
bblack!~bblack@wikimedia/bblack-WMF
"don't forget to flush" isn't just about Zig, it's about everything.  You'd be surprised how long people leave "oops I forgot to flush" bugs in production C code, too :)

1755897279
JetpackJackson!739e7f3d14@user/JetpackJackson
ah ok

1755897283
JetpackJackson!739e7f3d14@user/JetpackJackson
thanks!

1755899217
salamonca!~salamonca@user/salamonca
anyone use codex? How do you control what gpt model codex uses?

1755904649
andrewrk!~andrewrk@mail.ziglang.org
https://github.com/ziglang/zig/wiki/Contributing#strict-no-llm--no-ai-policy

1755904977
Affliction!affliction@idlerpg/player/affliction
"We are makers, not consumers." words to live by

1755906003
salamonca!~salamonca@user/salamonca
if you are a developer that does not use AI then you will get left in the dust.  I have been a software developer as a profession since 1999, so for me it is not a crutch, it is a reality.

1755906298
andrewrk!~andrewrk@mail.ziglang.org
salamonca: you can either lose that attitude, or get lost. choose your next words in this channel carefully

1755906420
salamonca!~salamonca@user/salamonca
Can you kindly clarify which part contains attitude?  Sincere question.  I am absolutely not intending to insult anyone, just giving my honest opinion.  Please take this sincerelyu

1755906444
hasel!~hasel@user/hasel
what does getting left in the dust mean? as if writing software is a race

1755906522
salamonca!~salamonca@user/salamonca
In means when you are working in a corporation, the other devs are going to be using tools to their advantage.  They will be more productive and be more successful in their job, leaving those that do not take advantage of tools in the dust.

1755906602
salamonca!~salamonca@user/salamonca
If you work for yourself or write code as a hobby or just as a learning exercise then none of that applies, of course

1755906864
Affliction!affliction@idlerpg/player/affliction
For a while. But they won't have to (and thus, won't bother) understand what their code does, and their general problem solving ability will atrophy, the models will continue being trained on their last generation's mediocre output, and in a few years, us holdouts will be the only ones with any knowledge of what the program does, and why it works (or, doesn't).

1755906946
salamonca!~salamonca@user/salamonca
Affliction: Absolutely.  So this means you need to do both: Understand the code and use the tools.  Then you will be top shelf.

1755906976
salamonca!~salamonca@user/salamonca
...and THAT can be your advantage over the others that use the tools, but do not understand the code.

1755907069
salamonca!~salamonca@user/salamonca
To be clear, I am not some big proponent of AI or anything like that, quite the contrary.  I am just navigating the world as it exits, and changing things where I can.

1755907079
grayhatter!~grayhatte@user/grayhatter
salamonca: I get the sense you're drastically underestimating the complexity around software development 

1755907121
salamonca!~salamonca@user/salamonca
grayhatter:  I have 27 years in as a professional software developer.

1755907144
Affliction!affliction@idlerpg/player/affliction
At the end of the day, LLMs are exactly what their name implies. Large statistical Models of Language. Nothing more, nothing less. They certainly have uses, but I'm not going to outsource problem solving to them.

1755907185
salamonca!~salamonca@user/salamonca
agreed.  use it wisely, understand it's limitations.  No argument there.

1755907189
grayhatter!~grayhatte@user/grayhatter
the concorde was very fast, and could leave many other vehicles "in the dust" that doesn't make it better

