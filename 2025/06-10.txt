1749516421
LAC-Tech!~lewis@granite-phrase.bnr.la
is there an alternative to adding every file you want to run tests on on, using b.addTest? 

1749516450
LAC-Tech!~lewis@granite-phrase.bnr.la
maybe something whereby you specify the root file you want to run tests on, and it will transitively run tests in its dependencies, etc

1749516482
LAC-Tech!~lewis@granite-phrase.bnr.la
(I thought that's what the .root_source_file field was, but it just seems to add the one file you specify)

1749516761
clevor!sid649024@id-649024.hampstead.irccloud.com
`std.testing.refAllDecls`

1749516874
LAC-Tech!~lewis@granite-phrase.bnr.la
clevor: ah that worked. thanks

1749517276
LAC-Tech!~lewis@granite-phrase.bnr.la
testing.random_seed is very useful :)

1749519879
grayhatter!~grayhatte@user/grayhatter
clevor: asking those account recovery questions I see

1749523576
clevor!sid649024@id-649024.hampstead.irccloud.com
No, it's that I remember he had a girlfriend once because he said so in a blog post, and earlier (or was it yesterday), he referred to her as his wife.

1749535333
cybermantid!cybermanti@user/cybermantid
I have a question, what is the proper way to emit docs in current releases of Zig?

1749541967
squeek502!~squeek502@user/squeek502
cybermantid, here's what the std lib docs use: https://github.com/ziglang/zig/blob/4d79806459618f1830772ed6dfbb82059589aaa4/build.zig#L51-L64 and https://github.com/ziglang/zig/blob/4d79806459618f1830772ed6dfbb82059589aaa4/build.zig#L78-L79

1749541997
cybermantid!cybermanti@user/cybermantid
thanks!

1749542127
squeek502!~squeek502@user/squeek502
plenty of other examples if you search for `getEmittedDocs` on github: https://github.com/search?q=getEmittedDocs+language%3AZig&type=code&l=Zig

1749573769
clevor!sid649024@id-649024.hampstead.irccloud.com
What do you guys think about ZII and nil structs?

1749574238
bblack!~bblack@wikimedia/bblack-WMF
by ZII do you mean e.g. std.meta.zeroInit()?

1749574300
bblack!~bblack@wikimedia/bblack-WMF
if so: it's been useful to me while working on a half-converted C project that still interacts with a lot of C structs and code that's yet-unported, but I hope to get away from it over time.

