1759191273
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
in build.zig i have `lib_mod.linkLibrary("uring-ffi");` i am getting `error: expected type '*Build.Step.Compile', found '*const [9:0]u8'` it was working before!

1759191431
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
`pub fn linkLibrary(m: *Module, library: *Step.Compile) void {`

1759193590
clevor!sid649024@id-649024.hampstead.irccloud.com
Is this supposed to be a system library?

1759193644
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
well it can be system library but i also provide it with the library as well so i want it to use the one i provide. 

1759193702
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
clevor, line: 15:17 https://zigbin.io/8ad906

1759193722
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
not sure if that will work, but it seems to not give error. 

1759193777
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
this code was working before now its giving me: https://zigbin.io/a114ac

1759193838
clevor!sid649024@id-649024.hampstead.irccloud.com
usingnamespace is deprecated.

1759193856
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
darn it

1759193912
ezzieyguywuf!~Unknown@user/ezzieyguywuf
ifreund: per this comment I'm going to see if I can figure out what's going on in websocket.zig https://github.com/karlseguin/http.zig/issues/162#issuecomment-3349509701

1759193933
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
clevor, do you know what replaced it? 

1759193976
clevor!sid649024@id-649024.hampstead.irccloud.com
https://github.com/ziglang/zig/issues/20663

1759193998
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
thanks

1759194237
ezzieyguywuf!~Unknown@user/ezzieyguywuf
oh lol I meant to ping karlseguin, but he's not in here whoops

1759194736
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
it would be nice if zig docs added what was deprecated and how to rewrite new code.

1759195007
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i only wrote this library new months ago and looks like whole library is broken now, plus being new learning and all these changes to languages makes it very confusing to learn + keep up with changes and there will no be now help docs since they will be all be outdated!

1759195241
longlonglongint!~longlongl@user/longlonglongint
there is light at the end of the writergate tunnel

1759195787
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i don't get that reference, light is blinding! and now you are blind bumping into things. 

1759195843
longlonglongint!~longlongl@user/longlonglongint
writergate was the big change they did to writers

1759195892
longlonglongint!~longlongl@user/longlonglongint
https://ziglang.org/download/0.15.1/release-notes.html#Writergate

1759195952
longlonglongint!~longlongl@user/longlonglongint
the most breaking change in the update as far as i know

1759196051
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i haven't used std.io 

1759196137
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
seems to explain well https://joegm.github.io/blog/inside-zigs-new-writer-interface/ none the less this change isn't effecting me

1759197286
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I fully support writergate

1759197293
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I donate to zig foundation now too!!!

1759197947
ezzieyguywuf!~Unknown@user/ezzieyguywuf
if I build a particular version of zig, and then `~/zig/zig-out/zig build test` smthn, it takes a long time. even if I do it multiple times. it's as if it's not caching or smthn. is there a particular way I should do this so that I _do_ get caching?

1759197957
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I have no problem using the prebuilt binaries

1759200063
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
ezzieyguywuf, https://www.youtube.com/watch?v=MMtvGA1YhW4

1759200202
ezzieyguywuf!~Unknown@user/ezzieyguywuf
lol "Dude the Builder".

1759200206
ezzieyguywuf!~Unknown@user/ezzieyguywuf
thanks for the video, taking a look

1759200255
ezzieyguywuf!~Unknown@user/ezzieyguywuf
oh, yea I know the normal way to install. but if e.g. I want to find which commit broke something, I'd need to build it myself

1759200326
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
hmm it should cache by default 

1759200393
ezzieyguywuf!~Unknown@user/ezzieyguywuf
i see. I'm not too worried about it, I don't plan to regularly build different versions of zig

1759200406
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
you can also do `zig build -fincremental` to save time

1759200522
ezzieyguywuf!~Unknown@user/ezzieyguywuf
oh I thought that was the default already

1759200569
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
`zig build -fincremental --summary all` to get a nice read out at the end. 

1759205284
ezzieyguywuf!~Unknown@user/ezzieyguywuf
why is `\\` used in https://ziglang.org/documentation/master/#Assembly under "dissecting the syntax" but not in the earlier example?

1759205740
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
ezzieyguywuf, in zig `\\` is how you write multi-line

1759205809
ezzieyguywuf!~Unknown@user/ezzieyguywuf
yea I'm aware but why is that needed in the "dissecting the syntax" section?

1759205873
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
no clue

1759206062
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
if you are new to zig have you gone through https://codeberg.org/ziglings/exercises/#ziglings 

1759207921
ezzieyguywuf!~Unknown@user/ezzieyguywuf
yea I'm pretty new to zig

1759208016
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
ezzieyguywuf, going through ziglings will teach you zig basics, they have neat exercise you can solve and run it to test your code. 

1759215703
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
darn, so can't include system library headers, yet? https://github.com/ziglang/translate-c/issues/86

1759240642
ezzieyguywuf!~Unknown@user/ezzieyguywuf
stealth_: I guess you're gone. thanks for the recommendation. I think I have the basics down though.

1759251253
mimivalsi!~mimivals1@user/MimiValsi
tranzystorekk: Thx for the help.

1759251322
mimivalsi!~mimivals1@user/MimiValsi
squeek502_: Thx for the url. Need to study a little bit then :)

1759252526
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I could use some help with https://github.com/ziglang/zig/issues/25405 - I'm happy to put together a PR, but (1) I'm not sure if the debug allocator is WAI (is it instead websocket.zig's fault for somehow generating a bad stack pointer or w/e?), (2) I could use some pointers as to what else may need to be changed - the proposed "solution" is just me putting on blinders to resolve one specific segfault

1759253745
andrewrk!~andrewrk@mail.ziglang.org
ezzieyguywuf: please note https://github.com/ziglang/zig/pull/25227 is about to land which surely must affect that issue

1759254453
ezzieyguywuf!~Unknown@user/ezzieyguywuf
eyyy The Great Refactor, zig naming is peak

1759254481
ezzieyguywuf!~Unknown@user/ezzieyguywuf
"about to" meaning...days? weeks? just trying to decide whether to just let my CI stay red for a bit or if I remove the "run against nightly zig" for a bit

1759254614
ezzieyguywuf!~Unknown@user/ezzieyguywuf
when merging PRs, is there any attempt made to ensure every commit builds cleanly? I had some struggles with git bisect I think partially due to this, but it also could have been me not knowing which version of zig should be used to build different commits

1759254797
andrewrk!~andrewrk@mail.ziglang.org
about 3 hours

1759254838
andrewrk!~andrewrk@mail.ziglang.org
yes, there are some exceptions but generally each master branch commit builds cleanly and passes all CI tests

1759254857
andrewrk!~andrewrk@mail.ziglang.org
certainly with enough consistency to use git bisect

1759254898
ezzieyguywuf!~Unknown@user/ezzieyguywuf
awesome

1759254902
ezzieyguywuf!~Unknown@user/ezzieyguywuf
on both counts

1759254952
ezzieyguywuf!~Unknown@user/ezzieyguywuf
k, so I'll take some time tonight to rebase and retry after The Great Refactor, I'm almost positive it will solve it based on what I've read so far in that issue

1759254968
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I'll close my issue as a dupe after I can confirm the fix

1759254994
ezzieyguywuf!~Unknown@user/ezzieyguywuf
is there a good list of starter projects for folks interested in contributing to zig?

1759255094
andrewrk!~andrewrk@mail.ziglang.org
https://github.com/ziglang/zig/wiki/Contributing

1759255134
ezzieyguywuf!~Unknown@user/ezzieyguywuf
"One of the best ways you can contribute to Zig is to start using it for a personal project" nice, already doing that :)

1759255164
ezzieyguywuf!~Unknown@user/ezzieyguywuf
is the contributer friendly label actively being maintained? I took a look the other day and at a glance it seemed to not be very broadly used

1759255179
andrewrk!~andrewrk@mail.ziglang.org
yes

1759255185
ezzieyguywuf!~Unknown@user/ezzieyguywuf
:thumbup:

1759255204
ezzieyguywuf!~Unknown@user/ezzieyguywuf
ah nice, this contributing link is perfect

1759255265
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I was looking for CONTRIBUTING.md in https://github.com/ziglang/zig, but now I realize there's a contribiting _tab_ that points to that same link. TIL you can make tabs in markdown

1759256231
longlonglongint!~longlongl@user/longlonglongint
thanks to whoever came up with @Vector

1759256264
longlonglongint!~longlongl@user/longlonglongint
its wayyyyy easier than c simd intrinsics

1759256405
andrewrk!~andrewrk@mail.ziglang.org
you're welcome

1759256677
ezzieyguywuf!~Unknown@user/ezzieyguywuf
<3

1759257422
hadronized!~hadronize@2001:41d0:a:fe76::1
is there a place where the behavior of packed struct is documented with regards to what operations on them do? like for a bitset implemented as a packed struct and a bunch of bools inside of them

1759257458
hadronized!~hadronize@2001:41d0:a:fe76::1
I guess that if (bitset.foo and bitset.bar) does a bunch of shifts and masking behind the scene, right?

1759257536
kenrap!~kenrap@user/kenrap
What's the string formatting syntax in 0.15 for something like this that used to worked in 0.14? `print("{s[0]: <[1]} ", .{ foo, bar });`

1759257580
andrewrk!~andrewrk@mail.ziglang.org
I think you're just missing a 'd' on the second one

1759257591
andrewrk!~andrewrk@mail.ziglang.org
or 's'

1759257675
kenrap!~kenrap@user/kenrap
andrewrk: the second one is supposed to be an integer, so it would be 'd'?

1759257791
kenrap!~kenrap@user/kenrap
I tried `print("{s[0]: <d[1]} ", .{ foo, bar });` and didn't work out

1759257804
kenrap!~kenrap@user/kenrap
(and with the 's')

1759258554
andrewrk!~andrewrk@mail.ziglang.org
the specifier goes first

1759258580
andrewrk!~andrewrk@mail.ziglang.org
you're also missing an end and beginning curly

1759258622
andrewrk!~andrewrk@mail.ziglang.org
oh, I just realized you're trying to use "bar" for alignment value

1759258668
kenrap!~kenrap@user/kenrap
yeah

1759258746
andrewrk!~andrewrk@mail.ziglang.org
it's still using the same parsing code to handle that

1759258884
kenrap!~kenrap@user/kenrap
I'll try playing around with it more

1759259302
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
I am trying to port https://zigbin.io/a114ac over to using .addTranslateC() but not sure how to do that with Python that uses sys library

1759260639
kenrap!~kenrap@user/kenrap
andrewrk: after grepping for examples in a git-clone of zig, the following made it work: `print("{s:<[1]} ", .{ foo, bar });`

1759264218
kenrap!~kenrap@user/kenrap
Oof, this hit me hard: https://ziglang.org/download/0.15.1/release-notes.html#Formatted-Printing-No-Longer-Deals-with-Unicode

1759264494
kenrap!~kenrap@user/kenrap
Would've it been possible to have the alignment implementation support up to Extended ASCII?

1759264657
kenrap!~kenrap@user/kenrap
(it was working fine with it in 0.14)

1759268121
rvrb!~rvrb@156.146.51.229
A) am I insane to want to write a browser engine that B) compiles to WebAssembly and C) renders to arbitrary surfaces with WebGPU and D) build a browser shell around it that is basically just a WebAssembly runtime that renders HTML/CSS using said engine and E) does not have a JavaScript runtime

1759269610
andrewrk!~andrewrk@mail.ziglang.org
rvrb: the idea is reimagining a simpler and more powerful web spec that is capable of implementing w3c in userland, right?

1759270274
rvrb!~rvrb@156.146.51.229
kind of, while also enabling any other protocol through whatever WASM module plugins that can handle them

1759270313
rvrb!~rvrb@156.146.51.229
the browser is just a VM, a minimal UI, and some network/GPU APIs

