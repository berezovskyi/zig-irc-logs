1746499825
sunflr!~sunflr@user/sunflr
is there something like a C++ constructor in Zig? Idk anything about constructors myself

1746500325
torque!~tachyon@user/torque
sort of a confusing way to ask a question

1746500370
torque!~tachyon@user/torque
but, no, there aren't any magic functions that get implicitly called by the compiler in zig

1746508546
sunflr!~sunflr@user/sunflr
ok i see

1746508570
sunflr!~sunflr@user/sunflr
i thought so because Zig is so transparent but just wanted to be sure

1746516383
sewn!~sewn@2602:fa87:6:107::a
is it?

1746518872
tbd!~user@2a00:6020:4119:a000:aab1:3bff:fef0:2e4d
There is no such thing like a Zig interpreter right? (I have a vague memory of having read somewhere that something alike is implemented and merged in Zig stable. But, I cannot find any trace of such a thing.)

1746529723
clevor!sid649024@id-649024.hampstead.irccloud.com
The closest thing to a Zig interpreter is comptime.

1746554071
tonitch!~tonitch@user/tonitch
Weird question I assume but I would like to try zig-gamedev. I only wanted zsdl at first so I went on this page. https://github.com/zig-gamedev/zsdl I tried to `zig --save fetch "https://github.com/zig-gamedev/zsdl/archive/refs/heads/main.zip"` and it complain that the name is .zsdl (should be a string) is that a problem on my part or is that a bug of zsdl ? 

1746554216
andrewrk!~andrewrk@mail.ziglang.org
tonitch: can you be more specific about the error that you received from zig? perhaps with a link to a copy-paste

1746554298
tonitch!~tonitch@user/tonitch
https://paste.rs/auNRr

1746554320
andrewrk!~andrewrk@mail.ziglang.org
rockorager: TIL about the -c option of strace from your lsr readme

1746554322
andrewrk!~andrewrk@mail.ziglang.org
thanks!

1746554344
tonitch!~tonitch@user/tonitch
I really like the language but i'm a bit confused about the whole module thingy.. it seems a bit under documented maybe ? I haven't found a good resource yet.

1746554358
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
heh, I had to google it myself because strace <program> 2>| wc -l includes a few lines of overhead

1746554366
andrewrk!~andrewrk@mail.ziglang.org
tonitch: I recommend to use https://github.com/castholm/SDL instead, since it's up to date with zig 0.14.0 and development branch

1746554402
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
but the summary output is really useful

1746557095
tonitch!~tonitch@user/tonitch
okay thanks I will, the whole zig-gamedev seems fun tho. maybe i'll retry later. I wonder why it's like that.

1746557187
tonitch!~tonitch@user/tonitch
ho god... it's the same problem and so I just noticed that i'm using zig 0.13.0...

1746557212
andrewrk!~andrewrk@mail.ziglang.org
tonitch: there's your problem. I'd recommend to stick with 0.14.x until the next minor release

1746557237
andrewrk!~andrewrk@mail.ziglang.org
you can download it from ziglang.org, that's usually a more reliable option than package manager

1746557246
tonitch!~tonitch@user/tonitch
yes. archlinux doesn't seem to have update tho. I'll have to get it from source

1746557304
tonitch!~tonitch@user/tonitch
yes. thanks you :D cool language by the way. I'll present it tomorrow at my uni (in belgium) for a small seminary course. (hopefully w'll do a good job)

1746557314
andrewrk!~andrewrk@mail.ziglang.org
good luck

1746558491
grayhatter!~grayhatte@user/grayhatter
> error: thread 1072579 panic: TODO rework lowerUav. internal error: unable to lower constant value: LinkFailure

1746558513
grayhatter!~grayhatte@user/grayhatter
unable to dump stack trace: debug info stripped

1746558530
grayhatter!~grayhatte@user/grayhatter
is it worth getting a stack trace to report this?

1746558542
grayhatter!~grayhatte@user/grayhatter
or has lowerUav been reworked already?

1746558556
grayhatter!~grayhatte@user/grayhatter
(v0.14.0)

1746560535
clevor!sid649024@id-649024.hampstead.irccloud.com
Check the 0.14.x branch

1746560590
clevor!sid649024@id-649024.hampstead.irccloud.com
Or maybe master?

1746560660
grayhatter!~grayhatte@user/grayhatter
clevor: it worked after I tried to create a minimal example diff, so I assume there was another bug that was triggering it

1746560707
grayhatter!~grayhatte@user/grayhatter
without a minimal example (that compiles), it's not worth work to look at it (imo)

1746560935
grayhatter!~grayhatte@user/grayhatter
this is what I thought would trigger the bug https://srctree.gr.ht/repo/verse/commit/9cf58d51

1746561001
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
unrelated but is that AnyReader the same as std.io.AnyReader? If so why are you using a pointer?

1746561229
grayhatter!~grayhatte@user/grayhatter
it wasn't always an AnyReader, and I did need a mutable version for *something* but good catch!

1746561281
grayhatter!~grayhatte@user/grayhatter
thanks rockorager https://srctree.gr.ht/repo/verse/commit/5fc02491 

1746561318
grayhatter!~grayhatte@user/grayhatter
wanna be tagged in the git commit?

1746561343
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Haha no that's fine

1746561361
grayhatter!~grayhatte@user/grayhatter
you sure? the editor/amend is already open 

1746561375
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Reported-by: Tim Culverhouse <tim@timculverhouse.com>

1746561410
grayhatter!~grayhatte@user/grayhatter
https://srctree.gr.ht/repo/verse/commit/e70398bf

1746574399
Cuboid!~Cuboidigo@user/Cuboidigon
what would be a good size to set a buffer full of u8s?

1746574520
Cuboid!~Cuboidigo@user/Cuboidigon
im thinking 10k bytes

1746574603
braewoods!~braewoods@user/braewoods
Cuboid, usually I suggest a power of 2 based unit if there's no obvious usage. it's for alignment reasons.

1746574646
Cuboid!~Cuboidigo@user/Cuboidigon
how about 4096?

1746574673
braewoods!~braewoods@user/braewoods
though you probably shouldn't make it larger than you expect to need / require. It depends heavily on the intended use.

1746574682
braewoods!~braewoods@user/braewoods
static buffer?

1746574710
braewoods!~braewoods@user/braewoods
4096 is fine for stack buffers.

1746574711
Cuboid!~Cuboidigo@user/Cuboidigon
static

1746574723
Cuboid!~Cuboidigo@user/Cuboidigon
using it for reading json files

1746574729
braewoods!~braewoods@user/braewoods
it'll just get reclaimed when it's done.

1746574787
braewoods!~braewoods@user/braewoods
ah, json. you may end up constructing multiple buffers then for different purposes.

1746574794
braewoods!~braewoods@user/braewoods
Just FYI.

1746574815
Cuboid!~Cuboidigo@user/Cuboidigon
ok just to make sure, a static buffer is when you do like " var buf: [4096]u8 = ... " right?

1746574834
braewoods!~braewoods@user/braewoods
it can have two meanings, but here it's for static SIZE.

1746574841
braewoods!~braewoods@user/braewoods
fixed size might be clearer.

1746574852
braewoods!~braewoods@user/braewoods
I'm used to C terms; sorry.

1746574869
Cuboid!~Cuboidigo@user/Cuboidigon
its ok

1746574934
braewoods!~braewoods@user/braewoods
It sounds like you're just using it as an IO buffer though so you don't really need a massive one.

1746574949
braewoods!~braewoods@user/braewoods
But if you can afford the memory, it's generally way easier to load the whole text file into memory.

1746574968
braewoods!~braewoods@user/braewoods
Just a tip from my times of writing text parsers.

1746575039
braewoods!~braewoods@user/braewoods
But only realistic in cases where you can know the size in advance.

1746575052
Cuboid!~Cuboidigo@user/Cuboidigon
ok, thanks for the tip!

1746575063
braewoods!~braewoods@user/braewoods
(or are willing to enlarge as it becomes available from the stream source)

1746575111
braewoods!~braewoods@user/braewoods
It's just that you need at least enough of the text / binary stream available to be able to continue processing.

1746575134
braewoods!~braewoods@user/braewoods
But if you're going to do it in incremental steps you need a more advanced engine to manage the state correctly.

1746575185
braewoods!~braewoods@user/braewoods
Then again probably need that to some degree depending on the complexity of the input.

1746575799
Cuboid!~Cuboidigo@user/Cuboidigon
:exit

1746575838
Cuboid!~Cuboidigo@user/Cuboidigon
im getting to used to vim and neovim

