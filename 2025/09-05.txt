1757041232
grayhatter!~grayhatte@user/grayhatter
has anyone seen a zig based C++ compiler? (looking for an AST todo syntax highlighting)

1757049388
torque!~tachyon@user/torque
that seems... unlikely, considering the opinion that most people using zig have about C++

1757049438
torque!~tachyon@user/torque
maybe something like https://github.com/neurocyte/flow-syntax would work for you?

1757063934
dutchie!~dutchie@user/dutchie
should I writer.flush() in a custom format method? I guess that should be up to the caller?

1757065063
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
maybe aro learns c++ one day /j

1757068098
dutchie!~dutchie@user/dutchie
why can't my gdb see the line numbers >_<

1757069195
dutchie!~dutchie@user/dutchie
hmm, is it https://github.com/ziglang/zig/issues/25028 ?

1757069196
braewoods_!~braewoods@user/braewoods
dutchie, that implies the debugging symbols either aren't present or aren't compatible.

1757069265
dutchie!~dutchie@user/dutchie
I can set breakpoints though

1757069275
dutchie!~dutchie@user/dutchie
and print variables

1757069280
braewoods_!~braewoods@user/braewoods
ACTION shrugs.

1757069282
dutchie!~dutchie@user/dutchie
just not step 

1757072098
chmod222!~chmod222@user/chmod222
I would say calling flush is responsibility of the caller

1757072113
chmod222!~chmod222@user/chmod222
It's not your format's decision whether it's flushing time or not. I'd say.

1757072685
Amun-Ra!~amun-ra@retro.rocks
true, don't make your user code slower

1757078611
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
although if you have eg a function that prints cli usage it seems ergonomic to call flush to ensure thd message is actually printed

1757079141
bblack!~bblack@wikimedia/bblack-WMF
tranzystorekk: agreed, but that wouldn't be in a format method.

1757079166
bblack!~bblack@wikimedia/bblack-WMF
if you dig through the abstractions in std.log() outputs to stderr, they actually flush both before and after printing the formatted message.

1757079181
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
yeah just a different use case for contrast

1757086508
bblack!~bblack@wikimedia/bblack-WMF
happy friday :)

1757090041
grayhatter!~grayhatte@user/grayhatter
torque: thanks for the idea... I avoid tree-sitter like the plague, but it's interesting enough to consider

1757090190
clevor!sid649024@id-649024.hampstead.irccloud.com
Does tree-sitter work on binary data?

1757090281
grayhatter!~grayhatte@user/grayhatter
clevor: tree-sitter is much more like a framework or LSP, IIRC it uses regex and numerous plugins to do parsing/highlighting. So I assume there's no limitation on input data

1757090340
torque!~tachyon@user/torque
I think the parsers operate on unicode data so I am not sure it can handle binary files

1757090392
torque!~tachyon@user/torque
also I haven't looked at it much but I thought part of the point was that it didn't use regex. unfortunately developing a parser for it requires javascript for some reason so I shan't be doing that

1757090476
torque!~tachyon@user/torque
oh I guess you do use regexes for tokens

1757090504
torque!~tachyon@user/torque
not surprising, though

1757090621
grayhatter!~grayhatte@user/grayhatter
I abandoned all hope for tree-sitter ever being good or useable when it started segv'ing which'd kill my vim on it's html parser

1757090770
torque!~tachyon@user/torque
any sufficiently advanced technology is indistinguishable from a program that crashes uncontrollably

1757091838
grayhatter!~grayhatte@user/grayhatter
does anyone recall any conversations/issues around return types as function paramaters? e.g. instead of `pub fn parse(T: type, data: []const u8) T { [do something with T] }` you could write something like `pub fn parse(data: []const u8) T: type { [do something with T] }` and it would only be valid with `const thing: ExplicitType = parse(data);`

1757098725
lemons!~doggie@user/doggie-:49517
anything i should be aware of for implementing pooling?

1757098887
andrewrk!~andrewrk@mail.ziglang.org
lemons: perhaps the existence of std.heap.MemoryPool

1757099167
netvor!~netvor@2a00:ca8:a1f:cd0:dbfc:7ba9:de8d:e0d2
darn ECS's are so awesome.  30 year old mistake indeed

1757099313
netvor!~netvor@2a00:ca8:a1f:cd0:dbfc:7ba9:de8d:e0d2
i mean for the first time i tried to create my own (never used any before), and it's just magical how easy it makes to manage the code.   basically zero time and energy spent on "modeling reality"

1757099368
andrewrk!~andrewrk@mail.ziglang.org
pretty sweet

1757099375
netvor!~netvor@2a00:ca8:a1f:cd0:dbfc:7ba9:de8d:e0d2
all those pesky objects, gone.  never missed

1757099445
netvor!~netvor@2a00:ca8:a1f:cd0:dbfc:7ba9:de8d:e0d2
the only things i miss is the 15 years time i spent learning OO (and thinking i'm just not smart enough for systems level.   while ironically, apparently not being smart enough for oo)

1757099863
lemons!~doggie@user/doggie-:49517
andrewrk: hah, nice stuff but sadly i just handle objects the engine across ABI allocated for me

