1746937821
mojo_jojo!~tokamak@user/mojo-jojo:74093
im trying to understand comptime and trying to learn zig via ziglings. am attempting the hermits map super extra bonus challenge. is it even possibke to parse "a -> (b[2])" extract a and then use it to select the exisging a place and set it into a struct field?

1746943837
torque!~tachyon@user/torque
yes

1746957030
mojo_jojo!~tokamak@user/mojo-jojo:74093
how?

1746957073
mojo_jojo!~tokamak@user/mojo-jojo:74093
resource to understand this woukd be amazing...

1746962324
mojo_jojo!~tokamak@user/mojo-jojo:74093
shall simply start reading the std lib from sxratch. no short cuts makes sense...

1746965516
lemons!~doggie@user/doggie-:49517
whats new in zigland

1746970270
netvor!~netvor@2a00:ca8:a1f:cd0:77f7:851b:346a:d0fb
how best to approach creating a hashmap-like structure where i need N strings as a key?  the thing is i want to store items from a fairly large CSV file where primary key is a set of columns.  easiest way seems to just combine the keys and use StringHashMapUnmanaged, but that would require more memory copying so i wonder if there's a more efficient way

1746975056
netvor!~netvor@2a00:ca8:a1f:cd0:77f7:851b:346a:d0fb
fyi i ended up using AutoHashMapUnmanaged(KeyT, ValueT) where i defined KeyT as tuple (for every ValueT).   turns out not all of those keys are strings anyway, so this was more flexible

1746988820
torque!~tachyon@user/torque
<mojo_jojo> shall simply start reading the std lib from sxratch. no short cuts makes sense... <-- reading deserialization code, like the json code, would probably be the most useful for this particular problem

1746988833
torque!~tachyon@user/torque
since it is doing basically the same thing but with a different source syntax

1747004586
clevor!sid649024@id-649024.hampstead.irccloud.com
Does the Zig compiler do anything with `--debug-log` besides providing it as a builtin and passing the scopes to children compiler processes?

