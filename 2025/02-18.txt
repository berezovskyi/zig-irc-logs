1739881959
norineko!~norineko@user/norineko
what's the implications between posix.mmap and os.linux.mmap? one seems to have error handling, and returns a slice. The other seems to just return a usize int and you have to ptrcast?

1739895225
m257!msa@msa.planetofnix.com
I think you can just use posix.mmap for the most part

1739895239
m257!msa@msa.planetofnix.com
should work on any unix system

1739895806
ifreund!2940d10f8b@user/ifreund
norineko: os.linux.mmap is called by posix.mmap, the difference is the layer of abstraction

1739895832
ifreund!2940d10f8b@user/ifreund
you probably don't want to use os.linux.mmap directly

1739904313
aos1!~aos1@user/aos1
is there some sort of online zig playground? if I just want a REPL to mess around with stuff, does it make more sense to put together a "scratch" zig project and go from there?

1739904361
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
https://godbolt.org/ comes close

1739905146
ifreund!2940d10f8b@user/ifreund
random .zig files in /tmp also work well

1739905393
phaleth!~phaleth@user/phaleth
you can run a single zig file with `zig run learning.zig`

1739918101
LAC-Tech!~lewis@granite-phrase.bnr.la
norineko: the stuff under os.linux follow the underlying raw (not libc) syscall very closely.

1739920773
SultansOfCode!~LoxasEpam@user/SultansOfCode
Hello, I am printing to a buffer using std.fmt.bufPrint, now I need to pass this buffer to another function that expects [8:0]const u8, how can I do this? The error is this one: src\main.zig:27:39: error: expected type '[*:0]const u8', found '[73]u8'

1739920987
squeek502!~squeek502@user/squeek502
SultansOfCode, `bufPrintZ`

1739921385
SultansOfCode!~SultansOf@user/SultansOfCode
squeek502: thanks :D

1739921440
SultansOfCode!~SultansOf@user/SultansOfCode
Then just passed the slice's ptr and everything was fine. So, this bugPrint stuff just use the buffer as a real buffer? It does not print the content to the buffer, but returns a new slice instead? Or the slice is in reference to the buffer?

1739921541
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
the returned slice references the buffer

1739922031
SultansOfCode!~SultansOf@user/SultansOfCode
rockorager: thanks

