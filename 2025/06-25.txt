1750876182
m05sy!~mossy@user/m05sy
Hi! I'm learning zig. I have a struct that represents a 3D coordinate, and I'm trying to have different type aliases/names represent different coordinate systems. As I'm used to Typescript, I tried something like: const Vec = struct { ... }; const GlobalVec = Vec; const LocalVec = Vec; which doesn't work. What's the zig way of letting the compiler know about which coordinate system I expect a coordinate to be in? A tagged union?

1750876274
andrewrk!~andrewrk@mail.ziglang.org
hi m05sy

1750876361
andrewrk!~andrewrk@mail.ziglang.org
if you want the types to be distinct, you either have to define them differently or generate them with a function that returns a type, and observe some kind of enum to differentiate them. I'll make you a small example of my recommended approach

1750876391
andrewrk!~andrewrk@mail.ziglang.org
another option is to have Vec be the same type but wrap it like this: const GlobalVec = struct {v: Vec}; const LocalVec = struct {v: Vec};

1750876403
andrewrk!~andrewrk@mail.ziglang.org
that's probably the simplest

1750876698
andrewrk!~andrewrk@mail.ziglang.org
m05sy: https://gist.github.com/andrewrk/dd201280ee869d1230dfe1c880a3f1d0

1750876768
m05sy!~mossy@user/m05sy
andrewrk: thanks, i'll take a look at that

1750876941
andrewrk!~andrewrk@mail.ziglang.org
a tagged union would be appropriate if you know at *runtime* which one it is. but my understanding here is that you always know at compile-time which one it is, so you're better with different types

1750876955
andrewrk!~andrewrk@mail.ziglang.org
I'd recommend the simple approach and see how far that gets you

1750877061
m05sy!~mossy@user/m05sy
yeah, I believe it'll all be known at compile time.

1750877114
m05sy!~mossy@user/m05sy
for generic-impl-strategy, what does it mean to return a struct AND have the return type be type? is there some name for this concept that i can look into?

1750877147
andrewrk!~andrewrk@mail.ziglang.org
"generics"

1750877310
m05sy!~mossy@user/m05sy
sweet. thanks again, i have a lot to go off of now :D

1750878973
andrewrk!~andrewrk@mail.ziglang.org
happy hacking!

