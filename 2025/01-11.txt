1736560086
raceready!uid684861@user/raceready
good evening all

1736560093
raceready!uid684861@user/raceready
What are y'all working on this weekend?

1736560165
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
o/ learning how to use bloaty

1736611841
lf94!~lf94@user/lf94
Is Zig almost ready

1736613593
Gliptic!~glip@2a01:4f8:c012:91f3::1
lf94: ready for 1.0? no

1736617902
interpunct!cc60843162@user/interpunct
is there a way to read the `version` field of your projects build.zig.zon?

1736618395
interpunct!cc60843162@user/interpunct
or actually any of the fields in there

1736618447
interpunct!cc60843162@user/interpunct
it might not be what it’s designed for but it’s a little clunky to write the version in my build.zig and in the build.zig.zon if i wanna use it in my zig code

1736619003
torque!~tachyon@user/torque
as I understand it, it will be possible once https://github.com/ziglang/zig/pull/20271 is merged

1736619026
torque!~tachyon@user/torque
right now, the zon handling is kind of magical

1736620335
quinq!~user@user/quinq
build.zig.zuul

1736620614
interpunct!cc60843162@user/interpunct
awesome ty!

1736622111
netvor!~netvor@2a00:ca8:a1f:cd0:e2a3:2886:3821:1fc2
strange, but (here on Debian 12) it looks like `argv0_expand = .no_expand` (which is default) has no real effect; even though the correct argv is passed: `4166104 execve("/usr/bin/ls", ["ls"], 0x7fdd00c53110 /* 80 vars */) = 0`

1736622174
netvor!~netvor@2a00:ca8:a1f:cd0:e2a3:2886:3821:1fc2
by "no real effect" i mean that if a pass a script instead of ls, it still sees full path name at `$0`, not just child_argv[0]

1736636919
grayhatter!~grayhatte@user/grayhatter
what's the "correct" way to specify a version inside a lib?

1736636932
grayhatter!~grayhatte@user/grayhatter
the cannon location for any version number is a git tag

1736636955
grayhatter!~grayhatte@user/grayhatter
but the library isn't built in the directory it lives in, so I can't call out to git

