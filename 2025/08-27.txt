1756253647
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
woo andrew you going woke? lol

1756254034
andrewrk!~andrewrk@mail.ziglang.org
I wake up every day

1756254105
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i am talking about "Go woke go broke" 

1756254390
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
referring to your hair! I once told me friends to do some highlights and they f'ed it up and I was walking around like super saiyan for couple of weeks.

1756254501
andrewrk!~andrewrk@mail.ziglang.org
well, it has been eye-opening indeed to see how many people think there's some sort of political statement happening on my head. you don't have to solve a scooby doo mystery to figure out my beliefs you can just go read my blog

1756254834
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
I was just messing with you... I don't really care what your political/beliefs/sex whatever is. Good old hummer. Hair looks cool.

1756280988
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
andrewrk, https://pypi.org/project/ziglang/0.14.1/#description `subprocess.call()` is outdated should use `subprocess.run()`

1756281049
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
https://docs.python.org/3/library/subprocess.html#older-high-level-api

1756281421
squeek502!~squeek502@user/squeek502
stealth_, source is here if you want to send a PR for it: https://github.com/ziglang/zig-pypi/blob/main/README.pypi.md

1756281757
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
squeek502, not sure if i will get to it but if i remember and find some time i sure will.

1756282208
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
there should be more docs on how actually to use ziglib to be using by python setuptools and such...

1756282804
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
like if you have `build.zig` how exactly do you use that with python setup.py + setuptools?

1756297438
mivanchev!~mivanchev@user/mivanchev
hey, can someone tell me what type ?[*:0]const u8 is?

1756297449
mivanchev!~mivanchev@user/mivanchev
optional string that might be null?

1756297535
dutchie!~dutchie@user/dutchie
optional pointer to null-terminated const many-item pointer to u8, so yeah, probably optional c-string

1756297563
mivanchev!~mivanchev@user/mivanchev
so the :0 is 0 terminated ?

1756297573
dutchie!~dutchie@user/dutchie
yes

1756297596
mivanchev!~mivanchev@user/mivanchev
ok it's a sentinel

1756297601
dutchie!~dutchie@user/dutchie
it works on arrays and slices too, for [N:0]u8 or [:0]u8

1756297602
dutchie!~dutchie@user/dutchie
exactly

1756297623
mivanchev!~mivanchev@user/mivanchev
thanks dutchie :)

1756300447
mivanchev!~mivanchev@user/mivanchev
is it easy to compile zig object files linkable with GCC object files?

1756300454
mivanchev!~mivanchev@user/mivanchev
only depending on glibc

1756302015
ifreund!2940d10f8b@user/ifreund
sure

1756302031
ifreund!2940d10f8b@user/ifreund
you can even target an arbitrary version of glibc

1756304473
grayhatter!~grayhatte@user/grayhatter
"it has been eye-opening indeed to see how many people think there's some sort of [political statement] happening" people like buckets, but sadly most people are not engineers, and it's only engineers that are bothered if you "put it in the square hole"

1756304605
grayhatter!~grayhatte@user/grayhatter
learning that most people don't care about things being correct was a very traumatic revelation for me

1756305154
mivanchev!~mivanchev@user/mivanchev
hey, what is the accepted way of using an external library?

1756305172
mivanchev!~mivanchev@user/mivanchev
clone the module to ./libs/... and use it from there?

1756305249
grayhatter!~grayhatte@user/grayhatter
mivanchev: whatever works is the accepted way. But if it's a library with a build.zig.zon, the build system will happily manage it for you

1756305265
mivanchev!~mivanchev@user/mivanchev
grayhatter: yes it has a zon, how do I use it?

1756305270
grayhatter!~grayhatte@user/grayhatter
mivanchev: have you read through the examples in https://ziglang.org/learn/build-system/ yet?

1756305273
mivanchev!~mivanchev@user/mivanchev
I have a build.zig file

1756305340
grayhatter!~grayhatte@user/grayhatter
errr, hold on, this isn't the link I thought I grabbed, one sec

1756305372
mivanchev!~mivanchev@user/mivanchev
ok I see there is zon which manages packages for you

1756305377
mivanchev!~mivanchev@user/mivanchev
so you can add them during build

1756305390
grayhatter!~grayhatte@user/grayhatter
yeah, exactly

1756305409
mivanchev!~mivanchev@user/mivanchev
right, great

1756305505
grayhatter!~grayhatte@user/grayhatter
the default build.zig.zon that's generated for you when you run zig init has an example of how to use it

1756307782
nilsj2!~Thunderbi@user/nilsj2
mivanchev: Optional many-item pointer  to const u8 with a sentinel 0 https://ziglang.org/documentation/master/#Pointers . It's the equivalent of a c string

1756314268
mivanchev!~mivanchev@user/mivanchev
hey, why does mt project compile with const win32 = @cImport(@cInclude("windows.h1"));

1756314277
mivanchev!~mivanchev@user/mivanchev
although that file doesn't exist?

1756314871
bblack!~bblack@wikimedia/bblack-WMF
mivanchev: are you actually-using "win32" anywhere, after comptime conditionals are accounted for? Zig is very good at completely-ignoring unused things.

1756314955
bblack!~bblack@wikimedia/bblack-WMF
e.g. if your other code is something like: if (builtin.os.tag == .windows) { ... use win32 .. } else { never touch it }, and you're compiling on non-windows, it will never evaluate the right hand side of "win32"

1756314996
mivanchev!~mivanchev@user/mivanchev
hm ok might explain it bblack, still weird it doesn't even process it

1756315018
bblack!~bblack@wikimedia/bblack-WMF
the zig community term for this is "tree-shaking", and it's a powerfully good thing once you get used to it.

1756315038
mivanchev!~mivanchev@user/mivanchev
yes i gotta get a feeling for it :)

1756315043
bblack!~bblack@wikimedia/bblack-WMF
basically if comptime can figure out Something is completely unecessary, it will ignore it and not compile it or emit binary code for it, etc

1756315115
mivanchev!~mivanchev@user/mivanchev
i see :)

1756315578
mivanchev!~mivanchev@user/mivanchev
bblack can you also tell me what target to take for x86 linux?

1756315586
mivanchev!~mivanchev@user/mivanchev
x86_linux doens't work good :) or at all

1756315606
mivanchev!~mivanchev@user/mivanchev
or, it was - not _

1756332309
triallax!~triallax@lacerte/triallax
is using printFloat with .case = upper not supposed to use uppercase for nan and infinity?

1756332438
triallax!~triallax@lacerte/triallax
printFloatHex does handle that seemingly

1756332529
triallax!~triallax@lacerte/triallax
am i fine to send a pr changing this?

1756332743
triallax!~triallax@lacerte/triallax
maybe also add an {F} specifier if that's ok

1756332751
triallax!~triallax@lacerte/triallax
same as {f} but uppercases

1756333670
triallax!~triallax@lacerte/triallax
err, i meant D/d

1756333676
triallax!~triallax@lacerte/triallax
brain is too c-pilled

