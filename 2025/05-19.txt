1747645054
LAC-Tech!~lewis@granite-phrase.bnr.la
Is an LSP that can do smart refactoring in Zig even something that's possible, given the language? zls is a wonderful tool, with a lot of comitters, that's been going for a long time, so I am leaning towards this just being a difficult problem to solve given zig semantics

1747646393
lemons!~doggie@user/doggie-:49517
LAC-Tech: i fail to see why it wouldnt be possible tbh

1747646433
lemons!~doggie@user/doggie-:49517
the only "annoying" thing would be anytype but these most often are used for generics 

1747646466
lemons!~doggie@user/doggie-:49517
explicit edge case for "functoin that accepts anytype then immediately switches on the type" doesnt feel impossible to code

1747646645
lemons!~doggie@user/doggie-:49517
everything else is static typed sweetness with functions, structs and not much else

1747646660
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
isn't this _exact_ definition of anytype? as far as I understand it's a generic placeholder that can be used only in comptime and is materialized to users afterwards. One could have tagged types/newtypes generator and make sure that those interfaces match exact requirements.

1747646789
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
I'm very skeptic about the state of smart refactoring though. I think we don't have the tools for any language.

1747646876
lemons!~doggie@user/doggie-:49517
xlii: only experience i had with SR was back when i was a wee bit scratch baby and saw that this fancy button makes my code worse somehow

1747646909
lemons!~doggie@user/doggie-:49517
i think it was just yeeting functions into dedicated classes

1747646923
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
right now it's LLMs which is 75% stupid and up to 25% funny

1747646950
lemons!~doggie@user/doggie-:49517
xlii: automatic refactoring has existed for a while wdym

1747646974
lemons!~doggie@user/doggie-:49517
or is that different from "smart" refactors

1747646989
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
so this is AST, shouldn't be hard given that I think I've seen parsers in std, I'm thinking more about stuff like "attach data tracer to all user-related data" 

1747647057
lemons!~doggie@user/doggie-:49517
ah then we understood the assignment differenctly

1747647084
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
or "make sure that these kind of calls always go through that particular pipeline", or "make sure that all places which ingest event stream were updated to incorporate event versioning"

1747647105
lemons!~doggie@user/doggie-:49517
i saw it as the basic kind of "heyyy so i see you're iterating in a loop across memory values and setting them all to 0, you know that memset exists right?"

1747647106
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
if you're thinking about code refactors I'm afraid I had the most success so far with sed+awk+kakoune 

1747647183
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
I'm biased because I frequently live in a world of "of course X is true almost always but sometimes..."

1747647215
lemons!~doggie@user/doggie-:49517
xlii: guy (?) ive known had a knack for refactoring forks of a certain game, he saw so much shitcode he cooked up a whole text file of.. regexi? to match against common stupids

1747647222
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
so in your case my attention goes toward "what if memset is not appropriate"

1747647264
lemons!~doggie@user/doggie-:49517
windows-exclusive game so unfortunately didnt get to experience the joys of (actually good) cli 

1747647269
lemons!~doggie@user/doggie-:49517
i imagine it'd suit them well

1747647321
lemons!~doggie@user/doggie-:49517
as for basic pattern matching for my own stuff, admittedly idk myself if its useful or not

1747647326
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
last month I refactored ~150k LOCs by adding telemetry headers and extracting key params to traces

1747647348
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
all sed+awk :D

1747647350
clevor!sid649024@id-649024.hampstead.irccloud.com
Telemetry headers??

1747647372
lemons!~doggie@user/doggie-:49517
clevor: hey, give our local fed some slack >:(

1747647382
lemons!~doggie@user/doggie-:49517
they're trying their best

1747647411
lemons!~doggie@user/doggie-:49517
i should try awk myself tbh

1747647412
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
yeah, every function had a header line with telemetry, but it was either mistargeted or too skimpy (or missing)

1747647417
lemons!~doggie@user/doggie-:49517
somehow didnt get to use it yet

1747647425
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
sed is also great when you get into it

1747647450
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
takes some time to get into the whole "you're editing the stream" mindset with the holder and branching

1747647472
clevor!sid649024@id-649024.hampstead.irccloud.com
Would the function fail if I blocked it from sending telemetry?

1747647474
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
you can stream code line by line, and for example count indents - that allows you to figure out if param you want to change is in scope

1747647501
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
nope, that was on Erlang's VM, so it was merely a message

1747647513
lemons!~doggie@user/doggie-:49517
xlii: from how you're describing it i assume its regex on steroids?

1747647516
clevor!sid649024@id-649024.hampstead.irccloud.com
Oh

1747647537
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
it's daddy of all regexp as far as I can tell

1747647539
lemons!~doggie@user/doggie-:49517
(and from quickly glossing the man)

1747647632
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
you can do all sort of stuff, like moving functions around based on delimiters (i.e. extracting), merging, sorting functions by name, it's simple but paradigm is complex to wrap head around it

1747647679
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
example: gsed -e 's/^ .*/SPACE/;s/^\t.*/TABS/;tnext;d;:next' 

1747647740
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
this will - change line to "SPACE" if it starts with space, "TAB" if it starts with tab and if it does match any of it, it will process next line - otherwise it will delete text (so only "TAB" or "SPACE" line will be printed)

1747647769
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
slap sort/uniq/head/cut and you have heuristic indent detection for files :D

1747647917
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
one can get suprisingly far using it

1747648018
LAC-Tech!~lewis@granite-phrase.bnr.la
xlii: I am just taking about basic stuff like renaming a function and having that happen across files. nothing too fancy

1747648030
LAC-Tech!~lewis@granite-phrase.bnr.la
or renaming a struct field, and the init function changing as well.

1747648140
lemons!~doggie@user/doggie-:49517
ayyyy lag time again

1747648154
lemons!~doggie@user/doggie-:49517
right as i was saying

1747648157
lemons!~doggie@user/doggie-:49517
i do fear i wont get into it myself with how esoteric it feels + regex exists and works fineish + why bother

1747648163
lemons!~doggie@user/doggie-:49517
which is somewhat sad because it feels very powerful

1747648256
lemons!~doggie@user/doggie-:49517
same case with rust tbh, like.. okay i get that im getting a bc error, now can you help me structure my code to avoid that or just continue with your "guh just dont be writing shitcode"

1747648291
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
this is regex :D 

1747648317
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
it's actually one of the first tools that were making use of regex and started popularizing it

1747648333
lemons!~doggie@user/doggie-:49517
xlii: hhh regex++

1747648350
lemons!~doggie@user/doggie-:49517
okay no thats mean to sed

1747648415
lemons!~doggie@user/doggie-:49517
point being vsc/nvim already provides without the hassle of learning even more stuff

1747648451
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
the only thin nvim doesn't have is pattern hold, you need to invent your own

1747648455
lemons!~doggie@user/doggie-:49517
mayyybe im grasping at straws here but i dont want to waste time on yet another nvim

1747648481
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
and also I wasn't able to get into batch processing

1747648481
lemons!~doggie@user/doggie-:49517
or gentoo or sway

1747648527
lemons!~doggie@user/doggie-:49517
they're good tools! just take ages to get to a state where you can actually do stuff with them

1747648533
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
those are bold comparision to a tool that has ~25 commands :D

1747648544
lemons!~doggie@user/doggie-:49517
xlii: shhhh

1747648548
lemons!~doggie@user/doggie-:49517
let me cope :3

1747648588
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
so - you have vim, right? you're doing :%s/fn badname/fn goodname/g

1747648620
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
sed -e "s/fn badname/fn goodname/g" file.zig # Same thing but on printout

1747648646
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
ok, so let's save while making backup sed -i.bak -e "s/fn badname/fn goodname/g" file.zig

1747648672
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
rest of the owl: sed -i.bak -e "s/fn badname/fn goodname/g" ./**/*.zig

1747649363
clevor!sid649024@id-649024.hampstead.irccloud.com
I use Sway, and my config is a lightly modified default.

1747649381
clevor!sid649024@id-649024.hampstead.irccloud.com
Speaking of which, I have yet to disable unused keybindings.

1747649429
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
Sway?

1747649985
clevor!sid649024@id-649024.hampstead.irccloud.com
swaywm

1747650030
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
heh, tiling wms is the only thing I miss from Linux

1747650165
clevor!sid649024@id-649024.hampstead.irccloud.com
Are you on Windows? Why so?

1747650199
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
nope, I'm on MacOS; POSIX but pretty

1747650215
clevor!sid649024@id-649024.hampstead.irccloud.com
It doesn't obey the FHS though

1747650335
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
true, but FHS isn't POSIX in the end, it's not like I'm huge fan of it anyway, I just want something that will provide mature cli/development experience and adds support and pretty things on top of it

1747650453
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
it has plenty of extra benefits but window management sucks

1747650636
clevor!sid649024@id-649024.hampstead.irccloud.com
Too bad it isn't FOSS.

1747650669
xlii!~xlii@83.9.214.150.ipv4.supernova.orange.pl
I agree, but on the other hand I think it popularized FOSS.

1747658529
drbeco!~beco@user/beco
hi guys

1747658558
drbeco!~beco@user/beco
I'm a bit puzzled by f16 implementation of IEEE-754-2008 standard

1747658664
drbeco!~beco@user/beco
This value  var number: f16 = 65023.0; is supposed to change to 65024.0 but it is rounding to 65020.0 which is supposedly not representable 

1747661529
Amun-Ra!~amun-ra@retro.rocks
what's the u16 representation of that value?

1747663415
bblack!~bblack@wikimedia/bblack-WMF
I think when you're saying it gets rounded to 65020.0, what's actually happening is it's being converted/reinterpreted as some other kind of float when you later access it (debug print statement?).

1747663534
bblack!~bblack@wikimedia/bblack-WMF
if you grab the bits of the f16 as u16 like Amun-Ra was suggesting, the bits look like the correct f16 value for 65024.0

1747663616
bblack!~bblack@wikimedia/bblack-WMF
https://zigbin.io/6799e3 gives the u16 interpretation of f16 65023.0 as 31728 decimal, which is "0 11110 1111110000" (split up as sign, exponent, fraction)

1747663638
bblack!~bblack@wikimedia/bblack-WMF
and then following how things should work from: https://en.wikipedia.org/wiki/Half-precision_floating-point_format

1747663665
bblack!~bblack@wikimedia/bblack-WMF
2^15 * (1 + (1008/1024)) -> 65024.0

1747663896
bblack!~bblack@wikimedia/bblack-WMF
drbeco: ^

1747664409
drbeco!~beco@user/beco
I used debug print. But also I tried the same number divided by 2.0 just to check the result and it was 32510.0 . How come? Strange, hun? Let me upload the simple code example

1747664724
bblack!~bblack@wikimedia/bblack-WMF
I get 32512 if I'm careful and check via u16 at the end again

1747664761
bblack!~bblack@wikimedia/bblack-WMF
(careful that it's f16 values for both 65023.0 and 2.0 in the division, then check u16 rep of the f16 result)

1747664816
drbeco!~beco@user/beco
https://zigbin.io/62d4ee

1747664832
bblack!~bblack@wikimedia/bblack-WMF
https://zigbin.io/48125a

1747664869
bblack!~bblack@wikimedia/bblack-WMF
I would assume the stdlib formatter is doing something that doesn't print f16 accurately

1747665101
bblack!~bblack@wikimedia/bblack-WMF
a quick glance at lib/std/fmt/format_float.zig /seems/ like it's designed to handle such cases, since it actually looks at the type and the typeinfo and bitcounts of the components, etc

1747665105
bblack!~bblack@wikimedia/bblack-WMF
but I donno

1747665129
bblack!~bblack@wikimedia/bblack-WMF
but maybe it's a bug in there?

1747665296
bblack!~bblack@wikimedia/bblack-WMF
in any case, it seems like the f16 type works correctly, in my limited testing, at the bits level for doing f16 math.

1747679480
smlavine!~smlavine@sourcehut/user/smlavine
Hello -- is there an easy way to see generated docs for a third-party libary? A la `zig std` but for any library

1747684500
clevor!sid649024@id-649024.hampstead.irccloud.com
Are there any CPU subtargets for x86_64 that can utilize the zmm0-zmm31 registers? I made a function that returns the minimum of a vector of 64 f32 values, set the CPU to Arrow Lake, Intel's newest microarchitecture, and it didn't use any zmm registers. https://godbolt.org/z/s5frxYc63

1747690228
clevor!sid649024@id-649024.hampstead.irccloud.com
Oh, Tiger Lake.

1747691315
smlavine!~smlavine@sourcehut/user/smlavine
vrischmann: Re my above question, the code I am attempting to view generated docs for is zig-sqlite. Do you know a way to view generated docs for that project? :)

1747693010
Fingel!~Fingel@user/fingel
Does anyone know how to prevent zig format from formatting a enum with a lot of members as one member per line? Would be nice to have some inline on the same line in this case

1747693594
grayhatter!~grayhatte@user/grayhatter
/ zig fmt: off

1747693603
grayhatter!~grayhatte@user/grayhatter
Fingel: ^ 

1747693770
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
Fingel, sometimes it depends if you are using last `,` or not

1747695193
Fingel!~Fingel@user/fingel
I tried removing the last , that does seem to work other places. I suppose I can turn it off for this file, thanks!

1747698894
squeek502!~squeek502@user/squeek502
Fingel, you can turn zig fmt off for specific parts of the file using // zig fmt: off  and  // zig fmt: on

1747698904
squeek502!~squeek502@user/squeek502
(as comments in the file)

1747699040
squeek502!~squeek502@user/squeek502
example: https://github.com/ziglang/zig/blob/f2077f57ae03ef21f1bfee6e4e041c5f466fc3be/lib/compiler/aro/aro/Tree/number_affixes.zig#L57-L98

