1739236836
ezzieyguywuf!~Unknown@user/ezzieyguywuf
LAC-Tech: can you link me to an example of such a "C shim"?

1739236879
LAC-Tech!~lewis@granite-phrase.bnr.la
ezzieyguywuf: uh not a good one :) but you just go into zig.build, and "addCSource", "addIncludePath", write C, make your header for your c file, and cImport as normal

1739236889
ezzieyguywuf!~Unknown@user/ezzieyguywuf
"not a good one" ðŸ¤£

1739236917
LAC-Tech!~lewis@granite-phrase.bnr.la
I mean I have one in my 100 line side project that doesn't work, but I guess the c shim is there and works, so I could linke that, hang on

1739236952
ezzieyguywuf!~Unknown@user/ezzieyguywuf
I see (LOL, no pun intended): just wrie the actual C bits in C and then import that into my zig program

1739236956
LAC-Tech!~lewis@granite-phrase.bnr.la
https://github.com/LAC-Tech/The-WAL-of-Time/blob/d0107a4a2df5d42fcc8daa7a2010c3099eabce53/build.zig#L39 that block of code should get you started

1739236983
LAC-Tech!~lewis@granite-phrase.bnr.la
the dynamic lig you want to lib, what your C shim file is called, how you want to compile, and where the header will be

1739237000
ezzieyguywuf!~Unknown@user/ezzieyguywuf
yea I see

1739237010
ezzieyguywuf!~Unknown@user/ezzieyguywuf
*shrug* this is an interesting approach, and one I may consider

1739237027
ezzieyguywuf!~Unknown@user/ezzieyguywuf
for now zig-wayland and zig-vulkan work fine for me, my project is still very much in the proof-of-concept stage

1739237050
LAC-Tech!~lewis@granite-phrase.bnr.la
yeah I think that approach is preferred. I just had no luck with not curses, and found it easier to just do that

1739237056
LAC-Tech!~lewis@granite-phrase.bnr.la
depends on the library

1739237136
ezzieyguywuf!~Unknown@user/ezzieyguywuf
not entirely unrelated: you know how when the zig compiler does it's thing, it doesn't endlessly scroll my terminal but rather reuses 20ish lines? is this done with raw ANSI escape codes or is there a library it's using?

1739237838
ezzieyguywuf!~Unknown@user/ezzieyguywuf
hadronized: what'd you end up using instead of vulkan-zig?

1739241240
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
Should I set target/optimize for dependencies if they expose them?

1739241243
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
In my build.zig

1739244817
torque!~tachyon@user/torque
yes, since it defaults to debug if not passed

1739244826
torque!~tachyon@user/torque
and target defaults to native

1739245024
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
Thanks

1739255290
dsal!sid13060@id-13060.lymington.irccloud.com
I was super confused at something I was doing wrong.  Turns out, the thing I was doing wrong was looking at the wrong docs.

1739255848
dsal!sid13060@id-13060.lymington.irccloud.com
Does anyone have a flake.nix providing a 0.14.x?

1739256228
dsal!sid13060@id-13060.lymington.irccloud.com
Oh, I see the release is pretty soon.  I'll just wait.

1739258808
andrewrk!~andrewrk@mail.ziglang.org
dsal: if you're not building from source, why not use the upstream-provided downloads?

1739259182
dsal!sid13060@id-13060.lymington.irccloud.com
I find that, too.  And the GitHub actions thing.  Iâ€™m unblocked several ways.

1739259215
dsal!sid13060@id-13060.lymington.irccloud.com
Lots of code is broken in the new version, though.  So I have stuff to do as well.

1739263154
hadronized!~hadronize@2001:41d0:a:fe76::1
ezzieyguywuf: my own wrapper; Zig is pretty nice to interface over C, especially if you add comptime to it to do stuff like renaming, handling boilerplate, etc.

1739263186
hadronized!~hadronize@2001:41d0:a:fe76::1
I have some comptime functions to tap into my C imports and generate constructors for the Vulkan types by adding the sType automatically based on the name / identifier of the type

1739263191
hadronized!~hadronize@2001:41d0:a:fe76::1
doing that in comptime is pretty simple

1739263212
hadronized!~hadronize@2001:41d0:a:fe76::1
IÂ needed to write a comptime case conversion function (not in the std); simple too

1739263250
hadronized!~hadronize@2001:41d0:a:fe76::1
in languages like Rust it makes sense to use a binding because you want to implement a XML generator based off the registry specification (itâ€™s a XML file so that languages can easily generate their bindings)

1739263261
hadronized!~hadronize@2001:41d0:a:fe76::1
but since Zig can load off C, I donâ€™t see the value of a binding there

1739263270
hadronized!~hadronize@2001:41d0:a:fe76::1
itâ€™s just opinionated at a too low-level

1739263302
hadronized!~hadronize@2001:41d0:a:fe76::1
but if itâ€™s done the way you would do it, then thereâ€™s no reason not to use it, indeed :)

1739263940
ifreund!2940d10f8b@user/ifreund
I've never used vulkan-zig, but if anyone has issues with zig-wayland getting in their way let me know

1739263964
ifreund!2940d10f8b@user/ifreund
IMO the bindings should be a strict improvement over translated C headers

1739263982
ifreund!2940d10f8b@user/ifreund
mostly they should just improve type safety and use proper namespacing

1739264013
hadronized!~hadronize@2001:41d0:a:fe76::1
usually, even that is specific to what you want to do

1739264049
hadronized!~hadronize@2001:41d0:a:fe76::1
hence why Iâ€™d rather just expose the lib as-is, just with the symbols of the languages, which is annoying in Rust because we need bindgen etc. for that

1739264056
hadronized!~hadronize@2001:41d0:a:fe76::1
but Zig does it natively, so{

1739264059
hadronized!~hadronize@2001:41d0:a:fe76::1
soâ€¦*

1739284490
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
if i write into a stream (std.net.Stream), how do i know that it's been sent?  (i can't have the other end response)

1739284523
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
i thought that the write succeeding is enough but for some reason it often succeeds even if i stopped the client on the other end already

1739284570
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
(i'm using stream.writer().any().print(..), not stream.write() if it makes any difference)

1739284623
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
i'm assuming that the fact that it succeeds is because it's been passed to the tcp stack but not technically sent yet (or not at the moment the .write() returned)

1739284716
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
i actually get error.BrokenPipe but only on second send, each one is about 30B

1739285027
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
(i'll check out https://www.openmymind.net/TCP-Server-In-Zig-Part-5b-Poll/ .. it looks like it might contain answers to my questions)

1739285349
ifreund!2940d10f8b@user/ifreund
netvor: there is no way to know for sure if the client recieved and processed whatever message you sent it unless you have the client reply with an ACK

1739285360
ifreund!2940d10f8b@user/ifreund
(and have a way to link that specific ACK to that specific message)

1739285401
ifreund!2940d10f8b@user/ifreund
think about this for a minute, the message might be some where along the route between the server and the client when the client exits

1739285518
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
*and* the ack could fail to send as well

1739285585
DerTeufel!~DerTeufel@87-206-205-214.dynamic.chello.pl
The age old issue of checking if the message was received

1739286151
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
i see that requiring the ack (in form of app specific message) would be the best... 

1739286243
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
thing is, i'm doing this redis server codecrafters course, and IIUC they require replica client to *not* respond when it receives a propagated command

1739286364
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
otoh, i realized i might just not need to care, maybe the protocol allows some space for client that might be dead

1739286409
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
(there *is* a command for explicit replica verification which does have response)

1739286423
ifreund!2940d10f8b@user/ifreund
handling network faults is table stakes for any real distrubuted consensus algorithm

1739286501
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
what do you mean by "table stakes" (googled it, didn't get it -- not a poker player :D)

1739286621
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
ah i got it, "Table stakes are the minimum offer to be considered a viable player, whether you are at the poker table or the boardroom table."

1739286624
ifreund!2940d10f8b@user/ifreund
"the bare minimum"

1739286653
ifreund!2940d10f8b@user/ifreund
it's a common english expression, I didn't actually know it had anything to do with poker :D

1739286676
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
yeah i'm not native english speaker, so i'm learning all the time :D

1739287408
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
around 2018 all managers learned the phrase and said it approximately every 10 minutes

1739287529
ifreund!2940d10f8b@user/ifreund
I'm surprised my fingers managed to spell it properly rather than writing "table steaks"

1739287671
leah2!~leah@vuxu.org
yum

1739287715
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
ifreund: lol

1739297346
ezzieyguywuf!~Unknown@user/ezzieyguywuf
hadronized: can you link to your wrapper? I'm considering doing my own too and am curious to see how others have gone about this.

1739297457
ezzieyguywuf!~Unknown@user/ezzieyguywuf
ifreund: so far I really like zig-wayland thanks again for putting this together and your recent push that fixes it for 0.14

1739299630
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
Oh zig-wayland got updated for 0.14? Cool, I can update my projects then 

1739300382
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
0.14 is not out, is it?  can't they wait a week? :D

1739305915
grayhatter!~grayhatte@user/grayhatter
netvor: I don't understand, what do you mean?

1739306134
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
you mean the 0.14 comment?  just a joke.  when i saw it i thought for a secodn that 0.14 was released already :)

1739309432
ifreund!2940d10f8b@user/ifreund
bwbuhse: not offically, but the next-zig branch usually tracks zig master for the few weeks before a release

1739309514
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
ifreund: yeah that's what I meant, I'd just checked the next-zig branch a couple weeks ago and it wasn't working (or I just couldn't figure it out) at the time

1739309534
bwbuhse!~The_Buhs@user/The-Buhs/x-5080862
I just didn't say anything about it then since I wasn't in a rush or anything :) 

1739310723
hadronized!~hadronize@2001:41d0:a:fe76::1
ezzieyguywuf: nah, IÂ donâ€™t really uploaded it, Iâ€™m saving Zig aside for now, Iâ€™m staying around Rust for the time being, but I donâ€™t exclude switching to Zig at some point for some projects of mine (but probably not before 1.0)

1739311417
grayhatter!~grayhatte@user/grayhatter
hadronized: you haven't uploaded it, or you're never gonna upload it?

1739311506
hadronized!~hadronize@2001:41d0:a:fe76::1
Iâ€™m not working on it actively and itâ€™s obviously not doing everything that zig-vulkan does

1739311510
hadronized!~hadronize@2001:41d0:a:fe76::1
so not for now

1739311528
hadronized!~hadronize@2001:41d0:a:fe76::1
IÂ might eventually, when Zig is 1.0 and Iâ€™m making a nice game in Zig so that you accept to play it grayhatter :]

1739311537
grayhatter!~grayhatte@user/grayhatter
are you sure it actually exists?

1739311712
hadronized!~hadronize@2001:41d0:a:fe76::1
yes, IÂ am, since IÂ have it in a staging git area in some ~/src/exp

1739311746
grayhatter!~grayhatte@user/grayhatter
ah, ok, no, yeah, I totally believe you 

1739311764
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
grayhatter: cmon man 

1739311778
hadronized!~hadronize@2001:41d0:a:fe76::1
yeah Iâ€™m not sure what youâ€™re doing here

1739311815
hadronized!~hadronize@2001:41d0:a:fe76::1
IÂ remember IÂ was pretty excited because given a symbol from a @cImport, I was able to change it from VK_STRUCT_WHATEVER to something camlCase at compile-time

1739311821
hadronized!~hadronize@2001:41d0:a:fe76::1
doing that in Rust requires a proc-macro

1739311831
hadronized!~hadronize@2001:41d0:a:fe76::1
which is almost the same, but requires an addition crate, so pretty annoying

1739311869
hadronized!~hadronize@2001:41d0:a:fe76::1
IÂ also had a vkCheck comptime thing that took a VkResult and translated it to !void

1739311875
hadronized!~hadronize@2001:41d0:a:fe76::1
it was pretty fun to write

1739311901
hadronized!~hadronize@2001:41d0:a:fe76::1
what I say in blog article still holds, I do think that Zig could be an amazing language to work with, but the downsides of it are too much to me, unfortunately

1739312129
grayhatter!~grayhatte@user/grayhatter
rockorager: this *is* me being nice... I have a very limited ability to tollerate inflamatory trolling

1739312154
grayhatter!~grayhatte@user/grayhatter
> ah, yes I did that already, but I'm not going to share it with you

1739312181
grayhatter!~grayhatte@user/grayhatter
> don't worry when I really do the thing, it'll be great you'll love it

1739312189
hadronized!~hadronize@2001:41d0:a:fe76::1
:/

1739312210
grayhatter!~grayhatte@user/grayhatter
> as I said before the thing you like is bad, and might be good one day maybe, if you do all the things I said you should do

1739312262
grayhatter!~grayhatte@user/grayhatter
toxcitiy covered with a veil of politeness is still toxic 

1739312372
ifreund!2940d10f8b@user/ifreund
hadronized, grayhatter: both of you knock it off

1739312408
hadronized!~hadronize@2001:41d0:a:fe76::1
ifreund: I didnâ€™t say anything

1739312429
grayhatter!~grayhatte@user/grayhatter
ðŸ˜¡

1739315650
andrewrk!~andrewrk@mail.ziglang.org
if I have to say "be nice to each other" one more time it's going to be via messaging ChanServ

1739315709
hadronized!~hadronize@2001:41d0:a:fe76::1
IÂ honestly have no idea what I said tonight, so Iâ€™m going to kindly ask g rayhatter to please mute me because IÂ asked for trouble tonight

1739315721
hadronized!~hadronize@2001:41d0:a:fe76::1
for no trouble*

1739315870
freshcoffee!~fresh@user/freshcoffee
gonna lighten things up; I win the `do'h` award -- ran zig-bootstrap/build in an emulated qemu-vm :P

1739315951
netvor!~netvor@2a00:ca8:a1f:cd0:982:6538:4c46:b377
you mean a vm emulated by qemu or a qemu emulated by {blank}?

1739315987
freshcoffee!~fresh@user/freshcoffee
a loongarch64 vm (emulated) on an x86_64 host

