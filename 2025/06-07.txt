1749284101
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
 self.arraylist = try std.ArrayList([]const u8).initCapacity(allocator, list_init_len);

1749284163
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
this works, but how do I make that generic? If I pass []const u8 as T: type to my own init function it's not comptime known (slice)

1749284376
grayhatter!~grayhatte@user/grayhatter
flower_: it is generic, what do you mean?

1749284427
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
grayhatter: https://git.sr.ht/~flower/jasm-gui-dvui/tree/list_type/item/src/main.zig#L73

1749284431
grayhatter!~grayhatte@user/grayhatter
types are exclusively comptime known

1749284440
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
first time I'm fiddling with generics

1749284441
grayhatter!~grayhatte@user/grayhatter
I can't view sr.ht links

1749284453
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
man what setup do you have

1749284518
grayhatter!~grayhatte@user/grayhatter
a setup without javascript enabled for sites with low to zero trust

1749284572
grayhatter!~grayhatte@user/grayhatter
the admin of sr.ht is too angry for me to trust him to behave rationally 

1749284608
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
I think the problem is the AI bot protection, modern times

1749284647
grayhatter!~grayhatte@user/grayhatter
sr.ht has many problems

1749284702
grayhatter!~grayhatte@user/grayhatter
flower_: but I can probably guess, and come close don't use `ArrayList([]const u8)` instead use `ArrayList(T)`

1749284719
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
https://zigbin.io/ec2b96

1749284749
grayhatter!~grayhatte@user/grayhatter
line 4 s/type/T

1749284772
grayhatter!~grayhatte@user/grayhatter
line 12 s/ArrayList(T)//

1749284781
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
ah and some other things I need to edit

1749285523
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
grayhatter: thx, compiles: https://zigbin.io/373130

1749289964
agent314!~agent314@69.4.232.49
hi ziggers

1749289975
Atque!Atque@user/Atque
Hello agent314

1749289979
agent314!~agent314@69.4.232.49
has anyone been able to install zig 0.14.1 to gentoo?

1749290027
agent314!~agent314@69.4.232.49
i might just have to build it from git manually

1749290152
agent314!~agent314@69.4.232.49
https://github.com/ziglang/zig/wiki/Install-Zig-from-a-Package-Manager over here it shows gentoo as green 0.14.1 but if you go over here https://packages.gentoo.org/packages/dev-lang/zig it's testing and yellow for 0.14.1 and 0.14.1 if you run emerge dev-lang/zig you'll get 0.13.0-r3 

1749290172
agent314!~agent314@69.4.232.49
*and yellow for 0.14.1 and 0.14.0 i meant

1749290357
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
at void we started having this issue: https://github.com/ziglang/zig/issues/23978

1749290495
agent314!~agent314@69.4.232.49
ah looks like i'll have to install llvm >20 too 

1749290523
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
0.14 requires hard 19 though, afaik

1749308708
Amun-Ra!~amun-ra@retro.rocks
0.14 â†’ 20

1749315629
triallax!f378378b91@lacerte/triallax
Amun-Ra: my local installation and memory say otherwise

1749315642
triallax!f378378b91@lacerte/triallax
0.14 does need llvm 19 from what i can see

1749317878
Amun-Ra!~amun-ra@retro.rocks
hmm, you're right

1749320098
txdv!~txdv@78.58.158.251
Hello!

1749320328
przmk!~przmk@user/przmk
grayhatter wasn't sr.ht specifically made to work without JavaScript?

1749322748
grayhatter!~grayhatte@user/grayhatter
przmk: I think they still advertise that

1749322878
grayhatter!~grayhatte@user/grayhatter
> All features work without JavaScript

1749322884
grayhatter!~grayhatte@user/grayhatter
except viewing code

1749322894
Gliptic!~glip@2a01:4f8:c012:91f3::1
but who needs that

1749322901
grayhatter!~grayhatte@user/grayhatter
not me

1749322947
grayhatter!~grayhatte@user/grayhatter
now with chatgpt, I have so much more time in the day because don't even need to read code anymore!

1749323866
przmk!~przmk@user/przmk
lmao, had to check with js disabled. They did indeed set-up Anubis which breaks if you have js disabled

1749323909
clevor!sid649024@id-649024.hampstead.irccloud.com
grayhatter: What are you using ChatGPT for, exactly?

1749323945
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
hm what type has the struct for run? https://ziglang.org/documentation/master/std/#std.process.Child.run

1749324057
torque!~tachyon@user/torque
 it's an anonymous struct declared in the function signature. you typiclaly call it by initializing it in place: `run(.{ .allocator = my_allocator, ... })`

1749324112
grayhatter!~grayhatte@user/grayhatter
clevor: nothing, I don't use any LLMs because I haven't given up all my self respect yet

1749324185
grayhatter!~grayhatte@user/grayhatter
ew... why is allocator and argv in the options struct when they're non-optional?

1749324227
grayhatter!~grayhatte@user/grayhatter
przmk: I know, I've been complaining about it for awhile now... they've also switched, they're using something other than anubis now

1749324263
torque!~tachyon@user/torque
it's using go-away

1749324270
torque!~tachyon@user/torque
which i think is basically the same thing as anubis

1749324360
grayhatter!~grayhatte@user/grayhatter
> Error 418 when calling /git/go-away/blob_excerpt/35067a43

1749324368
grayhatter!~grayhatte@user/grayhatter
I love the new web... it's awesome

1749324395
grayhatter!~grayhatte@user/grayhatter
a bunch of engineers didn't just decide to make everything worse 

1749324412
torque!~tachyon@user/torque
I can sort of understand run taking just a struct for args. I personally like arguments being named at the call site

1749324420
torque!~tachyon@user/torque
one of the few things obj-c/swift got right

1749324432
triallax!f378378b91@lacerte/triallax
torque: go-away doesn't require javascript from what i understand

1749324467
torque!~tachyon@user/torque
it must, because the challenge has to be computed client side or the whole proof of work thing is pointless, i think. not an expert

1749324483
triallax!f378378b91@lacerte/triallax
it has javascript challenges but not only these

1749324519
grayhatter!~grayhatte@user/grayhatter
torque, triallax go-away has different options, some require js, some don't, e.g. they have a cookie based on too

1749324525
triallax!f378378b91@lacerte/triallax
yes

1749324566
grayhatter!~grayhatte@user/grayhatter
my assumption was that sr.ht switched to go-away to use the cookie one, instead of the js one, because .... they advertise no javascript... but I guess that didn't work

1749326003
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
src/main.zig:883:22: error: expected type '?*const process.EnvMap', found '*?process.EnvMap'

1749326165
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
https://ziglang.org/documentation/master/std/#std.process.EnvMap.init

1749326203
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
pfff types fiddling

1749326427
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
ok, let's just call it a day

