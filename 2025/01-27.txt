1737937115
LAC-Tech!~lewis@granite-phrase.bnr.la
let's say I want to make a C library, with a artisan hand crafted header file, but I want to implement in in Zig. Should I start with zig init, or start with a makefile that calls zig cc?

1737940055
motiejus!~motiejus@88.223.107.21
LAC-Tech: sounds like you want to make a standard zig project, so "zig init" and go from there. `zig cc` is for compiling C files, which you seem like don't need, as you are implementing it in zig.

1737940206
LAC-Tech!~lewis@granite-phrase.bnr.la
motiejus: ok thanks for the direction. what should I look at for associating a C header file with a zig file?

1737940523
reykjalin!7e28cf3a41@user/reykjalin
LAC-Tech: looks like the header will be auto-generated for you: https://ziglang.org/documentation/0.13.0/#Exporting-a-C-Library

1737940556
reykjalin!7e28cf3a41@user/reykjalin
I suspect you can then modify the header to suit your needs if you want it to be more hand-crafted :)

1737940966
LAC-Tech!~lewis@granite-phrase.bnr.la
hmm, maybe if the autogenerated headers are nice, I'll play around. but a header file is the gateway to a C library, so ideally you want to control that.

1737940975
LAC-Tech!~lewis@granite-phrase.bnr.la
this gives me somewhere to start anyway, thanks

1737951858
grayhatter!~grayhatte@user/grayhatter
dsal: please excuse the tangent... have you caught misquitto transmitting message out of order?

1737952696
dsal!sid13060@id-13060.lymington.irccloud.com
grayhatter: I don't think I would've noticed.  I mostly just found it corrupting its state.  That was a few years ago.

1737952781
grayhatter!~grayhatte@user/grayhatter
ahh, the sender is sending the events out of order... that's.... *fantastic*

1737952786
grayhatter!~grayhatte@user/grayhatter
 :<

1737952800
grayhatter!~grayhatte@user/grayhatter
thanks for the consult dsal, it's very apprecated!

1737952824
ElGatoPanzon!~ElGatoPan@static.46.89.161.5.clients.your-server.de
Hi all, I just read the overview of the learn page!

1737952947
grayhatter!~grayhatte@user/grayhatter
hi ElGatoPanzon, welcome

1737964718
ksynwa!~kartik@49.36.209.119
Can someone please recommend something like mise that allows installing master versions of zig and zls? Right now I have an unelegant hack that uses bash scripts and direnv. [mise: https://github.com/jdx/mise/]

1737965056
andrewrk!~andrewrk@mail.ziglang.org
just use `curl`

1737965126
andrewrk!~andrewrk@mail.ziglang.org
that's me being spicy. there are several community-maintained version managers that are fairly popular to use

1737965655
ksynwa!~kartik@49.36.209.119
alright. Thanks. 

1737991697
tsujp!497e1f7b6a@sourcehut/user/tsujp
any goodies on dynamic dispatch in zig?

1737993872
tsujp!497e1f7b6a@sourcehut/user/tsujp
alternately what's a nice pattern to add debug information or tracing to a state machine labelled switch without copy-pasting print to each and every prong

1737994923
sskras!sid542048@id-542048.tinside.irccloud.com
ksynwa: if you learn installing them manually, maybe you should just create a PR for that repo which would add the zig/zls support?'

1737996554
tsujp!497e1f7b6a@sourcehut/user/tsujp
hmm no ranges on enum tags allowed in a switch statement eh

1737998464
tsujp!497e1f7b6a@sourcehut/user/tsujp
hmmm, ive got a switch prong which has multiple tag values and I calculate an offset from those enum tag values (comptime known) and when I use that offset in a double-slice it complains  expected type '*const [32]u8', found '[]const u8'

1738000149
ElGatoPanzon!~ElGatoPan@static.46.89.161.5.clients.your-server.de
ksynwa: I used zigup to install master with a managed symlink as ~/.local/bin/zig, and zls was a separate install via arch's AUR, which can be done as a simple download of zls binary and put in ~/.local/bin/zls

1738005136
andrewrk!~andrewrk@mail.ziglang.org
tsujp: @fieldParentPtr or inline switch prongs

1738006208
grayhatter!~grayhatte@user/grayhatter
I just updated to v0.14-dev, and I was using if (comptime out) |o| { ... } to check if out: ?[]u8 is null, but that's "broken" in 0.14-dev

1738006214
grayhatter!~grayhatte@user/grayhatter
is that a bug, or expected?

1738006631
andrewrk!~andrewrk@mail.ziglang.org
I don't know what "broken" means

1738006644
andrewrk!~andrewrk@mail.ziglang.org
need expected behavior and observed behavior

1738006707
andrewrk!~andrewrk@mail.ziglang.org
or rather, let me put it this way: "broken" means that expected behavior does not match observed behavior. but in a moving target of a W.I.P. proglang, it's often the case that any given set of people's idea of expected behavior differs, and since I can't see your screen I don't know what the observed behavior is

1738006906
grayhatter!~grayhatte@user/grayhatter
andrewrk: previously, (perhaps I'm wrong) it would resolve just the null check at comptime. I.e. my understanding was. it was known at comptime if out was `?[]u8 == null` or `[]u8 == valid_memory_address`

1738006946
grayhatter!~grayhatte@user/grayhatter
e.g. here https://srctree.gr.ht/repo/verse/blob/src/antibiotic.zig#L136

1738006959
andrewrk!~andrewrk@mail.ziglang.org
I don't recall the compiler having the ability to treat an optional as "partially comptime"

1738007075
grayhatter!~grayhatte@user/grayhatter
it's quite likely that I was misunderstanding the behavior previously. Also why I asked, because it does seem like it wouldn't work. So perhaps there was a latent bug that that's now a valid compile error

