1756861448
andrewrk!~andrewrk@mail.ziglang.org
2025 ZSF financial report and fundraiser: https://ziglang.org/news/2025-financials/

1756864290
blackbeard420!~blackbear@45.33.85.133
that is actually incredible

1756864662
torque!~tachyon@user/torque
curious if the lower donation floor in may-july this year appears to be correlated to something

1756865003
clevor!sid649024@id-649024.hampstead.irccloud.com
> All mascots tied at $0.

1756865005
clevor!sid649024@id-649024.hampstead.irccloud.com
Heh

1756868264
Drixtan!~Drixtan@user/Drixtan
Mitchell Hashimoto, that guy, it's like a model. Look, he's good looking, he's rich, he's bright, and mostly he uses zig... I am straight and I would marry him...

1756878042
grayhatter!~grayhatte@user/grayhatter
andrewrk: have you seen the ted talk by amanda palmer?

1756878085
andrewrk!~andrewrk@mail.ziglang.org
grayhatter: no but I'm a fan of her music

1756878115
grayhatter!~grayhatte@user/grayhatter
forgive the shameful self promotion here: but I wrote a blog post about it to convice my friend of how I'm right

1756878132
grayhatter!~grayhatte@user/grayhatter
https://gr.ht/2023/07/15/donations-accepted.html

1756878178
grayhatter!~grayhatte@user/grayhatter
I link to the talk (on youtube) a few times because of how drastically in changed my view on... really... on asking for help

1756878264
grayhatter!~grayhatte@user/grayhatter
lol, I forgot I linked to your blog post in this one 

1756878551
grayhatter!~grayhatte@user/grayhatter
anyways... I mention because I was reminded of it by the line

1756878576
grayhatter!~grayhatte@user/grayhatter
> I for one do not enjoy asking for money, but [...]

1756878693
grayhatter!~grayhatte@user/grayhatter
for whatever it's worth; I'm glad you wrote this, and I'm both glad and disappointed that you asked. Glad because I would gladly wish to know, and using that knowledge, step up to help... disappointed because while I'm still unemployed it would be irresponsible to increase my donation (but I wish I could)

1756878906
grayhatter!~grayhatte@user/grayhatter
also, I didn't know... I wonder how many other people don't know? I remember reading about how redditors (before the great enshittification) used to have it as a mark of pride that the bar graph (IIRC) for donations always exceeded server time... Given how much geeks love numbers, and how much they love optimizing for making the number go up, if it wouldn't be worth it to have a "real time" graph on

1756878908
grayhatter!~grayhatte@user/grayhatter
the site that showed how far over or under zsf was from it's goals

1756878957
andrewrk!~andrewrk@mail.ziglang.org
grayhatter: great talk

1756879030
grayhatter!~grayhatte@user/grayhatter
I've seen it so many times, but "is this how stupid people die" will always make me laugh

1756879290
andrewrk!~andrewrk@mail.ziglang.org
it's an alternative to gambling at casinos which is how stupid people live

1756879424
grayhatter!~grayhatte@user/grayhatter
oooh, gambling is a good idea! zig needs a way to play one thoes slot machine tones that are crafted to be addicting every time someone donates

1756894306
clevor!sid649024@id-649024.hampstead.irccloud.com
And you can't spell addicting without add.

1756895050
IstiCusi!~phonon@user/IstiCusi
i really love zig ... what are the best tutorials out ... would like to give them to my son

1756895403
braewoods!~braewoods@user/braewoods
IstiCusi, are they even at an age where they can handle it yet?

1756895405
braewoods!~braewoods@user/braewoods
o.O

1756895593
IstiCusi!~phonon@user/IstiCusi
yes, they can .. he learned assembly with me on the 6010 as start when he was 10 roughly .. 

1756895622
IstiCusi!~phonon@user/IstiCusi
I think, that zig is a very interesting next step 

1756895629
braewoods!~braewoods@user/braewoods
So why Zig? I would think C would be the next logical evolution.

1756895685
IstiCusi!~phonon@user/IstiCusi
c would be also an option .. but zig is maybe more challenging... 

1756895721
braewoods!~braewoods@user/braewoods
... Maybe so. I learned C with no prior knowledge of raw ASM. I guess C might seem trivial if you have prior knowledge of machine details.

1756895728
IstiCusi!~phonon@user/IstiCusi
with python etc he does not get the idea behind computation 

1756895744
braewoods!~braewoods@user/braewoods
The idea behind computation?

1756895753
braewoods!~braewoods@user/braewoods
What do you mean exactly?

1756895763
IstiCusi!~phonon@user/IstiCusi
later python etc are nice but in my opinion one needs to understand the hardware to get a feeling, what is done in the background

1756895779
IstiCusi!~phonon@user/IstiCusi
zig is more verbose 

1756895795
braewoods!~braewoods@user/braewoods
Oh, terseness.

1756895805
IstiCusi!~phonon@user/IstiCusi
and in my opinion the pointer types for example better to understand / readable

1756895808
braewoods!~braewoods@user/braewoods
C is rather terse as well.

1756895847
braewoods!~braewoods@user/braewoods
IstiCusi, you might also want to combine that with system level programming exercises.

1756895856
braewoods!~braewoods@user/braewoods
That's also pretty low level stuff in the background.

1756895860
IstiCusi!~phonon@user/IstiCusi
i startet to develop som e

1756895865
IstiCusi!~phonon@user/IstiCusi
for him .. but in c 

1756895894
braewoods!~braewoods@user/braewoods
Win32 or POSIX or whatever environment you're looking at.

1756895895
IstiCusi!~phonon@user/IstiCusi
calling sdl functions from assembly etc .. toshow  the calling convention of c 

1756895907
IstiCusi!~phonon@user/IstiCusi
linux 

1756895913
IstiCusi!~phonon@user/IstiCusi
posix

1756895949
braewoods!~braewoods@user/braewoods
Huh. I wonder if Free Pascal would be of interest? It's also pretty low level but way more verbose.

1756895969
braewoods!~braewoods@user/braewoods
More from the ALGOL family of syntax though.

1756895977
IstiCusi!~phonon@user/IstiCusi
hehehe ,... pascal was for most of us probably the first language beside basic

1756895985
IstiCusi!~phonon@user/IstiCusi
yes .. strongly typed 

1756895988
IstiCusi!~phonon@user/IstiCusi
also not a bad idea

1756896004
braewoods!~braewoods@user/braewoods
Yea, that might be helpful for a beginner.

1756896024
braewoods!~braewoods@user/braewoods
C's weak typing makes it very easy to make critical mistakes like misuse of pointers.

1756896031
IstiCusi!~phonon@user/IstiCusi
but from the practial view maybe not a good choice.

1756896080
IstiCusi!~phonon@user/IstiCusi
yes cs weak typing is one the one hand difficult, on the other hand, you start to understand what information really is .. .Shannonizing my son .. .poor kid

1756896082
IstiCusi!~phonon@user/IstiCusi
hehehhe

1756896131
IstiCusi!~phonon@user/IstiCusi
what is your location .. i am sitting in zurich 

1756896134
Affliction!affliction@idlerpg/player/affliction
"but zig is maybe more challenging..." hm? the number of ways you can shoot yourself in the foot in C that zig makes you work a bit harder to achieve

1756896157
Affliction!affliction@idlerpg/player/affliction
At any rate, I started with ziglings, then did a couple of simple projects

1756896170
IstiCusi!~phonon@user/IstiCusi
ziglings ?

1756896178
braewoods!~braewoods@user/braewoods
IstiCusi, so you basically graduated to... x86-64 ASM? There's a whole ABI document that might be helpful for ya.

1756896184
Affliction!affliction@idlerpg/player/affliction
https://codeberg.org/ziglings/exercises/

1756896197
IstiCusi!~phonon@user/IstiCusi
thx Affliction 

1756896200
chmod222!~chmod222@user/chmod222
Free Pascal mentioned

1756896212
chmod222!~chmod222@user/chmod222
That language still gives me a warm feeling

1756896256
braewoods!~braewoods@user/braewoods
It was a language ahead of its time. But C won out probably due to UNIX being involved.

1756896275
IstiCusi!~phonon@user/IstiCusi
very nice .. i will play together with him fixing some bug at ziglings .. have not known it

1756896296
IstiCusi!~phonon@user/IstiCusi
pascal was nice .. i liked it too .. borland

1756896298
IstiCusi!~phonon@user/IstiCusi
at this time 

1756896301
IstiCusi!~phonon@user/IstiCusi
turbo pascal 

1756896323
braewoods!~braewoods@user/braewoods
IstiCusi, you could also try throwing some trivial algorithms that people take for granted like integer to string / string to integer algorithms.

1756896344
IstiCusi!~phonon@user/IstiCusi
i learned a lot with turbo pascal 

1756896371
braewoods!~braewoods@user/braewoods
those are fun. I've been polishing up my own version of those to allow me to bypass printf overhead in some cases.

1756896380
IstiCusi!~phonon@user/IstiCusi
yes .. such things i did with him in assembly ... but for hex number printing

1756896392
IstiCusi!~phonon@user/IstiCusi
he likes java :) 

1756896396
braewoods!~braewoods@user/braewoods
Ah, the power of 2 bases are extra trivial.

1756896401
IstiCusi!~phonon@user/IstiCusi
minecraft 

1756896403
IstiCusi!~phonon@user/IstiCusi
hehehe

1756896405
braewoods!~braewoods@user/braewoods
At least if you're stuck with unsigned.

1756896415
braewoods!~braewoods@user/braewoods
I don't think Java even has any unsigned types?

1756896416
IstiCusi!~phonon@user/IstiCusi
double complement etc

1756896428
braewoods!~braewoods@user/braewoods
Or maybe old information.

1756896428
IstiCusi!~phonon@user/IstiCusi
i showed himm ...and carries and overflow etc 

1756896431
Affliction!affliction@idlerpg/player/affliction
IstiCusi: main thing to be aware of is, zig isn't a stable language yet, and Andrew isn't afraid to make massive breaking changes (see: last months' massive I/O overhaul)

1756896462
IstiCusi!~phonon@user/IstiCusi
i know and that is good in fact ... because we see the evolution .. i hope, that they keep experimenting ...

1756896476
IstiCusi!~phonon@user/IstiCusi
and i thought that i should financially support the zig team a little bit

1756896476
Affliction!affliction@idlerpg/player/affliction
Agreed

1756896507
braewoods!~braewoods@user/braewoods
It's a double-edged sword though. I don't tend to like things that break stuff that regularly.

1756896515
Affliction!affliction@idlerpg/player/affliction
I mean, I'd like a 1.0 eventually, but yeah, that 1.0 should be the best 1.0 it can be.

1756896526
IstiCusi!~phonon@user/IstiCusi
need to leave my friends .. my boss (the wife) is calling for lunch 

1756896528
IstiCusi!~phonon@user/IstiCusi
hehhee

1756896544
IstiCusi!~phonon@user/IstiCusi
but zig community seems to be nice 

1756896558
braewoods!~braewoods@user/braewoods
But then again I'm not a novice anymore. I'm mainly wanting to develop with a solid foundation nowadays.

1756896570
braewoods!~braewoods@user/braewoods
Hard to beat C for that.

1756896597
IstiCusi!~phonon@user/IstiCusi
yes, c started in 1973 roughly 

1756896610
IstiCusi!~phonon@user/IstiCusi
so c has proven its value .. .

1756896627
braewoods!~braewoods@user/braewoods
More like it doesnt'

1756896635
braewoods!~braewoods@user/braewoods
evolve quickly or in ways that break old behavior.

1756896641
braewoods!~braewoods@user/braewoods
The core of it.

1756896641
IstiCusi!~phonon@user/IstiCusi
yes 

1756896670
IstiCusi!~phonon@user/IstiCusi
this was from the beginning the main idea to keep things in fact portable.... i love c too 

1756896675
IstiCusi!~phonon@user/IstiCusi
but i start to love zig as well

1756896677
Affliction!affliction@idlerpg/player/affliction
of course, the "mistakes" (or, what each of us individually might perceive as "mistakes" - we might disagree on the specifics there, heh) are preserved forever

1756896682
IstiCusi!~phonon@user/IstiCusi
and it is a c compiler at the same time

1756896698
Affliction!affliction@idlerpg/player/affliction
which, is why I like zig. It really does seem to fit as a "better C" - as long as you're ok with a language in flux

1756896706
braewoods!~braewoods@user/braewoods
IstiCusi, Nim is also comparable I believe, but I haven't looked at "C replacements" in awhile.

1756896708
IstiCusi!~phonon@user/IstiCusi
yes... 

1756896715
IstiCusi!~phonon@user/IstiCusi
so mates .. .have a good day 

1756896721
Affliction!affliction@idlerpg/player/affliction
actually I initially used zig as a cross compiler

1756896721
IstiCusi!~phonon@user/IstiCusi
and cheers from Zuerich 

1756896723
Affliction!affliction@idlerpg/player/affliction
for C

1756896732
Affliction!affliction@idlerpg/player/affliction
which, is one of the intended "first steps" on the zig pipeline, heh

1756896741
IstiCusi!~phonon@user/IstiCusi
i come back later 

1756896764
Affliction!affliction@idlerpg/player/affliction
seeya

1756899582
leah2!~leah@vuxu.org
i just learned about zigtoberfest and it's already sold out... is there a waiting list?

1756901599
ifreund!2940d10f8b@user/ifreund
leah2: I don't think the organizers are active on IRC, maybe send them an email?

1756901624
leah2!~leah@vuxu.org
i could try, yes

1756903594
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
in std, is there a data structure that would allow me to maintain an array of elements where i can reserve / free / resize chunks of elements and slice into the array?   i basically want the same behavior as allocator has but for array of custom type instead of bytes

1756903660
bblack!~bblack@wikimedia/bblack-WMF
netvor: what is std.ArrayList missing from your list?

1756903764
bblack!~bblack@wikimedia/bblack-WMF
(of course, if you're needing a more allocator-like interface, the allocators themselves do operate on slices of custom types too)

1756903784
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
bblack: umm .. well .. afaik arraylist cannot do what i described but .. i guess i realized i can just use ana actuakl allocator & create my chunks as separate ArrayLists

1756903909
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
more i think about it, that actually is what i want

1756903991
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
the reason i was not looking at the usual allocator + arraylist was that i kept thinking that i want the *whole* array to be somewhat consecutive --- but now i realized i can still do that by having separate allocator for this type (within the main "global"  allocator)

1756904101
Affliction!affliction@idlerpg/player/affliction
netvor: std.heap.memory_pool.MemoryPool, though it won't give you slices on its own. Might serve as a reference for implementation though.

1756904269
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
i see, thanks, i might use it eventually

1756904433
clevor!sid649024@id-649024.hampstead.irccloud.com
In narser, I use a memory pool of `[std.fs.max_path_bytes]u8` despite the memory cost.

1756904541
clevor!sid649024@id-649024.hampstead.irccloud.com
For storing file contents, I use the object's arena because there could potentially be thousands of files.

1756904636
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
i think i'll run with allocators, because it gives me extra feature.  what i'm working on is a small game ECS, and i want to store sets of vector geometry shapes.  i was thinking of maintaining this large array of Shape objects and building a pool/allocator on top of it

1756904756
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
but i realized if i build it on top of simple []const Shape slices into memory, i can let the api user decide on entity creation,  whether they want ECS to copy and maintain the shape slice, or the ECS can just use the slice as is (that's going to be the case for most static shapes)

1756904777
netvor!~netvor@2a00:ca8:a1f:cd0:de30:54f7:cafd:3dff
the latter also makes it trivial to reuse/share shape slices among entities

1756904834
clevor!sid649024@id-649024.hampstead.irccloud.com
If I return a struct containing an arena from a function, would a MemoryPool using said arena be invalidated upon return?

1756905157
clevor!sid649024@id-649024.hampstead.irccloud.com
Looking at the documentation, it looks like that isn't the case due to RLS.

1756907823
mivanchev!~mivanchev@user/mivanchev
hey does anyone have an example of X11 with Zig?

1756907833
mivanchev!~mivanchev@user/mivanchev
is there a library besides the bindings to the headers?

1756912787
sg94!~sg94@dhcp-146-135-113-97.gobrightspeed.net
mivanchev: https://github.com/marler8997/zigx might be what you're looking for

1756920614
grayhatter!~grayhatte@user/grayhatter
how long has print() had base64 support?

1756920780
grayhatter!~grayhatte@user/grayhatter
(it's a *really* nice touch)

1756921435
andrewrk!~andrewrk@mail.ziglang.org
since writergate

1756921950
grayhatter!~grayhatte@user/grayhatter
I get the sense that `_ => "string"` when non-exaustive enum is u10 is not a comptime friendly construct?

1756940352
smlavine!~smlavine@sourcehut/user/smlavine
I wish I was writing in Zig at work :(

1756940383
smlavine!~smlavine@sourcehut/user/smlavine
My first real solid dose of C++ at scale does not spark joy

