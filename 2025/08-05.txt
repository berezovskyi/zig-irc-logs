1754377385
andrewrk!~andrewrk@mail.ziglang.org
LAC-Tech: https://github.com/ziglang/zig/pull/24699

1754377392
andrewrk!~andrewrk@mail.ziglang.org
(that was you re: BoundedArray right?)

1754377653
andrewrk!~andrewrk@mail.ziglang.org
ifreund: pretty soon you're going to have to file a follow-up issue to #19231: "There are not enough ring buffer implementations in the standard library"

1754378025
Affliction!affliction@idlerpg/player/affliction
Am I blind or is there no convenience function in std that, given a slice and index, returns an optional?

1754378128
Affliction!affliction@idlerpg/player/affliction
Or, being able to take advantage of bounds checking in slices other than crashing out in general; I assume there's a reason this doesn't exist for instance?: if (slice[idx]) |elem| {}

1754378323
Affliction!affliction@idlerpg/player/affliction
Naturally both are trivial to replicate, so perhaps that's why on its own. Just something that, the more I run into it, the more I feel the need to ask and get closure on, heh.

1754379720
ifreund!2940d10f8b@user/ifreund
andrewrk: hah, very exciting

1754389362
hadronized!~hadronize@2001:41d0:a:fe76::1
I found it interesting that zls formats error { as error{, but it doesn’t do that with struct {

1754414662
andrewrk!~andrewrk@mail.ziglang.org
ifreund: it's like whack-a-mole! https://github.com/ziglang/zig/pull/24705

1754414669
andrewrk!~andrewrk@mail.ziglang.org
peek the diff :D

1754414703
hadronized!~hadronize@2001:41d0:a:fe76::1
is it safe to take the .items out of an ArrayList(T) and manage that memory on one’s own?

1754414717
hadronized!~hadronize@2001:41d0:a:fe76::1
there’s toOwnedSlice, but that thing seems to do a copy

1754414752
andrewrk!~andrewrk@mail.ziglang.org
hadronized: you need toOwnedSlice. check the code more carefully, it does not always copy

1754414775
andrewrk!~andrewrk@mail.ziglang.org
problem is that you need to inform the allocator about the new size. that may fail, in which case you need to copy

1754414792
hadronized!~hadronize@2001:41d0:a:fe76::1
allocator.remap?

1754414845
hadronized!~hadronize@2001:41d0:a:fe76::1
hm, I think I used realloc on my other code to do that

1754414848
hadronized!~hadronize@2001:41d0:a:fe76::1
I should probably use remap

