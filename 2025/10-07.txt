1759797529
ezzieyguywuf!~Unknown@user/ezzieyguywuf
ah nice thanks

1759797600
ezzieyguywuf!~Unknown@user/ezzieyguywuf
er dang, I guess I need to do an addModule then? I'm not doing that atm, just addExecutable

1759798581
ezzieyguywuf!~Unknown@user/ezzieyguywuf
ah, I guess exe.root_module.sanitize_thread = true: this doesn't give me the flag but it works in a pinch at least

1759798595
squeek502!~squeek502@user/squeek502
ezzieyguywuf, `addExecutable` with `.root_source_file` is deprecated FYI, so you'll need to update to `createModule`/`addModule` eventually

1759799252
ezzieyguywuf!~Unknown@user/ezzieyguywuf
squeek502: noted, I just needed this for a quick test

1759819463
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i have this long line how do i wrap it that doesn't get changed by zig fmt? https://zigbin.io/c0772c

1759821540
squeek502!~squeek502@user/squeek502
stealth_, https://zigbin.io/4f306f

1759821780
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
squeek502, nice, thanks :)

1759832010
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
ACTION freezes in horror at the sight of trailing operators

1759832190
clevor!sid649024@id-649024.hampstead.irccloud.com
I don't like trailing operators either, but it's not that big of a deal IMO

1759845646
bblack!~bblack@wikimedia/bblack-WMF
yeah the trailing "operator" thing is interesting.  I prefer it trailing if it's commas, but I don't think I do for ++ (or any math op either)

1759845658
bblack!~bblack@wikimedia/bblack-WMF
I never really thought about it explicitly before

1759847308
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
i barely even consider commas operators, at least not in the practical sense

1759849322
clevor!sid649024@id-649024.hampstead.irccloud.com
I would consider commas similar to semicolons.

1759863686
longlonglongint!~longlongl@user/longlonglongint
how should i go about prepending self to the arguments passed to @call

1759863737
longlonglongint!~longlongl@user/longlonglongint
i have f: anytype and args: anytype but @call(.auto, f, .{self} ++ args) doesnt work

1759863981
clevor!sid649024@id-649024.hampstead.irccloud.com
Initializing an argument list with `inline for` is the only solution I have so far.

1759864010
longlonglongint!~longlongl@user/longlonglongint
dang

1759864037
clevor!sid649024@id-649024.hampstead.irccloud.com
Hopefully LLVM should optimize it away.

1759864633
longlonglongint!~longlongl@user/longlonglongint
/usr/lib64/zig/0.15.1/lib/std/meta.zig:116:5: error: Expected pointer, slice, array or vector type, found '*root.Branch(u32,0)'

1759864644
longlonglongint!~longlongl@user/longlonglongint
this is a rather confusing error

1759864703
longlonglongint!~longlongl@user/longlonglongint
and the trace goes back to one line after a function called the offending function

1759865607
clevor!sid649024@id-649024.hampstead.irccloud.com
What does the constructor function look like?

1759865620
clevor!sid649024@id-649024.hampstead.irccloud.com
s/constructor //

1759867799
longlonglongint!~longlongl@user/longlonglongint
what do you mean by the constructor function

1759873279
clevor!sid649024@id-649024.hampstead.irccloud.com
I meant the function that prepends self to the arg list ðŸ¤¦

1759873422
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
I like how much shorthand code you can write using zig! its amazing...

1759873730
clevor!sid649024@id-649024.hampstead.irccloud.com
As in concise, or terse?

1759873867
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
yeah

1759874023
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
being able to do something like `} else |err| return something`, so cool

1759875079
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
or `for (0..length) |i| val[i].user_data = 0;` so cool 

1759876312
longlonglongint!~longlongl@user/longlonglongint
clevor: here it is https://zigbin.io/0f0499

1759876350
longlonglongint!~longlongl@user/longlonglongint
stealth_: for (val) |*v| v.user_data = 0; would also work as far as i know

1759876572
clevor!sid649024@id-649024.hampstead.irccloud.com
IIRC tuple concatenation only works on comptime-known tuples/slices but andrewrk would know more.

1759877084
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
longlonglongint, it does compile with no errors https://zigbin.io/397765

1759877825
longlonglongint!~longlongl@user/longlonglongint
dang

1759877833
longlonglongint!~longlongl@user/longlonglongint
i cant seem to make self comptime for some reason

1759877844
longlonglongint!~longlongl@user/longlonglongint
or at least its not known at compile time

