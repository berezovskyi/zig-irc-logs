1745625685
lemons!~doggie@user/doggie-:49517
i will say that i dont think every function needs a test

1745625750
lemons!~doggie@user/doggie-:49517
if its some convoluted whatever or inherently mutates stuff, hacking in mocks to get it to work will take more time than testing it by hand

1745625760
Drixtan!~Drixtan@user/Drixtan
reykjalin, you are using musl? it seems dumb to ask, but to make sure

1745625932
reykjalin!7e28cf3a41@user/reykjalin
I am not using musl, no

1745625939
reykjalin!7e28cf3a41@user/reykjalin
hmmm actually

1745625950
reykjalin!7e28cf3a41@user/reykjalin
I'm using the alpine linux container, so maybe I am using musl 🤔

1745625965
grayhatter!~grayhatte@user/grayhatter
> I'm using alpine linux, so maybe I'm using musl

1745625967
reykjalin!7e28cf3a41@user/reykjalin
Drixtan: is that a problem?

1745625989
lemons!~doggie@user/doggie-:49517
sup grayhatter 

1745626003
grayhatter!~grayhatte@user/grayhatter
hey lemons :)

1745626010
lemons!~doggie@user/doggie-:49517
i got the tests to work

1745626017
lemons!~doggie@user/doggie-:49517
15/17 passing

1745626017
Drixtan!~Drixtan@user/Drixtan
reykjalin, well, because I see you are getting the musl package, so if you are not on musl, that might.. you know, cause a problem but eh

1745626018
grayhatter!~grayhatte@user/grayhatter
dope, good work

1745626040
lemons!~doggie@user/doggie-:49517
the two remaining is because idk whatever im too tired to fix rn

1745626052
grayhatter!~grayhatte@user/grayhatter
> Alpine Linux is a Linux distribution designed to be small, simple, and secure. It uses musl [...]

1745626097
grayhatter!~grayhatte@user/grayhatter
Drixtan: musl is intended to be used static; so that you can use it anywhere without needing to track dynamic libc

1745626125
grayhatter!~grayhatte@user/grayhatter
you have it backwards, using gnu libc is the thing that's more likely to cause problems

1745626227
Drixtan!~Drixtan@user/Drixtan
grayhatter, I think I expressed myself incorrectly, I was asking if the package version was aligned with what he had installed.

1745626233
reykjalin!7e28cf3a41@user/reykjalin
I'm not using gnu libc. I am building a static library, and in fact only trying to get the zig docs to be built. Need the static library to call `.getEmittedDocs()`, but no artifact is generated so it's using `-fno-emit-bin`

1745626248
grayhatter!~grayhatte@user/grayhatter
> error: unable to open directory '/home/build/.cache/zig/b/3bb344b345bc9be1bba6071292d39562': FileNotFound

1745626266
grayhatter!~grayhatte@user/grayhatter
*feels* like https://github.com/ziglang/zig/issues/23110

1745626277
reykjalin!7e28cf3a41@user/reykjalin
There is no dependency, and I've confirmed the container is using zig 0.14 just like I do locally

1745626440
Drixtan!~Drixtan@user/Drixtan
idk man :(

1745626475
grayhatter!~grayhatte@user/grayhatter
reykjalin: where's the build.zig?

1745626625
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
reykjalin: https://0x0.st/8VdJ.txt

1745626634
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
you aren't passing the target to your doc step

1745626642
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
check step*

1745626662
reykjalin!7e28cf3a41@user/reykjalin
omg

1745626668
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
And that step is where you pull the emitted docs from

1745626674
reykjalin!7e28cf3a41@user/reykjalin
rockorager: that seems like a problem shoot. thanks!

1745626676
reykjalin!7e28cf3a41@user/reykjalin
I'll try that

1745626692
grayhatter!~grayhatte@user/grayhatter
rockorager: did you try it?

1745626698
grayhatter!~grayhatte@user/grayhatter
it being that patch?

1745626722
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Oh

1745626723
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
no

1745626726
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
it fails to compile

1745626735
reykjalin!7e28cf3a41@user/reykjalin
hmmm although I see the same issue for fn sometimes and that does have the target

1745626736
grayhatter!~grayhatte@user/grayhatter
yeah... I don't think that could be the issue

1745626744
reykjalin!7e28cf3a41@user/reykjalin
I should still fix that i think

1745626747
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
the root module and that step can't both have a target defined

1745626756
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
so it's already defined since you set it on the module

1745626760
grayhatter!~grayhatte@user/grayhatter
that's why

1745626801
reykjalin!7e28cf3a41@user/reykjalin
grayhatter: both the builds in https://git.sr.ht/~reykjalin/log_to_file and https://git.sr.ht/~reykjalin/fn are failing intermittently

1745626803
reykjalin!7e28cf3a41@user/reykjalin
sometimes they succeed

1745626811
reykjalin!7e28cf3a41@user/reykjalin
but they fail more often than they succeed

1745626818
grayhatter!~grayhatte@user/grayhatter
reykjalin: git.sr.ht doesn't load for me

1745626831
reykjalin!7e28cf3a41@user/reykjalin
github.com/reykjalin/<repo> also works

1745626839
reykjalin!7e28cf3a41@user/reykjalin
same repo names

1745626845
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
`zig build -Dtarget=x86_64-linux-musl check` does work locally for me

1745626857
reykjalin!7e28cf3a41@user/reykjalin
what about the docs step? that's the one that's actually failing

1745626866
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
same

1745626875
reykjalin!7e28cf3a41@user/reykjalin
Honestly I think I'll just try to build this in an openbsd container and see if that changes anything

1745626893
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
does openbsd have zig 0.14?

1745626899
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I don't think they do

1745626903
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
Could be wrong

1745626910
reykjalin!7e28cf3a41@user/reykjalin
it does in ports

1745626927
reykjalin!7e28cf3a41@user/reykjalin
according tot he wiki at least: https://github.com/ziglang/zig/wiki/Install-Zig-from-a-Package-Manager

1745627060
Drixtan!~Drixtan@user/Drixtan
well, I did all the steps on my local, with all the stuff you know, it's working (linux, zig0.14.0) 

1745627094
reykjalin!7e28cf3a41@user/reykjalin
yup, I never ran into this locally. Only in the ci container, and only on the docs step. The regular build steps never failed

1745627146
reykjalin!7e28cf3a41@user/reykjalin
hmmm, openbsd seems to be taking a long time to boot. I can try nixos unstable too

1745627195
grayhatter!~grayhatte@user/grayhatter
reykjalin: can you repro the failure locally?

1745627223
Drixtan!~Drixtan@user/Drixtan
can you for fun do a ls -R in .cache

1745627274
grayhatter!~grayhatte@user/grayhatter
lol, y'all are funny

1745627292
reykjalin!7e28cf3a41@user/reykjalin
grayhatter: no, can't reproduce locally

1745627315
reykjalin!7e28cf3a41@user/reykjalin
Drixtan: I'll see if I can ssh into one of the failed builds and check it out. Last time I logged into one the build succeeded from the ssh session though

1745627328
reykjalin!7e28cf3a41@user/reykjalin
oh well, resubmitting the build worked this time *le sigh*

1745627337
grayhatter!~grayhatte@user/grayhatter
build zig on this commit https://github.com/ziglang/zig/pull/23645/commits/c0a111b3c8b1c12caca6e44602d94b3f3b26ab16 and see if it repros

1745627338
reykjalin!7e28cf3a41@user/reykjalin
oh wait no, now the other project failed

1745627350
Drixtan!~Drixtan@user/Drixtan
ther eis a weird "zig" sub folder in .cache which I've not anywhere

1745627359
Drixtan!~Drixtan@user/Drixtan
what?

1745627367
reykjalin!7e28cf3a41@user/reykjalin
grayhatter: I don't think I have the ability to run an arbitrary commit in CI

1745627385
grayhatter!~grayhatte@user/grayhatter
if you can build code, you can build zig

1745627392
reykjalin!7e28cf3a41@user/reykjalin
.cache/zig is the global zig build cache Drixtan

1745627405
reykjalin!7e28cf3a41@user/reykjalin
I'm not going to build zig every time in CI even if that works

1745627445
Drixtan!~Drixtan@user/Drixtan
well, I've put the global cache in a different folder, following your command in the script, I still don'thave the zig sub folder

1745627493
Drixtan!~Drixtan@user/Drixtan
$ ls cache/ gcache/

1745627493
Drixtan!~Drixtan@user/Drixtan
cache/:

1745627493
Drixtan!~Drixtan@user/Drixtan
h  o  tmp  z

1745627493
Drixtan!~Drixtan@user/Drixtan
 

1745627493
Drixtan!~Drixtan@user/Drixtan
gcache/:

1745627493
Drixtan!~Drixtan@user/Drixtan
b  h  o  tmp  z

1745627498
Drixtan!~Drixtan@user/Drixtan
sorry the mess here

1745627529
Drixtan!~Drixtan@user/Drixtan
gcache is the global cache folder you understood

1745627531
grayhatter!~grayhatte@user/grayhatter
reykjalin: the point isn't to build zig everytime, it's to verify the bug that I mentioned *is* the bug, then you'll have a work around until 0.14.1 comes out, and then when it does, your can use the default zig and don't have to compile it

1745627570
reykjalin!7e28cf3a41@user/reykjalin
sure I understand that, but it seems the only workaround would be to build zig every time until 0.14.1 comes out, and that's not something I'd like to do

1745627690
grayhatter!~grayhatte@user/grayhatter
you'd rather hope it is or isn't that bug, and then click "re-run" job until it works?

1745627771
grayhatter!~grayhatte@user/grayhatter
you also wouldn't need to build zig every time, you could just build it once, and then cache the updated binary until you don't need it anymore

1745627851
reykjalin!7e28cf3a41@user/reykjalin
no, I'm trying to work around it in a different way that doesn't require building zig every time. AFAIK builds.sr.ht doesn't have caching across builds

1745628427
reykjalin!7e28cf3a41@user/reykjalin
same issue with 0.15.0-dev https://builds.sr.ht/~reykjalin/job/1478799#bottom

1745628457
reykjalin!7e28cf3a41@user/reykjalin
I guess I'll just do this manually for now

1745628550
grayhatter!~grayhatte@user/grayhatter
reykjalin: is the commit I linked to, in -dev?

1745628720
reykjalin!7e28cf3a41@user/reykjalin
I don't know. I don't think so since there's probably a separate 0.14.1 branch?

1745628799
grayhatter!~grayhatte@user/grayhatter
that PR isn't merged yet, which makes me think it's not in any of the zig branches yet

1745628991
reykjalin!7e28cf3a41@user/reykjalin
yeah then it's definitely not there

1745651872
GreaseMonkey!greaser@user/greasemonkey
welp, after having some pain several Zig "major" versions ago, i managed to get it to spit out something which works in Windows 98 SE without having to modify std (well, after doing a kludge to patch the PE header to not require windows 6.0)

1745651906
GreaseMonkey!greaser@user/greasemonkey
-fsingle-threaded seems to cut out most of the garbage, the next thing is to have a main() that is declared exactly "noreturn" and instead call kernel32 ExitProcess() yourselff

1745651923
GreaseMonkey!greaser@user/greasemonkey
next step is to see if i have a 95 VM lying around

1745653028
GreaseMonkey!greaser@user/greasemonkey
...i do, and it seems it also works in 95, so yay, 0.14.0 does have a usable escape hatch for if anyone needs (or wants) to target older versions

1745661781
bw!sid2730@user/betawaffle
If I have a `switch` on a runtime-known value, and the branches produce only comptime-known values (e.g. `const foo = switch (x) { 0 => 0, 1 => 1, else => return };`), what will zig do if I try to use the value (`foo` in the example) after the switch?

1745661915
bw!sid2730@user/betawaffle
A better example for my question would be a comptime-only value, like a `type`, so imagine I produced `u16` and `u32` instead of `0` and `1`.

1745662009
bw!sid2730@user/betawaffle
One possibility is that everything after the switch effectively gets duplicated into each of the branches. Alternatively the compiler could just say “hey you can’t do that”

1745662090
bw!sid2730@user/betawaffle
I’m hoping it behaves more like the former though

1745663451
Gliptic!~glip@2a01:4f8:c012:91f3::1
the answer is the latter

1745663470
bw!sid2730@user/betawaffle
Ok

1745663903
Gliptic!~glip@2a01:4f8:c012:91f3::1
I'm actually working on a language where the answer is the former, but it's pretty crazy

1745664979
bw!sid2730@user/betawaffle
it's not that crazy, but i imagine it could lead to easy *unintentional* code bloat

1745665036
lemons!~doggie@user/doggie-:49517
Gliptic: what language?

1745665078
Gliptic!~glip@2a01:4f8:c012:91f3::1
it's not in a public repo yet

1745665092
bw!sid2730@user/betawaffle
are you writing it in zig?

1745665094
Gliptic!~glip@2a01:4f8:c012:91f3::1
bw, well, there's other crazy things going on

1745665128
Gliptic!~glip@2a01:4f8:c012:91f3::1
currently, yes

1745665208
Gliptic!~glip@2a01:4f8:c012:91f3::1
think statically-typed Icon with comptime that is also goal-oriented

1745665809
bw!sid2730@user/betawaffle
does iterating through the declarations on a type (from @typeInfo) cause those declarations to be analyzed?

1745665831
bw!sid2730@user/betawaffle
or only if i do something like @field, etc on them?

1745666155
bw!sid2730@user/betawaffle
looks like the answer is it doesn't :)

1745669293
lemons!~doggie@user/doggie-:49517
just redid my "pick a random spot to drop the player in" to not pick a random integer and check if it corresponds to a valid space

1745669295
lemons!~doggie@user/doggie-:49517
im sad

1745670918
lemons!~doggie@user/doggie-:49517
how does one breakpoint again

1745686801
grayhatter!~grayhatte@user/grayhatter
lemons: open the language ref, and `ctrl + f` breakpoint

1745686821
grayhatter!~grayhatte@user/grayhatter
if that doesn't show anything try `@breakpoint()`

1745686872
lemons!~doggie@user/doggie-:49517
yeah i see it

1745686883
lemons!~doggie@user/doggie-:49517
how do i get use of it tho

1745686895
lemons!~doggie@user/doggie-:49517
so far ive been running stuff from cmd

1745686907
grayhatter!~grayhatte@user/grayhatter
you know how a break point works in a debugger rig.... ahhhh

1745686921
grayhatter!~grayhatte@user/grayhatter
breakpoints only work in debuggers

1745686931
grayhatter!~grayhatte@user/grayhatter
well... kinda, it's complicated

1745686942
lemons!~doggie@user/doggie-:49517
yeaaah ive noticed

1745686997
grayhatter!~grayhatte@user/grayhatter
I'm too busy to write a full explination on debuggers (but can answer specific questions) I'd suggest finding a tutorial on LLDB (there's a fork that's much smarter when working in zig) there's also uScope which is written in zig

1745687015
lemons!~doggie@user/doggie-:49517
kk ill take a gander

1745687022
grayhatter!~grayhatte@user/grayhatter
but a breakpoint "pauses" the program when it's running inside a debugger, so the debugger can inspect the state

1745687399
lemons!~doggie@user/doggie-:49517
ik what breakpoints are, its just that so far ive only used them in a lang that needed no additional setup

1745687409
lemons!~doggie@user/doggie-:49517
the codebase provided all the necessary configs

1745697292
h4kor!~h4kor@user/h4kor
lemons: the lazy approach use VSCode for Debug. Setup is trivial and you can run single tests with a debugger out of the box

1745699743
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
"I Wrote Code That’s 60 MILLION Times Faster Than Zig !" https://www.youtube.com/watch?v=DewUEl8RDfM

1745699809
Gliptic!~glip@2a01:4f8:c012:91f3::1
the code doesn't do anything, does it

1745699844
Gliptic!~glip@2a01:4f8:c012:91f3::1
because it's optimized away

1745700046
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
its an interesting video for learning 

1745701089
andrewrk!~andrewrk@mail.ziglang.org
std.unicode is just some PR that I merged, it's not really part of the identity of zig. will likely get rewritten before 1.0 and it's not really a load bearing module anyway

1745701127
andrewrk!~andrewrk@mail.ziglang.org
I guess the project has been around for a while so people reasonably expect std to be more polished, but that's just not the case for all of std

1745701309
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
dude (from the video) says he re implemented the "grapheme" library and its 500x faster https://github.com/Super-ZIG/io but he hasn't uploaded that new code yet. 

1745701431
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
andrew that title was just a hype though! it was to show how you can get misleading results using compile-time

1745701468
Gliptic!~glip@2a01:4f8:c012:91f3::1
AKA clickbait

1745701470
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
for someone like me its was worth it cause now i know what zig `_ =` does 

1745701560
grayhatter!~grayhatte@user/grayhatter
stealth_: your mind is gonna be completely blown when you finally read the language docs

1745701602
grayhatter!~grayhatte@user/grayhatter
if you exclude python c api questions, literally (nearly) every question you've asked has already been described in the language docs

1745701701
grayhatter!~grayhatte@user/grayhatter
Gliptic: clickbait, and not AI-brainrot?

1745701704
Drixtan!~Drixtan@user/Drixtan
That guy was posting on the sub-reddit, he's kind of a fraud as far as I remember... He created a couple of bots to congradulate himself and whatever for a dumb "io" library he's talking about in his video

1745701738
Gliptic!~glip@2a01:4f8:c012:91f3::1
grayhatter: I've no idea, I wouldn't watch the video

1745701739
Drixtan!~Drixtan@user/Drixtan
is he evolving now, he's becoming a fraud using AI now?

1745701760
grayhatter!~grayhatte@user/grayhatter
Drixtan: I was assuming that exact behavior given the first 2 comments I saw

1745701783
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
he makes good zig learning videos though!

1745701803
grayhatter!~grayhatte@user/grayhatter
stealth_: no it's not

1745701842
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
well you should try making learning videos, see how hard the whole process is. 

1745701863
grayhatter!~grayhatte@user/grayhatter
good is a word that means something, and I refuse to allow it to be misused as a stand in for "bad" or "wasteful"

1745701900
grayhatter!~grayhatte@user/grayhatter
stealth_: I have, it's a lot of work, but I wouldn't call it "hard" just involved or time consuming 

1745701908
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
well watching that video i did learn how zig handles compile time `_ =` how can i say its bad? 

1745701918
grayhatter!~grayhatte@user/grayhatter
just like writing code

1745701927
Gliptic!~glip@2a01:4f8:c012:91f3::1
I looked at his "io" library

1745701936
Gliptic!~glip@2a01:4f8:c012:91f3::1
it has no io in it

1745701940
Gliptic!~glip@2a01:4f8:c012:91f3::1
and barely anything else

1745701946
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
don't think he uploaded the new files though. 

1745701968
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
ya, he made a video with more code in it, just hasn't uplaode the files to github

1745702026
grayhatter!~grayhatte@user/grayhatter
so

1745702038
grayhatter!~grayhatte@user/grayhatter
did I get distracted.... what does his code do?

1745702108
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
apparently the "grapheme" library he wrote is better! but we wont' know still the code is out and actually see it in action. 

1745702131
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
everything else is just whatever he wanted for his person project 

1745702153
grayhatter!~grayhatte@user/grayhatter
you know

1745702160
Gliptic!~glip@2a01:4f8:c012:91f3::1
so he's not showing any code in the video either?

1745702165
grayhatter!~grayhatte@user/grayhatter
I'm very mad at ghostty

1745702183
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
https://www.youtube.com/watch?v=ORhyWVLWPTg

1745702202
grayhatter!~grayhatte@user/grayhatter
prior to ghostty, every. single. time. someone has ever said "I'll release the code soon" they have **never** delivered

1745702217
grayhatter!~grayhatte@user/grayhatter
and if it wasn't for ghostty, that would still be 100% accurate

1745702279
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
well i dono know about that, but i see you point there are lots of hype and scams online, i am pissed off about some open source graphic software that sold out and another didn't do much work after taking ppl $ for years. 

1745702915
grayhatter!~grayhatte@user/grayhatter
andrewrk: is all of std.unicode deprecated, or just a few select functions?

1745702988
grayhatter!~grayhatte@user/grayhatter
stealth_: it's easy to have code that's faster when you don't do any input validation

1745702996
grayhatter!~grayhatte@user/grayhatter
I hate that I got nerd sniped on this

1745703061
grayhatter!~grayhatte@user/grayhatter
wow, std.unicode is scary

1745703105
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
grayhatter, he did link to actual benchmark at the bottom https://super-zig.github.io/io/string/utils/utf8#Benchmark as you can see std/his io is pretty close

1745703141
grayhatter!~grayhatte@user/grayhatter
stealth_: std.unicode does input validation, his doesn't

1745703165
Gliptic!~glip@2a01:4f8:c012:91f3::1
his code is basically the same, except ripped out things

1745703175
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
could be. 

1745703196
grayhatter!~grayhatte@user/grayhatter
I'd expect code that yolo's to be faster than code that will return an error when input is invalid

1745703274
Gliptic!~glip@2a01:4f8:c012:91f3::1
like his getCodepointLength doesn't return an error on invalid ranges, like grayhatter said

1745703292
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i just like to watch these 5-10min zig videos while i am eating, as i don't really have the time to work on zig project till async/await is implemented and it will be actual zig code with maybe C drivers.

1745703301
Gliptic!~glip@2a01:4f8:c012:91f3::1
otherwise it's the same naive algos

1745703354
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I don't think zg does any validation - just gives you a unicode replacement character for invalid utf8

1745703357
grayhatter!~grayhatte@user/grayhatter
zig code that's faster than zig code.... that code https://gr.ht/i/bouncer.gif

1745703361
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
(Which is fine, IMO)

1745703405
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
lol that gif 

1745703425
grayhatter!~grayhatte@user/grayhatter
it's certainly *a* decision rockorager 

1745703433
Gliptic!~glip@2a01:4f8:c012:91f3::1
it's fine, but if your only innovation is to remove error handling, maybe it should be mentioned

1745703455
Gliptic!~glip@2a01:4f8:c012:91f3::1
and still doesn't manage to be faster than std.unicode

1745703491
Gliptic!~glip@2a01:4f8:c012:91f3::1
`toLower  Fast decode a UTF-8 sequence to a Unicode codepoint, Returns the number of bytes read.`

1745703497
squeek502!~squeek502@user/squeek502
the encoding benchmarks are probably not doing what was intended, it's iterating byte-by-byte and encoding the byte value as UTF-8, so it's only testing encoding for code points <= 0xFF

1745703504
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
you know you guys are going to chase away anyone interesting in zig by being too overly critical fo their work. 

1745703564
Gliptic!~glip@2a01:4f8:c012:91f3::1
squeek502: that's a good point, they don't seem to understand how string literals work in zig

1745703598
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i would say that dudes project is still under development and if/when he does have some success in improvement he might submit it to std library and it will be judged then.

1745703705
Gliptic!~glip@2a01:4f8:c012:91f3::1
stealth_: it was you who claimed some "500x" improvement

1745703743
grayhatter!~grayhatte@user/grayhatter
stealth_: claiming something is faster/better without describing why is *inviting* investigation

1745703750
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
Gliptic, thats what the dude in the video said about "grapheme" the code he hasn't uploaded yet!

1745703759
Gliptic!~glip@2a01:4f8:c012:91f3::1
stealth_: but he has no clue what he's doing

1745703770
Gliptic!~glip@2a01:4f8:c012:91f3::1
so I'm going to guess it's bs

1745703781
Gliptic!~glip@2a01:4f8:c012:91f3::1
and 500x is basically not possible anyway

1745703794
grayhatter!~grayhatte@user/grayhatter
when that investigation turns up that all the additional speed is at the cost of code correctness, which wasn't disclosed... that's not being overly critical 

1745703811
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
maybe its total bs as you said, who knows.. 

1745703818
Gliptic!~glip@2a01:4f8:c012:91f3::1
even simdutf8 and such don't claim anywhere near "500x" compared to naive code

1745703821
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
std doesn’t do *any* grapheme handling so 500x as compared to what

1745703848
Drixtan!~Drixtan@user/Drixtan
it's the freaking same code, except he converted the binary to hex and use @truncate instead of @as @intCast ...

1745703856
Drixtan!~Drixtan@user/Drixtan
it's copy paste

1745703864
Gliptic!~glip@2a01:4f8:c012:91f3::1
Drixtan: yeah, and removed some error handling

1745703877
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
you know you should should watch the video cause he mentioned everything in it, even the fact that how to be careful of hype x speed ppl mention. 

1745703886
Drixtan!~Drixtan@user/Drixtan
that guy, I wish he could learn about how great Rust is, you know...

1745703900
lemons!~doggie@user/doggie-:49517
is truncate even an improvement over intcast

1745703945
Gliptic!~glip@2a01:4f8:c012:91f3::1
@truncate just skips the range check

1745703961
Gliptic!~glip@2a01:4f8:c012:91f3::1
it's fair to use here because the range check has already been done

1745703970
Gliptic!~glip@2a01:4f8:c012:91f3::1
(assuming the code is correct otherwise)

1745703978
lemons!~doggie@user/doggie-:49517
oh

1745703993
lemons!~doggie@user/doggie-:49517
i thought it did some extra whatevers that intcast didnt do lol

1745703999
grayhatter!~grayhatte@user/grayhatter
stealth_: I did watch the video

1745704023
Gliptic!~glip@2a01:4f8:c012:91f3::1
I did not, AI voice is annoying

1745704093
grayhatter!~grayhatte@user/grayhatter
^ that's why I was annoyed the whole time

1745704103
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
Gliptic, to summarize it to be careful of speed hype that says x times faster because its easy to get things work while coding (compile time).\

1745704117
Gliptic!~glip@2a01:4f8:c012:91f3::1
stealth_: you should have listened to him then

1745704121
Gliptic!~glip@2a01:4f8:c012:91f3::1
and not linked this video

1745704125
grayhatter!~grayhatte@user/grayhatter
lmao

1745704160
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i didn't think you guys would fall for the hype itself and complain about it without watching the video. 

1745704160
grayhatter!~grayhatte@user/grayhatter
> Gliptic | because it's optimized away  

1745704167
grayhatter!~grayhatte@user/grayhatter
you called it btw, without watching it too

1745704177
Gliptic!~glip@2a01:4f8:c012:91f3::1
I mean, it's the classic blunder

1745704186
grayhatter!~grayhatte@user/grayhatter
stealth_: do you think I fell for the hype?

1745704189
Gliptic!~glip@2a01:4f8:c012:91f3::1
stealth_: who was falling for the hype? lol

1745704194
Gliptic!~glip@2a01:4f8:c012:91f3::1
only you afaict

1745704214
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
ya you guys are perfect, lol

1745704218
grayhatter!~grayhatte@user/grayhatter
I'm complaining about it be cause I **did** watch the video

1745704226
grayhatter!~grayhatte@user/grayhatter
and I don't like being lied to, it pisses me off

1745704245
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
grayhatter, i get it, everyone is dumber compared to you. lol

1745704251
grayhatter!~grayhatte@user/grayhatter
sigh

1745704267
Gliptic!~glip@2a01:4f8:c012:91f3::1
are you blaming us for falling for bs claims

1745704301
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i dono what you guys are thinking.

1745704307
grayhatter!~grayhatte@user/grayhatter
I don't even know how to respond to that, other than to say I regret trying to help you

1745704309
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
I for one am all for watching zig content, even if bs!

1745704338
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
^ see some positivity 

1745704368
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
same reason why i watch it, also its nice to see ppl spending their personal time to make zig videos

1745704487
grayhatter!~grayhatte@user/grayhatter
yeah, I love it when people pollute the internet with bad/wrong information... correct on not, more content is always better content

1745704586
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
just for 5-min video they might have to spend week of development time. its a lot of work. 

1745704587
grayhatter!~grayhatte@user/grayhatter
who cares if incorrect AI slop takes away from people creating real, truthful, useful content?

1745704618
Gliptic!~glip@2a01:4f8:c012:91f3::1
the labour theory of value is not really valid

1745704649
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
"might"

1745704662
grayhatter!~grayhatte@user/grayhatter
I'm not making a labor arugment

1745704668
grayhatter!~grayhatte@user/grayhatter
I'm making an algorythimic argument

1745704677
Gliptic!~glip@2a01:4f8:c012:91f3::1
but not a spelling argument

1745704745
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
because most of the zig videos are actually bad cause its all outdated! since zig has changed a lot over release.

1745704755
grayhatter!~grayhatte@user/grayhatter
fine, nevermind

1745704789
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
even this guy https://www.youtube.com/@dudethebuilder/videos last years videos are outdated! i watch those and couldn't code in zig 

1745704792
Gliptic!~glip@2a01:4f8:c012:91f3::1
I'm not even complaining about the video (as I didn't watch it), just the bs claims being repeated uncritically

1745704882
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
my biggest annoyance of the video was the reading of every line of the benchmark

1745704920
grayhatter!~grayhatte@user/grayhatter
rockorager: gotta get to that midroll ads video length

1745704934
rockorager!~rockorage@172-234-192-125.ip.linodeusercontent.com
yeah it really felt like padding

1745704953
grayhatter!~grayhatte@user/grayhatter
all AI slop is padding

1745704983
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
its hard to get the animation, narration and point right.

1745705025
grayhatter!~grayhatte@user/grayhatter
stealth_: what are you trying to say? I don't understand

1745705038
grayhatter!~grayhatte@user/grayhatter
or are you just repeating "making videos is hard"

1745705069
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
^

1745705102
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
finally zls lspconfig works again on nvim 0.11.1

1745705126
grayhatter!~grayhatte@user/grayhatter
stealth_: you said that already

1745705173
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
grayhatter, i read wrong for a second i though rockorager was talking about how in video the animation follows line by line, but didn't read the last part bout benchmark. 

1745705233
stealth_!~stealth_@216-197-160-97.regn.static.sasknet.sk.ca
i use to do flash animation like 20years ago, so i know how much work it takes. 

1745705329
grayhatter!~grayhatte@user/grayhatter
> I made flash animations 20 years ago, so obviously modern video editing software is exactly that hard

1745705351
grayhatter!~grayhatte@user/grayhatter
ok, that's enough internet for me for a while

1745705356
grayhatter!~grayhatte@user/grayhatter
ACTION &

1745706393
Gliptic!~glip@2a01:4f8:c012:91f3::1
just noticed `else => unreachable` in this io lib, so it's either UB or crashing the whole process to decode invalid UTF-8, and this thing claims it's "Battle-tested—ready for production."

1745706604
tranzystorekk!86175ff574@voidlinux/maintainer/tranzystorekk
how dare zig reach our unreachables

