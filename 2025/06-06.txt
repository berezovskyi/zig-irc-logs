1749168260
norineko!~norineko@user/norineko
`@field(p, "y") = @field(p, "x") + 1;`

1749168308
netvor!~netvor@2a00:ca8:a1f:cd0:7d4:e886:1f1:eaf
aaah thanks :)

1749179415
clevor!sid649024@id-649024.hampstead.irccloud.com
andrewrk: How's std.Io going so far?

1749179565
Affliction!affliction@idlerpg/player/affliction
adding jupiter's moon to the standard library? sounds useful ;)

1749179583
Affliction!affliction@idlerpg/player/affliction
I'll +1 that question though, that stream really interested me

1749179613
clevor!sid649024@id-649024.hampstead.irccloud.com
Wait, when was the latest stream?

1749179633
Affliction!affliction@idlerpg/player/affliction
the one I saw was a month or two ago

1749179641
clevor!sid649024@id-649024.hampstead.irccloud.com
Okay

1749185946
LAC-Tech!~lewis@granite-phrase.bnr.la
Affliction: which stream?

1749186411
Affliction!affliction@idlerpg/player/affliction
LAC-Tech: The one that introduced the new I/O model. Don't recall the date.

1749186668
LAC-Tech!~lewis@granite-phrase.bnr.la
where

1749186898
Affliction!affliction@idlerpg/player/affliction
Guess it wasn't archived - https://www.twitch.tv/andrewrok/videos?filter=archives&sort=time

1749187237
LAC-Tech!~lewis@granite-phrase.bnr.la
ah. 

1749211617
xerox!~edi@user/edi
is there a way to sort the open issues by complexity to find low hanging fruit to start trying to help with the project?

1749212778
dutchie!~dutchie@user/dutchie
there's a "contributor friendly" label you can filter by

1749213651
xerox!~edi@user/edi
thanks, appreciate it

1749214879
clevor!sid649024@id-649024.hampstead.irccloud.com
Affliction: Was it this? https://www.youtube.com/watch?v=0kUvoU60pbc

1749226240
netvor!~netvor@2a00:ca8:a1f:cd0:e337:d658:5d28:f117
just curious, do you people often use std.mem.indexOf*()  with something else than u8?   i mean, obviously it's useful but somehow for over a half a year of using zig i haven't found myself using it for anything else;  but it's probably because i keep doing things related to bytes all the time

1749242728
grayhatter!~grayhatte@user/grayhatter
u16 is common on windows

1749242807
grayhatter!~grayhatte@user/grayhatter
actually, I don't know if wchar is u16... I would assume it is, but I used to assume char was u8 too

1749243533
Gliptic!~glip@2a01:4f8:c012:91f3::1
on windows it is

1749243693
Gliptic!~glip@2a01:4f8:c012:91f3::1
ok, I don't know whether it's _unsigned_, actually

1749244081
grayhatter!~grayhatte@user/grayhatter
> typedef unsigned short WCHAR;

1749244358
grayhatter!~grayhatte@user/grayhatter
lol, that was a fun rabbit hole... and a good reminder how much I hate c/c++ spec

1749244400
grayhatter!~grayhatte@user/grayhatter
https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2460r2.pdf

1749244467
grayhatter!~grayhatte@user/grayhatter
TIL wchar_t is both 16bit and 32bit depending on OS

1749250183
LAC-Tech!~lewis@granite-phrase.bnr.la
ahhhh zig build is way too flexible for my noob "I don't care just build" brain. apparently know it's building one of the files I thought it would.

1749250306
LAC-Tech!~lewis@granite-phrase.bnr.la
no wait, it's just zig build caching old things... too clever for me

1749253560
LAC-Tech!~lewis@granite-phrase.bnr.la
what do you do when the compiler is telling you file not found but you've already cleared zig-out and .zig-cache? 

1749253671
clevor!sid649024@id-649024.hampstead.irccloud.com
Is the path in build.zig.zon?

1749253800
LAC-Tech!~lewis@granite-phrase.bnr.la
the path was in one of the modules, zig build just was reporting the wrong module.

1749253817
LAC-Tech!~lewis@granite-phrase.bnr.la
so to answer my own question: the solution is to ripgrep your code base

