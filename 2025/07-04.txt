1751587745
braewoods_!~braewoods@user/braewoods
lemons, i don't know of any language where that's possible. the closest thing that could enable that is probably type templates.

1751587786
braewoods_!~braewoods@user/braewoods
most types can't be modified once defined.

1751587826
braewoods_!~braewoods@user/braewoods
So if this kind of thing is desired, they often resort to templates to define a recurring type pattern.

1751588108
Drixtan!~Drixtan@user/Drixtan
FuzzInputOptions.corpus => that's if I want to supply a static list of items to test in my "fuzzing" ? https://github.com/ziglang/zig/blob/master/lib/compiler/test_runner.zig#L414C49-L414C55

1751589942
lemons!~doggie@user/doggie-:49517
braewoods_: i meant creating a new type with some fields added/changed

1751590087
braewoods_!~braewoods@user/braewoods
lemons, and that's what I was referring to. i don't know of any where existing fields can be modified. and the only way I know to "add" fields involves something like C++ class member / field inheritance.

1751590141
lemons!~doggie@user/doggie-:49517
yeah kind of what im trying to emulate

1751590142
braewoods_!~braewoods@user/braewoods
IOW, you expand the underlying type. i've done that in C with hacks but not something I normally recommend due to the lack of type safety it involves.

1751590266
braewoods_!~braewoods@user/braewoods
Well, maybe that technique would be applicable here? but it basically is, you create a type with an identical set of fields or a field of the parent type as the first field. then you add your stuff after that. it works fine as long as it retains the same memory layout as the original structure and you're allocating them individually and not as part of an array. at least in C it works like this.

1751590297
braewoods_!~braewoods@user/braewoods
And, you can override the pointer type system on a whim.

1751590358
braewoods_!~braewoods@user/braewoods
The only way I know to do this involves being able to recast variables to different types which is often not allowed.

1751590468
braewoods_!~braewoods@user/braewoods
No idea why you want to do this, but one thing I learned from C: sometimes it's better to find a way to fold multiple use cases into a single type to simplify your API design.

1751590585
torque!~tachyon@user/torque
lemons, yes you can create struct types programmatically at compile time, but without the declarations

1751590683
torque!~tachyon@user/torque
for example, see this: https://github.com/torque/NOCLIP/blob/master/source/meta.zig#L4-L49 and you can see usage like https://github.com/torque/NOCLIP/blob/master/source/meta.zig#L277-L283

1751590694
torque!~tachyon@user/torque
however, this creates a distinct type rather than replacing the original type

1751591025
torque!~tachyon@user/torque
(though it would be trivial to make a function that copies between the two)

1751592263
clevor!sid649024@id-649024.hampstead.irccloud.com
andrewrk: The person behind Andrewrok Archives saved the stream on Youtube https://www.youtube.com/watch?v=vav6wR__MLo

1751600826
grayhatter!~grayhatte@user/grayhatter
unreachable in stdlib is my personal unending nightmare

1751600862
grayhatter!~grayhatte@user/grayhatter
I thought release=safe would panic on unreachable, is that not true?

1751601486
clevor!sid649024@id-649024.hampstead.irccloud.com
grayhatter: Is there a `@setRuntimeSafety(false)` somewhere up the stack?

1751601725
grayhatter!~grayhatte@user/grayhatter
no

1751606485
clevor!sid649024@id-649024.hampstead.irccloud.com
Huh

1751607433
torque!~tachyon@user/torque
if it doesn't, that seems like a bug to me

1751607696
clevor!sid649024@id-649024.hampstead.irccloud.com
Either that, or he hit undetectable IB.

1751610800
grayhatter!~grayhatte@user/grayhatter
std.posix.mmap() returned `.NFILE => return error.SystemFdQuotaExceeded` when it should have returned `.INVAL => unreachable` because length was 0

1751610870
grayhatter!~grayhatte@user/grayhatter
I would object much quieter if the doc comment for mmap mentioned it's IB to use length == 0, but I like an idiot continue to expect stdlib to return the errors that man tells me it'll return

1751610937
grayhatter!~grayhatte@user/grayhatter
`zig build --release=safe && cp zig-out/bin/benevolence ~/gr.ht/home/grayhatter/`

1751610984
grayhatter!~grayhatte@user/grayhatter
I was pretty sure hitting unreachable would still panic with this build mode?

1751611044
grayhatter!~grayhatte@user/grayhatter
was a fun little moment of panic wondering if I'd done something very wrong and my system was about to crash

1751611144
torque!~tachyon@user/torque
I can't keep up with the build system but does --release=safe actually build in releasesafe or do you still need to do -Doptimize=ReleaseSafe

1751611190
grayhatter!~grayhatte@user/grayhatter
torque: I was assuming that if I was wrong about the flags I was supposed to use, it would still build in debug mode, wouldn't it?

1751611201
torque!~tachyon@user/torque
no clue

1751611215
grayhatter!~grayhatte@user/grayhatter
perhaps specifying the wrong build flag is IB, and llvm can do whatever?

1751611219
grayhatter!~grayhatte@user/grayhatter
:P

1751611220
torque!~tachyon@user/torque
lol

1751618247
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
zig build --prefix ~/.local uninstall

1751618259
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
doesn't work? https://github.com/ziglang/zig/issues/14943

1751620104
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
https://ziglang.org/documentation/master/std/#std.Build.installFile

1751620135
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
"dest_rel_path is relative to prefix path"

1751620148
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
what if you want to install in the ~/.config dir?

1751623795
flower_!~archie@83-81-123-193.cable.dynamic.v4.ziggo.nl
Will use a makefile ;) 

1751639621
JetpackJackson!739e7f3d14@user/JetpackJackson
https://zigbin.io/362408 im having some issues with displaying the workspaces the way i want, and with structuring this thing properly overall

1751639644
JetpackJackson!739e7f3d14@user/JetpackJackson
cause rn i have it just print the stuff but i eventually want to make it display as a bar 

1751640238
Drixtan!~Drixtan@user/Drixtan
JetpackJackson: crazy idea here, but you should write a tutorial "how to write a wayland bar in Zig" doing yours... *brain fart I know*

1751640290
JetpackJackson!739e7f3d14@user/JetpackJackson
huh?

1751640312
Drixtan!~Drixtan@user/Drixtan
isn't a wayland bar you are working on?

1751640329
JetpackJackson!739e7f3d14@user/JetpackJackson
yeah

1751640332
Drixtan!~Drixtan@user/Drixtan
ok

1751643585
grayhatter!~grayhatte@user/grayhatter
what's a wayland bar?

1751643665
grayhatter!~grayhatte@user/grayhatter
andrewrk: are you taking community suggestions on your PR? (I have a small nit I wanted to suggest)

1751644190
JetpackJackson!739e7f3d14@user/JetpackJackson
grayhatter: status bar for wayland

1751644258
grayhatter!~grayhatte@user/grayhatter
for wayland, or for a specific wm?

1751645742
JetpackJackson!739e7f3d14@user/JetpackJackson
Currently focusing on niri right now

1751645773
grayhatter!~grayhatte@user/grayhatter
oh, this is cool!

1751645849
grayhatter!~grayhatte@user/grayhatter
JetpackJackson: if you publish the repo somewhere let me know, I might be interested in using it

1751645872
JetpackJackson!739e7f3d14@user/JetpackJackson
Oh ok sure

1751645885
JetpackJackson!739e7f3d14@user/JetpackJackson
I have no idea when it's gonna be done lol

1751645896
grayhatter!~grayhatte@user/grayhatter
that's literally all of my code :D

1751645958
JetpackJackson!739e7f3d14@user/JetpackJackson
I did find https://sr.ht/~novakane/zelbar/ but couldn't get input from scripts to show up

1751646047
JetpackJackson!739e7f3d14@user/JetpackJackson
I also gotta find out how to get event streams from things like pipewire, clock, battery, etc

1751646073
JetpackJackson!739e7f3d14@user/JetpackJackson
I might even split the bar from the status line generator just to make things easier idk

1751646289
Drixtan!~Drixtan@user/Drixtan
JetpackJackson: you could display the status part as an input like some other bars, like we are passing the status via a script we are calling every N seconds, you know what I mean

1751646322
JetpackJackson!739e7f3d14@user/JetpackJackson
Yeah but updating every N seconds feels inefficient

1751646462
Drixtan!~Drixtan@user/Drixtan
it's simple though and flexible. When I was looking for bar, that was a feature I was looking for, so I guess it depends on the people

1751671351
StopNGo!~StopNGo@p200300dbdf43b400625718fffe07f94a.dip0.t-ipconnect.de
Hey, I've just finished watching the 2026 roadmap video (Shouldn't it be called 2025H2, or something? We've still got the other half of the year ahead! ;) ) aaaand I don't have any active YT account to comment there, so here's a shout out for all the great work you do, and I've been quite relieved to see you're still seeming happy to be doing your thing! :)

1751671522
StopNGo!~StopNGo@p200300dbdf43b400625718fffe07f94a.dip0.t-ipconnect.de
Seeing such a huge 2 1/4 hour blob can often be a bit daunting, but I've had time to spare and was actually delighted to have such a great recommendation come up, and at 1.5 speed, it was a pleasure to watch! (In Germany, we call that kurzweilig, there's no great English alternative listed on dict.cc. :) )

1751671792
clevor!sid649024@id-649024.hampstead.irccloud.com
StopNGo: Wiktionary suggests "entertaining" https://en.m.wiktionary.org/wiki/kurzweilig

