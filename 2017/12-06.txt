1512524884
GitHub138
[zig] andrewrk pushed 1 new commit to master:

1512524885
GitHub138
zig/master 960914a Andrew Kelley: add implicit cast from enum to union...

1512526297
GitHub186
[zig] andrewrk pushed 1 new commit to master:

1512526298
GitHub186
zig/master 2715f6f Andrew Kelley: allow implicit cast from union to its enum tag type...

1512527663
GitHub12
[zig] andrewrk pushed 1 new commit to master:

1512527663
GitHub12
zig/master c49ee9f Andrew Kelley: allow union and its tag type to peer resolve to the tag type

1512530161
GitHub149
[zig] andrewrk pushed 1 new commit to master:

1512530162
GitHub149
zig/master bb6b4f8 Andrew Kelley: fix enum with 1 member causing segfault...

1512530817
GitHub45
[zig] andrewrk pushed 1 new commit to master:

1512530817
GitHub45
zig/master f464fe1 Andrew Kelley: switch on enum which only has 1 field is comptime known...

1512531627
GitHub156
[zig] andrewrk pushed 1 new commit to master:

1512531627
GitHub156
zig/master 249cb2a Andrew Kelley: fix regressions from previous commit...

1512548605
PV_
I found that I can write template functions in Zig just like in C++. Here's code that works in 0.1.1:

1512548802
PV_
It means that I can create libraries which do not import the whole world but will still work. Much less dependencies, removing dependencies like A <-> B in favour of A->B.

1512548964
PV_
Like in C++, error messages will be probably non-intuitive when the library code gets complex enough. It would be useful to be able to specify requirements at the beginning of the template function. The error would then point to the most relevant place.

1512549065
PV_
Just today I proposed builtin @doesThisCompile(any code) -> bool, this would be useful in this situation.

1512549299
PV_
Here's what I would like to use, ideally:

1512574485
andrewrk
I'd be interested to see this strategy used for a project out in the wild

1512602413
GitHub143
[zig] andrewrk pushed 1 new commit to master:

1512602413
GitHub143
zig/master 62c25af Andrew Kelley: add higher level arg-parsing API + misc. changes...

