1509499190
andrewrk
dimenus, I don't see  10.0.10240.0 (or any version number) in HKLM\SOFTWARE\Microsoft\Windows Kits\InstalledRoots\

1509499331
andrewrk
In fact I searched the whole registry and I don't see this version string anywhere

1509500785
andrewrk
dimenus, also, c:\Program files (x86)\Windows Kits\10\Lib\10.0.10240.0\um doesn't exist. get_kern32_lib is wrong

1509500890
andrewrk
that folder is c:\Program Files (x86)\Windows Kits\8.1\Lib\winv6.3\\um for me

1509501313
dimenus
Microsoft backported the windows 10 sdk

1509501328
dimenus
you can install it in vs2015

1509501392
dimenus
wait, it doesn't panic?

1509501411
andrewrk
I shouldn't need to install anything

1509501420
andrewrk
my hard coded patch worked without doing this windows 10 sdk install

1509501442
andrewrk
I'm fixing it

1509501521
dimenus
what do you mean? the ucrt libs do not exist in the windows 8 sdk

1509501528
dimenus
it's not a 1 to 1 translation

1509501568
andrewrk
for me ucrt is in c:\Program files (x86)\Windows Kits\10\Lib\10.0.10240.0\ucrt

1509501579
andrewrk
and kernel32.lib is in  c:\Program Files (x86)\Windows Kits\8.1\Lib\winv6.3\\um

1509501644
dimenus
that's what the program gave you or that's what you're saying are valid paths for you?

1509501654
dimenus
if it's the latter, we need to do more work

1509501671
andrewrk
these are valid paths for me. I'm working on it

1509501724
dimenus
ah, because you have the Universal C Runtime installed I bet

1509501729
dimenus
but not the Windows 10 SDK

1509501761
andrewrk
I did whatever was the default when I installed vs2015

1509501932
dimenus
I mean we could just append all of the found paths?

1509501943
dimenus
That's how Visual Studio does it

1509501968
dimenus
I'm not sure how LLD would consider which one to grab though

1509501982
dimenus
(in my case i have the 8.1 & the 10 sdk both installed)

1509502103
andrewrk
got it working

1509502235
andrewrk
dimenus, try the branch Dimenus-master and see if it still finds msvc2017 for you

1509502303
andrewrk
you can use something like this to see which one it used:

1509502320
andrewrk
bin\zig.exe build-exe ..\example\hello_libc.zig --library c --verbose-link

1509502466
andrewrk
dimenus, you never ended up using the COM stuff, right?

1509502520
andrewrk
oh, nvm, I see it for the vcruntime path

1509502525
dimenus
no I did, that's for vcruntime though.

1509502537
dimenus
testing now

1509502546
andrewrk
if the Dimenus-master branch is working for you, I'll merge it now

1509502628
dimenus
yep, works fine

1509502650
andrewrk
hmm it broke in appveyor though:

1509502716
andrewrk
this has to pass

1509502738
andrewrk
I gotta go. I'll look at this again tomorrow

1509502845
GitHub127
[zig] andrewrk pushed 6 new commits to master:

1509502845
GitHub127
zig/master 4f4da3c Andrew Kelley: wip self hosted code

1509502845
GitHub127
zig/master 4c306af Andrew Kelley: add test case for previous commit

1509502845
GitHub127
zig/master 540bac0 Andrew Kelley: Merge branch 'master' into self-hosted

1509503095
GitHub32
[zig] andrewrk pushed 1 new commit to master:

1509503095
GitHub32
zig/master 25972be Andrew Kelley: fix windows build from previous commit

1509503163
andrewrk
dimenus, if you want to look at this, you can test appveyor by pushing to your pull request and then watching appveyor build the PR

1509503397
andrewrk
dimenus, you had it working before I added commits, so something I did must have made it not work on appveyor anymore. I wonder what that is.

1509503437
andrewrk
you should base your work off of Dimenus-master branch:

1509503446
dimenus
I'll check it out tomorrow for sure. Thanks for looking at this

1509523824
GitHub174
[zig] haferburg opened pull request #574: Enforce "\n" line endings on Windows (master...line-endings)

1509546706
GitHub31
[zig] andrewrk pushed 1 new commit to master:

1509546706
GitHub31
zig/master b35689b Andreas Haferburg: Enforce "\n" line endings on Windows (#574)...

1509546709
GitHub118
[zig] andrewrk closed pull request #574: Enforce "\n" line endings on Windows (master...line-endings)

1509560801
dimenus
andrewrk: if I run the test that the appveyor failed on, it asserts in LLVM. The top Zig function is: ZigLLVMTargetMachineEmitToFile

1509561148
andrewrk
dimenus,

1509561159
andrewrk
we don't support llvm assertions because of a bug in llvm.

1509561175
andrewrk
however it is fixed in llvm master branch, so when they release a new version we can go back to having llvm assertion support

1509561198
dimenus
it's a different assert, and I get it in master as well

1509561242
dimenus
Assertion failed: !isa<DIType>(Scope) && "shouldn't make a namespace scope for a type", file F:\code\tools\llvm\lib\CodeGen\AsmPrinter\CodeViewDebug.cpp, line 263

1509561255
andrewrk
ah yes I'm still working on that one

1509561280
dimenus
was this caused by something merged into master yesterday?

1509561325
andrewrk
no

1509561349
andrewrk
I think it's been a long standing issue, and llvm master added a new assert that caught it

1509561402
andrewrk
I don't know how difficult it's going to be to fix, it could be trivial

1509561407
andrewrk
I haven't had a chance to look at it yet

1509561419
dimenus
hmmm, am i using appveyor wrong then?

1509561442
dimenus
trying to troubleshoot the test that failed yesterday when you merged Dimenus-master

1509561599
dimenus


1509561741
andrewrk
dimenus, here's one where I added --verbose-link

1509561743
andrewrk


1509561763
andrewrk
scroll up to just before the tests run

1509561784
andrewrk
I think I might know the problem

1509561874
andrewrk
dimenus, in link.cpp, we create a child  CodeGen and set values to match the parent

1509561895
andrewrk
wait, never mind

1509561905
dimenus
the path is wrong for vcruntime

1509561932
andrewrk
which one?

1509562004
andrewrk
oh, this one: -LIBPATH:C:\Program Files (x86)\Microsoft Visual Studio 14.0\

1509562010
andrewrk
it's missing the part after that

1509562071
dimenus
yep

1509562226
dimenus
i've got it, give me a second

1509562490
dimenus
andrewrk: does buf_resize(buf, num) expect the 'num' value to be the terminator position?

1509562493
dimenus
or the end of the string?

1509562716
andrewrk
buf_ptr(buf)[buf_len(buf)] == 0

1509562739
dimenus
yeah it's an off by one error

1509562762
dimenus
RegQueryValueExA returns the value including the null terminator

1509562766
andrewrk
I see

1509562767
dimenus
and when I was setting the length explicitly, that worked

1509562779
dimenus
because the length really includes the null terminator

1509562797
andrewrk
ok, still use buf_resize but subtract 1 from the length

1509562798
dimenus
but buf_resize() really wants the real length of the string

1509562801
dimenus
yep

1509562802
andrewrk
yes

1509562844
andrewrk
nice find

1509562899
dimenus
ok, changes pushed

1509562907
dimenus
hopefully that builds/satisfies everything

1509562978
dimenus
not sure what your philosphy on comments is. I try not to comment much, only when its harder to reason about something.

1509563369
dimenus
it's always easier to reason about code if you just wrote it a few days ago ;)

1509563415
andrewrk
if the code is clear, it's fine

1509564808
GitHub199
[zig] andrewrk pushed 1 new commit to master:

1509564809
GitHub199
zig/master 38f05d4 Dimenus: WIN32: Linking with the CRT at runtime. (#570)...

1509564810
GitHub54
[zig] andrewrk closed pull request #570: WIN32: Linking with the CRT at runtime. (master...master)

1509564904
andrewrk
congrats dimenus

1509564929
dimenus
thanks

1509564942
dimenus
note to self, create PRs from non-master next time

1509564946
dimenus
this is really my first exposure to git too

1509564998
andrewrk
really impressive work

1509565041
dimenus
btw, this should close #539 as well

1509565085
dimenus
I think I want to look into #515

1509565131
andrewrk
ah that should be fun

1509565137
andrewrk
you're really taking on the difficult issues, ha

1509565510
andrewrk
dimenus, that issue requires a design proposal: the c-style var args syntax

1509568473
dimenus
hmm, maybe I should go after more low hanging fruit then

1509568497
dimenus
also, why do we have to specify that a string is a 'c string' when passed into a c function?

1509568504
dimenus
shouldn't zig be able to coerce that into the appropriate type?

1509568519
dimenus
eg c.puts("hello from libc");

1509568759
andrewrk
a byte array literal in zig is, e.g. [11]u8

1509568788
andrewrk
what c.puts wants is a null terminated &u8

1509569200
GitHub49
[zig] andrewrk pushed 1 new commit to master:

1509569201
GitHub49
zig/master f7837f4 Andrew Kelley: bump build_runner allocator to use 30 MB

1509569264
andrewrk
dimenus, what project would you (eventually) like to create using zig? this could help me suggest an issue you could work on to help toward that goal

1509569290
dimenus
i'm working on a sheepshead (card game) in pure C

1509569300
dimenus
so I started on libc because I wanted to work on opengl/gl3w

1509569310
dimenus
and LoadLibraryA was failing

1509569471
andrewrk
dimenus, you could help haferburg with this:

1509569507
andrewrk
does your sheepshead game use glfw, sdl, or other?

1509569526
andrewrk
oh, gl3w

1509569554
dimenus
glfw/glf3w

1509569557
dimenus
gl3w = opengl loader

1509569564
dimenus
not to be confused with glfw

1509569565
dimenus
lol

1509572482
dimenus
andrewrk: is there any easy way to print a typename?

1509572517
andrewrk
dimenus,

1509572533
dimenus
hah, i'm sorry for that one :(

1509572542
andrewrk
no worries

1509573720
dimenus
one more question, is there any easy way to ignore return values? I like that zig makes you handle them by default

1509573728
dimenus
but sometimes I just don't care when a function returns a failure

1509574884
andrewrk
_ = foo()

1509574898
andrewrk
that's for a non-error

1509574905
andrewrk
if it's an error:  foo() %% {}

1509574929
andrewrk
that's to ignore the error.

1509574941
andrewrk
if you're saying, assert that it will never be an error:   %%foo()

