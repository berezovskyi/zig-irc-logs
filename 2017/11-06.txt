1509928744
GitHub33
[zig] andrewrk pushed 3 new commits to master:

1509928744
GitHub33
zig/master bd6f8d9 scurest: add test for c_allocator

1509928744
GitHub33
zig/master 48c8181 scurest: fix redeclaration of mem (#585)

1509928744
GitHub33
zig/master 52a2992 Andrew Kelley: Merge pull request #587 from scurest/c_alloc_redeclaration_of_mem...

1509985799
GitHub180
[zig] scurest opened pull request #589: Fix typos in std.io (master...std_io_typos)

1509986476
GitHub12
[zig] andrewrk pushed 1 new commit to master:

1509986477
GitHub12
zig/master f0dafd3 scurest: fix typos in std.io (#589)...

1509988793
PV
Reading about @compileLog: is there a minimal example? No matter what I try I always get compiler complaining with "error: found compile log statement".

1509989169
andrewrk
PV, that's right. it prints your compilation log, and then gives you errors so that you can't leave your compile logs in on accident

1509989443
PV
@andrewrk: now I see it. The intended output is completely invisible next to that highlighted error message.  What is the purpose of @compileLog then? I thought it is compile time no-other-side-effects printf, to be able to trace comptime execution.

1509989501
andrewrk
PV, that's correct, that's the purpose

1509989578
andrewrk
if you want to leave compile log statements in the code, you could put them behind a if(foo) where foo is some constant you can change between true/false

1509989899
PV
Ah sooo, now I understand. Could this be made more clear in the documentation? An example with expected output would be handy. About the comptime if(foo): this feels really clumsy.  There could be @compileLogOn/@compileLogOff to wrap interested parts of the code.

1509990119
andrewrk
I agree let's improve the docs

1509990150
andrewrk
feel free to make a pull request

1509990192
andrewrk
the expected use case for @compileLog is that you use it a couple times to debug something, then you figure out the problem, and remove the @compileLog lines. it's not intended that you normally leave them in the codebase

1509990281
andrewrk
PV, do you have a use case for wanting to leave them in the codebase and have a successful build?

1509990535
PV
For non-trivial comptime these logs may work as hints and, if things go wrong, as starting point for troubleshooting. People use preprocessor tricks to keep their printfs in code, they are quite valuable.

1509990592
PV
The "if (foo)" will end up in "if(my_library_use_compilelogs)" mess.

1510007464
dimenus
god, ld is so slow.

1510007481
dimenus
generating a debug build of llvm for mingw takes so much longer than windows

1510007604
andrewrk
yeah it's agony

1510007614
andrewrk
it's much faster if you apply pupp's patch

1510007657
dimenus
not zig, the llvm project

1510007673
dimenus
i guess I should just do it on a faster machine

1510007675
andrewrk
yeah, pupp's patch makes the embedded LLD that we have shared instead of static, and it speeds up linking

1510007685
dimenus
yep, i have it saved on my local repo

1510007689
andrewrk
we might do that by default in mingw debug builds?

1510007696
andrewrk
*we might want

1510007698
dimenus
but i'm trying to build a mingw target for the llvm master tree

1510007702
andrewrk
ahhh

1510007705
andrewrk
I see

1510007713
dimenus
and it's taken multiple hours on this machine

1510007732
andrewrk
btw did you see my message here?

1510007850
dimenus
i did not (out of town for most of the weekend), but that sounds great.

1510007925
andrewrk
I sent you an invitation

1510008126
andrewrk
good to have you on the team dimenus

1510008140
dimenus
accepted, thank you sir

1510009845
andrewrk
this is the page where you can choose whether you want zig to show up as an organization for you on your github profile:

