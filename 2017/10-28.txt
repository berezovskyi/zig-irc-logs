1509162673
Dimenus
andrewrk: That should be resolved my work yes, will have more chance to finish it up tomorrow morning.

1509162775
Dimenus
*by my work

1509162879
Dimenus
Microsoft re-split the CRT again, so really they've done two major architecture changes in the last two version. It would be pretty hacky to support 2013 and earlier in the compiler. If needed, we could just write a zig program to cover those edge cases, no?

1509168336
andrewrk
dimenus: I say, for now, support 2015 and later

1509168391
andrewrk
And yes, if a project wanted to add their own support for 2013 they could use zig build and write their own detection code

1509186368
tiehuis
andrewrk: is there any specific reason that '*' is used to denote references in a while/for loop capture instead of '&'

1509209788
dimenus
andrewrk: When you have a moment, I'm curious is to why you have separate Bufs on codegen for msvc/kernel32

1509209793
dimenus
rather than keeping them all in a ZigList

1509209801
dimenus
since you pass the linker the path and the libs separately anyway

1509209818
dimenus
**curious as to

1509209863
dimenus
the scenario I'm running into is that msvc or the 'crt' on windows is actually 3 separate libs now, and it's in two separate directories

1509209980
pupppp
Can you point me to the exact place in the code? I'm just curious, don't know anything about zig.

1509209989
dimenus
are you talking to me?

1509209993
pupppp
yes

1509209995
dimenus
which part?

1509210007
pupppp
>separate Bufs on codegen for msvc/kernel32

1509210049
dimenus
all_type.hpp:1464

1509210433
pupppp
I hope zig wouldn't depend on crt at all. I'm not sure why it does now.

1509210447
dimenus
it doesn't

1509210458
dimenus
but you need the ability to link to the crt if you link to libs that depend on the crt

1509210507
pupppp
need to rewrite libraries to not depend on crt then. I wonder what's necessary for it.

1509210522
dimenus
that's going to take awhile

1509210533
dimenus
plus you won't always have someone's source code

1509210549
dimenus
so the compiler still needs the ability to link the crt appropriately

1509210555
pupppp
what crt even does, copies memory and transforms strings?

1509210618
dimenus
it does a lot of early setup within a process, but yes if you link one of the c standard headers

1509210622
dimenus
by default that patches in the crt

1509210634
dimenus
what programming languages are you familiar with?

1509210642
pupppp
asm, c, python

1509210821
pupppp
linker in zig is currently working weirdly, doesn't throw away all code

1509210825
pupppp


1509210828
pupppp


1509210872
pupppp
not sure what to do with it, not familiar with lld at all

1509210886
pupppp
doing other stuff at the moment instead

1509210895
pupppp
learning libraries

1509211480
andrewrk
tiehuis: my reasoning is that the value in the capture is  a value, so if you want the reference, you use "*ptr" and "*ptr" is the value so if you leave off the * then it's a pointer

1509211499
andrewrk
I'd be willing to switch to the rust syntax using `ref` if people like that better

1509211578
tankfeeder
dont do that

1509211583
tankfeeder
keep as is

1509211606
andrewrk
dimenus, on my windows 10 laptop, vcruntime.lib and kernel32.lib were in different places

1509212140
dimenus
there's 4 libs we need to link in order to use the CRT on windows

1509212145
dimenus
two from visual studio, two from the windows sdk

1509212161
dimenus
I was thinking of storing the paths (3 separate paths) in a ziglist off codegen

1509212189
dimenus
since we just pass the paths to lld anyway and the lib names are separate arguments

1509212442
dimenus
static linking works on windows as well

1509212447
dimenus
well, at least with the crt

1509212448
dimenus
:D

1509212670
dimenus
how do I use c macros?

1509216046
pupppp
probably better to use inline functions and const instead of macros

1509217350
dimenus
Not looking to create new macros, just testing the importing of existing macros

