1509581373
zedias
help

1509581382
zedias
HELP

1509588368
andrewrk
zedias, how can I help you

1509592175
GitHub96
[zig] andrewrk pushed 1 new commit to master:

1509592175
GitHub96
zig/master abff1b6 Andrew Kelley: windows: use the same libc search within a compilation unit

1509615474
pupppp
errors in zig are like one program-wide enum?

1509627899
ltr_
wasm runs on a "stack machine"? in the browser?

1509630223
pupppp
what's wasm?

1509630231
pupppp
ltr_,

1509630549
andrewrk
pupppp, yes

1509630555
andrewrk


1509630616
pupppp
there was a site called wasm back in the day, now this word has a different meaning

1509630717
pupppp
I want to throw a wall of text about exceptions on github issues, wanna read?

1509630722
andrewrk
yes

1509630732
andrewrk
definitely

1509630998
ltr_
yes webassembly

1509631010
ltr_
and it runs in a stack machine

1509632189
dimenus
andrewrk: how did you get the idea for zig?

1509637151
andrewrk
dimenus, when I coded C, zig is the language I wish it was instead

1509637177
andrewrk
zig is just incremental improvements on C

1509637450
dimenus
i've been watching jblow off and on since he started his language

1509637452
dimenus
so i was just curious

1509637660
andrewrk
I watched some of his videos

1509637667
andrewrk
I'm impressed with the performance

1509637675
andrewrk
I want to try to match his performance with the self-hosted rewrite

1509637715
andrewrk
but we also have planned to support mega large codebases while jblow has said that a codebase > 80,000 ish lines is not really a use case he cares about

1509637832
dimenus
I don't think that last statement is true

1509637849
dimenus
Maybe you're missing an extra 0

1509637859
dimenus
but I think the witness is about half a million lines

1509637915
dimenus
yeah it was over a quarter of a million back in 2015:

1509638017
andrewrk
hmm yeah maybe I'm off by a factor of 10

1509638293
dimenus
so if i wanted to dig into performance, is it worth even working off the C++ only codebase?

1509638306
dimenus
actually, i should start with profiling......

1509638565
andrewrk
dimenus, one thing we have is --enable-timing-info

1509638580
dimenus
neat

1509638608
andrewrk
I was planning on getting concurrency working soon, so we could use that in the self hosted rewrite

1509638632
andrewrk
but yeah, I think I'm going to focus on performance in the self hosted codebase and not the C++ codebase

1509639022
dimenus
andrewrk: btw, I was trying to understand your commit you made last night. What do you mean the "same libc path" per compilation unit?

1509639052
dimenus
vs what I had previously

1509639111
andrewrk
if find_libc_include_path is called, and then find_libc_lib_path is called, they should use the same value for the ZigWindowsSDK

1509639139
andrewrk
e.g. how you had it originally, except the state is saved in CodeGen instead of os.cpp

1509639272
dimenus
ah that makes sense

1509640961
pupppp
Why you still work on windows sdk integration, to use libraries from zig?

1509641314
pupppp
I hope to actually replace visual studio. You should have enough to do that.

1509641436
andrewrk
pupppp, the best thing I want to achieve is to replace every c library with a zig library. then we don't need the windows SDK

1509641456
andrewrk
but to help zig be practical and to get people to use it, people need to be able to use existing code

1509641509
pupppp
I use mingw, I don't even know what windows sdk is. I have most of the headers necessary.

1509641613
andrewrk
it's not relevant to your use case since you're not using --library c

1509641946
dimenus
you can't replace everything at once

1509641955
dimenus
and if you want adoption you need to have 'minimal friction'

1509641955
andrewrk
agreed

1509641977
dimenus
if you make someone's workflow vastly more complicated or reduce the number of things they can use to 0 unless they use your language

1509641986
dimenus
nobody is going to use your language for anything other than toy programs

1509642002
andrewrk
exactly

1509642023
dimenus
also, i like the idea of being able to translate pieces of code when I want to

1509642236
pupppp
How different is microsoft libc from mingw libc?

1509642317
pupppp
are they compatible? Can I use dll compiled with microsoft compiler from exe compiled with mingw compiler?

1509642347
pupppp
is libc a dinamic or static library?

1509642381
dimenus
mingw libc is a hack

1509642387
pupppp
?

1509642390
dimenus
an old hack that microsoft is against

1509642422
dimenus
wish I had the article handy......

1509642462
pupppp
I don't understand what libc is even necessary for.

1509642479
pupppp
From what I've seen, it's possible to do most of the things without it.

1509642489
dimenus
most things like what?

1509642495
dimenus
or are you referring to just within zig?

1509642514
dimenus
andrewrk has already done a lot of work to free zig from having to use libc

1509642539
pupppp
I still can call winapi functions, and other library functions. This means, gui, graphics, image processing.

1509642549
dimenus
if you want to know what libc does, do a dumpbin in an MSVC development cmd on one of the libc libs :)

1509642833
pupppp


1509642881
pupppp
I guess libc is for printing text in console, something else

1509642907
pupppp
...

1509642916
dimenus
libc does a lot of setup, like if you have a basic GUI application that starts your code in 'WinMain'

1509642922
dimenus
libc calls your code

1509643016
pupppp
I guess libc also takes care of thread local storage and stack checks

1509643041
pupppp
I really dislike when compilers hide code from me, makes me paranoid.

1509643084
dimenus
as I said above though, I don't think any of us is saying we'd prefer to use libc

1509643094
dimenus
but if you use other code in the meantime that links libc, you need to be able to link it

1509643111
dimenus
which up until the code I submitted yesterday was pretty brittle as it used a set hardcoded path

1509644093
pupppp
I learned that libjpeg uses setjmp/longjmp for error managing, which made me doubt that I'll be able to port it to zig properly.

1509644120
pupppp
back to exceptions

1509646005
andrewrk
pupppp, to port it to zig, you would not use setjmp/longjmp

1509646018
andrewrk
setjmp/longjmp are bad practice and should be avoided in zig

1509646118
pupppp
I suspect that setjmp might be actually faster than passing error codes through many layers of functions. I'm not sure how to check it.

1509647470
pupppp
Actually yes, setjmp is as heavy as an actual exception, os will do a lot of things behind the scenes. Maybe I could do goto instead.

1509649109
andrewrk
I'm also planning on weighting branches against errors:

1509650730
pupppp
Branch prediction is an interesting feature. Needs a lot of testing though.

1509650748
pupppp
I annoyed people about it previously here

1509650813
pupppp
Tried to figure out if just rearranging code by hand will be enough. Still haven't figured out.

1509650902
pupppp
Okay, I'll forget about exceptions, I'll go for goto instead. Goto and giant functions.

1509650963
pupppp
Need to write the actual code now.

1509651028
pupppp
EASTL is a cool library, it could be a good reference.

1509651547
andrewrk
pupppp, if you just use zig normally and functions whenever you want, and then use --release-fast, LLVM turns your code into giant functions with goto

1509651572
andrewrk
you might be doing unnecessary work

1509651635
pupppp
ok, I'll try

1509653485
dimenus
andrewrk: what are your thoughts on having multiple backends?

1509653493
dimenus
(another idea borrowed from jblow)

1509653510
dimenus
i know we have a lot more important things to do first

1509653512
dimenus
just curious

1509653571
andrewrk
I think it could make sense if we could get something out of it

1509653582
andrewrk
jblow's main reason for doing it is speed

1509653608
andrewrk
I want to explore an advanced caching strategy before resorting to writing a custom backend

1509653614
andrewrk
also, jai doesn't have debug symbols

1509653706
andrewrk
if we had our own backend, we could  distribute zig as a 100% static binary that does not depend on libc. that's pretty neat

1509653717
andrewrk
but it wouldn't have all the advanced optimizations LLVM offers

1509653750
dimenus
i'm on jblow's end as far as iteration speed goes

1509653769
dimenus
but that does sound interesting

1509653793
andrewrk
I think we can compete with jai's speed. that's one of the things I want to prove in 0.2.0

1509653845
dimenus
his demo game is ~ 50k lines i think and compiles in about half a second on x64

1509653848
andrewrk
if you look at --enable-timing-info, 10% of time is spent generating compiler-rt.o and builtin.o.  these objects are (almost) always exactly the same. we can eliminate that 10%

1509653849
dimenus
probably slower on llvm

1509653866
dimenus
i haven't had a chance yet, lots more busy work to do today

1509653872
dimenus
earlier this week i had a lot more conference calls

1509653898
dimenus
i did compile llvm master in the background though

1509653900
dimenus
:D

1509653951
andrewrk
nice

1509653957
andrewrk
I made progress on the assertion

1509653962
andrewrk
I'll file an issue so you can follow along

1509654006
dimenus
the test assertion w/ master?

1509654008
dimenus
nice

1509654050
andrewrk
yes

1509654639
andrewrk
dimenus,

1509654896
dimenus
very nice

1509654911
dimenus
do we submit the IR to LLVM as txt or in that binary format?

1509654917
dimenus
i'm just learning about all of this

1509654926
andrewrk
we create an in memory structure using the LLVM API

1509654935
andrewrk
which can be rendered in that text format

1509654943
andrewrk
with LLVMDumpModule

1509661958
dtzWill
why do you need your own backend to ship 100% static binaries? O:)

1509662417
andrewrk
to ship a static binary of zig that does not depend on libc?

1509662426
andrewrk
because LLVM depends on (among other things) libc

1509662471
andrewrk
zig already supports shipping 100% static binaries of zig programs

1509662484
andrewrk
I was referring to the self hosted compiler

1509662623
dtzWill
oh, right, okay.  So statically linked libc wouldn't help, you mean avoiding libc specifically altogether?

1509662723
dtzWill
(musl, and I go .... a roundabout way to it that's an important part of my research O:))

1509662743
dtzWill
(among other things working to free the world from shared/static SNAFU)

1509662827
andrewrk
dtzWill, yes

1509662830
dtzWill
anyway I'm sure you're plenty aware of those sorts of issues given how magically zig handles them (well, in my limited experience it does, but even taht is an impressive claim...)

1509662871
andrewrk
dtzWill, you might find this issue interesting:

1509662894
dtzWill
yes!

1509662925
dtzWill
wow, yes

1509663132
dtzWill
I wish I had more time ATM so I could work on that and how what our ideas could be mutually beneficial.  Bah.. Well for now just know this is good stuff and I think you're really on to something ^_^

1509663177
andrewrk
if you ever get time, let me know. I could use a hand

1509663603
dtzWill
sure thing o7

