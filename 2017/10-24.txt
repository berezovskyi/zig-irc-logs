1508812760
GitHub33
[zig] andrewrk pushed 2 new commits to master:

1508812760
GitHub33
zig/master 643ab90 Andrew Kelley: add maximum value for @setAlignStack

1508812760
GitHub33
zig/master d7e28f9 Andrew Kelley: remove CXX ABI workaround...

1508821630
pupp
example of a function pointer?

1508827009
andrewrk
pupp,

1508827021
andrewrk
the docs were there all along

1508827029
andrewrk
I just forgot

1508829363
Elronnd
latest aur build is dead?

1508829369
Elronnd
"/usr/bin/ld: cannot find -ltinfo"

1508829560
tiehuis
oh, did i miss a dependency

1508829568
tiehuis
one second, can you try something for me

1508829776
tiehuis
is this the zig-git or zig aur package?

1508830219
tankfeeder
tiehuis:

1508830230
tankfeeder
zig-git aur

1508830271
tiehuis
i updated that before to link tinfo and curses but i have probably forgotten to add the dependency for tinfo

1508830283
tiehuis
i thought curses provided it but it doesn't seem to be the case

1508830318
tankfeeder
i wrote you email

1508830326
tankfeeder
with link to error

1508830338
tiehuis
yes, i did fix that

1508830351
tankfeeder
i will try in 20mins

1508830453
tiehuis
Elronnd: If you could install `libtinfo` from the aur and let me know if that works that'd be helpful

1508830490
tiehuis
oh wait, don't do that

1508830513
tiehuis
the latest ncurses package supposedly provides libtinfo anyway, so maybe just to an pacman -Syu first

1508832066
hasen_judy
I'm on the other laptop right now

1508832076
hasen_judy
(sorry my other laptop is also randomly joining and leaving)

1508832077
tankfeeder
tiehuis: failed

1508832079
hasen_judy


1508832095
tankfeeder


1508832111
hasen_judy
zig build-exe fails with: Assertion failed: (!node->owner->c_import_node), function add_node_error, file /Users/hasen/tmp/zig/src/analyze.cpp, line 32.

1508832678
tiehuis
tankfeeder: can you remove the existing pkg directory and try rebuilding from scratch

1508832701
tiehuis
also, have you updated every packaged recently with pacman -Syu?

1508832726
tankfeeder
yes, updated

1508832732
tankfeeder
doing rebuild

1508833789
tankfeeder
build done, testing

1508833799
tankfeeder
so, issue closed.

1508833828
tiehuis
i expect that curses issue will be fixed sometime since I think it arose from the recent update to the ncurses package

1508851968
andrewrk
pupp, did you see my message?

1508851997
pupp
06:36 <andrewrk> pupp,

1508851998
pupp
yes

1508852206
andrewrk
hasen_judy: this happens when the @cImport generated invalid zig code. I'll need to reproduce this and find out why this is happening

1508852371
andrewrk
also you should try to use only 1 @cImport block if you can

1508864607
dimenus
hey andrewrk, I have to include a bunch of extra declarations for COM classes, is there a particular file you'd like me to put that in?

1508864641
dimenus
header file is about 900 lines

1508864647
dimenus
(but written by Microsoft)

1508867929
andrewrk
dimenus, just try to isolate it so that only 1 cpp file has to include it, so it doesn't bog down our compile time

1508873182
steveno
how exactly does one run the test suite on posix?

1508873200
steveno
i tried " bin/zig build --build-file ../build.zig test" mimicing the windows instructions but that fails for me

1508873278
andrewrk
steveno, the readme instructions should work

1508873282
andrewrk
what error do you get?

1508873510
steveno
make coverage is not a target

1508873575
steveno
i'm missing lcov. hold on.

1508873607
steveno
nope. still coverage is still not a target

1508873650
steveno
nevermind. ignore me.

1508873716
andrewrk
steveno, tests working now?

1508873825
steveno
well, no, but I don't think it's zig's fault

1508873834
steveno
i forgot to add -DZIG_TEST_COVERAGE=ON to my cmake command

1508873852
andrewrk
I don't think you want test coverage on

1508873878
andrewrk
I think you want the steps under the "Debug / Development Build"

1508873889
andrewrk
and nothing else

1508873900
steveno
OHH

1508873908
steveno
"./zig build --build-file ../build.zig test" runs the test suite!?!?

1508873920
andrewrk
steveno, yes, the tests are self-hosted

1508873927
steveno
i did not get that from the readme. my bad.

1508873966
andrewrk
when the whole compiler is self-hosted, it will be `zig build` from the root dir - the weird command is because the build process is partially c++, partially zig

1508874009
andrewrk
I mean, if you're confused it's because the instructions are confusing. sorry about that

1508874063
andrewrk
hasen_judy, did you get my reply?

1508874644
GitHub112
[zig] scurest opened pull request #563: Improved printing for floats (master...float-printing)

1508875945
steveno
finally got it working. 301 tests passed!

1508875970
steveno
should I be concerned it was "Unable to determine libc lib path."?

1508876002
andrewrk
steveno, what os are you on?

1508876050
andrewrk
zig is configured without knowing where libc is, and I'm guessing you probably want to use c libraries

1508876498
dimenus
andrewrk, I seem to have either found a bug with ZigList or am just misunderstanding the purpose of 'buf_alloc_fixed'

1508876526
dimenus
it resizes the array as exected, but it also sets the length (which I would interpret as the number of chars in the buffer) to the assigned length

1508876527
dimenus
rather than 0

1508876560
dimenus
capacity is then added to the length, so the buffer ends up being way larger than expected with a bunch of debugger initialized data ;)

1508876675
andrewrk
dimenus, yeah Buf/ZigList are made to have amortized O(log2(N)) append operation

1508876687
andrewrk
that's probably the wrong data structure for a lot of things, it could be optimized

1508876708
andrewrk
dimenus, you may notice we also don't free memory anywhere in the compiler

1508876742
andrewrk
I'm planning for the self hosted version to have proper memory management and concurrency and all that good stuff

1508876950
dimenus
i can work around it by just not using buff_alloc_fixed for now as the regular buff_alloc sets length appropriately (because it passes 0 to buff_alloc_fixed)

1508877094
andrewrk
dimenus, it's still going to have the extra capacity when you add it to the buf though. how much memory are you putting in there?

1508877182
dimenus
MAX_PATH (260 on windows 10)

1508877196
andrewrk
dimenus, just use buf_alloc_fixed, the extra capacity is negligible

1508877308
dimenus
it's not the capacity that's the issue, it sets the length to the wrong value

1508877316
dimenus
so when you append(), it's to the middle of the buffer

1508877318
dimenus
not the beginning

1508877351
andrewrk
dimenus, hmm you should use buf_len for the length

1508877366
andrewrk
it's used everywhere; I don't think it's wrong

1508877412
andrewrk
I guess this is what I get for not using private:

1508877474
andrewrk
pretend Buf::list is private

1508877500
dimenus
hah, will do

1508877908
dimenus
hmm, probably just understanding it wrong then. I think of it like 'alloc and ensure capacity', is that wrong?

1508877965
andrewrk
dimenus, that is correct

1508877981
andrewrk
it ensures a capacity in memory, but the "length" of the buffer is independent of the capacity

1508877986
andrewrk
and the 0 byte is after the length

1508878010
andrewrk
so if you pass, e.g. buf_ptr(buf)  to a win32 api, it's going to look for the null byte and find it in the correct position

1508878685
Benj
zw

1508882076
Guest72714
Hello â€¦ I understand zig uses LLVM. Is it also partly self hosting (in terms of its compiler)?

1508882194
andrewrk
Guest72714, the tests are all self hosted

1508882840
Guest72714
The compiler is written in c++? (from quick look at the source)

1508883477
andrewrk
Guest72714, yes

1508883649
dimenus
ok, so I have msvc working through both COM and the registry

1508883653
dimenus
now on to kernel32...

1508883661
dimenus
which apparently does not have a consistent key or interface

1508883671
dimenus
thanks again microsoft

1508884388
Guest72714
Thanks.

