1508977687
andrewrk
Dimenus, HKLM\SOFTWARE\WOW6432Node\Microsoft\Microsoft SDKs\Windows has 2 properties

1508977707
andrewrk
CurrentInstallFolder=C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\

1508977716
andrewrk
CurrentVersion=8.0.50727

1508977725
andrewrk
the path has nothing useful to zig in it

1508986483
hasen_judy
Just looked at the log from couple days ago

1508986499
hasen_judy
Sorry did not get your reply at the time andrewrk

1508986509
hasen_judy
Thanks for creating a github ticket for it :)

1508986519
andrewrk
hasen_judy, I'm about to upload a hello world demo of SDL with zig

1508986526
andrewrk
will you be around for the next 30 min or so?

1508986531
hasen_judy
awesome

1508986534
hasen_judy
yea I will be

1508988355
andrewrk
hasen_judy, got it working. uploading

1508988380
GitHub13
[zig] andrewrk pushed 2 new commits to master:

1508988380
GitHub13
zig/master 5f28a9d Andrew Kelley: cleaner verbose flags and zig build prints failed command

1508988380
GitHub13
zig/master 300c83d Andrew Kelley: fix crash on field access of opaque type

1508989088
hasen_judy
building is failing for me

1508989094
hasen_judy
I think I don't know how to update the compiler

1508989108
hasen_judy
for the compiler I just did a git pull then went into the build folder and ran `make`

1508989124
hasen_judy
Do I need to re-run the original cmake command?

1508989553
andrewrk
hasen_judy, you don't need to re-run the original cmake command but you do need to do `make install` instead of make

1508989932
hasen_judy
what if I run make then make install?

1508989936
hasen_judy
(that's what I did)

1508989990
hasen_judy


1508990064
hasen_judy
basically same error as before; just a tiny bit more verbose

1508990076
hasen_judy
note that I installed sdl2 from homebrew

1508990117
hasen_judy
and this is running on macOS Sierra 10.12.6

1508990170
hasen_judy
above link seems to have issues with long lines

1508990170
hasen_judy


1508990205
andrewrk
hasen_judy, let me try it on mac

1508990857
andrewrk
hasen_judy, I can reproduce the issue

1508990866
hasen_judy
ok

1508990892
hasen_judy
thanks for confirming

1508992377
GitHub141
[zig] andrewrk pushed 1 new commit to master:

1508992377
GitHub141
zig/master c7053be Andrew Kelley: better output when @cImport generates invalid zig

1508992496
andrewrk
hasen_judy, the commit I just pushed should make the error message better. now let's see if I can fix it

1508992763
hasen_judy
I pulled the latest compiler build

1508992769
hasen_judy
the only thing I see is this note 'note: redefinition of 'va_list''

1508992815
hasen_judy


1508992857
hasen_judy
sorry, incomplete paste ^

1508992858
hasen_judy


1508993633
andrewrk
hasen_judy, this is better than the assertion failure right?

1508993648
andrewrk
now it tells you there is a compiler bug

1508993718
libman
Can't find basic install docs.  Getting a "Unable to find zig lib directory. Reinstall Zig or use --zig-install-prefix" error.

1508993763
hasen_judy
I guess. I don't know what kind of message would be helpful since I don't work on the compiler.

1508993776
andrewrk
libman, what OS?

1508993827
andrewrk
did you follow the instructions from the README?

1508993991
libman
Ubuntu Linux.  Yes, the `cmake; make; make install` commands from

1508994067
libman
That is they produced a /opt/zig/build/zig binary

1508994128
andrewrk
libman, if you're compiling from source I recommend the debug / development build

1508994150
andrewrk
the libc error you got means you didn't configure libc correctly. try following the instructions from the debug / development section

1508994178
libman


1508994420
andrewrk
libman, correct. I haven't gotten an ubuntu ppa up yet

1508994602
libman
Setting CMAKE_INSTALL_PREFIX / ZIG_LIBC_LIB_DIR / ZIG_LIBC_INCLUDE_DIR / ZIG_LIBC_STATIC_LIB_DIR env vars didn't help.  I'm walking blind here.  Terrible documentation.

1508994639
andrewrk
libman, please be patient. this is version 0.1.1, not 1.0.0

1508994673
andrewrk
if you would like progress to go faster, you could consider donating toward the effort of funding full time work

1508994797
andrewrk
hasen_judy, after the commit I just pushed, the sdl demo works for me on macos

1508994803
GitHub128
[zig] andrewrk pushed 1 new commit to master:

1508994804
GitHub128
zig/master f4ca348 Andrew Kelley: add guard to c_headers for duplicate va_list on darwin

1508994887
andrewrk
good night

1508994922
hasen_judy
andrewrk: works now! :)

1508994933
hasen_judy
this is awesome

1508994933
hasen_judy
thanks

1508994980
hasen_judy
my other zig program also works now

1508994984
hasen_judy
sdl*

1508995030
hasen_judy
I'll try to play with sdl more and report any compiler problems I encounter

1508995034
hasen_judy
good night

1509000105
GitHub174
[zig] tiehuis opened pull request #566: Improve invalid character error messages (master...issue-544)

1509015940
achamb
having an easy build system is easier to do earlier than later. It definitely is irritating dealing with the clang libraries etc.

1509015952
achamb
not sure how i can help though

1509016001
achamb
self hosted compiler will be nice one day :)

1509026329
andrewrk
achamb, are you referring to how cmake finds clang?

1509026340
andrewrk
or are you suggesting to work on improvements to the zig build system

1509026436
GitHub99
[zig] andrewrk pushed 1 new commit to master:

1509026437
GitHub99
zig/master 6663638 Marc Tiehuis: Improve invalid character error messages (#566)...

1509026440
GitHub178
[zig] andrewrk closed pull request #566: Improve invalid character error messages (master...issue-544)

1509032659
dimenus
andrewrk: what version of MSVC do you have installed on that laptop?

1509032800
dimenus
I'm using MSVC 2017 / Win10 / Windows SDK 10

1509032814
dimenus
the v10.0 key contains a valid path to the tree which contains kernel32.lib

1509034121
andrewrk
dimenus, MSVC 2015

1509034176
andrewrk
Win10

1509034188
dimenus
Do you have either the Windows 8 or Windows 10 sdks installed?

1509034190
andrewrk
I didn't explicitly install a windows SDK

1509034196
dimenus
ok

1509034197
andrewrk
it must have come with msvc 2015 or with windows update

1509034286
dimenus
Microsoft completely changed the installer with 2017

1509034288
dimenus
and there's a lot less bloat now

1509034323
dimenus
I'm thinking this key will work for someone who has 8.1 / 10 installed: HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows Kits\Installed Roots

1509034349
dimenus
But I need to do a procmon trace on an older version to determine what previous versions of visual studio do for kernel32

1509034355
dimenus
or should I just go with 8.1/10 for now?

1509034439
andrewrk
dimenus, I don't think I fully understand your question

1509034528
dimenus
sorry, probably misusing irc. I'm just thinking out loud.

1509034547
andrewrk
feel free to think out loud

1509034549
dimenus
I need to fire up my Win7 vm to find where kernel32 comes from on an older setup

1509034562
andrewrk
I'm at work again without my windows laptop

1509034583
dimenus
Do you use a mac in the office?

1509034630
andrewrk
linux

1509034982
andrewrk
dimenus, one idea we could have, is the compiler can have a configuration file and state

1509034987
andrewrk
and you could do something like

1509034996
andrewrk
zig find-libc e:\

1509035007
andrewrk
and it will scan e:\ looking for msvc installations. it could find any number of them

1509035010
andrewrk
zig list-libc

1509035022
andrewrk
prints all the libcs it knows about, with '*' next to the "default" one

1509035058
andrewrk
we can use the registry (do we need com? maybe not?) to seed the list initially

1509035086
andrewrk
zig select-libc 3

1509035102
andrewrk
(where 3 is the 3rd libc listed from zig list-libc)

1509035256
andrewrk
this would be for native builds only. for cross-compile builds you always have to give the path to libc explicitly (but maybe you could use one of the ones from the list)

1509035353
dimenus
COM is preferred for the newest versions according to Microsoft (they actually include a nuget package which I'm trying to avoid at all costs)

1509035372
andrewrk
what docs are you looking at that says COM is preferred?

1509035375
dimenus
but the registry keys are not consistent across versions, MS has changed them several times

1509035546
dimenus
andrewrk:

1509035588
dimenus
halfway down under 'Product Instances'

1509035746
dimenus
CMAKE and Rust both use the COM interface for 2017

1509035784
andrewrk
good to know

1509035799
andrewrk
sounds like that's how we should do it

1509035852
dimenus
i do like the option of having the compiler be able to list the instances it finds

1509043089
andrewrk
dimenus, you know what it should be, actually. we should have an environment variable ZIG_LIBC_SEARCH_PATHS

1509043132
andrewrk
and if we had a find-libc utility, it would only help find a path

1509043138
andrewrk
it wouldn't change any state in a conf file

1509043162
dimenus
written in Zig? :)

1509043176
andrewrk
but of course :)

1509043187
dimenus
well, that would be the goal anyway

1509043189
andrewrk
I mean I think it would just be a subcommand of the compiler

1509043206
andrewrk
which will eventually be self hosted

1509043214
andrewrk
we can start now, by the way. I decided how the self-hosting will work

1509043243
andrewrk
we will always have the c++ compiler, forever, in the repo. and it has to be able to build the zig compiler.

1509043255
andrewrk
*build the self hosted compiler

1509043308
dimenus
just making sure I understand this correctly, the subcommand would invoke a separate tool, correct?

1509043326
andrewrk
I don't see a reason to put it in a different binary

1509043357
andrewrk
so the build process is: 1. compile c++ source code into zig1 compiler. 2. compile zig source code with zig1 compiler into zig2 compiler. 3. compile zig source code with zig2 compiler into zig3 compiler. zig3 compiler is the final binary

1509043380
andrewrk
it's 3 steps but it never grows beyond 3

1509043415
dimenus
what's the technical reason we need zig3?

1509043446
andrewrk
to be clear the binary will still be called "zig". I'm using zig3 to distinguish for the purposes of explaining the self hosting process. but why we need it:

1509043500
dimenus
ok, so I'll put the code to find libc/kernel32 in a separate cpp file rather than in-line within analyze.cpp

1509043502
andrewrk
zig1 is the output of c++ code. zig2 is the output of zig1 compiling zig code. zig2 is built using a different codebase than zig1

1509043524
dimenus
ah that makes sense

1509043566
andrewrk
so the c++ compiler can have bugs, that's fine, as long as it can produce a zig compiler that can produce a zig compiler that passes all the tests and doesn't have bugs :)

1509043670
andrewrk
dimenus, the libc-finding code written in c++ is not wasted, because we always will link with LLVM and clang, which means that we have to link libc, which means we have to find msvc in the c++ compiler

1509043794
andrewrk
although, we could use the cmake build tools to find msvc and pass that to the next step. hm.

1509043812
andrewrk
anyway whatever effort you do is not wasted because if it's solved in c++ it's easy to translate to zig later

