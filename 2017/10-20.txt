1508463767
GitHub92
[zig] ibara opened pull request #551: Add OpenBSD support (WIP) (master...master)

1508505939
Dimenus
does anyone here compile Zig in debug on a regular basis?

1508506156
pupp
well, I compile zig with debug info, I'm on windows though

1508506165
Dimenus
i am also on windows

1508506177
pupp
compiler?

1508506199
Dimenus
MSVC x64 2017

1508506223
pupp
I'm with mingw

1508506224
Dimenus
i should back up, I was originally getting linker errors in the zig debug build

1508506239
Dimenus
so I thought it was the clang install I had which was compiled in release mode

1508506244
Dimenus
i would prefer mingw to be honest......

1508506263
Dimenus
i just ran into the issue where the compiler doesn't exist cleanly and I didn't know where to add 'TerminateProcess'

1508506263
pupp
mingw is quite shit, I warn you

1508506300
Dimenus
anyway, I guess I'm just a bit stuck. Do I need to build clang & the associated tools in debug as well?

1508506350
pupp


1508506366
pupp
had the same issue, with zig not exiting

1508506522
pupp


1508506550
pupp
added TerminateProcess here, just below codegen_link

1508506572
pupp
not exactly below

1508506717
pupp
about "building associated tools in debug", it seems that the only thing necessary for zig is llvm.dll.

1508506740
pupp
and it doesn't matter if it's in debug mode or not

1508506748
Dimenus
interesting

1508506760
Dimenus
I was getting a lot of linker errors building in debug

1508506766
Dimenus
but this was with msvc

1508506771
pupp
lld, llvm linker, is in dependencies

1508506778
pupp
deps folder

1508506806
pupp
I don't know anything about zig though, I'm just learning it myself

1508506896
pupp
I used cmake to generate everything

1508506991
Dimenus
i'm just going to build it with mingw for now

1508506995
Dimenus
see how that goes

1508507011
pupp
use msys2 for that, 64bit version

1508507038
Dimenus
yeah I'm using msys2

1508507043
Dimenus
but the mingw64 shell

1508507127
pupp
visual studio is your best bet to be honest, author is developing it with vs at the moment

1508507160
Dimenus
yeah, but he's not distributing a debug build of llvm (nor should he have to)

1508507165
Dimenus
and I don't know my way around the llvm source

1508507395
pupp
I'll try to rebuild llvm too, maybe I'll learn how to build it statically.

1508508594
Wandsd
Second example from docs gives error: error: type 'fn() -> ArgIterator' does not support field access

1508508594
Wandsd
const nullable_value = if (os.args.count() >= 2) os.args.at(1) else null

1508508612
Wandsd
it points to os.args.

1508509373
Wandsd
number example doesnt seem to recognise any number or maybe it just doesnt recognise newlines.

1508510274
tankfeeder
wait while andrewrk will wake up

1508513005
andrewrk
tankfeeder, hi

1508513055
tankfeeder
my words was to Wandsd

1508513069
tankfeeder
read above :)

1508513566
andrewrk
Wandsd, I fixed

1508513768
Dimenus
andrewrk, do you happen to know offhand which clang/llvm project is needed to compile zig?

1508513776
Dimenus
or did you just do an ALL_BUILD?

1508514043
Dimenus
trying to setup an msvc debug build of zig

1508515239
Wandsd
5.0 says the readme

1508516250
Dimenus
sorry, not the version but which projects from the source (a full build is 389 projects)

1508520134
andrewrk
Dimenus, did you see

1508520144
andrewrk
there are instructions for the debug build

1508520178
andrewrk
Dimenus, also I do have a pre-built debug tarball which I could upload

1508520335
andrewrk
Wandsd, hm my other messages to you did not go through.

1508520372
andrewrk
this is the issue for making the docs be automatically tested:

1508520403
Dimenus
andrewrk, I did notsee that post, thank you for that.

1508520405
andrewrk
and I believe this is the newline issue:

1508520407
Dimenus
I'll go with that for now, many thanks!

1508520439
andrewrk
Dimenus, "-DCMAKE_BUILD_TYPE=Release" in the Debug Mode section is not a mistake

1508520448
andrewrk
that's the only way it worked for me, and it did in fact make a debug build

1508520515
Dimenus
duly noted

1508520596
dtzWill
poking at clashos:

1508520627
dtzWill
Well lemme first say I'm still /shocked/ that it actually built a freestanding armv7 kernel out-of-the-box and did so quickly

1508520653
dtzWill
didn't need to chase down some codesourcery toolchain at a particular year-quarter version or something ;)

1508520670
andrewrk
dtzWill, finally somebody appreciates how great cross compiling works :)

1508520714
dtzWill
but anyway: Is that "supposed" to work re:running in qemu? I'm getting a blue screen and it outputs "800600" which is curious

1508520723
andrewrk
hm I think there was a regression

1508520739
andrewrk
I mean, what I had working before was a blue screen, and it printed something more coherent

1508520756
dtzWill
okay a quick look through the code suggested that

1508520779
andrewrk
haven't had time to look at that yet, but obviously if I find the regression I'll add a test for it in the compiler

1508520785
dtzWill
interestingly I see it print things like width x height, lol, but never ${width}${height}  haha

1508520810
andrewrk
you can actually test it pretty easily with gdb

1508520814
andrewrk
I forget what the command is

1508520830
dtzWill
okay no worries! I am just trying out various things, and "known" regression is NBD compared to the much scarier silently miscompiling in an environment-specific manner lol

1508520854
dtzWill
yeah, I've done that before

1508520875
dtzWill
gdb

1508520903
dtzWill
last time I did I was debugging my LLVM-JIT compiled Linux kernel :D

1508520927
dtzWill
although I "cheated" and pushed LLVM JIT into the hypervisor layer and added hypercalls for it hehe

1508520942
andrewrk
ha

1508521008
dtzWill
while I have you, when printing build errors there seems to be ... spurious newlines proportional to the number of errors? Is that a thing? xD

1508521011
dtzWill
anyway great stuff

1508521020
dtzWill
I still can't believe that this works

1508521025
dtzWill
:D

1508521057
andrewrk
dtzWill, hmm that doesn't sound familair, feel free to make an issue

1508521062
andrewrk
*familiar

1508521067
dtzWill
aye aye

1508521141
dtzWill
is there a linux platform that's "most" supported/tested with?

1508521169
dtzWill
I like to confirm when things are blatantly NixOS-specific before handing things over to upstream xD

1508521292
andrewrk
dtzWill, my main dev platform is nixos

1508521302
andrewrk
the tetris app works out of the box for me if I use zig build, which is nixos-aware

1508521317
andrewrk
let me dig up my nix-shell file

1508521369
andrewrk


1508521381
andrewrk
dtzWill, nix-shell this file, then `zig build play` and I am playing tetris

1508521392
andrewrk
it's a bit slow, I'm going to work on that soon

1508521454
dtzWill
haha I was doing things like "nix-shell -p epoxy -p glfw -p mesa -p libpng.all"; I'll try what you gave in a sec

1508521463
dtzWill
zig build is nixos-aware?! haha :D

1508521497
andrewrk
if you use zig standalone on nixos and want to interact with c libraries, do this

1508521529
andrewrk
zig build-exe whatever.zig $NIX_CFLAGS_COMPILE $NIX_LDFLAGS

1508521561
andrewrk
zig build being nixos aware is just looking at those env vars

1508521604
andrewrk
we're not going to support all the c flags, but I don't see the harm in supporting -I -L -l

1508521624
dtzWill
hahaha I can't believe it worked

1508521638
dtzWill
okay well this is just magical

1508521668
dtzWill
well /honestly/ if I can just nix-shell (and presumably this means nix-build aka write nix expressions to build things w/zig) like this.... I'm very happy

1508521668
dtzWill
haha

1508521692
dtzWill
and yes your example nix-shell did the trick, alrighty then

1508521771
andrewrk
:)

1508521793
andrewrk
there's still a lot of work to do, but we're off to a good start!

1508522071
dtzWill
understood, and agreed!!

1508522129
Dimenus
clang in debug build takes so long to compile

1508522130
Dimenus
lol

1508522363
andrewrk
Dimenus, yeah I pretty much left it overnight

1508522391
andrewrk
I'm going to have to do it again, too, because I want to test if llvm master branch fixes debug symbols for windows

1508522522
Dimenus
i probably should have done that

1508522527
Dimenus
i grabbed release_50

1508522563
Dimenus
did they close your ticket?

1508522577
dtzWill
j/w, debug builds are significantly more... useful for your debugging experience.. than Release+Asserts?

1508522593
dtzWill
only ask because the latter is much faster O:)

1508522664
Dimenus
well, some open issues straight up crash :p

1508522667
Dimenus
rather than trigger an assert

1508522674
andrewrk
Dimenus,

1508522727
andrewrk
the best thing right now is release llvm (no asserts) + debug zig

1508522737
andrewrk
I wasn't able to get that working on windows

1508522747
andrewrk
it's all release or all debug

1508522779
andrewrk
Dimenus, also to reiterate: debug llvm build will not pass some of the zig tests.

1508522812
andrewrk


1508523856
Dimenus
andrewrk, yeah I wanted to do debug zig w/ release llvm

1508523862
Dimenus
but msvc would not link properly

1508523869
Dimenus
it works in mingw

1508523962
andrewrk
we could solve this problem by self-hosting :)

1508524021
Dimenus
wait, how does self hosting help? don't you still need to call llvm on the backend?

1508524041
Dimenus
or is it just msvc + debug llvm fails

1508524070
andrewrk
yes we do, but the zig build system can handle mixing c/c++ and zig

1508524072
Dimenus
are you thinking of pulling a Jblow and having multiple backends? ;)

1508524085
andrewrk
mmm probably not before 1.0.0

1508524097
Dimenus
he probably has a larger budget

1508524101
andrewrk
we don't have the developer bandwidth to pull that off, yeah

1508524107
andrewrk
I have a day job

1508524149
Dimenus
this is pretty neat already, I want to at least investigate a few outstanding issues

1508524162
andrewrk
I look forward to your contributions

1508524420
andrewrk
Dimenus, whatever is interesting to you, go for it. There's also the c-to-zig translation effort, which could be fun to work on. Here are some of the example tests:

1508524448
andrewrk
I think we're going to be able to translate pretty much any C code into zig with correct semantics

1508524463
andrewrk
you probably wouldn't want to use it verbatim but it would be a good starting point for porting code

1508524756
Dimenus
i'm slowly writing a video game, so I may work on glfw/opengl

1508524825
Dimenus
or just low hanging bugs

1508524840
Dimenus
for this issue that I responded to:

1508524857
Dimenus
what would be the correct way to handle that? implicit casting in the compiler itself or to handle the cast in the user program?

1508524888
Dimenus
since a u3 is really just a type, there's no real bit boundary

1508525273
andrewrk
Dimenus, it's a 1 line fix, just cast the result of charToDigit to T

1508525286
andrewrk
T(%return charToDigit(c, radix))

1508525297
andrewrk
it's guaranteed to work because charToDigit returns an error if the digit didn't fit in the radix

1508525365
andrewrk
or we could make charToDigit generic and take a type parameter instead of u8

1508525435
Dimenus
it's not that line that fails though, it's that a is of type u3 above

1508525447
Dimenus
I recommended a fix (which I tested previously) was just curious if my rationale was correct

1508525464
Dimenus
/handle u2 - u7

1508525464
Dimenus
var a = if(@sizeOf(@typeOf(value)) == 1) u8(value) else value;

1508530869
andrewrk
Dimenus, can you paste a diff? I'm not sure which line you're looking at

1508531623
Dimenus
andrewrk:

1508531736
andrewrk
Dimenus, ahh I see. I was (mistakenly) looking at the parsing code; you're looking at the formatting code

1508531906
Dimenus
you are correct that it's a one line fix though ;)

