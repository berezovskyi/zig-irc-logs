1507963027
puppp
How do you people think, will zig compile as a 32bit app?

1507963208
tankfeeder
it will compile to any target LLVM supports

1507963620
puppp
not "compile to", but "compile as" 32bit program

1507963640
puppp
it will not run out of memory or anything?

1507968514
puppp
src/bigfloat.hpp complained that it can't include "softfloat_types.hpp", what's up with that?

1507968587
puppp
oh, sorry, it's in deps/SoftFloat-3d

1507968751
puppp
how about moving dependencies to src/third_party?

1507968805
puppp
I'm studying mpc-hc source code in parallel, that's how they organize code

1507968845
puppp
Actually I'm only studying MediaInfo now, they seem to share some code

1507970009
puppp
...

1507970085
puppp
my text editor, by default, searches in all subfolders. I often move things in another folder just to make search faster.

1507970099
puppp
so maybe it's better to keep deps in deps

1507974573
tankfeeder
try

1507974839
puppp
nah, should just fix my text editor. I disabled search options myself some time ago, thinking I'll never need it. It made me press enter 2 extra times.

1508004079
andrewrk
pupp, the zig compiler only works as 64 bit right now, but when we self host we'll support a 32 bit compiler

1508004098
andrewrk
however you can cross compile for 32 bit targets

1508004596
pupp
okay, thanks.

1508004619
pupp
Learning cmake now

1508005551
andrewrk
pupp, why do you need to learn cmake? is the build broken for you?

1508005664
pupp
haven't actually tried building with cmake, went for codeblocks build for some reason

1508005672
pupp
i'm dumb, as usual

1508005809
pupp
dependency management in golang is amasing, you just write "import github/or/something/address", and compiler does everything for you

1508005886
pupp
not sure if that's the best way to handle it, I've heard at least one story when project stopped building for him. Probably due to one dependency updating.

1508005896
pupp
but that's unrelated

1508005986
andrewrk
we'll have something similar

1508006082
andrewrk
we're going to have hash version locking though. so if you download a dependency and it doesn't match the hash you expect it's an error. you'll have to go see what's up with your dependency

1508006375
pupp
pretty cool

1508008265
andrewrk
this is release weekend

1508008277
andrewrk
planning on pulling the trigger for 0.1.0 first thing monday

1508009815
GitHub134
[zig] andrewrk pushed 2 new commits to master:

1508009815
GitHub134
zig/master 0bc8041 Andrew Kelley: implement os.makeDir for windows

1508009815
GitHub134
zig/master 8d3eaab Andrew Kelley: implement std.os.ChildProcess for windows

1508009998
GitHub37
[zig] andrewrk pushed 1 new commit to master:

1508009998
GitHub37
zig/master a68dc65 Andrew Kelley: fix os.makeDir for posix

1508014827
GitHub44
[zig] andrewrk pushed 1 new commit to master:

1508014827
GitHub44
zig/master 0307dc0 Andrew Kelley: organize windows utility functions

1508014883
pupp
It compiled, but when I try to run "zig build helloworld.zig", it prints "Unable to find zig lib directory. Reinstall Zig or use --zig-install-prefix."

1508015098
andrewrk
pupp, what OS?

1508015105
pupp
windows

1508015124
andrewrk
wherever your zig.exe is, you need to put the standard library in the same folder

1508015134
andrewrk
in the git repo it's the std/ folder

1508015176
andrewrk
actually you should use the lib/ folder from your build directory, because it will be (intentionally) missing some rather large test files that you don't need

1508015263
andrewrk
pupp, oh yeah definitely copy from the build folder, the `lib/` folder

1508015267
andrewrk
because you need the other stuff in there too

1508015291
pupp
hm, what is the build folder? Don't see one.

1508015297
pupp
CMakeFiles?

1508015308
andrewrk
CMakeFiles is inside the build dir

1508015319
pupp
aha, the "zig" folder

1508015323
andrewrk
did you see the instructions, btw?

1508015338
andrewrk


1508015415
pupp
By the way, this is mine issue

1508015453
pupp
i'm not downloading that halfgigabyte archive to not create load on server

1508015495
andrewrk
oh you are using mingw?

1508015502
pupp
yep

1508015513
andrewrk
the build dir is the cwd when you ran cmake

1508015529
andrewrk
I think maybe you just forgot to run `make install`

1508015531
pupp
then it's "zig"

1508015538
pupp
maybe

1508015551
pupp
yes, I forgot

1508015601
andrewrk
note that I am still working out a few issues on windows:

1508015745
pupp
Strange that it got installed in C:\Program Files (x86)\zig\, 64bit programs usually get installed in just "Program Files".

1508015780
pupp
and yes, it's a 64bit zig.exe, I checked.

1508015785
andrewrk
for a development version of zig, which is what you're making if you're building from source, it's recommended to use the build dir also as the install dir

1508015815
andrewrk
for mingw I believe these instructions are correct:

1508015856
andrewrk
I'd like to remind you that I mingw zig build is not supported yet

1508015889
andrewrk
this is release weekend; after we launch we will have automatic builds provided for windows

1508015924
pupp
Should I just silently wait? I feel like I'm only distracting.

1508015943
andrewrk
it's ok, but if you run into a bug I'm not going to look at it yet

1508015979
andrewrk
I just don't want to get judged for something I haven't tried to get working yet :)

1508017223
GitHub39
[zig] andrewrk pushed 2 new commits to master:

1508017224
GitHub39
zig/master ad6eec9 Andrew Kelley: fix regressions from previous commit on windows

1508017224
GitHub39
zig/master 61d715d Andrew Kelley: implement std.os.symLink for windows

1508017714
pupp
got it to work, it compiled hello world.

1508018223
GitHub113
[zig] andrewrk pushed 1 new commit to master:

1508018224
GitHub113
zig/master 531f334 Andrew Kelley: implement std.os.rename  for windows

1508018409
andrewrk
pupp, great. out of curiosity are you targeting 32bit or 64bit?

1508018810
pupp
I just typed "zig build-exe hello.zig", result is 64bit

1508018819
pupp
don't know how to build 32bit yet

1508018839
pupp
it's 137 kilobytes

1508018858
pupp
hello_windows.zig

1508018867
andrewrk
zig build-exe hello_windows.zig --target-os windows --target-arch i386 --target-environ gnu

1508018872
andrewrk
see also `zig targets`

1508018882
andrewrk
use whatever one says "native" for environment

1508019158
GitHub106
[zig] andrewrk pushed 1 new commit to master:

1508019159
GitHub106
zig/master 46352f6 Andrew Kelley: std.io: remove unused constants

1508019798
pupp
Well, it works, but zig process never closes for some reason.

1508019876
pupp
Also today I learned, that if you launch some program that misses dll, from command line, it wouldn't report missing dll as it usually does.

1508019895
pupp
No messagebox with error, it just quits.

1508019950
pupp
Also I wonder how to make freestanding exe with zig.

1508020448
andrewrk
pupp, when you say freestanding, what do you mean?

1508020478
andrewrk
what is different about the hello_windows.exe binary and a freestanding binary?

1508020479
pupp
no stack check, no runtime, dll only

1508020492
pupp
minimal size

1508020519
andrewrk
I haven't verified this yet, but the stack check might be necessary for ABI correctness on windows

1508020537
andrewrk
and you won't get a stack check if you keep your stack frames less than a page size

1508020553
andrewrk
what do you mean dll only?

1508020566
pupp
It's not necessary, if you don't overflow stack.

1508020567
andrewrk
and what do you mean no runtime?

1508020582
andrewrk
what runtime is in your hello_windows.exe?

1508020604
andrewrk
compiler_rt?

1508020620
pupp
I'm not sure exactly what it is, but exe is 150 kb. I guess most of it is runtime?

1508020638
andrewrk
I think this is what you want

1508020695
andrewrk
depending on what code you have, llvm might generate calls to memset, memcpy, udivmoddi4, etc

1508020714
andrewrk
I just need to link with a .lib instead of a .obj and it should be able to strip unused functions

1508020826
andrewrk
oh you can also override the panic function

1508020848
andrewrk
in your root source file, `pub fn panic(msg: []const u8) -> noreturn {  // your implementation here`

1508020879
andrewrk
with optimizations on, however, if you never call @panic then the code should get stripped

1508020958
andrewrk
pupp, did you use --release-fast ?

1508020966
pupp
no

1508021099
pupp
with --release-fast it's 6 kb

1508021129
andrewrk
I think that is correctly omitting symbols from compiler_rt.obj and builtin.obj

1508021225
pupp
there's still some weird code generated after the WinMain

1508021241
pupp
exception handling or something of that sort?

1508021407
andrewrk
pupp, this?

1508021429
andrewrk
it just calls exitprocess with success or failure

1508021447
andrewrk
what I can do is let you define WinMainCRTStartup yourself

1508021457
andrewrk
do you want that? I can add that right now

1508021471
pupp
That would be useful

1508021497
andrewrk
ok then you'll have to manually specify -mconsole or -mwindows

1508021535
pupp
ok

1508021587
pupp
By the way, this is how color codes got displayed for me

1508021590
pupp
[37;1mC:\Program Files (x86)\zig\bin\_.zig:9:43: [31;1merror:[37;1m expected

1508021590
pupp
type 'noreturn', found 'void'[0m

1508021598
andrewrk
is that cmd.exe?

1508021598
pupp
it's windows 7

1508021607
pupp
yes, modified though

1508021641
pupp
I've seen git printing out proper colored output, I wonder how it did that.

1508021664
pupp
Also found some commands that change color for the whole terminal, but that's not exactly useful

1508021685
andrewrk
did microsoft really not add colors until windows 10?

1508021715
pupp
I think it works, it just needs some googling

1508021724
pupp
git is a working example

1508021731
andrewrk
good point

1508021758
andrewrk
here's the code if you want to play with it:

1508021765
andrewrk
I'm going to keep working on getting all the tests passing on windows

1508021784
pupp
I'm using cmd.exe + ConsoleZ/Console2 + clink, much more comfortable than just raw cmd.exe

1508021793
pupp
ok

1508021800
andrewrk
can you check if colors work in raw cmd.exe?

1508021816
pupp
sure

1508021820
pupp
...

1508021833
andrewrk
also I added code to detect a mingw terminal and make colors work there

1508022042
pupp
raw cmd.exe works the same way

1508022049
andrewrk
ok thanks

1508023082
pupp
SetConsoleTextAttribute

1508023087
pupp


1508023090
pupp


1508023352
pupp
There's probably other way too

1508023577
andrewrk
I will try it

1508024353
pupp
this also shows how to use windows unicode

1508024355
pupp


1508024778
andrewrk
thanks

1508024861
andrewrk
pupp, another idea besides making you implement WinMainCRTStartup, is you could set `main` to have return type `noreturn`

1508024867
andrewrk
then we could avoid calling exit process for you

1508024888
andrewrk
i mean this will not work status quo, I'd need to add code to check for that

1508025394
pupp
on windows, returning from main has same effect as calling ExitProcess

1508025417
pupp
you probably shouldn't mark main as noreturn just due to that

1508025494
pupp
but i don't know

1508025593
andrewrk
"returning from main" is a libc concept

1508025599
andrewrk
inside libc it calls ExitProcess

