1508215521
GitHub14
[zig] tiehuis opened pull request #542: Add c allocator (master...c_allocator)

1508218942
GitHub150
[zig] andrewrk pushed 1 new commit to master:

1508218942
GitHub150
zig/master 0744c83 Andrew Kelley: add uwtable attribute to functions on windows...

1508242398
GitHub96
[zig] andrewrk closed pull request #542: Add c allocator (master...c_allocator)

1508242398
GitHub189
[zig] andrewrk pushed 1 new commit to master:

1508242398
GitHub189
zig/master 09c0cf2 Marc Tiehuis: Add c allocator (#542)

1508244187
GitHub76
[zig] andrewrk pushed 1 new commit to master:

1508244188
GitHub76
zig/master ad07c68 Andrew Kelley: Release 0.1.0

1508244268
tankfeeder
yea

1508244295
tankfeeder
congratulations to everyone :)

1508244343
andrewrk
writing up release notes now

1508244539
andrewrk
oops

1508244542
andrewrk
wow I really botched this up

1508244546
GitHub183
[zig] andrewrk pushed 1 new commit to master:

1508244547
GitHub183
zig/master 79193ff Andrew Kelley: build: fix logic for version when there is a git tag

1508244562
andrewrk
I'm going to do git stuff

1508244617
GitHub48
[zig] andrewrk pushed 1 new commit to master:

1508244617
GitHub48
zig/master 78cb4ce Andrew Kelley: Release 0.1.1

1508244634
andrewrk
there we go

1508248377
andrewrk


1508249037
tankfeeder
perfect.

1508249804
andrewrk
I made a reddit post

1508255569
hoppetosse
andrewrk: Congratulations on the 0.1.0 release!

1508255584
andrewrk
thanks hoppetosse

1508255610
hoppetosse
I started university a few weeks ago and haven't kept up with developments, but I've seen some interesting stuff come up

1508255626
andrewrk
notably, we have windows working really well

1508255639
hoppetosse
Yeah, very excited to try that

1508255646
andrewrk
cross compiling for windows without libc is especially nice

1508255726
hoppetosse
Has there been improvement on compile-times?

1508255733
hoppetosse
tick was taking a while to build last I tried

1508256258
andrewrk
not yet

1508256284
andrewrk
I'll do a proof of concept fast compile times for 0.2.0

1508256315
andrewrk
optimizing performance, caching, automatically breaking into multiple objects, and anything else I can think of

1508256433
hoppetosse
Awesome! Thanks and congrats =)

1508264390
GitHub82
[zig] andrewrk pushed 1 new commit to master:

1508264390
GitHub82
zig/master a27c0dd Andrew Kelley: remove unsupported targets from readme...

1508270766
GitHub184
[zig] andrewrk pushed 1 new commit to master:

1508270766
GitHub184
zig/master 3c3af4b Andrew Kelley: fix docs link

1508279021
PV_
Apology if this was reported. I downloaded zig0.1.1 for Windows, copied Hello World example to a text file, compiled and I got error:

1508279034
PV_
O:\zig0.1.1>zig build-exe a.zig

1508279046
PV_
':\zig0.1.1\a.zig:1:30: error: invalid character: '

1508279063
PV_
const io = @import("std").io;

1508279072
PV_
^

1508279107
PV_
It seems zig doesn't like accept CR/LF newlines.

1508279114
andrewrk
yes it seems that way

1508279137
andrewrk
I think it will stay this way, this way all zig source will be consistent

1508279381
PV_
How about zig accepting CR/LF, CR and LF in any combination on every platform? Nim does this.

1508279381
andrewrk
PV_, out of curiosity what editor was that?

1508279403
PV_
Notepad. Its just for playing.

1508279407
dtzWill
any chance/blockers for adding a zig package to nixpkgs?

1508279408
dtzWill
O:)

1508279434
andrewrk
dtzWill, for sure, in fact I have one lying around, just need to update it

1508279450
andrewrk
PV_, notepad is the scourge of the earth

1508279468
dtzWill
:D great, I'm pretty sure I've seen you on nixpkgs issue threads so I was hopeful... ^_^

1508279489
andrewrk
dtzWill, were you the one who got llvm 5 PR merged?

1508279503
andrewrk
ah yeah you were. thanks for that!

1508279585
dtzWill
haha yeah and 4 before that... and others :D. I too, rely on good Nix support for LLVM :)

1508279658
dtzWill
anyway 'grats on first beta release, look forward to giving it a whirl!

1508279712
PV_
I fired Sublime Text 2, copied Hello Word into it and, unsurpisingly, I am getting the same error.

1508279981
radens
Does zig have support for automatic constructors and destructors?

1508280405
andrewrk
radens, no, the tools you have for that are defer and %defer.

1508280480
andrewrk
PV_, does this help?

1508280528
andrewrk
PV_, or maybe this:

1508280846
PV_
Yeah, this works, but still. CR/LF is Windows standard, why to fight against it? Simple copy/paste doesn't work. Anyone new trying will be disappointed at the first moment.

1508281026
andrewrk
it's a fair argument

1508281030
andrewrk
let me think about it

1508281068
andrewrk
one complication is multiline strings use LF

1508281106
andrewrk
I mean it's simple now; only LF works. But it becomes complicated if we try to also support CRLF

1508281339
PV_
Where could I report error and inconsistencies? Perhaps there could be single bug issue for every release, not to clutter bug tracker too much.

1508281978
andrewrk
PV_, a bug report for every independent problem is OK. I'll categorize them as necessary

1508282236
_dev_zero
including implicit \r in multiline strings sounds unwise. just ignoring it wouldn't work?

1508282485
andrewrk
_dev_zero, do you suggest manually terminating lines with \n in multiline strings?

1508282507
andrewrk
are you familiar with how it works currently?

1508282531
andrewrk
examples:

1508282549
_dev_zero
this is quite new to me, so honestly not really

1508282781
_dev_zero
but as far as I understand, multiline strings are currently implcitly include newlines

1508282787
_dev_zero
s/are //

1508282895
_dev_zero
so kind of yeah, even if if  you get \r\n you'd include only \n

1508282959
_dev_zero
s/if  //

1508283012
_dev_zero
I do not suggest forcing programmer to manually type \n though, if you meant that by "manually"

1508283131
pupp
personally I pretend that /r/n doesn't exist. The only program that really depends on it is default windows notepad. Everything else can work with /n

1508283150
pupp
but if people need it...

1508283159
andrewrk
I'm not convinced that people need it

1508283173
pupp
I hope there will be an easy way to remove that from code later

1508283175
_dev_zero
some editors are really bad at pointing out distinction

1508283181
_dev_zero
especially in windows land

1508283192
_dev_zero
where lots of stuff assume \r\n

1508283233
pupp
examples of lots?

1508283242
pupp
just curious

1508283293
_dev_zero
me too actually. I'm not really windows user but I remember most of my text files having \r\n somehow back when I used it

1508283474
_dev_zero
that's also because in windows stdio functions insert additional \r

1508283875
andrewrk
_dev_zero, you're talking about printf and _setmode

1508283907
andrewrk
now that you mention it, yes I think it is on a file descriptor level

1508283950
_dev_zero
it happens for every writing function if it's opened in non-binary mode

