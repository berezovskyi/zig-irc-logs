1541470021
presiden
just realize that the syntac for struct is changed, in 0.3 it's struct { ... } but in master it's sturct.{ ... }

1541470045
presiden
is there a post/issue about this change?

1541470056
andrewrk
presiden, it's likely to be reverted soon.

1541476265
presiden
interesting

1541519995
nefreat
i just built 0.3.0 (on a macos mojave) when running build.zig test, I get the following:

1541519996
nefreat
anyone know how to fix it?

1541519996
nefreat
Assertion failed: (type_is_resolved(type_entry, ResolveStatusAlignmentKnown)), function get_abi_alignment

1541520074
andrewrk
nefreat, why run tests from anything but master branch?

1541520132
andrewrk
we have pre-made builds of 0.3.0 for all supported platforms, no need to test them (they don't even ship with all the tests)

1541520144
andrewrk
otherwise if you want to help develop zig, great - you want master branch

1541520164
nefreat
andrewrk, thanks, I'll try master

1541521210
DutchGh0st
why cant I call `    pub fn inStream(file: File) InStream {` on a stdin handle?

1541521624
andrewrk
DutchGh0st, seems like that should work to me

1541521655
andrewrk
what behavior are you seeing?

1541521685
DutchGh0st
`: no member named 'inStream' in struct 'File'`

1541521821
DutchGh0st


1541521865
DutchGh0st
I am using Windows, maybe that is it?

1541521910
DutchGh0st
altough os.File doesnt care about platform per se,

1541522282
andrewrk
DutchGh0st, it works on master branch for both linux and windows. I'm guessing you're using an older version of zig which had a different std lib API

1541522295
DutchGh0st
0.3.0

1541522361
andrewrk


1541522530
DutchGh0st
so what would be the idiomatic way to read in some integers from stdin?

1541522533
DutchGh0st
thats all I want to do

1541526786
DutchGh0st
is there a function to parse a []const u8 to an integer type?

1541526788
DutchGh0st
in stdlib?

1541527488
andrewrk
DutchGh0st, when you say read some integers, you mean like for a programming coding challenge?

1541527554
DutchGh0st
well, we had to do some homework assignment in Python

1541527557
DutchGh0st
but that was boring

1541527567
DutchGh0st
and I just wanted to do it in Zig ^^

1541527665
andrewrk
does it have to be streaming, or can you read all the stdin into a buffer?

1541527702
DutchGh0st
here's the thing, first a message needs to be printed,

1541527708
DutchGh0st
then you read 1 number from stdin,

1541527714
DutchGh0st
then another msg is printed,

1541527719
DutchGh0st
then read another number,

1541527729
andrewrk


1541527740
DutchGh0st
and that combination of print, read is done like 8 times

1541527814
DutchGh0st
isn't there a function like io.readline, but that takes already acquired stdin handle?

1541528301
andrewrk
DutchGh0st, that's a good point, there should be one

1541528308
andrewrk
and then std.io.readLine should call it

1541528382
DutchGh0st
I dont know how expensive it is to acquire stdin, but I feel like calling io.readline over and over again has more overhead than needed

1541528433
DutchGh0st
and maybe there's also an io.writeLine currently? perhaps a similar function should be added as well

1541528487
DutchGh0st
I can make a proposal right now, and see what everyone thinks of it? :)

1541531747
andrewrk
I don't think we need io.writeLine. the normal stream API should suffice

1541531773
andrewrk
readLine exists because it makes sense to do when treating stdin as a "terminal ui" sort of thing

1541531784
andrewrk
e.g. it would make sense for it to use escape codes and such

1541534062
jfondren
how can I avoid the struct initialization here?

1541534887
andrewrk
jfondren, var usage: c.struct_rusage = undefined;

1541535019
andrewrk
are you trying to produce a linux binary or a macos binary?

1541535060
andrewrk
on macos, applications always link libSystem (which is libc) because that's the stable syscall ABI

1541535072
andrewrk
I don't think it would make sense to use musl

1541535111
jfondren
I'm not actually using musl. Just using its header, since zig can't find sys/resource.h otherwise

1541535167
andrewrk
where is sys/resource.h on your system?

1541535203
nbjoerg
the fun of modern glibc deployments where they vomit headers in random places?

1541535206
jfondren
= undefined does work...  I must've tried that only when there were other problems, and never tried it again.

1541535249
jfondren
macOS Mojave has a bunch of sys/resource.h files under different X.platform dirctores under /Applications/Xcode.app

1541535283
andrewrk
is that 10.14?

1541535292
jfondren
so, probably the technically correct one is /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/resource.h

1541535312
andrewrk
what we need to figure out is, how does the native system compiler know to look there

1541535323
jfondren
10.14 aye

1541535342
andrewrk
on linux we do: `cc -E -x c - -v` and that gives us the include dir

1541535353
andrewrk
on macos it doesn't work

1541535392
nbjoerg
it doesn't?

1541535477
andrewrk
looks like I can upgrade my laptop from 10.13.6 -> 10.14.1

1541535484
andrewrk
I'll try it

1541535778
andrewrk
jfondren, you could also send a patch to the std lib that adds getrusage extern declaration in std/c/darwin.zig (or if it's a posix api, in the main file)

1541535794
andrewrk
and then while waiting for the patch to be merged, just have the extern declaration local to your project

1541535841
andrewrk
a good start would be `zig translate-c /path/to/sys/resource.h` and then clean up the pointer types and add "c" to the `extern` decls

1541535900
andrewrk
this would remove a dependency on /usr/local/Cellar/musl-cross/* in your project

1541535933
jfondren
it's a POSIX API. Although I notice that the units change across OSes (RSS is in bytes, not kB, on macOS)

1541535936
jfondren
sure, I'll take a look at that

1541536071
andrewrk
jfondren, one more thing, looks like you're making a CLI app whose purpose is to output information right? so you probably want to output to stdout rather than using std.debug.warn

1541536126
andrewrk
you can still have the print interface:

1541536151
jfondren
stderr works here. it's a little benchmarking app, a port of

1541536211
jfondren
'run a thing a bunch of times, then get RUSAGE_CHILDREN'. so stdout from the thing you're running might be piped to null

1541536280
jfondren
although it's obviously an option to spawn the child with /dev/null for its stdout. room for improvement.

1541540648
andrewrk
jfondren, I updated to 10.14.1 and I observe that /usr/include is missing. I'll look into updating zig to work on this version of macos

1541540674
andrewrk
if I run `cc` that doesn't even work. I see xcrun: error: invalid active developer path

1541541280
jfondren
I had to reinstall XCode after the upgrade, and got that same error

1541541383
jfondren


1541541390
andrewrk
pure zig doesn't need xcode command line tools to work on macos, but it does if you want @cImport to work

1541541406
andrewrk
`xcode-select --install` seems to be working

1541541416
jfondren
cool

1541541498
andrewrk
`cc -E -x c - -v` works after installing command line tools. so we can enable the same thing we use on linux, on macos

1541543049
andrewrk
jfondren,

1541543088
andrewrk
this works on my mojove laptop, just need to make sure it works on 10.13 which the CI server is running

