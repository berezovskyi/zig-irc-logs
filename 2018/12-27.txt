1545872374
andrewrk
oats, let me try to build a fix to this problem. what's going on is that currently zig assumes that libc is required if you use @cImport

1545872450
andrewrk
knebulae, I'm looking at your code. what's the problem?

1545873371
andrewrk
mgxm, are Scrt1.o, crti.o crtbegin.o etc not required for freebsd?

1545873504
knebulae
andrewrk: error: cannot store runtime value in compile time variable

1545873535
knebulae
andrewrk: regarding message2

1545873563
knebulae
I don't know what else to do to make sure the Ascii2WChar fn runs at compile time.

1545873906
andrewrk
knebulae,

1545874743
knebulae
andrewrk: I gotcha.  I think it's easiest to simply put my strings together from the C side right now where wide string literals are as simple as prefixing an L"blah".  Just for now though.

1545874798
andrewrk
knebulae, on the zig side it could be as easy as prefixing L("blah")

1545874829
knebulae
Might be useful for Windows interop.

1545875078
andrewrk
oats, I just pushed a commit that should fix your issue

1545877854
oats
andrewrk: you're awesome dude, thanks so much :)

1545878204
andrewrk
no problem, let me know if you run into anything else

1545878984
andrewrk
127 / 517 behavior tests passing in copy elision branch

1545879068
oats
well, I can't assign to the result of a macro expansion

1545879074
oats
but I figured that wouldn't work properly

1545879157
andrewrk
oats, you can probably inspect the macro manually and create a roughly equivalent abstraction using functions

1545879184
andrewrk
for example, it could be a function that returns a pointer, so you would assign by dereferencing the result

1545879236
andrewrk
the fundamental problem here is that, in zig, assignment is assignment. the C macro is trying to violate that, and that's not allowed because we want to be able to look at an assignment and rely on it always being an assignment

1545879347
oats
gotcha

1545880892
mgxm
andrewrk: I'm not sure

1545880926
mgxm
i'll find out and guarantee this tomorrow

1545888837
emekoi
can anyone tell me why code randomly allocates different amounts? whenever i run `zig build test` on my code here (

1545890597
andrewrk
emekoi, looks like you're using threads? that's a source of nondeterminism

1545890602
andrewrk
I haven't looked more closely than that

1545890676
emekoi
i only have 1 consumer thread though. and with smaller numbers i get consistent results.

1545895596
IntoxicatedHippo
RMSbolt now supports Zig for anyone who's interested in that:

1545908786
DutchGh0st
Can you shrink a slice while iterating over it?

1545908805
DutchGh0st
like, won't it read past the current slice's contents?

1545909673
IntoxicatedHippo
Do you mean something like `for (x) |_| x = x[0..2];`?

1545909693
IntoxicatedHippo
DutchGh0st

1545909703
DutchGh0st
yeah for example

1545909871
IntoxicatedHippo
I haven't checked this at all and the documentation doesn't seem to say anything about it, but I assume the loop would make a copy of the slices data.

1545909970
DutchGh0st
mhh okey...darnish haha

1545910384
DutchGh0st
then I guess I'd have to do clever indexing and swapRemove stuff ^^

1545910464
IntoxicatedHippo
What are you trying to do?

1545910486
DutchGh0st


1545910490
DutchGh0st
advent of code day 25

1545910566
DutchGh0st
I keep an arraylist of constellations (a constellation is an arraylist of points), and merge the ones together that can merge (manhattendst between a point in 1 constellation is 3 or less than a point in another constellation),

1545910664
DutchGh0st
if 2 can merge, I appendSlice() one constellation to the other, and shrinking the one I took the slice from to a size of 0,

1545910773
DutchGh0st
but then I end up with empty entry's in the constellations arraylist, which .. is okey, but maybe I can just swap remove them with the last entry of the constellations list

1545910797
DutchGh0st
altought its plenty fast currently

1545938222
knebulae
andrewrk: have you noticed anything unusual when calling C functions that have varargs?  I'm wrapping the Print() uefi call, and while numbers can be passed in the format string and are inlined properly, strings are not (they actually display as though 2 separate Print() calls were made).

1545938812
knebulae
andrewrk: here's an example:

1545939857
knebulae
A better example:

