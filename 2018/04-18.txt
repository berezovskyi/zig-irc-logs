1524014400
MajorLag
So here's a weird thing: `while(true){ warn("A"); }`. In win32 in a `test` block, does what you'd expect, but in linux there's no output. wrap it in a `main` instead and it acts as expected.

1524014750
MajorLag
hmm... it's probably something wrong with my environment. compilation takes a lot longer than it should too.

1524019602
achambe
anyone here use apparmour on nixos?

1524026227
andrewrk
MajorLag: do you have a nonstandard installation? Is that working around an issue or something?

1524026430
achambe
oh sorry, wrong chat .. dug

1524026433
achambe
duh'

1524050677
MajorLag
andrewrk: my linux environment is a pretty bog-standard ubuntu installation, but it is on a VM with rather contrained resources. My windows environment has a non-standard setup for BS build tools though.

1524054149
MajorLag
*VS

1524068331
GitHub87
[zig] andrewrk pushed 1 new commit to master:

1524068331
GitHub87
zig/master f1f998e Andrew Kelley: improve cmpxchg...

1524068673
MajorLag
andrewrk: I've built a std.os.time, but have some questions. What's the policy on tests that consume real time? And I made an effort to provide functionality for iOS/Darwin, but have no way of testing it, so I'm not sure I should include it at all.

1524068709
andrewrk
that's a good question

1524068723
andrewrk
you could try collecting time twice and assert that the 2nd one is >= the 1st one

1524068751
andrewrk
go ahead and include the darwin code and I'll test it on my laptop tonight

1524068767
andrewrk
oh, also travis CI will test your darwin code

1524069821
MajorLag
That's more or less what I'm doing. I suppose I don't need to wait a full second to check.

1524082801
MajorLag
I have a function that needs to do different things based on the OS. In some OSs it can fail and it is appropriate to return an error, in others it can't. The compiler is unsatisfied with this. I feel like changing the return type based on the OS is a bad idea, because it means everywhere you use that function you'll have to switch on the OS, so I feel like I have to trick the compiler. Is their something I'm missi

1524082801
MajorLag
le this?

1524082859
andrewrk
MajorLag, the pattern for this is to create an explicit error set that includes errors from all OSes

1524082941
andrewrk
here's an example:

1524083082
andrewrk
I'm not 100% satisfied with this. I might relax that compile error and allow functions with inferred error sets to not return an error. and then we would need to address the problem of switching on an error code where some of the switch prongs only applied to some OSes

1524083110
andrewrk
this is related to multibuild, which apparently I still haven't typed up an issue for

1524083404
MajorLag
Oh, I see, it isn't a problem as long as I'm explicit about the error set.

1524086160
GitHub141
[zig] andrewrk pushed 1 new commit to master:

1524086160
GitHub141
zig/master ca4341f Andrew Kelley: add --no-rosegment cli option...

1524092306
GitHub148
[zig] tgschultz opened pull request #933: Std.os.time (master...std.os.time)

1524092350
MajorLag
does travis do x86 linux too or just x64?

1524093501
MajorLag
andrewrk: according to process monitor, zig still completely ignores --kernel32-lib-dir and --msvc-lib-dir, it always just looks at `<drive>:\Lib\(null)\<assumed VS path>`. I've had to create reparse points at that location to make it happy.

1524093550
MajorLag
...only it still isn't happy, it just exits silently with code 1

1524093730
MajorLag
`18:19:47.1495265zig.exe11248QueryOpenE:\experimental\VC\BuildTools\lib\x64" --kernel32-lib-dir e:\experimental\VC\BuildTools\umlib\x64"\vcruntimed.libNAME INVALID`

1524093736
MajorLag
that's um... strange

1524093978
MajorLag
ok, so that apparently is because it can't parse the quoted paths correctly. But even without the quotes it fails  (silently, exit code 1), even though now it does seem to be finding everything it is looking for.

