1520208031
_0joshuaolson1
Thankfully, that won't be necessary. llvm-devel did get me Core.h, I just used 'find' wrong too... (sorry). Trying again.

1520208127
_0joshuaolson1
I double-checked - I applied the diff to the right file, and I have /usr/include/llvm-c/Core.h. Same output, though. I have CMake 3.10.1

1520208175
hopppetosse
andrewrk: would it be possible to have both release and debug builds for windows on appveyor?

1520208246
andrewrk
hopppetosse, the debug build of llvm+clang for windows is quite large

1520208301
andrewrk
I think if you need to debug zig itself, it's a fair requirement to build from source

1520208335
hopppetosse
true

1520208575
_0joshuaolson1
Let me try a paste bin this time to show my output:

1520208629
_0joshuaolson1
Not including the logs, but I have them

1520208798
_0joshuaolson1
Maybe relevant: the problem is CLANG_INCLUDE_LIBS, not llvm

1520208879
_0joshuaolson1
Do you know a file I can check for that?

1520209166
_0joshuaolson1
Okay, sorry for taking your time. Installing clang-devel on Fedora does pull in Clang, but gcc was used as I wanted. I'll just make a tiny readme PR again and you can nit it there.

1520209201
_0joshuaolson1


1520209204
andrewrk
_0joshuaolson1, ok the diff I gave you worked, and it found llvm headers. so we just need clang headers

1520209228
andrewrk
did clang-devel  make zig's cmake output work?

1520209241
_0joshuaolson1
Yes, it does work now. But I reverted the diff and it also compiles correctly.

1520209245
andrewrk
oh.

1520209264
_0joshuaolson1
I'll just PR that the 'library' has to include headers (Fedora doesn't think so)

1520209300
andrewrk
just put the word "development" before "libraries"

1520209387
_0joshuaolson1
For LLD too?

1520209535
_0joshuaolson1
Thanks for your patience. PR 808. Have a good one.

1520209539
GitHub118
[zig] 0joshuaolson1 opened pull request #808: Clarify what is meant by 'libraries' (master...patch-1)

1520209593
GitHub187
[zig] andrewrk closed pull request #808: Clarify what is meant by 'libraries' (master...patch-1)

1520209595
GitHub179
[zig] andrewrk pushed 1 new commit to master:

1520209595
GitHub179
zig/master c787837 Joshua Olson: Clarify what is meant by 'libraries' (#808)

1520260285
hoppetosse
MajorLag: I'm still getting that link error, even after specifying the libraries and stdcc

1520260316
hoppetosse
*stdcallcc

1520260424
hoppetosse
I did manage to create a smaller windows.h.zig with WIN32_LEAN_AND_MEAN after andrewrk pointed out I could use an intermediate .h file with all necessary declarations

1520260429
hoppetosse
only about 30k lines

1520260745
MajorLag
Odd. Are you on the latest artifact? That should give a more informative linker error

1520261024
hoppetosse
yep, latest artifact

1520261042
hoppetosse
unless I somehow downloaded the wrong one

1520261054
MajorLag
I'm still using the monstrosity I created without LEAN_AND_MEAN. I've got several hours into cleaning it up at this point. translate-c seems to be unaware that it can't cast between ints and pointers without @intToPtr and @ptrToInt, among about 1000 other little things, like missing macros, intrinsics, and some stuff that is used in assignments but doesn't seem to exist. There's about 140 extern functions that are

1520261054
MajorLag
I that don't actuall seem to exist in any library or dll.

1520261067
MajorLag
and you still just get "error: link error"?

1520261124
MajorLag
Also this is kind of hilarious, it translates `(3*4)` as `(&3)(4)`

1520261145
hoppetosse
hahaha oh my

1520261165
hoppetosse
I'll check my function signatures

1520261292
hoppetosse
actually, now it's error: link failed

1520261375
hoppetosse
With --verbose-link, I get something suspicious

1520261399
MajorLag
that's not much more helpful. Hmm... I wonder what's different? I'm not even linking against anything other than OpenGL that Zig doesn't link behind my back. My build script is just `zig build-exe main.zig  --library "./OpenGL32.Lib"`

1520261517
hoppetosse


1520261526
hoppetosse
I'm not linking with anything either

1520261636
hoppetosse


1520261653
hoppetosse
That's the win32_lean

1520262165
MajorLag
strange... my --verbose-link is identical to yours (plus opengl). I invalidated my zig-cache just to be sure there wasn't something stupid going on there, still built fine.

1520262177
hoppetosse
I think I worked it out

1520262180
MajorLag
what parts of the API are you calling?

1520262183
MajorLag
oh?

1520262194
hoppetosse
It wasn't an issue with the windows api

1520262226
hoppetosse
it was something to do with linking with C

1520262301
hoppetosse
I tried to link it manually, and a few things stood out: I have spaces in the path to my libs, and at some point in my code I was using calloc

1520262359
hoppetosse
I'm not sure where it was going wrong, but I removed the --library c and the call to calloc and it built

1520262390
hoppetosse
also, the output command was lld ...

1520262403
hoppetosse
I had to call with lld-link

1520262457
hoppetosse
also, for some reason, the subsystem was console and not windows, but that fixed itself apparently

1520262581
MajorLag
my subsystem is console, and lld

1520262594
MajorLag
but I don't link with C

1520267846
hoppetosse
MajorLag: It's all working splendidly now, thanks for everything!

1520267986
andrewrk
hoppetosse, appveyor has multiple branches, I think you wanted to grab the llvm6 branch build

1520268019
andrewrk
MajorLag, hoppetosse, I've been slowly adding the important parts of the windows API into std.os.windows as well

1520268053
andrewrk
the nice thing about this is that it doesn't require h file parsing, and if you depend on them you automatically get DLL dependencies of kernel32.dll etc

1520268088
andrewrk
MajorLag, also, zig-cache isn't a cache yet :)  it's just a temp folder where everything in it gets overwritten every time you run zig

1520268104
andrewrk
funny how nobody trusts it just because it has "cache" in the name

1520268124
andrewrk
(I don't blame you)

1520268135
andrewrk
computers have taught us not to trust caches

1520268188
hoppetosse
andrewrk: that's right, I got the wrong branch off appveyor

1520268203
hoppetosse
but it works on the other one, so I'm already happy

1520268276
hoppetosse
andrewrk: I noticed translate-c only chokes on a couple of things when using LEAN_AND_MEAN

1520268311
hoppetosse
An enum that has a negative and a hex literal that mess up when choosing the const type

1520268697
andrewrk
hoppetosse, if you collected a couple small examples and filed issues that would be very helpful

1520268755
hoppetosse
the only reason I haven't is that I'm running a release build and can't really file useful reports

1520269714
hoppetosse
andrewrk: do we still need a debug build of llvm-clang to make a debug build of zig?

1520271770
andrewrk
on windows, yes

1520271856
andrewrk
hoppetosse, why do you need a debug build to find examples of .h files that translate incorrectly?

1520272051
MajorLag
I wish I'd have kept notes on the things translate-c has botched so far, sorry. Offhand: it doesn't realize it needs to use @intToPtr/@ptrToInt, it doesn't know it can't (currently) @ptrCast to a nullable, it tries to negate a literal 0, it thinks (3*4) is a cast, it thinks (CONSTANT - 2) is a cast... lots of things with casting actually, C doesn't make it easy... it doesn't seem to understand 1234UL,  it gives up

1520272051
MajorLag
say I blame it), and it set __FLT_EPSILON to 0.000000000 (doesn't handle scientific notation literals?).

1520272065
hoppetosse
I don't need it to find them, but I do to debug them

1520272110
hoppetosse
It doens't handle multi-line macros very well

1520272179
hoppetosse
I'll make issues for the ones that stood out to me

1520272211
andrewrk
ah I see

1520272224
MajorLag
Still, it did pretty well on windows.h considering how monsterously huge it is and how much weird crap it does.

1520272297
andrewrk
MajorLag, thanks! most of these are fixable

1520273985
hoppetosse
andrewrk: should I make a separate issue for each translate-c failure?

1520274117
andrewrk
hoppetosse, yes please

1520278694
andrewrk
hoppetosse, thanks for the writeups

1520278813
hoppetosse
pleased, I'm just trying to track down a couple more

1520279008
MajorLag
Is there a known issue: comptime struct cannot self-reference?

1520279164
andrewrk
MajorLag, is it this?

1520279251
MajorLag
No, this is a "use of undeclared identifier" error.

1520279284
MajorLag


1520279661
MajorLag
andrewrk re: issue 810: @typeOf(2147483648) is a literal, so we'd end up at the else clause right?: c_int(2147483648) should be an error since max of signed int32 is 2147483647. Unless there's some trickery with c_ types I'm missing.

1520279686
andrewrk
MajorLag, I'm not able to work on it at the moment - can you make an issue for the self-reference thing?

1520279695
andrewrk
duplicate issues are no big deal

1520279734
andrewrk
what's happening in the C code? is it truncating?

1520279904
MajorLag
it's bitcasted. -2147483648

1520280019
andrewrk
ah I see

1520280029
andrewrk
we'll add logic in the generated code from the macro parsing for that

1520280212
andrewrk
MajorLag, thanks

1520281827
hoppetosse
The new pointer reform will be good for translate-c

1520281848
andrewrk
what in particular?

1520281864
andrewrk
pointer arithmetic?

1520281883
hoppetosse
I'm often running into trouble with flexible array members

1520281911
hoppetosse
struct with the last field being a pointer representing an array of runtime defined lenfght

1520282023
hoppetosse
I just think having a cleaner mapping between c and zig is going to help

1520282215
andrewrk
I think you're right

1520282555
hoppetosse
error: array access of non-array type is pretty pervasive

1520282740
hoppetosse
error: array access of non-array type is pretty pervasive

1520282746
hoppetosse
sorry, wrong window

1520287285
MajorLag
hoppetosse , if you or anyone else is ineterested, I wrote a comptime utf8 -> utf16 (no-BOM LE) function for use with windows.

1520288527
hopppetosse
I haven't needed it yet, but sure =)

1520289298
andrewrk
MajorLag, oh sweet, can you post that somewhere? we need that for #534

1520289720
hopppetosse
I haven't needed it yet, but sure =)

1520290510
andrewrk
MajorLag, let me know when your build starts taking > 1 second

1520290532
andrewrk
I need a bigger project to test out optimizations and caching :)

