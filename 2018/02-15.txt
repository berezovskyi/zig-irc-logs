1518663712
MajorLag_
Wooo, more comptime compiler asserts...

1518663792
andrewrk
MajorLag_, are you referring to the latest commit?

1518663795
andrewrk
that was a regression

1518663800
andrewrk
look at the code diff, haha

1518664455
MajorLag_
No, I'm a few commits behind yet. I broke something having to do with a comptime closure and a comptime created empty struct, I think. Windows, so debugging is limited. Have to find a minimal case.

1518666302
MajorLag_
Ok, this is a bit weird. It looks like, if you use the '%' operator with a comptime var... under some circumstances I haven't entirely worked out yet, it throws an unreachable. I think it has to do with the "use @mod or @rem" error, but it actually works depending on context.

1518666703
MajorLag_
Ok, specifically, the comptime var seems to have to be a float, and the other operand an int.

1518667305
GitHub4
[zig] andrewrk pushed 1 new commit to master:

1518667306
GitHub4
zig/master ca597e2 Andrew Kelley: std.zig.parser understands try. zig fmt respects a double line break.

1518667349
andrewrk
MajorLag_, what a delightfully small test case

1518667422
andrewrk
here's a one liner

1518667430
andrewrk
comptime { var x = f32(1) % 2; }

1518668005
GitHub42
[zig] andrewrk pushed 1 new commit to master:

1518668006
GitHub42
zig/master 1c1c069 Andrew Kelley: fix crash when doing comptime float rem comptime int...

1518668011
andrewrk
MajorLag_, fixed ^

1518669489
MajorLag_
Thanks.

1518696302
jfo
andrewrk: my coworker got a mips32 development board and we want to know if he can target it with zig ootb!

1518696308
jfo
~ $ zig targets | grep mips

1518696308
jfo
mipsel

1518696308
jfo
mips

1518696310
jfo
mips64

1518696312
jfo
mips64el

1518708156
andrewrk
jfo, yeah it works out of the box

1518708163
jfo
\o/

1518708203
jfo
it's this one

1518708204
jfo


1518708271
andrewrk
jfo, are you trying to make an OS for it, or run linux on it and then make a zig program for linux on it?

1518708293
jfo
I'm not trying to do anything, I have no idea what he's trying to do

1518708308
andrewrk
well either way zig will work for it

1518708348
jfo
he has no idea either lol

1518708364
jfo
but I guess he'll report back

1518708408
jfo
maybe a packet sniffer

1518714919
GitHub8
[zig] andrewrk pushed 1 new commit to master:

1518714919
GitHub8
zig/master cc26148 Andrew Kelley: fix compiler crash when struct contains......

1518715851
GitHub179
[zig] andrewrk pushed 1 new commit to master:

1518715851
GitHub179
zig/master 5f58809 Andrew Kelley: zig fmt supports simple line comments

1518731841
jfo


1518732853
andrewrk
nice!

1518734814
MajorLag_
andrewrk: re: #760, what use is specifying an empty instance of a struct as a return type?  Or do I misunderstand what is meant by `A{}`?

1518734877
andrewrk
MajorLag_, even if it's not useful, it can still make parsing ambiguous and that's still a problem

1518734943
andrewrk
one more consideration: if we change struct declaration / instantiation syntax, then if, while, for, switch, etc can drop the required parens

1518734961
andrewrk
(and it solves #760)

1518735556
MajorLag_
I guess I'm not getting why it can't error in that case. I mean, what does: fn() A{.x = 1} {...}; even mean? It seems fine to consider the first {} as the fn body and error because it doesn't return and/or there's no `;` between it and the code block or whatever.

1518736508
andrewrk
MajorLag_, it's an error, but it's a confusing syntax error

