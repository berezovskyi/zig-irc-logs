1539503731
jfondren
is there a neater way to perform this trick in Zig?

1539539924
andrewrk
jfondren, you could use an unknown length pointer to get a nearly identical port

1539539979
andrewrk
ah you are using an unknown length pointer. you can use pointer arithmetic

1539539998
andrewrk
oh you are using pointer arithmetic

1539540115
andrewrk
never mind. your code looks fine to me. I would argue that this code is not elegant, although it's not clear to me what it's trying to do

1539540137
andrewrk
e.g. you could just print a hard coded string which is the answer

1539542528
tom1998
Hey!

1539542545
andrewrk
hi tom1998

1539542562
tom1998
I'm trying to link with -framework Cocoa on OSX to link GLFW statically, but that seems to segfault the compiler

1539542574
tom1998
I'm linking dynamically just fine, but anyone else had issues with this?

1539542587
tom1998
Hey andrewrk, back with the questions;)

1539542640
andrewrk
the next step to troubleshoot this is for me to try to reproduce the problem on osx, or for you to use a debugger and provide a stack trace

1539542887
tom1998
I can run it through valgrind?

1539542900
tom1998
oh no wait, i don't even have that

1539542922
tom1998
not even sure valgrind is available on osx, i'll run it through gdb when i get back if that's an option(??)

1539542934
andrewrk
in my experience lldb works best on macos

1539542949
tom1998
That'll be the one then, never really used it!

1539544090
tom1998
Hey, whilst I'm here, how can I define a package?

1539544120
tom1998
It's not really documented anywhere AFAIK, but I want to be able to define a folder as a package and have it be importable from  anywhere else

1539544141
tom1998
Seems(?) like the way to do this is to make it a 'package'?

1539544174
tom1998
Is it just, pkg-begin "pkg-name" "folder"?

1539544459
tom1998
Oh, for future reference, it's pkg-begin "pkg-name" "folder/index.zig", then pkg-end - why the need for the pkg-begin and pkg-end, what can i put in the middle here?

1539544483
andrewrk
more --pkg-begin arguments

1539544492
andrewrk
it's a tree structure. consider that your dependencies can have dependencies

1539544519
andrewrk
are you using zig build?

1539544567
andrewrk
if you are look at this example:

1539544652
tom1998
no, just a makefile, i'll have a look

1539544676
tom1998
So, it builds a separate binary then links it? So i can have --library flags for that specific package?

1539544847
andrewrk
never mind. if you're using a makefile then use --pkg-begin / --pkg-end

1539544902
andrewrk
it's not "folder", it's "path to the root file of the package"

1539546721
tom1998
andrewrk: Any notion of a tuple, or construct that could be similarly useful?

1539546736
andrewrk


1539546752
tom1998
whew, fast on that link, get asked that a lot?;)

1539546814
tom1998
I want to make an iterator that iterates over tuples

1539546850
tom1998
I can use an array of *u8 and just ptrcast, but that's pretty horrible as a commonly used API

1539546896
tom1998
I've looked at ArrayList.Iterator, and found it returns an ?T - you can then use while(iter.next()) |item| {}, which is cool

1539546900
tom1998
how does this work with named return types

1539547234
tom1998
Oh sorry, I didn't read far enough, I see the tuples proposal was accepted

1539558195
daurnimator
Hi all, I just found zig; you seem to have made the same mis-steps as go and rust. From what I've read so far, it's actually usable as a systems programming language with the potential to replace C

1539558211
daurnimator
uh to

1539558227
daurnimator
andrewrk:

1539558233
daurnimator
gah, sorry

1539558233
andrewrk
I was gonna say, damn you're coming in here and laying down the law

1539558236
andrewrk
hahaha

1539558305
daurnimator
andrewrk: I'm just reading through the manual now

1539558323
daurnimator
curious if you have builtins that provide details on bitfields?

1539558360
andrewrk
are you talking about reflection?

1539558381
andrewrk
ah yes bit fields are not documented yet:

1539558463
daurnimator
not necessarily for a packed struct. e.g. what if I want to expose a bitfield directly to some C function. I'd love a way to pass along "this char* pointer; this shift; this mask"

1539558475
andrewrk
you want to pass that along to C?

1539558518
andrewrk
you can do that by using @typeInfo on a pointer type and then passing the data to a C function

1539558521
daurnimator
yeah. e.g. if you wanted to expose a bitfield to some other language via the C ABI.

1539558570
andrewrk
right now the bit field information is missing from @typeInfo but there's an issue to add it

1539558590
daurnimator
andrewrk: ah ha! I was scanning for it in

1539558635
andrewrk
the type of a bit field pointer has extra metadata like this:  `*align(2:3:2) const u32`

1539558820
daurnimator
FWIW I'm about half way through the manual and have seen the `test` syntax a lot; yet it hasn't been introduced. not sure if you want to bring it earlier in the manual? or at least link to it? (or maybe I just missed links)

1539558869
andrewrk
daurnimator, good point. I think the langref should mention it directly after Hello World

1539558886
andrewrk


1539558986
daurnimator
infact values are introduced before structures/syntax. that's probably a good thing, but probably need to forward reference some things; and use a very limited subset of syntax while introducing values

1539559009
daurnimator
on the other hand, this is a reference manual. I'm probably incorrectly using it as a no-bullshit "getting started" guide

1539559144
andrewrk
it's intended to be both, but due to the nature of the changing language, it won't always succeed at both of those goals until the language is stabilized and I do a final audit

1539559165
wirelyre
I'd be interested in a small code sample with hyperlinks on each syntactic element to the appropriate section

1539559166
daurnimator
misc note: using "dot products" to define "dot syntax" is a little confusing.

1539559176
wirelyre
Just as a quick reference

1539559365
wirelyre
andrewrk: I found issue #1535, "create a linker" today and wanted to ask what the scope of that would be

1539559406
wirelyre
e.g. would

1539559465
andrewrk
wirelyre, all

1539559513
daurnimator
:( no opt-in fall through in switch

1539559658
daurnimator
while as an expression returning values is odd... I've seen languages with it before (e.g. coffeescript) and it's usually ended up introducing bugs or slowness more than it's been helpful

1539559706
wirelyre
how would that interact with linker scripts? would this require a full implementation of them?

1539559881
andrewrk
wirelyre, yes it would\

1539560335
daurnimator
In the malloc bit of

1539561242
daurnimator
Where is truthyness defined? I'm not sure if `0` is considered false or true? -> is it narrowed to bool? That doesn't seem to match the implicit casts section....

