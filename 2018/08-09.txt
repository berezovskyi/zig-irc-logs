1533774484
unique_id
I really like doing "if (comptime expr)" instead of "if (expr)" to highlight the comptness of the branching when the if statement isn't top-level. It's awesome that I can just do that.

1533774911
unique_id
The branching is unecessary though. I have a field in a struct that's sometimes the void type, so I comptime branch to skip setting it, but I might just let the compiler remove the code instead! void is really cool

1533775569
scientes
unique_id, I agree, its like #ifdef HAVE_EXPR

1533786843
scientes
how do i zero-initialize something?

1533786889
scientes
*a struct

1533786893
scientes
is there a shortcut?

1533786917
scientes
nvm

1533792356
kristate
scientes: var s: myStruct = undefined;

1533811425
unique_id
kristate: that does not zero initialize the struct. It doesn't initialize it to anything.

1533811591
unique_id
scientes: I know you said nvm but just in case... You'll have to do "= undefined" and then @memset(...) or maybe there's some std function as well.

1533811748
MajorLag
There is no simple way to zero initialize a struct. I wrote a computime utility function for it:

1533812102
unique_id
cool, and I just noticed that @memset isn't recommended. A for loop is better like you did.

1533831728
kristate
hi back online

1533844797
hooo
how long until 1.0?

1533847921
andrewrk
hooo, 2 years

1533847958
andrewrk
I'm streaming in 8 minutes:

1533848256
unique_id
excellent

1533858482
unique_id
andrewrk: Do you not want to start with OpenGL and then you or others can port later to vulkan? It seems like vulkan could be an enormous distraction and could also cause streaming problems. Even with validation layers you could have issues with your system becoming unresponsive / it being difficult to shut down your program. Vulkan is also so low level that it might not make sense for 99% of the apps to write directly in vulkan.

1533858624
unique_id
Take a look at

1533858640
unique_id
so something like sokol might be ideal in the future

1533858714
unique_id
The guy that wrote sokol wrote an interesting post about "One Year of C" (having been a C++ programmer). Notice a pattern? :) -

