1523066704
MajorLag
because of the limitations of comptime, even FixedBufferAllocator isn't really very useful. For instance, you can't use ArrayList at comptime.

1523069845
andrewrk
Oh that's right. Allocator depends on @ptrCast. That's one reason I want to make it work at comptime

1523069898
andrewrk
There's a problem though - types that don't have a guaranteed byte layout, such as structs

1523073656
MajorLag
It is possible to get an instance of type `(block)` into a variable. This doesn't appear to have any useful implications, I just thought it was interesting.

1523076589
Braedon
Hey all, hows it going :)  Just want to gather a little more opinion on locales, currently I'm planing to use CLDR (the official unicode repository of data) and at compile time downloading the relevant files and baking that information into the application

1523076604
Braedon
Though only doing it for the locales that the user requests in their build.zig

1523076704
Braedon
Which of course they could select all of them :), then lets say they select 'tr-TR' they would get information like `locale.getLocaleByTag("tr-TR")` which is a compile time function only :)

1523076785
Braedon
If they wanted to do a generic any tag kind of solution they would have to import all locales in their build.zig file which would of course bloat the binary a little then they would have to call the function `locale.getLocaleByTagRuntime(tagName)`

1523076847
Braedon
Locales will have effectively the same information as the 'defaultLocale' which can be loaded in by well `locale.getDefault()` or `locale.getCurrent()` (since default != current in all circumstances), but that doesn't require baking (though it would for some functions such as toUpper/toLower)

1523077001
Braedon
Side note: locales like Ascii and the Full unicode which really are not 'locales' but just kind of piggy back on the system to get functionality desired like doing an ascii locale would be used for archaic systems are baked without user input, since they will also often be used for the generic functions like `atoi` which are dependent on locale :)

1523097351
abique
Hello

1523097674
abique
I did not understand well how the namespace works in zig

1523097680
abique
Does zig have namespace?

1523098602
tiehuis
is this in regards to imports or just if you can namespace things in a file, like C++ namespaces?

1523098698
tiehuis
you can pretty much do namespaces by just using a struct and not defining any member functions/variables

1523098843
tiehuis
have an INFLATE implementation working by the way

1523098865
tiehuis
just doing some round-trip testing against zlib but will probably finish that tomorrow

1523098888
tiehuis
spent an hour wondering why it wasn't seeming to work and it turned out I was using a wrong test vector

1523099199
abique
Thank you for the struct info

1523099242
abique
But the drawback of using a struct for namespace is that you can't have many files into the same namespace

1523099268
abique
If you take in c++ for example std is defined in many places and can be extended in new files

1523099276
abique
But you can't do that in zig right?

1523099299
tiehuis
no, not like that

1523099347
tiehuis
although, you can re-export multiple files into the same namespace and link different files into the same namespace

1523099371
tiehuis
if you look at the std library, it does this a lot with all the `index.zig` files

1523099484
tiehuis
this does have the advantage over c++ namespaces in that it's just a tree all the way up so if you wanted to scan sub-dependencies of imported files you just need to follow the imports

1523099718
abique
cool

1523100452
abique
tiehuis: what stage is currently zig?

1523100469
abique
is the language more or less finished?

1523100482
abique
and only the standard library remains

1523100499
abique
or you expect that the language will change a lot until version 1.0?

1523100548
tiehuis
no, i still think there are various things that we want to be solved, definitely best to ask andrewrk this

1523101075
abique
I'm looking for a new langage, tired of C++, I don't understand rust at all but zig still seems early stage..

1523101401
abique
By the way

1523101407
abique
I did not find vector type

1523101433
tiehuis
that is named ArrayList

1523101434
abique
I mean like llvm's vector type

1523101443
abique
so you can do SIMD

1523101449
abique
For math

1523101457
tiehuis
oh, simd hasn't really been looked at as far as I'm aware

1523101492
abique
Make it a priority

1523101506
abique
Also LLVM already provides everything you need

1523101525
tiehuis
yeah, i'd like to try a few things with it at some point and have seen the llvm support

1523101543
abique
you just have to expose the llvm vector type :)

1523101545
tiehuis
i'll make an issue now to make a note and get any discussion going

1523101573
abique
Great :)

1523101721
abique
how many people are developing zig?

1523101771
tiehuis
a few people somewhat actively maybe, ~6-7 with regularity?

1523101821
tiehuis
that's just on the compiler stuff, there are others who are writing their own projects which also helps in figuring out use-cases/bugs etc

1523101911
abique
Who's behind this project? Is there any company?

1523101929
tiehuis
not that I'm aware, it was started by andrewrk

1523101957
abique
And most of you are in America / Europe ?

1523101989
tiehuis
most are i think, although im not

1523102931
tiehuis
made an SIMD issue here:

1523102951
tiehuis
it is pretty barebones at the moment since it's late and i don't write much simd

1523102971
tiehuis
if anyone is more familiar and/or has some strong opinions then post any discussion there

1523103048
abique
ok

1523111348
raytracer[m]
andrewrk: I was able resolve my problem with smallpt(

1523111387
MajorLag
Something strange is going on in debug mode. I had a similar issue, but it only seemed to affect win32.

