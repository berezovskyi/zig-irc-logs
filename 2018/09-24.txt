1537781859
dec05eba
what is the correct way to use zig libraries in another zig project? using zig build-lib and then @cInclude for the generated header file / using extern and defining external symbols?

1537781897
dec05eba
or is there a way to include another projects build.zig file or something like that

1537784883
Hejsil
dec05eba, Currently, addPackagePath is the best way to accomplish this. Example:

1537785124
dec05eba
i see that one file is included from each library, for example lib/blz/ also has other files (build.zig, a c file). How does that work? does it only use the file you add and then you need to add every file from another project or does it somehow use all files in that library?

1537785348
Hejsil
The c files and build.zig are only there as reference, as blz.zig is a port

1537785420
Hejsil
If you look in Zigs std folder on git then there is an "index.zig", which just @import all other files on the folder. That way, Zig can just point to index.zig for the whole Zig std library

1537785449
dec05eba
yeah i just noticed that, thanks for the example :)

1537785455
Hejsil
Np

1537798494
andrewrk


1537798989
Jenz
How come zig is on the llvm release notes?

1537799032
andrewrk
Jenz, all it takes to get on there is to support the latest llvm when they release and send a patch to the release notes

1537799107
Jenz
Oh, haha, sure

1537799216
Jenz
Apart for the first part

1537800078
wink_
Jenz: What technique did you use to get zig running on Arch? I believe you mentioned a AUR package, I looked but didn't find it. Also I did create some instructions on how I created it from source,

1537800137
andrewrk
wink_,  did the instructions from the wiki not work for arch?

1537800393
wink_
I had chose to build llvm from source since its not in the Arch Distribution and I'd already created mkllvm-tool-chain. (Of course I had to tweak mkllvm-tool-chain as I was only building the static libraries and zig wants the dynamic libraries which I wasn't building)

1537800430
andrewrk


1537800770
wink_
The posix instructions doesn't say where to ge the sources, now that I look at it again I see they are in the Windows Setup instructions (

1537800818
Jenz
wink_: Do you

1537800847
wink_
Generally, yes when I have a choice.

1537800879
wink_
Jenz: did you use the instructions from the wiki?

1537800922
Jenz
No, I just went ahead and made a pkgbuild to install the latest master build from

1537800978
wink_
Ok, I'll give the instructions a try then.

1537801216
wink_
One of the problems I had was I could only get things to work with clang with gcc zig wouldn't compile (

1537801240
andrewrk
you have to use the same compiler to build llvm, clang, and zig

1537801251
andrewrk
this is a limitation of C++

1537801337
wink_
I was trying to, he says without a lot of confidence :)

1537801366
Jenz
Im pretty sure you said almost exactly those two sentences a the other day andrewrk

1537801372
Jenz
s/a //

1537804072
keveman
Made it all the way to the end of documentation :) Liking what I am seeing..

1537804127
keveman
But I am quite intrigued by the grammar specification near the end.. what "language" is it specified in?

1537804175
keveman
I was able to grok things like `many`, `option`, and `list`

1537804241
andrewrk
keveman, it's pseudo code syntax that I made up just to help myself code it

1537804265
andrewrk
not intended to be consumed by machines, although I think somebody did do that

1537804271
keveman
but I couldn't understand something like 'CompTimeExpression(body) = "comptime" body'

1537804274
keveman
ah ok..

1537804292
andrewrk
oh, yeah... thejoshwolfe contributed that particular syntax and tbh I don't really understand it either

1537804302
andrewrk
bottom line is that the parser is recursive descent

1537804305
keveman
but in the above, what does `body` stand for?

1537804329
keveman
hmm ok.. just pedantic musing on my part..

1537804354
andrewrk
I think it's supposed to communicate that state about the expression body is passed to the function that parses comp time expressions? I'd have to look at the parser code to refresh my memory

1537804634
keveman
forgive me for not doing my due diligence of going over github issues, but bitfields in structures and multidimensional arrays are not in yet?

1537804668
wink_
andrewrk: I followed the instructions on the wiki on my Arch box and successfully compiled llvm and clang but failed zig exactly the same way as it did with my instructions when using gcc 8.2.1:

1537804673
andrewrk
looks like `packed struct` docs aren't done yet. packed structs provide bit fields

1537804693
andrewrk
multidimensional arrays can be made by having the type of an array be an array, just as you'd expect

1537804707
wink_
home/wink/local/include/llvm/ADT/SmallVector.h:313:11: error: ‘void* memcpy(void*, const void*, size_t)’ writing to an object of type ‘struct std::pair<void*, long unsigned int>’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]

1537804708
andrewrk
[3][4]i32

1537804739
andrewrk
wink_, what compiler version is that?

1537804777
wink_
which compiler zig, clang, gcc?

1537804785
wink_
gcc is 8.2.1

1537804798
andrewrk
this commit should have fixed that:

1537804831
andrewrk
what file was it trying to build when that error happened?

1537804953
wink_
I happen to be on my remove-StrLitKind-enum which is on top of master a170a64776e703a8549e5ef16cc6009b642b617e

1537804967
wink_
and 9a123697 is there

1537805004
wink_
the file is home/wink/local/include/llvm/ADT/SmallVector.h:313:11 see above

1537805036
wink_
0h you ment zig file one second

1537805074
wink_
from /home/wink/prgs/ziglang/zig/src/zig_llvm.cpp:18:

1537805109
andrewrk
ah, I see. We need to add gcc 8 detection in CMakeLists.txt. unfortunately c compilers don't let you disable future warnings on older versions

1537805131
wink_
LOL

1537805206
andrewrk
maybe there's a pragma that can disable warnings in the llvm includes

1537805281
andrewrk
wink_, can you see if it's possible to wrap the llvm includes at the top of zig_llvm.cpp with some kind of pragma to disable warnings?

1537805289
andrewrk
we want warnings for all zig c++ code but not from LLVM C++ code

1537805320
wink_
k

1537805369
andrewrk
maybe this:

1537805424
andrewrk
or maybe the next answer, with gcc 8 detection

1537807232
wink_


1537807302
wink_
Yep, that's what I did.

1537807352
andrewrk
wink_, brilliant. if this passes the MSVC build then I'll merge it pronto

1537807363
wink_
SG

1537807364
andrewrk
much appreciated

1537807368
wink_
NP

1537807439
wink_
So some suggestions on the wiki:

1537807441
wink_
Move the Setup instructions out of the Windows section

1537807483
wink_
Suggest using -jX when building

1537807608
wink_
And rename the link "Download llvm and cfe" to "Download llvm and clang"

1537811988
Jenz
andrewrk: At the localhost presentation (which was great btw), did you use neovim-qt?

1537812004
andrewrk
Jenz, I believe that is simply `vim -g`

1537812112
Jenz
I don't get what you mean Dx, do you mean you used gvim (vim -g)? Or do you mean that neovim-qt is vim -g, which I assume you don't

1537812152
Jenz
Sorry if Im a bit of an idiot, everyone are so at times, I believe

1537812183
andrewrk
I use gvim

1537812201
Jenz
Ok, thanks :)

1537825094
cgag
andrewrk: is the std.heap.directallocator not a general purpose allocator?

1537827587
andrewrk
cgag, it would be a bad fit for that for two reasons - 1. it's slow - you'll make a syscall for every allocation and every free, and 2. it's inefficient with memory - you're going to waste up to 1 page of bytes with every allocation

1537829523
MajorLag
That last part is only true of the POSIX implementation.

1537830021
andrewrk
oh that's interesting - HeapAlloc is fit for general purpose use?

1537830033
andrewrk
that's good to know

1537830077
MajorLag
Well I'm not sure about the cost of calling it, but I can assure you it packs allocations more efficiently than one per page.

1537830129
andrewrk
if we have a GPA in std it'll probably still be worth using it on windows, because it could, at least in debug mode, do lots of memory debugging features

1537830152
andrewrk
stack traces for leaks, corruption detection, analysis of performance, all that good stuff

1537832560
andrewrk
does anyone want to add their project to the "List of Active Projects Using Zig" section in the release notes? You have until thursday to submit PRs

