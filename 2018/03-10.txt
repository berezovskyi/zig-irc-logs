1520643668
GitHub194
[zig] jacobdufault opened pull request #824: [WIP/NOTREADY] WIP json metadata (master...wip-json-render)

1520644523
jacobdufault
andrewrk: don't spend too much time looking at the PR yet, just have a question w.r.t. it ^

1520644558
jacobdufault
I'll probably have some time to play around with it more this weekend

1520654833
jacobdufault
oh, let me know if you have comments w.r.t. how json is emitted, I was not planning on changing that any more

1520663172
GitHub133
[zig] AndreaOrru pushed 2 new commits to master:

1520663172
GitHub133
zig/master 70c3008 Andrea Orru: Added 6 parameters syscalls for zen

1520663172
GitHub133
zig/master f25c1c6 Andrea Orru: Fixed syntax errors in linux-i386 syscalls

1520663950
GitHub150
[zig] andrewrk pushed 5 new commits to master:

1520663950
GitHub150
zig/master 61a02d9 Andrew Kelley: omit pad zeroes in debug stack traces

1520663950
GitHub150
zig/master 20011a7 Andrew Kelley: add behavior test for coroutine frame allocation failure

1520663950
GitHub150
zig/master 60b2031 Andrew Kelley: improvements to stack traces...

1520698183
MajorLag
Have I mentioned lately how much I like error handling in Zig? Because it's really making my code a lot simpler than exceptions ever did.

1520710648
GitHub186
[zig] andrewrk pushed 1 new commit to master:

1520710648
GitHub186
zig/master 6288ad8 Andrew Kelley: change 5 to 6 in travis osx scripts

1520712119
aiwakura
const link = "link";

1520712120
aiwakura
const ElementList = IntrusiveLinkedList(Element, link);

1520712129
aiwakura
andrewrk, do we still need to do this?

1520712140
aiwakura
I thought we were caching string literals

1520713274
GitHub37
[zig] AndreaOrru pushed 1 new commit to master:

1520713275
GitHub37
zig/master 152b408 Andrea Orru: Simplify intrusive linked list test

1520713277
aiwakura
^ yes

1520716276
MajorLag
andrewrk, think I found a compiler bug that isn't comptime or involving pointers for a change. I have a function that returns `!?[]const u8`, the only condition within it under which an error is thrown is a `try` statement. Compiler tells me I have to return at least one possible error.

1520716334
MajorLag
If I take `!` out of the type, it complains that it expected `?[]const u8` but found an errorset.

1520716465
GitHub108
[zig] AndreaOrru pushed 1 new commit to master:

1520716466
GitHub108
zig/master 10fb1f2 Andrea Orru: Merge branch 'test-ci'

1520716824
MajorLag
I think the actual problem is in parsing the return type. if I change it to `error!?[]const u8` it seems happy with it

1520719239
tiehuis
brought the freebsd branch back up to date, hello world compiling and running again

1520723351
MajorLag
ugh, freaking comptime. iterator works perfectly fine at runtime, infinite loops if it is called at comptime.

1520723404
MajorLag
from what I can tell, the compiler runs the next() function exactly once, then caches the value for every iteration of the loop.

1520723495
MajorLag
this took a while to track down, because the orignal error being reported was `cannot asign to const`, which occurs when it overruns the comptime buffer it is writing to.

1520724219
GitHub37
[zig] andrewrk pushed 1 new commit to master:

1520724220
GitHub37
zig/master 5bc4f1e Andrew Kelley: xml2 workaround is relevant for linux too

