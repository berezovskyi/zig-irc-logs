1544322316
mpiannucci
Hey has anyone managed to cross compile for iOS? I have been working through by trying to fix compiler issues as I go, but wanted to see if anyone else has any tips or has attempted it.

1544323585
scientes
just like that Duch...gone

1544325129
ibebrett
can anyone give me some insight on whats wrong with:

1544325132
ibebrett
fn formatDigit(byte: u8) u8 {   return switch(byte) {     u8(0) => '0',     else => 'x'   }; }

1544325152
ibebrett
i keep getting:  error: unable to infer expression type

1544325213
ibebrett
This does compile: fn formatDigit(byte: u8) u8 {   return switch(byte) {     else => 'x'   }; }

1544334804
ibebrett
is there an issue using the c allocator within a test

1544335560
ibebrett
i think it was just that i didn't add the c library as a dependency for the test step, the error message was something about there being two _start symbols though

1544335573
ibebrett
is it possible that linking c changes the zig compilers entry point?

1544335656
scientes
ibebrett, yes, if you link with libc you need a int main

1544335667
scientes
but otherwise zig provides a _start

1544335678
ibebrett
so i think the "test" step

1544335681
scientes
(at x80 on x86)

1544335689
ibebrett
maybe it could be a nicer error message

1544335695
ibebrett
for linking the builder "test" stuff

1544335711
ibebrett
instead of ilke "undefined symbole malloc"

1544335718
ibebrett
i got two _starts

1544335728
scientes
yeah you should report that as bug

1544335759
scientes
tests generally use the test allocator

1544335763
ibebrett
ah

1544335767
scientes
but tests really should support libc linking too

1544335772
ibebrett
that also, would have been good to know lol

1544335775
ibebrett
but yeah, ill report it anyway

1544335810
scientes
yeah you have to read code to get documentation of stuff not part of the language

1544335824
scientes
actually tests

1544335845
scientes
*undocumented

1544335894
scientes
see

1544335923
scientes
yeah you want the debug allocator

1544335934
scientes
which is just a static single allocation of memory

1544335936
scientes
very simple

1544336022
ibebrett


1544336062
scientes
Oh, so it works if you link to libc?

1544336081
ibebrett
yeah

1544336167
scientes
oh

1544379573
ibebrett
got an error:  ../zig/build/bin/zig build test zig: /home/brett/w/zig/src/ir.cpp:18694: IrInstruction* ir_analyze_instruction_slice(IrAnalyze*, IrInstructionSlice*): Assertion `ptr_type->id == ZigTypeIdPointer' failed. The following command terminated unexpectedly:

1544379598
ibebrett
this to me seems like a bug?

1544387038
unique_id
ibebrett: Yep, that's a bug. As I understand it, not all of these kinds of bugs will be fixed in the current compiler. Rare edge cases that don't matter will be fixed in the self hosted compiler (written in Zig). The current compiler will later be used just to compile the self hosted one. You can file a bug report and it'll either get fixed or at minimum be used as a test case for the self hosted compiler.

1544387087
unique_id
I used to come across a fair bit of these assertions, now I don't.

1544387215
unique_id
Of course if it's code that should compiler, that's a different story

1544387220
unique_id
compile*

