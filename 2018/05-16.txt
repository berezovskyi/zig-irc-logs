1526429069
darithorn
when I try to define a function pointer type that has a generic return `T` the compiler complains that T isn't defined

1526429301
darithorn


1526432871
andrewrk
darithorn,  you can only have generic function pointers at comptime

1526433050
darithorn
that's what I figured but it still fails to parse, because if you do `const foobar = foo;` in my snippet it compiles fine

1526433093
darithorn
but once you specify foobar's type so that the compiler parses the function pointer it gives that error

1526436705
GitHub43
[zig] andrewrk pushed 1 new commit to master:

1526436705
GitHub43
zig/master 492a214 Andrew Kelley: std.fmt.format: support {B} for human readable bytes

1526440734
MajorLag
binary definitions without using the binary prefix? Is Zig taking a hard stance against SI?

1526442228
andrewrk
MajorLag, did the first part of your question get cut off?

1526442234
andrewrk
what's SI?

1526444882
GitHub92
[zig] andrewrk pushed 1 new commit to master:

1526444883
GitHub92
zig/master ee5f9ff Andrew Kelley: zig fmt: add comma on last switch prong

1526469789
MajorLag
Sorry, what I mean is, your "bytes" code uses the binary units for K/M/G (orders of 1024). SI, the international system of units, specifies that K/M/G are strictly decimal (orders of 1000), and Ki/Mi/Gi are to be used for the base 2 unit definitions. There's a segment of the population that vehemently opposes this for some reason.

1526479494
GitHub35
[zig] BraedonWooding opened pull request #1014: [Documentation] Add Error Union Documentation and ArgType (master...patch-3)

1526480970
andrewrk
MajorLag, wow, I didn't know about this. thanks

1526481119
andrewrk
MajorLag, this will require some thought. It seems that the situation has a lot of ambiguity

1526481133
andrewrk
what do you think the ls command uses when you use -h?

1526481216
andrewrk
it uses the "decimal" prefix but it's actually the base 2 value

1526481235
andrewrk
sorry that wasn't rhetorical - I didn't know when I asked, and then I tested to find out

1526481540
andrewrk
MajorLag, anyway I think we can support both. Perhaps with {B} and {Bi}

1526484695
bodie_
+1 for Ki/Mi/Gi because they're totally unambiguous

1526485529
bodie_
that said, everyone knows what a KB is

1526485550
bodie_
(unless you're pricing by the KB...)

1526485694
andrewrk
bodie_, when you say everyone knows what a KB is, are you saying everybody knows to follow SI, or everybody thinks it is 1024 bytes?

1526485703
andrewrk
unfortunately it's ambiguous

1526485745
bodie_
I would say everybody using a programming language thinks of byte magnitude prefixes as powers of 2

1526485778
andrewrk
are you in favor of this?

1526485954
bodie_
I'm not sure how these prefixes are supposed to be used andrewrk

1526486008
bodie_
ok, I'm looking at the merged code now

1526486049
pancake_
hi

1526486172
bodie_
andrewrk, if that's specifically for

1526486240
pancake
its my first time here, this sunday i cloned the repo and played a bit with Zig from git, read some docs and played a bit with some hello worlds.

1526486291
andrewrk
bodie_, output only

1526486294
pancake
just to say that i'm really happy to see all the ideas behind this language, because it seems like the first real replacement for C

1526486301
andrewrk
hi pancake

1526486378
pancake
i have some questions, but i saw the project is really active and moving forward

1526486451
pancake
do you have any release schedules or plans?

1526486466
pancake
like milestone plans or fixed time releases like rust?

1526486485
pancake
personally i'm using fixed time releases and i think it's a good option

1526486521
pancake
mainly because i tried with brew first, but 0.2 lacks a lot of things that are already in git

1526486801
darithorn
zig is really good about being able to compile straight from the master branch

1526486819
darithorn
so you don't need to wait for an official release to try out the new features :)

1526486825
bodie_
I like how easy the build process is :D

1526486848
bodie_
I don't know why it's so hard for so many projects to get build right

1526486951
andrewrk
pancake, every issue has a milestone attached to it. until 1.0.0 we're coordinating with LLVM's release schedule. so 0.3.0 will be 1 week after llvm 7

1526487000
andrewrk
for windows and linux, there is a statically linked release of master branch automatically built by CI

1526487569
pancake
bodie_: well i was expecting a shellscript to find and set all the llvm environ for me

1526487575
pancake
because im on mac and that's pretty standard environment

1526487591
pancake
andrewrk: ah good to know

1526487618
pancake
i also liked the pkgmanager discussions, taking ideas from swiftpm

1526487619
bodie_
I think YouCompleteMe actually uses a local clone of llvm or something like that

1526487630
bodie_
as a submodule

1526487639
pancake
im afraid of the abuse of @...

1526487675
pancake
like a sinkhole for everything that doesnt have a place, but i found many useful ones, as well as many undocumented ones

1526487688
pancake
the toolings i missed (but maybe they exist) is 'fmt' and 'doc'

1526487708
pancake
something like go doc would be great, as well as a source formatter

1526487777
pancake
are there plans for that?

1526488227
MajorLag
andrewrk, re: SI units. It's my opinion that since the prefixes Kilo, Mega, Giga, etc are well understood to be base 10 in every domain except computing, they should always be base 10. The only reason people seem to think otherwise is tradition. IEEE 1541-2002 defines the prefixes in base 10 as of 2005.

1526488501
andrewrk
MajorLag, I think that's a pretty good argument

1526488567
andrewrk
pancake,

1526488629
bodie_
it's just also a fact that convention is also a real thing, and weighs heavily on the "mega = power of 2 in computing" end of the scale

1526488631
andrewrk
oh and we have zig fmt now

1526488647
andrewrk
I didn't add a subcommand to the c++ compiler yet, but the self hosted compiler supports `zig fmt`

1526488667
bodie_
nice

1526489203
MajorLag
Linux kernel uses binary prefixes in boot messages, OSX (as of 10.6) uses SI units correctly, IEEE, SI, NIST, and ISO all agree on the terminology. Sticking to a foolish "convention" is not a good argument in my opinon.

1526489562
MajorLag
So my 2 cents is that `{B}` should be base 10 and use suffix `XB`, and something else, like `{Bi}` should use base 2 and suffix `XiB`.

1526489930
bodie_
my point was simply that a lot people mean Ki when they say or write K.

1526489940
andrewrk
I think you are both correct

1526489953
MajorLag
That's true, and as the comment in 1015 suggests it's something that needs to be addressed for input

1526489954
andrewrk
and so far everybody agrees with #1015

1526495360
kola
hiya

1526496182
andrewrk
hi kola

1526500639
js123
hey, I'm trying to run the bignum benchmark on windows, using the newest artifact. I get 'Unable to determine vcruntime path. --msvc-lib-dir' despite having ms visual studio installed. what am I missing?

1526500677
js123
using --msvc-lib-dir "C:\Program Files\Microsoft VS Code Insiders" doesn't help

1526500713
js123
I'm not a experienced windows dev, using OpenBSD most of the time. Any help would be appreciated

1526500996
andrewrk
hi js123

1526501033
andrewrk
hmm does the bignum benchmark even depend on libc?

1526501053
andrewrk
oh yeah it does

1526501101
js123
even if it doesn't, would be nice to be able to use the stdlib any way :)

1526501133
andrewrk
can you provide any more information about your system? windows version, msvc version

1526501138
andrewrk
this might need to be a github issue

1526501143
js123
oh, are you certain that I need mscv 2015? I installed 2017...

1526501145
andrewrk
zig is supposed to read the windows registry to find MSVC

1526501158
andrewrk
I haven't tested with 2017 yet. when I tried that, LLVM didn't build

1526501189
andrewrk
I'm sure that we can make it work with 2017. it's just going to take someone to figure out how exactly to query the system to detect it

1526501215
js123
it should be backwards compatible, so I guess it should work

1526501238
andrewrk
you can try doing the CLI args to help zig find it. you'll need to specify all 4 of them

1526501284
andrewrk
--libc-include-dir  --libc-lib-dir  --libc-static-lib-dir  --msvc-lib-dir --kernel32-lib-dir

1526501300
andrewrk
finding libc is a nightmare. I don't know who decided libc installation needed to be this complicated

1526501322
andrewrk
(I said 4 and actually there were 5 )

1526501347
andrewrk
see zig's --help menu for descriptions of these args

1526501361
andrewrk
for each one there should be a particular file you can locate on your system to verify you've found the correct directory

1526501403
js123
well I'm reading os.cpp right now and you are using a hardcoded registry string

1526501409
js123
mine is different to that

1526501449
js123
btw. do you know how much of this possibly a gazillion gigabyte msvc I have to install?

1526501464
js123
there are a ton of options and I have no idea what is needed.

1526501499
andrewrk
probably the minimal options

1526501549
andrewrk
what's different on your system? I would love to get os.cpp patched up in a way that works on your system

1526501649
js123
line 1290: "SOFTWARE\\Microsoft\\VisualStudio\\SxS\\VS7" is nowhere to be found on my machine, its probably somewhere in "Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\14.0\"

1526501671
js123
don't mind the unescaped \

1526501728
andrewrk
14 is 2015

1526501752
js123
visual studio on my machine says 17

1526501781
andrewrk
sounds like we should additionally look in the path you described

1526501836
js123
I'd like to test that first. my vcruntime.lib is in C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\lib\amd64

1526501855
js123
that is the file zig is looking for if I read os.cpp right

1526501996
js123
maybe

1526502473
js123
ah, found Computer\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\SxS\VC7

1526502587
MajorLag
@js123, I'm using a not-installed version of MS Build Tools and it's still just over 1GB. MS does not make it easy to be minimalistic about its dev environment.

1526502656
js123
MajorLag: absolutely. its a pain tbh. I'm poking in the registry and looking at os.cpp to find out what the problem is that I have

1526502837
andrewrk
js123, nice, maybe we can simply add that as an additional search path

1526502846
andrewrk
are you on 32 bit windows?

1526502854
js123
no, windows 10

1526502861
js123
I think its only 64 bit

1526502872
andrewrk
I wonder why "WOW6432Node" is in the path

1526502892
js123
what registry key are we looking for exactly?

1526502895
MajorLag
because VS is 32 bit

1526502904
js123
yes, VS is 32 bit goodness

1526503029
js123


1526503036
js123
its 15.0 on my machine

1526503200
js123


1526503275
js123
ok maybe it is a problem with the community version

1526503309
js123
so there are 2 problems at least: 1. os.cpp is looking for the string "14.0" which is "15.0" with msvc 17

1526503346
js123
2. 14.0/15.0 say: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\ on my machine

1526503358
js123
but it should say C:\Program Files (x86)\Microsoft Visual Studio 14.0\

1526503365
js123
to be compatible with os.cpp

1526503428
js123
so for whatever reason my registry is/was wrong

1526503444
js123
after adding the key that os.cpp is looking for the benchmark does not error out

1526503495
js123
well, not with zig run fac.zig

1526503503
js123
but with zig build-exe fac.zig --library c --output fac-zig --release-fast

1526503568
js123
man I thought windows is easy...

1526503593
js123
should probably switch to linux and not give a single damn about everything else -.-

1526503609
js123
(not blaming anyone though)

1526503874
js123
ok got it running with following command: zig build-exe fac.zig --library c --output fac-zig.exe --release-fast --library-path "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\lib\amd64"

1526503883
andrewrk
this is one reason I want to make stack traces on windows work without depending on msdia80.dll, despite microsoft's recommendation

1526503908
js123
maybe I should write these steps down for anyone how will come after me

1526503923
andrewrk
js123,  I would appreciate if you did so in a github issue

1526503940
js123
all that because I wanted to implement karatsuba in the bignum lib

1526503943
andrewrk
specifically, what was different about your registry vs what we were looking for

1526503972
andrewrk
js123, btw the bignum bench for zig only depends on libc so that the startup time is fair with the benches of other languages

1526503981
andrewrk
otherwise zig would have a really lean startup time and ruin the benchmarks :)

1526504022
js123
well, normally I dont measure startup time for stuff like that

1526504023
andrewrk
and if you don't use --library c then you don't need MSVC installed

1526504036
js123
but than i do not get an exe file

1526504038
js123
and no error

1526504057
andrewrk
hmmmm

1526504065
andrewrk
that's not supposed to happen

1526504108
js123
zig build-exe fac.zig --output fac-zig.exe --release-fast

1526504124
js123
no error, no output and echo $? returns True

1526504236
andrewrk
try --verbose-link

1526504245
andrewrk
zig build-exe fac.zig --output fac-zig.exe --release-fast --verbose-link

1526504280
js123
lld -NOLOGO -DEBUG -MACHINE:X64 /SUBSYSTEM:console -OUT:fac-zig.exe -LIBPATH:C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\Lib\amd64\ -LIBPATH:C:\Program Files (x86)\Windows Kits\8.1\\Lib\winv6.3\um\x64\ -LIBPATH:C:\Program Files (x86)\Windows Kits\10\\Lib\10.0.10240.0\ucrt\x64\ msvcrt.lib vcruntime.lib ucrt.lib legacy_stdio_definitions.lib kernel32.lib .\zig-cache\fac

1526504286
js123
sry, will use pastebin

1526504302
js123


1526504388
andrewrk
ok so we got to the link step. we told LLD to link, and then LLD silently crashed.

1526504393
andrewrk
we need to report this bug to LLD

1526504418
andrewrk
for a workaround you can replace "lld" at the beginning there with link.exe

1526504570
js123
I don't have link.exe

1526504729
andrewrk
so you don't really have MSVC installed then right?

1526504823
js123
well, I can start the editor

1526504838
js123
as I said, there are up to 16+ gb of software possible to install

1526504858
andrewrk
I think it's going to be pretty tricky to be a beta user of zig on windows with no MSVC installed

1526504885
andrewrk
if you can compile hello world with MSVC then you have link.exe somewhere

1526509224
GitHub159
[zig] jan-schreib opened pull request #1016: add c type sizes for OpenBSD (master...master)

1526509390
GitHub133
[zig] andrewrk pushed 1 new commit to master:

1526509391
GitHub133
zig/master 4a3d689 Andrew Kelley: std.fmt: use SI prefixes for printing bytes...

