1544660253
daurnimator
andrewrk: so how are the 12? :)

1544660282
andrewrk
daurnimator, still on the first one. almost done :)

1544660350
andrewrk
#1733 and #638

1544660548
daurnimator
while on #638, is there an open issue for making readInt take an enum instead of a boolean for the endianess arg?

1544660591
andrewrk
pretty sure it already does. but I'm making a bunch of breaking API changes to all the read and write int functions

1544660632
daurnimator
ah it does! I was looking at an old revision

1544664316
mgxm
andrewrk:

1544664345
mgxm
seems that file_path returned by SplitIterator_rest was not including a null byte

1544664363
andrewrk
ah

1544664384
andrewrk
I'd be happy to make the fix directly, or would you like to make a pull request and get credit for it?

1544664407
andrewrk
nice find, thank you

1544664436
mgxm
no problem, you can fix directly

1544664566
andrewrk
thanks

1544664577
andrewrk
in a moment; I'm in the middle of another commit

1544669670
zachcarter
hello, just stumbled upon this error -

1544669692
zachcarter
I'm sure I'm doing something wrong with the defer - since I'm catching errors already

1544669977
andrewrk
zachcarter, what happened is you returned an error from main, so zig is trying to print an error return trace, to show where the error came from (although in this case it is trivially obvious) and the debug info code itself has panicked and triggered a stack trace, which then succeeds and shows where in zig's debug info code it failed

1544670002
andrewrk
so it's a bug in zig standard library with regards to macos stack traces

1544670078
zachcarter
gotcha - just wanted to make sure that it was already known about, and if not to raise it :) thanks for the explanation

1544670089
zachcarter
enjoying zig so far :) coming from C++ and Nim

1544670213
andrewrk
zachcarter, I filed an issue on your behalf:

1544670234
andrewrk
thanks for the report!

1544670243
zachcarter
sure thing!

1544670318
andrewrk
mgxm, I created a temporary freebsd vm and I'll see if I can fix that issue

1544672322
andrewrk
mgxm, fixed it.

1544676460
andrewrk
funny, this is almost exactly what I'm doing in copy-elision branch:

1544680780
zachcarter
I'm very impressed with Zig

1544680797
zachcarter
managed to get a basic SDL2 app working with knowing almost nothing about the language in about an hour

1544680815
zachcarter
and that included looking up syntax I didn't understand

1544680829
andrewrk
zachcarter, glad to hear it

1544680852
andrewrk
I'm guessing you ran into this issue along the way:

1544680855
zachcarter
I very much like many of the design decisions you've taken with the language

1544680871
zachcarter
I did - it threw me for a bit

1544680901
zachcarter
then I found some SDL2 wrapper code and then finally I found @ptrCast and all was right with the world

1544680971
zachcarter
Nim handles this with unchecked arrays

1544681043
zachcarter
I like the proposal though - it's not an easy problem to solve IMO

1544681093
zachcarter
heh - considering this is even an issue - kind of makes me really happy

1544681125
zachcarter
amazed how few bugs I ran into given how new the language is

1544681411
andrewrk
I'm glad to hear you could pick it up quickly though. that's one of my goals - is that source code is discoverable and readable even to people who don't know the language

1544681446
andrewrk
zig code is intended to be very boring and obvious

1544681715
zachcarter
I am a fan of simplicity

1544681736
zachcarter
I like C++ - I think it has some great features

1544681750
zachcarter
when I code in it - I stick to a minimal subset if possible

1544681857
zachcarter
but I'd rather code in a language that is more in the vein of C when possible

1544693681
mgxm
andrewrk: great, thank you

1544740254
daurnimator
would KernelAllocator be a better name for DirectAllocator ?

1544740278
daurnimator
Also other thing I've been thinking about, do we have a way to add misc attributes to memory and/or memory allocators?

1544740298
daurnimator
e.g. traits on an allocator that say "executable"

1544740382
emekoi
it should be possible

1544740440
emekoi
here's an example of how that would work in c

1544740926
daurnimator
emekoi: I know how it works in C..... the question is how we can apply attributes to memory and/or allocators in zig. It's more than executuable too: not all memory is the same. e.g. on some architectures, some memory is faster to access than others. you might decide to have 'persistant' memory. huge pages exist...

1544741121
zachcarter
got sdl2 + bgfx initialized with zig:

1544741132
zachcarter
time to start making cubes :)

1544744304
andrewrk
zachcarter, nice!

