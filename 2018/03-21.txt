1521591338
jzelinskie
o/

1521623755
jfo
\o

1521633977
MajorLag
Anyone want to save me some time and explain/link to an explanation of what libicuuc is and why it is a dependency if I build Zig on Ubuntu Artful but not on Debian Jessie? Is it necessary in any way? because it adds about 30MB.

1521648397
sand-witch
Hello! I just want to express my appreciation here for those working on this language. I'm incredibly impressed!

1521648467
sand-witch
I have a fun quote from Jon Carmack that I'd like to share, from his facebook:

1521648484
sand-witch
The quote is: I do have plenty of days where, like many older programmers, I think “Maybe C++ isn’t as much of a net positive as we assume...”.

1521648508
sand-witch
I think Zig might get a lot of C and C++ programmers interested

1521648879
sand-witch
I do have one question: Why can structs not be passed by value? I assume this is to get rid of the endless decisions on whether to pass by value or pointer, and what that even means depending on size of struct and calling convention?

1521648909
sand-witch
Basically, passing by value vs pointer doesn't mean anything anyway, so we might as well force a const pointer?

1521649025
sand-witch
The ABI then picks something efficient to do

1521649790
MajorLag
That's actually sort of what is being planned, as I understand it. See #733:

1521649930
andrewrk
hi jzelinskie o/

1521652629
andrewrk
MajorLag, I don't know what libicuuc is for

1521652637
andrewrk
it's not a direct dependency of zig

1521652647
andrewrk
it's unfortunate how many dependencies llvm/clang are pulling in

1521653002
MajorLag
andrewrk: it's apparently some unicode things. libxml2 can be compiled against that or iconv. Ubuntu 17.10 built libxml2 against libicuuc, Debian Jessie built against iconv.

1521653027
andrewrk
oh wow

1521653040
andrewrk
this is unreasonably complicated

1521653189
andrewrk
goodness, libxml2 is 200,000 lines of C

1521653245
andrewrk
the entire zig compiler is 51,000

1521653339
andrewrk
maybe we could make an xml parser in zig exporting a C API and have LLD depend on that instead :)

1521653851
sand-witch
The compilers for Odin and Loci are a similar size to Zig. Kinda cool. Meanwhile over at Clang... (though not exactly a fair comparison)

1521654001
sand-witch
oh Jai is also a similar size IIRC

1521654293
sand-witch
By the way, It's quiet likely that sometime in the future once C++ modules are here, they'll introduce some kind of way to change how the language works on a per-module basis. This will do things like turn explicit on by default, that kind of thing. But my god, even then, the complexity isn't going to disappear from C++. You guys are saving me from an endless cycle of C++ induced depression.

1521654352
sand-witch
So thanks andrewrk :)

1521654384
andrewrk
sand-witch, are you working on some zig code?

1521654679
sand-witch
No, I just like zig the most of all the recent languages arriving. I'm actually having some trouble compiling the compiler, but I'll work on that a bit later. The errors are stuff like "error: ‘HashString’ is not a member of ‘llvm’" --- It seems deps/lld is reading from my /usr/local/include/llvm which is very recent. I deleted it but then I get different errors. Will troubleshoot later.

1521654749
andrewrk
ok, feel free to ask for help getting it working. is that ubuntu?

1521654764
sand-witch
yes, 17.10 I think

1521654774
MajorLag2
@andrewrk, that'd be nice, because I'm pretty sure I got it to build against musl and libc++ otherwise.

1521654851
MajorLag2
sand-witch: did you use the llvm-6.0 ppa?

1521654879
andrewrk
I've tested to make sure deps/lld picks up .h files from itself before system files

1521654909
sand-witch
MajorLag2: I compiled from master recently

1521654920
andrewrk
that's the problem

1521654937
andrewrk
zig master branch is tracking llvm 6 exactly. llvm master branch can break compatibility with every commit

1521654978
sand-witch
yeah but I deleted it so it'd use /usr/include but then I'm getting different errors. I'll figure it out :)

1521654993
sand-witch
it meaning /usr/local/include/llvm

1521655045
sand-witch
now it's probably a version that's too old

1521655054
MajorLag2
For the record, I didn't have any trouble using the llvm-6.0 ppa, clang, and making sure libxml2-dev was available.

1521655066
sand-witch
ok good to know!

1521655150
ltr_
i think the best way to test drive zig is with docker

1521655163
MajorLag2
I've potentially got an even easier way: I've built a self-contained AppDir of the zig compiler.

1521655229
MajorLag2
it's a bit hefty at 130MB, but now that I've excised libicuuc that'll drop a good 30MB

1521655243
andrewrk
MajorLag2, if you figure out how to automate that, we can put it in travis CI and provide it as an artifact

1521655308
MajorLag2
I actually have automated it. If I add my build script to a cron job, it'll just go ahead and build a new tar.bz2 every time master updates

1521655337
MajorLag2
and then it will upload it to my site and update the displayed build number and updated date too.

1521655352
andrewrk
ah that's nifty. mind if I link to that from ziglang.org/download?

1521655386
MajorLag2
Not at all, that was always the plan, I just wanted to do some more testing and trimming before I was going to bring it up.

1521655393
andrewrk
cool

1521655640
MajorLag2
Oh, I should add langref to it

1521655704
MajorLag2
I'm not sure how compatible my build process is with travis ci, but that sounds like a goal. I'll look into it.

1521655717
andrewrk
good idea.  57KB for up-to-date docs that work offline is a small price to pay

1521655816
MajorLag2
compressed tarball is 28MB, uncompressed dir is ~98MB (without libicuuc, next version won't have it), so 57KB isn't even going to be noticed. Considering I include literally every library it needs, being only about 40MB larger than the Windows version isn't bad.

1521655851
andrewrk
not bad at all. it could probably be smaller if we tried to statically link everything

1521655853
andrewrk
that can be tricky

1521656191
MajorLag2
Yeah, glibc is pretty actively hostile to the concept. that's why I was dabbling with musl/libc++. I got the embedded LLVM stuff built that way after some hacking, but ran into a lot of missing c++ std symbols so I took a break on it because I knew libxml2 would be trouble anyway.

1521656315
andrewrk
MajorLag2, have I told you about the Grand Bootstrapping Plan?

1521656580
andrewrk
I'm going to make an issue

1521656808
MajorLag2
Maybe, was that the one with making a zig C abi?

1521656816
andrewrk
it's related to that

1521657615
andrewrk
MajorLag2,

1521662541
andrewrk
jacobdufault, how's it going over there? anything I can help with on my end?

1521664054
jacobdufault
been a bit busy these past few weekends, still slowly working on it

1521664065
jacobdufault
if you'd like to close the PR for now that's okay, I'll reopen when ready

1521664103
jacobdufault
always too many things to do :)

1521664136
andrewrk
I am all too familiar with that sentiment

1521664202
GitHub55
[zig] andrewrk closed pull request #824: [WIP/NOTREADY] WIP json metadata (master...wip-json-render)

1521664205
sand-witch
I see so many commits @ LibreOffice that have to do with overflow. It just makes me think how awesome this language will be for big software projects.

1521664952
sand-witch
Sorry for being the weirdo cheerleader here, but one last thing. I've always hated the concept of library wrappers and the fact that C++ people wrap C libraries instead of introducing a defer keyword has always blown my mind. The C++ culture is broken in my opinion, and this language can wake a lot of people up.

1521665020
andrewrk
sand-witch, I look forward to seeing what you create

1521665051
sand-witch
I do too :D

