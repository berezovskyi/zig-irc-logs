1543802384
benjikun
andrewrk: Whatcha workin on?

1543802441
andrewrk
benjikun, proof of concept of making zig's stack traces work in freestanding mode

1543802530
benjikun
I see, neat

1543816366
tiehuis
found the separate loop initializers tripped me up in the advent of code solution today

1543816391
tiehuis
accidently put the inner `var j: usize = 0` on the outer level which stumped me for 5 minutes

1543816728
andrewrk
interesting

1543817328
IntoxicatedHippo
I think allowing a third expression on while loops so they act like C style for loops would be useful.

1543817548
IntoxicatedHippo
Nevermind, I looked through the issues and found this:

1543817563
IntoxicatedHippo
Maybe an example like that should be in the docs.

1543819013
andrewrk
tiehuis, you are unstoppable

1543819136
reductum
I'm amazed at how quickly people are doing these advent of code puzzles.

1543819256
reductum
For now, functions can't return multiple values. Is that correct?

1543819256
reductum
So either structs or mutable pointer args should be used to get multiple results from a function call.

1543819541
andrewrk
reductum, correct

1543819551
reductum
Got it. Thanks.

1543821716
Hejsil
Curse you, timezones!

1543822078
tiehuis
i've got a good 6pm start on these puzzles so that turns out well for me

1543822092
tiehuis
that being said, the fastest people are pretty fast, best rank so far for me was yesterday with 218

1543822168
tiehuis
i also prefer restructing the input into static data using vim macros first too which is probably a slow method

1543822190
tiehuis
the scanf-like thing you were working on Hejsil would be cool to see

1543822244
Hejsil
Oooh ye, i did make something like that. Time to use it!

1543822269
IntoxicatedHippo
On the other hand, I wasted 10 minutes because this buffer was too small, so doing it with macros is sometimes faster :P

1543822278
tiehuis
was thinking it'd be helpful for todays question

1543822519
reductum
Yeah I'm wading through just parsing everything. I've never gotten much practice parsing things, so I'm pretty slow at it, even with simple input like this.

1543822529
reductum
Good practice, though!

1543822587
reductum
Zig's `test` feature is just lovely.

1543823385
andrewrk
tiehuis, your code is just magnificent

1543823396
andrewrk
makes me question my decision to parse the input text line by line

1543823437
andrewrk
I didn't even figure out how to get the ** feature to work, and I &@#*&@in coded it!

1543823643
tiehuis
thanks, yeah unfortunately parsing manually is pretty ugly

1543826643
reductum
Hmmm. I'm getting a compile-time error message for a situation that looks equivalent to an example from the 0.3.0 docs.

1543826673
reductum
var rects = []Rect{Rect.ini(0, 0, 0, 0)} ** 1000;

1543826690
reductum
Where Rect.init just returns a Rect struct.

1543826711
reductum
This looks just like the "call a function to initialize an array" section here:

1543826737
reductum
But I get "error: unable to evaluate constant expression"

1543827291
Hejsil
After solving the wrong problem, day 3,1 is done!

1543827302
Hejsil
my "scan" impl was really useful for parsing

1543827649
reductum
Here's a repro:

1543827663
reductum
It's just a subset of the array example code copied and pasted.

1543827784
Hejsil
This fixes it:

1543827810
Hejsil
Though, ** should really make the right hand side a comptime context, so you dont need this

1543827842
reductum
Hejsil: Thank you! I haven't totally figured out the rules around comptime.

1543827879
reductum
Oddly, when I paste the entire documentation snippet into godbolt, it successfully compiles:

1543827905
reductum
I wonder why the subset fails when the full set succeeds.

1543827935
Hejsil
Because the var is global

1543827945
Hejsil
And globals init expr are implicitly comptime :)

1543827962
reductum
Ahhhhh.

1543828354
williamcol3
Hey, is there a way to specify the branches of a switch statement programmatically at comptime?

1543830020
Hejsil
williamcol3, Not anything semantically, but using inline loops, code generation can be the same in release mode:

1543830219
williamcol3
Hejsil, well look at that. Way to go LLVM.

1543830223
williamcol3
Thanks.

1543834374
reductum
Finally finished advent day 03-1:

1543834430
j`ey
all these advent solutions may push zig over the number of repositories to get zig to have syntax hilighting on github

1543834453
reductum
j`ey: I think it already happened. Github approved it.

1543834470
j`ey
ah cool

1543834478
j`ey
reductum: btw you might want to look at @embedFile

1543834547
reductum
Yeah I just found out about that today! It's super cool. I decided to just paste the array into the source, though, to keep everything self contained.

1543834577
reductum
Looking forward to reading everyone else's solutions tomorrow and learning how to do things properly in zig.

1543834593
reductum
It's 03:00 here. G'night, all

1543845764
sjums
Dear zig users. Today I made my first struct and also got a much better understanding of iterators. Today was a good day! üôè

1543845783
j`ey
sjums: you should give andrewrk the code that you had the weird behaviour with

1543845826
sjums
I haven't looked into it, but I have a hunch that I might have freed some memory and kept reading from it

1543845928
sjums
Am on mobile, so can't throw code bits around right now :)

1543846025
j`ey
ah, that might cause a problem :P

1543846171
sjums
I initialized an arrraylist in a function, followed by a 'defer list.deinit()' and then returned the list to user later in my code

1543846186
sjums
I guess that creates problems üòá

1543846232
j`ey
sounds like it

1543853519
sjums
how do I initialize a [2][26]u8 array to 0's ?

1543855518
MajorLag
var x = [][26]u8{[]u8{0}

1543855610
MajorLag
another way: `var x: [2][26]u8 = undefined; for(std.meta.asBytes(&x)) |*b| b.* = 0;`

1543855939
unique_id
MajorLag: It's std.mem.asBytes :)

1543855974
MajorLag
yes, yes it is.

1543855993
MajorLag
I originally put it in meta and keep forgetting that we decided to move it.

1543856004
MajorLag
I make this mistake in my own code almost every time.

1543856011
MajorLag
habits, you know.

1543857584
sjums
thanks Mr. Lag ! (:

1543857730
sjums
thanks Mr. Lag ! (:

1543861434
sjums
looking for C's sprintf, is fmt.bufPrint the way to go?

1543861694
sjums
What's the difference between the input buffers value and the returned value?

1543861747
Hejsil
sjums, the return slice is the subset of the input slice that was written too

1543861857
sjums
so if my buffer is 1000 u8's and there's only written 42 bytes to it, the returned value is a slice of those 42 u8's

1543861955
MajorLag
yes

1543862884
sjums
So the first AoC puzzle took me ~6 hours in zig

1543862901
sjums
Today I did day 3 part 1 in around one!

1543862958
sjums
Also currently watching andrew on YouTube #goingdeepintothecode

1543869960
daurnimator
Does zig have an easy way to create a anon struct and initialise it?

1543870009
daurnimator
or do we have to: struct { foo:u32, bar:u32 } { .foo = 42, .bar = 100 }

1543870014
andrewrk
daurnimator, no but there is a proposal for it

