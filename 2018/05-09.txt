1525835570
bb010g
Are there existing SQLite bindings that I can use for extensions? Just doing an @cImport("sqlite3ext.h") makes Zig choke.

1525835791
andrewrk
bb010g, no

1525835813
andrewrk
feel free to file an issue regarding C import of sqlite3ext.h and I'll have a look

1525835871
bb010g
Ok.

1525836127
andrewrk
bb010g, what does @cImport("sqlite3ext.h") do? does it crash zig?

1525836160
bb010g
Just a sec, getting a MWE together

1525836164
bb010g
It generates some invalid Zig

1525836656
bb010g
andrewrk:

1525836678
bb010g
Sorry, @cInclude, not @cImport.

1525836737
andrewrk
bb010g, ah interesting. I'll have a look, thanks!

1525836739
andrewrk
want a workaround?

1525836807
bb010g
andrewrk: Sure! (@cInclude("sqlite3ext.h") produces "error: C include valid only inside C import block".)

1525844825
bb010g
What should you do when implementing an allocator if you can't guarantee alignment?

1525845768
bb010g
Nevermind, that seems to be the case with Windows and std.heap.DirectAllocator, and you do n + alignment + @sizeOf(usize) (I'd imagine so that you're safe).

1525847510
tiehuis
small initial benchmark og zif big-integers:

1525847528
tiehuis
performance seems alright so far, on par with native c/rust implementations (not assembly)

1525847552
tiehuis
i'd be interested in seeing if changing to the add/sub/mul overflow builtins can get improvement here

1525851706
GitHub178
[zig] Hejsil opened pull request #1000: Added Slice as its own type info in userland (master...slice-type-info)

1525853824
tiehuis
wow, not even 2x slower than gmp now with no assembly on that fib benchmark

1525853842
tiehuis
exactly 2x slower, i should say

1525872450
GitHub172
[zig] andrewrk pushed 1 new commit to master:

1525872450
GitHub172
zig/master 116914a Andrew Kelley: Merge pull request #1000 from zig-lang/slice-type-info...

1525872452
GitHub47
[zig] andrewrk closed pull request #1000: Added Slice as its own type info in userland (master...slice-type-info)

1525874608
andrewrk
tiehuis, wow! exciting results

1525874829
bodie_
I just realized zig is a reference to that classic "move zig" vid

1525874838
bodie_
excellent

1525874862
bodie_
if it's not, great unintentional reference

1525874914
andrewrk
all your codebase are belong to us

1525896983
GitHub17
[zig] isaachier closed pull request #993: Add clang-tidy run on zig sources, minor CMake improvements (master...cmake-clang-tidy)

1525897335
isaachier
hey everyone. i'm curious about the self hosting compiler. is the work on master? i don't see how the IR is/will be represented.

1525897384
isaachier
i see ir.zig but that looks pretty minimal

1525897393
andrewrk
isaachier, hi yes the work is on master

1525897401
andrewrk
currently there is only a parser - but it is a complete parser

1525897422
isaachier
i see. how much of the c++ needs to be used from zig if any.

1525897425
andrewrk
and we have `zig fmt` - which is almost complete- it only lacks support for preserving same-line comments

1525897448
andrewrk
the self hosted compiler re-uses zig_llvm.a which is src/zig_llvm.cpp

1525897479
andrewrk
which is just a C API wrapping the parts of the LLVM C++  that we depend on

1525897480
isaachier
ok cool. i noticed it wasn't quite working yet.

1525897506
isaachier
so that explains the zig self-hosting compiler not producing any output

1525897531
isaachier
or more precisely producing crashing programs

1525897542
andrewrk
I'm experimenting with a job-based system using async I/O and M:N threading, multiplexing kernel threads onto coroutines

1525897579
isaachier
ok got it

1525897587
andrewrk
that's in the self-hosted-threaded branch, which is disorganized

1525897593
isaachier
so what are the big efforts now and where can i help out?

1525897644
andrewrk
are you interested in userland code? e.g. coding in zig

1525897658
isaachier
ya anything would be good for me

1525897682
andrewrk
check out the "userland" label, and check out the "help wanted" label

1525897692
andrewrk
you might see an issue there that catches your eye

1525897696
andrewrk
and I can think of more ideas if not

1525897708
andrewrk
some of these would involve contributing to other projects, such as valgrind, or LLVM

1525897709
isaachier
just as long as it is ready to go. i know there is an issue about package manager but i'm questioning if the language is ready for that.

1525897728
andrewrk
yeah. figuring out the order of things to implement can be tricky

1525897735
isaachier
ya i'm open to anything and i'll take a look. thanks for the help.

1525898397
andrewrk
isaachier, another thing you can do is start with writing some other project - a game, a server, a whatever thing you would want to build with zig - and then you'll inevitably run into something you'll want to improve about zig

1525898407
andrewrk
and than we can follow that chain down to a leaf node

1525898430
isaachier
ya that's what i'm thinking

1525898456
isaachier
i'm actually looking at porting some popular c library, as soon as i find a good one to port

1525898804
andrewrk
isaachier, what os are you on? stack traces for windows or macos would be really wonderful

1525898856
isaachier
i just saw that. actually at home have linux but my work gives me a mac laptop i can use for that.

1525899222
isaachier
k g2g but i'll take a look at the stacktraces @andrwrk

