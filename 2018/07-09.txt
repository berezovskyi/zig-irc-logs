1531113287
GitHub164
[zig] tiehuis pushed 1 new commit to master:

1531113288
GitHub164
zig/master 82e9190 Marc Tiehuis: Update zig.parser benchmark program

1531147503
GitHub169
[zig] andrewrk pushed 2 new commits to master:

1531147503
GitHub169
zig/master 9eb51e2 Andrew Kelley: fix crash on @ptrToInt of a *void...

1531147503
GitHub169
zig/master 42ba061 Andrew Kelley: std.Hashmap - don't use catch unreachable in tests

1531149327
GitHub121
[zig] andrewrk pushed 1 new commit to master:

1531149327
GitHub121
zig/master 2ee67b7 Andrew Kelley: langref: docs for invalid error set cast and incorrect pointer alignment...

1531152863
GitHub150
[zig] andrewrk pushed 1 new commit to master:

1531152863
GitHub150
zig/master 05f1ea3 Andrew Kelley: ZIG_DEBUG_COLOR=1 overrides tty detection for runtime stack traces

1531157110
jab
Anyone know any other languages that compile to C ABI compatibility?

1531161121
very-mediocre
iirc Nim

1531161151
very-mediocre
and I think Rust but I'm not sure if there are compromises there

1531161215
stratact
Rust just uses libc as a backend for libstd. I don't think it compiles to C per se

1531161279
stratact
although it's debug info tries to emulate C

1531165679
jab
I've heard Nim, not a fan of it. Much prefer Zig's direction

1531165953
very-mediocre
me too, I like c syntax more than ruby/python syntax

1531166214
jab
i also feel nim's development is unweildy and directionless

1531166218
jab
lots of addons

1531166264
very-mediocre
that's true, it got very convoluted over the last few years

1531166277
very-mediocre
i think they're experimenting with it a lot

1531166322
very-mediocre
what i like about Nim is how simple it is to do really basic OOP

1531166357
very-mediocre
this is old but still pretty close to how it is now:

1531166375
very-mediocre
it's really productive

1531166480
very-mediocre
iirc they use tuples as interfaces

1531166622
very-mediocre
i find that fast a OOP feedback loop is a big deal, I like to iterate through different basic architectures when beginning a project

1531166730
very-mediocre
but everything else in Nim got really complex, it's kind of paradoxical

1531166757
Bas_
Ah, that's nice that you can add methods after the fact basically.

1531166825
very-mediocre
Totally subjective, but I feel like Nim OOP does what Python failed to achieve

1531166871
Bas_
That's one of my complaints about doing OO the C++ way. That you in general can't add to the class afterwards. Unless they anticipated it by making the members protected instead of private and giving it a virtual destructor, which you don't actually want to do by default.

1531166946
very-mediocre
zig is probably going to be the best of both worlds in that regard (not productivity, but the thing that you said)

1531166961
very-mediocre
since it'll be static and you'll be able to add stuff "later" at compile time

1531166972
very-mediocre
without going full runtime vtables

1531167014
very-mediocre
or at least I think so, the metaprogramming features are far from complete of course.

1531167139
very-mediocre
I'm in a weird timezone so my brain is melting now, gonna go, bye :]

1531169749
andrewrk
I can't believe how easy it was to do the windows implementation of the std.event.Loop thread pool dispatching system

1531169773
andrewrk
windows > freebsd/macos > linux, for event-based APIs

1531170881
GitHub176
[zig] andrewrk pushed 1 new commit to master:

1531170881
GitHub176
zig/master 0ac1b83 Andrew Kelley: fix non-portable format specifier

1531171018
GitHub120
[zig] wilsonk opened pull request #1211: Update throughput_test.zig. (master...fix_throughput_test)

1531171295
GitHub146
[zig] andrewrk pushed 1 new commit to master:

1531171295
GitHub146
zig/master a2834d4 wilsonk: Update throughput_test.zig. (#1211)

1531171297
GitHub124
[zig] andrewrk closed pull request #1211: Update throughput_test.zig. (master...fix_throughput_test)

