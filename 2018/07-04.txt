1530662826
andrewrk
stratact: what kind of checking?

1530662862
andrewrk
I'm about to lose internet connectivity for about 6 hours. Back later

1530662890
stratact
I mean the reference checking

1530666661
MajorLag1
stratact, what precisely would separate zig from rust then?

1530666904
stratact
MajorLag1: well, it would be a language with a different syntax for different approaches to programming and thinking. Also the same could be said for what would separate zig from C if zig is not safe to begin with.

1530667002
stratact
I just think it's really crucial to have safety in this day and age.

1530667143
MajorLag1
quite a lot actually. C is very lose with its casting, has lots of undefined behavior, and the mess that are macros. Zig's saftey comes from built in debug checks, explicit syntax, better error checking, etc.

1530667226
MajorLag1
It rather like that it doesn't force a memory management paradigm on programers like rust does.

1530667616
stratact
I guess that's an approach I haven't thought of. So how does debug checking work?

1530668061
MajorLag1
The compiler does a lot of static checks, and then in debug mode (which is the default for builds) the compiler inserts a lot of checks for things like out-of-bounds array access, integer overflows, pointer alignment, etc. So a lot of bugs are caught in testing. Then you can compile a release-fast or release-small version without all the extra checks. Or you can compile release-safe and keep the checks but not the

1530668061
MajorLag1
even turn checking on and off at the scope level with @setRuntimeSafety.

1530668117
stratact
That sounds interesting

1530668133
MajorLag1


1530668393
MajorLag1
There's some more runtime checking we'd like to do around pointers and resource handling, so in that way zig is planning to add more safety:

1530668801
stratact
MajorLag1: gotcha, thanks for sharing

1530670036
dbandstra
andrewrk: i think while docs should mention the `while (a) |b| : (c)` syntax (noticed this in std somewhere, but it's not documented)

1530670175
dbandstra
about the windows sdk thing, is the "Windows Kits" folder something installed by visual studio? if so then whatever, it's no big problem for me. i'm just booted into windows for other reasons and was hoping i could play with zig at the same time

1530670241
MajorLag1
IIRC Windows Kits is put down by the SDK install.

1530670308
dbandstra
SDK being...

1530670318
MajorLag1
like, the Windows 10 SDK

1530670334
dbandstra
sorry most of my knowledge of windows programming dates to like visual c++ 6

1530670506
dbandstra
i was looking at the implementation of os_find_windows_sdk

1530670517
dbandstra
i have the reg key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots\KitsRoot81 = C:\Program Files (x86)\Windows Kits\8.1\

1530670530
dbandstra
and i have this folder: C:\Program Files (x86)\Windows Kits\8.1\Lib\winv6.3 (contains a subfolder called "um")

1530670543
dbandstra
so i don't see how os_find_windows_sdk is not succeeding

1530670872
MajorLag1
yeah, that seems like it should work...

1530696565
GitHub56
[zig] Hejsil pushed 1 new commit to master:

1530696566
GitHub56
zig/master 4f32b86 Jimmi HC: Allow allocation of any 0 sized type (not just void)

1530696974
GitHub175
[zig] Hejsil pushed 1 new commit to master:

1530696975
GitHub175
zig/master 28821b5 Jimmi HC: Fixed last commit compiler error

1530704901
GitHub67
[zig] tiehuis pushed 1 new commit to master:

1530704901
GitHub67
zig/master 1d18688 Marc Tiehuis: Do not normalize langref.html.in line endings...

1530707151
andi3
@MajorLag1 I understand the async examples now, went through them with a friend and figured it out, thanks for your help as well

1530719584
GitHub89
[zig] andrewrk pushed 1 new commit to master:

1530719584
GitHub89
zig/master 8c39cdc Andrew Kelley: fix await on early return when return type is struct...

1530725307
GitHub76
[zig] isaachier opened pull request #1195: Fix crash on assertion for enum switch values (master...switch-enum-fix)

