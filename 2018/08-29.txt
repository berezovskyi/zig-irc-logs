1535507800
scientes
andrewrk, you on? you want to set up the github hook for arm64 CI?

1535516035
dbandstra
andrewrk, i think this bug is also fixed by your recent commit

1535518267
dbandstra
this could also be closed

1535518285
dbandstra
it doesn't segfault for me, gives a proper compile error, although not a very helpful one

1535518306
dbandstra
for (@typeInfo(S).Struct.fields) |field, i| {}

1535518306
dbandstra
^

1535518317
dbandstra
"error: variable of type 'StructField' must be const or comptime"

1535518445
dbandstra
guess i should just comment on the issue

1535537051
DutchGh0st
can you cancel a coroutine at ANY point?

1535549075
scientes
if i do --emit llvm-ir and then build with clang --fuse-ld=lld it works, but the build-exe is corrupt

1535549081
scientes
how do i debug this?

1535549088
scientes
--emit asm

1535549272
scientes
-emit llvm-ir, then llc, then clang -fuse-ld=lld works

1535549428
scientes
(on arm64)

1535549764
scientes
i'll look into this after work

1535556674
DutchGh0st
Oh look, it handles signed ints as well now:

1535556821
DutchGh0st
I suppose all that checking for if I put in a Signed int type or an Unsigned int type is all done at compiletime?

1535557105
DutchGh0st
its funny how both digits10(), and atoi() call each other :3

1535557919
DutchGh0st
And, it was kinda easy to put this in really :)

1535568407
dimenus
andrewrk: fail on my part

1535568410
dimenus
haha

1535569000
andrewrk
lol hi dimenus

1535569014
andrewrk
been a while since we've had the pleasure of your company :)

1535569018
dimenus
that's a first implementation that I didn't rip out of my PR fail

1535569058
andrewrk
DutchGh0st,

1535569064
dimenus
indeed, I see you made the leap to working on Zig fulltime-ish

1535569090
andrewrk
it is full fulltime, and I'm loving it

1535569125
andrewrk
DutchGh0st, you can call cancel anytime, and but the cancellation happens at the next suspend point

1535569139
andrewrk
a suspend point is: suspend, await, or return

1535569170
DutchGh0st
Oh hehe, but thats about multithreaded coroutines, I think I need to do some single threaded coro's first to get a better idea of how it all works

1535569200
andrewrk
with a single thread, if you use cancel, then the thing you're cancelling must be at a suspend point

1535569219
andrewrk
I mean, it will, because that's the only way the single thread could be at the cancel instruction and not in the coroutine

1535569235
DutchGh0st
teagg U see

1535569239
DutchGh0st
wow, cant even type

1535569243
DutchGh0st
*yeahh I see

1535569265
andrewrk
dimenus, I'm working on windows stack traces

1535569442
dimenus
nice, looks like LLVM 6 made some improvements in that area as well

1535570626
andrewrk
I don't suppose anyone in here knows how to unwind a windows stack?

1535570632
andrewrk
it appears to be different than on macos and linux

1535570908
dimenus
andrewrk: have you seen?

1535570923
dimenus
also

1535570924
andrewrk
nope I hadn't seen this. thanks!

1535571136
dimenus
np

1535572807
andrewrk
I think it might just be ok to call RtlCaptureStackBackTrace

1535572822
andrewrk
it depends on RtDll.dll but it seems that is a core system dependency, just like kernel32.dll

1535572879
DutchGh0st
Is there a Deque, or Double Ended Queue implementation in std?

1535573073
andrewrk
DutchGh0st, yes, std.LinkedList

1535573327
dimenus
andrewrk: maybe use regular old CaptureStackBackTrace?

1535573330
dimenus
No extra dependency

1535573362
dimenus
With Vista and up it's not an extra dependency

1535573389
DutchGh0st
Is that contiguous in memory?

1535573417
andrewrk
DutchGh0st, no

1535573464
DutchGh0st
then I have something to do haha

1535573508
andrewrk
dimenus, huh, this is the same API as the other one. I wonder what the difference is

1535573520
dimenus
also, per old LLVM docs that looks like the correct way to go

1535573539
andrewrk
oh, remarks: "The CaptureStackBackTrace function is defined as the RtlCaptureStackBackTrace function "

1535573589
dimenus
yep

1535573598
dimenus
it was probably in a different import lib in the past and got refactored

1535573713
dimenus
andrewrk: so i was listening to Jon's latest stream (he implemented the same thing based on Zig code)

1535573724
dimenus
and he made a similar mistake with versioning

1535573731
dimenus
so i don't feel so bad

1535574015
DutchGh0st
Jonathan blow?

1535574128
dimenus
yes

1535574237
andrewrk
dimenus, did he mention zig in the stream?

1535574267
dimenus
yeah, but he said my name more than he said Zig

1535574273
dimenus
so idk how much Zig got in brand recognition

1535574290
andrewrk
nice

1535574292
DutchGh0st
what stream?

1535574325
DutchGh0st
or isn't it on youtube yet?

1535574367
dimenus
not on youtube yet

1535574431
DutchGh0st
there is an unofficial channel with the streams...

1535574458
andrewrk
dimenus, oh, CaptureStackBackTrace is literally #define CaptureStackBackTrace RtlCaptureStackBackTrace

1535574474
dimenus
hah

1535574483
andrewrk
but the docs for CaptureStackBackTrace say it's in kernel32, when the docs for RtlCaptureStackBackTrace say it's in NtDll.dll

1535574625
DutchGh0st
found it:

1535574641
andrewrk
dimenus, someone should tell Jon about this:

1535574652
andrewrk
I added this later, and it fixes a real world bug

1535574770
dimenus
well done MS

1535575010
dimenus
andrewrk: based on recent documentation (

1535575236
unique_id
andrewrk, I should tell you... since I've had a foolish resurgance in interest in my own language I played around with nvim + the language server protocol recently. It's turns out that it's a really pleasurable protocol. It took no time to set it up. They've even done some outside of the box thinking (at least I haven't heard of this before) where the language/server can report locations of Color, so the IDE can display a small

1535575237
unique_id
colored box next to RGB values, or allow a color selection box for an alternative input method.

1535575261
unique_id
This idea can of course be taken much further :)

1535575327
andrewrk
neat - I think we're only a few months away from language server protocol in stage2

1535575406
unique_id
sounds good

