1521072879
aiwakura
related to my previous question: is there a better way, currently, to test for union(enum) equality?

1521072879
aiwakura


1521074469
andrewrk
aiwakura, would you expect it to codegen to the eql function that you have created?

1521079679
aiwakura
andrewrk, yeah - two union(enum) are equivalent if both the enum value and the payload value are the same

1521079719
aiwakura
is there an alternative definition?

1521081948
andrewrk
yes. for example in the zig compiler the function to test if 2 comptime values are equal is much more nuanced

1521081965
andrewrk
the existence of == would only serve to be a footgun

1521082619
aiwakura
Can you give me an example of an ambiguous case?

1521083398
andrewrk
for example if you have a pointer field, and you want to dereference the pointer to determine equality

1521083406
andrewrk
this is the same problem as struct equality

1521083463
aiwakura
A pointer is a value - its value is the address

1521083567
aiwakura
It seems you don’t want people to think that == performs a deep comparison

1521083595
aiwakura
What about a @compare builtin?

1521083641
aiwakura
With the same semantic I’m defining in the example

1521083658
aiwakura
(No deep comparison)

1521083848
andrewrk
we could provide it in the standard library

1521083873
andrewrk
with reflection

1521083898
aiwakura
So we don’t need to build the switch cases by hand?

1521083902
aiwakura
Yeah I like that

1521086279
GitHub15
[zig] andrewrk pushed 1 new commit to master:

1521086279
GitHub15
zig/master 50e25f6 Andrew Kelley: add missing docs for setAlignStack builtin

1521086406
andrewrk
0.2.0 release is locked and loaded for tomorrow morning

1521086413
andrewrk
hopefully we can get in the news

1521087590
clebermatheus[m]
Hello

1521088563
dtz
\o/

1521088870
aiwakura
yay!

1521092992
zwhadok_
THIS IS A FREENODE BREAKING NEWS ALERT!! Hitechcg AND opal ARE GOING AT IT RIGHT NOW WITH A LOT OF FIGHTING AND ARGUING WOW YOU DON'T WANT TO MISS THIS!! TYPE /JOIN ## TO SEE THE ACTION...AGAIN TYPE /JOIN ## TO SEE THE ACTION!!

1521092996
zwhadok_
clebermatheus[m] jdufault Tobba return0e meena tridactyla DuClare ltr_ _whitelogger lorde_kumamon[m] alandipert commander monteslu aiwakura MajorLag minus l1x walac jacobdufault dtz mal`` ragge m6w6 lqd cgag Vins

1521093031
aiwakura
wat

1521096287
lorde_kumamon[m]
IRC spam

1521111465
jfo
MajorLag: good point. I've added a not at the end that this is the case linking to andrewrk's og post about the rationale. I've also added a whole section about the error inference, which I think makes a good climax to the post. there's a lot to cover and I've left a lot out I wanted to get to, but I think this is pretty good as a really rudimentary intro! I hope people get something out of it :)

1521111501
jfo
also I've called out please join #zig on irc if you have any questions because I guess we can expect to see some support requests incoming post 0.2.0 anyway

1521111511
jfo
aiwakura: thanks!

1521113390
Hejsil
jfo, Nice post. I like your recent addition of the error sets and why they are useful

1521113467
Hejsil
But it's missing that 'comptime' flare :)

1521119384
jfo
Hejsil: I think I'm going to cover that in another post, there's so much ground to cover! but I want to reimplement the seekforward functionality using a stack and then making that generic with comptime. was hoping to get that into this post but it got so long and I ran out of time...

1521119726
GitHub119
[zig] andrewrk pushed 1 new commit to master:

1521119727
GitHub119
zig/master f073923 Andrew Kelley: Release 0.2.0

1521119822
jfo
ooooooh            snappppp

1521119831
jfo
boom

1521121136
jfo


1521122823
cgag
just getting set up again after not playing with zig in quite a while, built ok but build.zig test is failing: `0x23ed94 in ??? (build): return error.InvalidArgs;`

1521122830
cgag
is that expected at the momentr?

1521124491
andrewrk
cgag, probably not. can you give more context?

1521124728
cgag


1521124740
cgag
almost certainly related to this from cmake, i was trying to follow the wiki about building llvm

1521124783
cgag
in ~/local, which seemed to go fine, then copied the command from the readme and set -DCMAKE_INSTALL_PREFIX=$HOME/local

1521125001
andrewrk
cgag, it looks like a conflict between the llvm you've built and system libs

1521125020
andrewrk
what linux distro is this?

1521125025
cgag
is there something I need to set somewhere to force it to prefer $home/local

1521125028
cgag
fedora 27

1521125052
andrewrk
I thought that CMAKE_PREFIX_PATH would do that

1521125316
andrewrk
I posted the 0.2.0 release notes to /r/programming.

1521125935
jordyd
Does Zig use semantic versioning?

1521125945
jordyd
For the project itself I mean

1521125952
andrewrk
jordyd, yes, starting at 1.0.0

1521125965
andrewrk
until then, minor bumps can break everything

1521125972
jordyd
Good to know

1521125993
jordyd
I like those labelled loops btw

1521126000
andrewrk
glad to hear :)

1521126336
cgag
Hmm, I had CMAKE_INSTALL_PREFIX set, added CMAKE_PREFIX_PATH=$HOME/local/lib and cmake exits cleanly, but make itself is failing:

1521126345
cgag


1521126369
cgag
seems strange that only libclangFrontend is a problem

1521126516
jordyd
Is there support--or plans for support--for examining the AST programmatically

1521126580
andrewrk
jordyd, this is intentionally not possible

1521126609
andrewrk
so that someone reading zig code can be confident that this is never done in the code they are looking at

1521126646
jordyd
Well, I don't mean for the purpose of code generation

1521126661
jordyd
For a Frama-C-like use case

1521126664
andrewrk
oh this is IDE integration type of thing?

1521126713
jordyd
For the purpose of static analysis, verification, etc.

1521126725
andrewrk
the current plan is to have a language server that provides deep introspection into a compilation, for the purposes of static analysis, IDEs, and things like this

1521126740
andrewrk
and it's planned to only implement this in the self hosted compiler, not the c++ compiler

1521126753
jordyd
Neat

1521126893
jfo
cgag: thanks for your comment and please lmk if anything is unclear to you in how I've written that post

1521127025
cgag
will do once I get this libclang nonsense sorted out.  Maybe I'll give up on this ~/local stuff and just install libclang where cmake expects it to be

1521127112
jfo
good luck

1521127285
jordyd
Is there any kind of Doxygen-Like thing?

1521127403
andrewrk
jordyd,

1521127411
andrewrk
this is another thing that will only be in the self hosted compiler

