1515477147
GitHub20
[zig] andrewrk pushed 1 new commit to master:

1515477147
GitHub20
zig/master 3c09411 Andrew Kelley: remove %% prefix operator...

1515515914
mahmudov
0.1.1 needs which version of llvm

1515515929
mahmudov
i get tis error with llvm4.0.0 :llvm/BinaryFormat/Magic.h: No such file or directory

1515515979
mahmudov
LLVM, Clang, LLD libraries == 5.x means llvm 5.x ?

1515518308
andrewrk
yes

1515518331
andrewrk
mahmudov, there have been a lot of improvements since 0.1.1. I'd recommend a build of master

1515518364
mahmudov
actually i tried with git version

1515518368
mahmudov
i got same error

1515518374
mahmudov
i have llvm 4.0.0

1515518394
andrewrk
zig depends on llvm 5.x

1515518405
mahmudov
yes.

1515518413
mahmudov
i understood.

1515518422
mahmudov
well can i compile it from stage2

1515518426
mahmudov
with a zig binary

1515518436
mahmudov
still i need llvm 5.x ?

1515518447
andrewrk
even the self hosted compiler depends on llvm

1515518501
mahmudov
hm.ok i need to upgrade my llvm version

1515518805
andrewrk
good idea

1515518818
andrewrk
mahmudov, what OS are you on?

1515521042
mahmudov
Milis Linux

1515521088
mahmudov
generally allthings from stratch.

1515521106
mahmudov
i compiled before with llvm 4.0

1515521126
mahmudov
but that you said more things changed.

1515526223
andrewrk
when llvm 6 comes out, I will release zig 0.2.0 which depends on llvm 6. new releases and master branch will always target the newest version of LLVM.

1515529003
mahmudov
whats on regards zig 1.x ?

1515529063
mahmudov
always version updates based on llvm

1515529086
andrewrk
mahmudov, here are the milestones:

1515529141
andrewrk
we will have more releases than LLVM. we can release whenever it makes sense to, but we will also release for each new release of LLVM

1515529144
mahmudov
ah ok.

1515529153
mahmudov
i see

1515536324
aiwakura
andrewrk I think I'm missing a comptime somewhere

1515536345
aiwakura


1515536373
aiwakura
the isIntrusive branch is getting evaluated even though isIntrusive is false

1515536377
aiwakura
which causes a compile time error

1515536396
andrewrk
if (comptime isIntrusive())

1515536429
aiwakura
beautiful.

1515536443
andrewrk
see also

1515536457
andrewrk
or you could use a const variable and use that instead of a function call

1515537118
aiwakura
IntrusiveLinkedList works

1515537121
aiwakura
but  it's not beautiful

1515537150
aiwakura
for a couple of annoying reasons

1515537184
andrewrk
can you commit usage of it to a branch in zen so I can look at it?

1515537202
aiwakura
I can show you a simple test in the standard library

1515537211
aiwakura
just a sec, I'm finishing it up

1515537312
aiwakura
wait, there is actually a big problem

1515537331
aiwakura


1515537342
aiwakura
this doesn't work because Element is undeclared inside Element

1515537599
andrewrk
did you try it? it works fine

1515537620
aiwakura
yeah I tried it

1515537621
aiwakura
weird

1515537649
andrewrk
I mean does it actually try to contain itself?

1515537653
andrewrk
that is obviously impossible

1515537663
andrewrk
but Element is in scope inside Element

1515537686
andrewrk


1515537735
andrewrk
oh, hm, I wonder if passing a type as a comptime parameter causes it to be fully instantiated

1515537898
andrewrk
aiwakura,

1515539335
aiwakura
hey, sorry I was selling zig to a fellow RCer

1515539586
aiwakura
it's not working for my intrusivelist, maybe because I'm using in some semantically useful way inside it?

1515539594
aiwakura
are you coming to the space? we can debug it together

1515539722
andrewrk
yeah I'll be there in a couple hours

1515540350
aiwakura
oh this is really interesting

1515540354
aiwakura
it works if it's a top level declaration

1515540909
aiwakura
ok there's one last problem

1515540964
aiwakura
I'm pretty confident this is a bug

1515541063
aiwakura


1515541074
aiwakura
expected type Node, found Node

1515541089
aiwakura
apparently even though those Nodes are generated in the same way, they are still considered different types

1515541809
aiwakura
yeah I'm debugging the compiler, the two types are different. we need a way to solve this

