1545353057
litonico
hello! anyone up for fielding some zig/c interop questions?

1545353238
andrewrk
hi litonico

1545353268
litonico
hi

1545353393
litonico
first, when I include a c header in zig with @cInclude and @cImport, is there a way to see what C compiler command runs? (I'm on OSX, and trying to figure out why zig's C import paths aren't finding particular system-level headers)

1545353502
andrewrk
litonico, good question. there is not currently, but now that you mention it, I think it would be a good idea to have --verbose-cimport print that information, which would be here:

1545353526
litonico
great, thank you so much!

1545353836
andrewrk
litonico, I pushed a commit to master to enable this. you can build zig from source or wait 2 hours for the CI server to update the download page with a new static build

1545353859
litonico
amazing, thank you

1545354052
litonico
my second question is: does zig have a syntax similar to doublequote #includes? @cInclude generates angle-brace #includes, so I've been setting C_INCLUDE_PATH to include a header in the current directory. Is this the way to do it?

1545354074
litonico
(for a command-line build, haven't yet gotten in to using build.zig)

1545354093
andrewrk
do you know about the -isystem command line arg to zig?

1545354109
litonico
I did NOT know about -isystem

1545354126
andrewrk
for some reason I never added `-I` but -isystem is kinda the same thing

1545354218
litonico
yep, that does the thing

1545356742
knebulae
andrewrk: any idea why io.zig would get pulled in with only a single call to a c function? that's what's firing off this posix variable and compiler error.

1545356877
knebulae
I guess a better question might be why std is getting brought in at all.

1545361313
andrewrk
knebulae, to be clear zig has lazy top level declarations, so the standard library, or even individual files, are not all pulled in together

1545361329
andrewrk
if you push your code to a branch and upload it somewhere, I'll take a look

1545362341
daurnimator
andrewrk: any thoughts on my import suggestion above?

1545363081
scientes


1545363097
scientes
nvm

1545363108
daurnimator
scientes: "The uploader has not made this video available in your country."

1545363179
scientes
stupid

1545399349
unique_id
Imagine if the C++ standard library weren't documented and you had to learn it by reading the code...an impossible task! Compare that to the Zig standard library which is super easy to learn by reading the code. It tells you Zig is doing something right :)

1545408816
MajorLag
andrewrk, re: #1851 it looks like `@bytesToSlice` is also unaware of the alignment vs size problem.

1545412446
andrewrk
MajorLag, good catch, and thanks for the writeup

1545412519
andrewrk
daurnimator, what problem are you trying to solve with your import suggestion?

1545416084
MajorLag
andrewrk: my branch didn't run integration with Azure on this latest push. Is that expected for some reason?

1545416107
spazzpp2
hi

1545416122
spazzpp2
where can I find an explainer about std.fmt?

1545416134
spazzpp2
or do you just look up the code"

1545416137
spazzpp2
?

1545416160
andrewrk
MajorLag, I don't know why that happens

1545416198
andrewrk
spazzpp2, you have to look up the code for now. You can track this issue for updates:

1545416269
MajorLag
disappointing, but I was only going to use it as a shortcut to testing my changes that require the build environment to exist. I've been planning to set up my own build environment because I inherited some old servers, but I haven't made the time yet.

1545416331
spazzpp2
Do you have an example for std.fmt.format ?

1545416371
andrewrk
spazzpp2, search that file for `test "fmt.format"`

1545416388
andrewrk
those tests might be helpful examples

1545416391
spazzpp2
andrewrk, good idea

1545416777
spazzpp2
is a context for std.fmt.format simply any struct with a .remaining []u8?

1545417173
andrewrk
spazzpp2, are you sure you need std.fmt.format? maybe you want std.fmt.allocPrint or std.debug.warn

1545417188
andrewrk
or std.fmt.bufPrint

1545417226
andrewrk
or you want to turn a std.os.File into a std.io.OutStream and then use the print method

1545417229
spazzpp2
andrewrk, actually I want to write an i32 to stdout

1545417263
andrewrk
const stdout = &(try std.io.getStdOut()).outStream().stream;

1545417276
andrewrk
stdout.print("x={}\n", x);

1545417425
mgxm
andrewrk: a little more progress

1545417470
andrewrk
mgxm, looking good

1545417501
andrewrk
interesting, it crashed when cross compiling std lib tests for linux

1545417533
mgxm
yes, SEGV_MAPERR

1545417561
andrewrk
looks like you have the behavioral tests passing in --release-fast mode though?

1545417585
andrewrk
and the self-hosted compiler building successfully, nice

1545417608
spazzpp2
andrewrk, `var stdout = try std.io.getStdOut(); try stdout.outStream().stream.print("{}\n", 0);` worked

1545418381
andrewrk
mgxm, I just looked at your fork of zig fbsd2 branch. looks good. I'll have a few minor suggestions but overall excellent work

1545418449
andrewrk
mgxm, btw I don't know if you are aware, but if you use `zig build --help` it prints "steps" which are equivalent of makefile targets

1545418464
andrewrk
and there are about 10 different test categories you can select manually

1545418471
andrewrk
`test` runs them all

1545418833
mgxm
yeah, I didn't know that until some time ago :D

1545418838
mgxm
thank you

1545420774
DutchGh0st
hi!

1545421030
andrewrk
hi DutchGh0st

1545421049
DutchGh0st
how's advent of code going? haha

1545421219
spazzpp2
DutchGh0st, I started today :)

1545421233
DutchGh0st
ohh! day 1!

1545421235
spazzpp2
DutchGh0st, I trouble around with simple IO

1545421239
DutchGh0st
IO?

1545421243
DutchGh0st
didn't need IO for day 1

1545421254
spazzpp2
reading lines from stdin and parsing to int

1545421275
DutchGh0st
in zit you can use @empedFile(...) to insert a constant array of bytes into your programm

1545421278
DutchGh0st
*in zig

1545421297
spazzpp2
DutchGh0st, I already solved 1 with a bash one-liner

1545421309
DutchGh0st
ohhh, reading the lines from stdin, there is a function for reading from stdin...

1545421318
spazzpp2
But I want the basic unix program: stdio

1545421328
DutchGh0st
hold on

1545421351
spazzpp2
readLineSlice()

1545421378
spazzpp2
DutchGh0st, ^

1545421389
DutchGh0st
ha! yes!

1545421408
spazzpp2
But I need a buffer for that

1545421421
DutchGh0st
yeahh, and it returns the slice of the buffer it has written to

1545421439
DutchGh0st
you need a Bytes buffer iirc?

1545421455
DutchGh0st
not a []const u8, but the struct BytesBuffer or whatever its called

1545421462
spazzpp2
this one tells me something:

1545421477
spazzpp2
First I need an Allocator

1545421491
DutchGh0st
std.hap.DirectAllocator.init()

1545421494
DutchGh0st
*heap

1545421518
spazzpp2
Whats the diff to a FixedBufferAllocator?

1545421520
DutchGh0st
which is a thin wrapper around mmap and munmap

1545421539
DutchGh0st
I dont know how the FixedBufferAllocator works

1545421562
DutchGh0st
I only really use the direct allocator, wrapped in an arena allocator :3

1545421580
DutchGh0st
soo you only free at the end, not in between\

1545421771
spazzpp2
I'll stay close to that guess_number program for it is my first zig-program

1545421832
DutchGh0st
ohh I see

1545421842
DutchGh0st
is the FixedBufferAllocator in std.heap?

1545421863
spazzpp2
DutchGh0st, yes

1545421878
DutchGh0st
yeah, oh, it takes a slice of bytes, interesting

1545421893
DutchGh0st
wait so you can stack allocate with it? o.O

1545421923
spazzpp2
my slice is a const []u8 = undefined

1545422026
DutchGh0st
what is the length of it?

1545422065
DutchGh0st
because a slice is really just a ' view' of memory,

1545422117
DutchGh0st
so you cant create just a slice from nothing and expect it to have a size,

1545422130
spazzpp2
I think it's len=0 because it's undefined

1545422140
DutchGh0st
const buf: [10]u8 = undefined; <--- this is allowed however

1545422159
DutchGh0st
because that is just an array with 10 elements,

1545422171
spazzpp2
I didn't give it a length

1545422177
spazzpp2
but I'm still unfinished

1545422179
DutchGh0st
try giving it a length :)

1545422192
spazzpp2
..erm working on it

1545422224
spazzpp2
it expects []u8 rather than [20]u8

1545422302
DutchGh0st
pass &buf

1545422310
DutchGh0st
that'll conver to a slice

1545422312
MajorLag
slices are a kind of pointer, they mean nothing if they don't point to something. If you have an array (and it isn't const), you need to slice it to pass it as a slice.

1545422313
DutchGh0st
*convert

1545422345
DutchGh0st
the cool thing about slices, is that they dont care if they point to an array, or a heap array

1545422364
spazzpp2
it works now, if I give it a tailing \n in the stdin

1545422375
DutchGh0st
so the arrayList in std as a function, toSlice(), which gives you a slice to the memory :)

1545422389
spazzpp2
I like slices, too

1545422424
DutchGh0st
MajorLag: , how do I a saturating subtraction?

1545422440
DutchGh0st
such that 0usize - 100usize equals 0

1545422518
MajorLag
There's an issue for adding saturating operators or builtins, but as far as I'm aware there isn't any support for that currently. Let me check something...

1545422521
DutchGh0st
and the std ArrayList doesn't have a .last() method? that would be nice to havee

1545422548
DutchGh0st
instead of a weird ArrayList.at(list.len - 1)....

1545422548
MajorLag
list.items[list.items.len - 1] should work I think.

1545422560
DutchGh0st
yeah, but .last() would handle overflows

1545422565
DutchGh0st
now I gotta do it myself :3

1545422593
DutchGh0st
.last() should return a ?T, where null indicates there was no last item

1545422653
MajorLag
you could use .pop() and then immediately append it back.

1545422684
MajorLag
there's a popOrNull for the behavior you want, except that it removes the last item from the list obviously.

1545422706
DutchGh0st
:(

1545422797
MajorLag
var x: usize = undefined; if(@subWithOverflow(usize, 100, 0, &x)) x = 0;

1545422906
MajorLag
You can always make a PR to add last(). A lot of the standard library is just written as it comes up for people.

1545422948
DutchGh0st
I would like that function yeah, will do

1545423385
andrewrk
spazzpp2, if you get stuck, there are a bunch of us who have our zig advent of code open source

1545423414
andrewrk
I think nearly everyone here for example:

1545423636
DutchGh0st
how do I clear an arraylist?

1545423652
DutchGh0st
like, set the internal length to 0 again, but keep the current capacity

1545423656
spazzpp2
Here's my solution to the first exercise, what do you think?:

1545423704
spazzpp2
andrewrk, what's our join code?

1545423750
DutchGh0st
you never used the allocator xD

1545423756
MajorLag
DutchGh0st: the easiest way that comes to mind is `list.len = 0;`

1545423764
andrewrk
spazzpp2,

1545423774
DutchGh0st
oh really? you can just assign to that length?

1545423786
DutchGh0st
fine! \o/

1545423812
MajorLag
zig doesn't have a concept of private fields yet. there may be a function for it, I didn't check

1545423878
MajorLag
but yeah, all ArrayLists will have `items`, which is a slice of the available capacity and `len` which is the currently used capacity.

1545423900
andrewrk
spazzpp2, your allocator is initialized with an undefined slice. you want something like var bytes: [1024]u8 = undefined;

1545423925
spazzpp2
andrewrk, but the compiler complains

1545423932
andrewrk
as it stands you are invoking undefined behavior, and zig doesn't have runtime safety checks for branching on undefined yet

1545423954
andrewrk
spazzpp2, happy to help if you show the error message you got

1545423980
MajorLag
probably it is complaining because he is passing the array instead of passing a slice of the array?

1545424008
andrewrk
that was my guess too

1545424013
spazzpp2
andrewrk, 1.zig:6:57: error: expected type '[]u8', found '[20]u8'

1545424016
MajorLag
`const allocator = &std.heap.FixedBufferAllocator.init(BYTES[0..]).allocator;`

1545424026
andrewrk
you can solve that by taking the address of the array, or with slice syntax as MajorLag shows

1545424048
MajorLag
so yeah, the alternative: `const allocator = &std.heap.FixedBufferAllocator.init(&BYTES).allocator;`

1545424100
MajorLag
A slice is a pointer, using it in an undefined state is a bad idea.

1545424126
MajorLag
if it points to undefined data though, that's fine.

1545424132
andrewrk
spazzpp2, also, your `catch` blocks are fine, looks good, but just for your education, I would encourage you to experiment with using `try` instead of `catch` for the parseInt case, and try making the input have an invalid number. see what happens and see how it helps you debug it

1545424173
andrewrk
DutchGh0st, I gave you a compliment on the stream yesterday

1545424195
andrewrk
oh I think you saw it :)

1545424335
spazzpp2
andrewrk, did you see my compile error message?

1545424405
andrewrk
spazzpp2, yes, see MajorLag's comment above, and mine as well

1545424416
andrewrk
we correctly guessed the compile error before you pasted it :)

1545424569
DutchGh0st
I saw it yeah! thank you :)

1545424639
DutchGh0st
I really enjoy to see some video's of advent of code in zig :), I think you're the only one so far, andrewrk

1545424870
spazzpp2
andrewrk, why did it work with an invalid array then?

1545424894
andrewrk
spazzpp2, it looks like you didn't use the allocator

1545424950
andrewrk
if you did it would probably return error.OutOfMemory, because currently (but not after an issue is resolved) it is typical of undefined values to be zeroes

1545425155
spazzpp2
I see

1545425262
DutchGh0st


1545425376
DutchGh0st
oh and MajorLag, setting the ArrayList's length to 0 works, but what if the arraylist contained arraylists as items?

1545425403
DutchGh0st
then we just ' cleared' the arraylist, without deinitting all lists it contains

1545425421
DutchGh0st
and that leaks

1545425442
DutchGh0st
or is that more an issue of the programmer?

1545425491
spazzpp2
we should use these programs to document zig lib by example

1545425510
hooo
I think public/private is an unnecessary thing to add to a system language

1545425515
hooo
convince me otherwise guys

1545425532
andrewrk
DutchGh0st, the official way to change the length of std.ArrayList is shrink() or resize()

1545425547
andrewrk
hooo, I don't think I can even convince myself

1545425576
DutchGh0st
but does that deinit its contents, if needed?

1545425631
andrewrk
no, you need deinit() to free an arraylist resources

1545425644
MajorLag
I am not convinced public/private is a useful notion, so I'm afraid I can't convince you hooo.

1545425687
spazzpp2
DutchGh0st, embedFile is a funny hack

1545425698
MajorLag
andrewrk, doesn't shrink call shirnk on the allocator though? he wants to keep the capacity. maybe I remember incorrectly. Besides, no method of ArrayList can be aware that it needs to deinit its children.

1545425743
spazzpp2
DutchGh0st, but doesn't that embedfile demand pretty much RAM compared to a stream?

1545425764
DutchGh0st
ehh

1545425768
DutchGh0st
not for advent of code

1545425776
DutchGh0st
the inputs are relatively small

1545425801
spazzpp2
theoretically

1545425813
DutchGh0st
yes, a stream would be more memory friendly

1545425818
DutchGh0st
however not as fast, I think

1545425839
andrewrk
MajorLag, currently it does not, but it makes no guarantees. I think we need more functions that specify intent

1545425880
MajorLag
maybe it is resize that callse allocator.shrink.

1545425921
andrewrk
MajorLag, looks like nothing calls allocator.shrink in ArrayList except for toOwnedSlice

1545425926
DutchGh0st
in Rust I use a fancy annotation, in which I write something like this: `#[aoc(2018, 19, 2)] fn main(input: &str) -> ...`, which will automatically download the inputs, stores them into a file, and then reads the whole file into 1 string

1545425939
DutchGh0st
sooo thats as memory friendly as @embedFile, but at runtime

1545425947
andrewrk
...which is arguably not the best behavior. The semantics of ArrayList could use some scrutiny

1545425988
DutchGh0st
and, if you use a stream, you can never solve a problem at comptime :3

1545425988
MajorLag
You know, we could add a field to array list that specifies a function to call on each item before it is removed. That would be useful for the ArrayList(ArrayList(T)) case, among a few others.

1545425996
spazzpp2
andrewrk, InvalidCharacter could print that char for debugging maybe.

1545426035
andrewrk
spazzpp2, that's a tricky problem because the only thing it does in the context where it knows the character is return an error code

1545426043
MajorLag
Well the whole of std needs some going over, but my understanding is that that's  a problem we're saving for near 1.0.0.

1545426082
andrewrk
MajorLag, yeah that's right. although that's not to say we can't make improvements along the way

1545426105
DutchGh0st
yeahh that would solve the issue of nested resources

1545426149
DutchGh0st
but gotta go! keep up the vids andrewrk! Have a nice day / evening all! :)

1545427222
MajorLag
Since we were talking about allocators, that reminded me that I threw together an incomplete first draft of an 'intro to manual memory management in Zig' document. It is likely full of errors:

1545427264
andrewrk
oh neat!

1545427388
spazzpp2
cool

1545427785
spazzpp2
andrewrk, can I convert a char to it's ord(c) like in python?

1545427835
andrewrk
what type do you have?

1545427842
andrewrk
`char` isn't a zig type

1545427843
spazzpp2
a cast from u8 to i8 maybe

1545427865
andrewrk
if you have a u8 or i8, I'm guessing it's already the ordinal representation

1545427880
andrewrk
are you trying to print it?

1545427900
andrewrk
{c}

1545427915
spazzpp2
I want to use it as an array index.

1545427924
spazzpp2
(aoc day 2)

1545427960
andrewrk
you can use a u8 as an array index

1545428033
MajorLag
In Zig, `@typeOf('c') == u8`

1545428035
spazzpp2
oh really? no type restrictions??

1545428058
spazzpp2
myarray['c'] would work??

1545428070
MajorLag
assuming myarray was large enough, yes.

1545428148
spazzpp2
there's std.fmt.charToDigit

1545428225
andrewrk
spazzpp2, that's a utility function used by parseInt. you probably don't need charToDigit

1545428307
MajorLag
oh interesting, I'm not correct in saying `@typeOf('c') == u8`. It would be `comptime_int` as a literal.

1545428348
spazzpp2
true.. returns u8.. still need to learn reading that syntax

1545428408
spazzpp2
andrewrk, however, can I cast from u8 to i8?

1545428426
MajorLag
`@intCast(i8, my_u8);`

1545428463
MajorLag
which in debug modes will saftey check that your value can be stored in an i8.

1545428497
MajorLag
if you want to treat your u8 value as an i8 at the bit level: `@bitCast(i8, my_u8);`

1545428532
MajorLag
*debug and safe modes.

1545428978
andrewrk
spazzpp2, do you really need a signed integer? why can it be negative?

1545429049
spazzpp2
andrewrk, lol.... thought u8 stands for unicode

1545429066
spazzpp2
I think I need a break

1545429527
spazzpp2
andrewrk, does leaving the scope care for some kind of garbage collection?

1545429634
spazzpp2
hm, I'll use defer to be sure :)

1545430701
andrewrk
spazzpp2, zig has no hidden code execution

1545430722
andrewrk
you can always tell exactly what code will run by looking in the function that you're in

1545430723
spazzpp2
great

1545431979
spazzpp2
andrewrk, how do you init an empty [255]u8 (zero-filled)?

1545432032
andrewrk
var data = [1]u8{0} ** 255;

1545432043
andrewrk
don't you want 256?

1545432058
spazzpp2
ok 256

1545432074
andrewrk


1545432381
spazzpp2
very expressive

1545432548
spazzpp2
good night!

