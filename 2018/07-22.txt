1532222446
kristate
@andrewrk & everyone: I pinned ziglang to my github page and hope that everyone does the same:

1532223329
kristate
@Hejsil thanks for helping me out with CMakeLists.txt

1532223565
Hejsil
Np :)

1532223597
kristate
Hejsil: what do you think about the test skipping?

1532223607
kristate


1532223716
Hejsil
It's probably a good thing being able to skip tests for unsupported os' instead of them just passing

1532223726
Hejsil
Idk if that PR will be the long term solution

1532223735
kristate
Hejsil: yes, I was working on some of the socket stuff and was surprised that it was passing

1532223745
Hejsil
But it's a nice and simple one

1532223773
kristate
Hejsil: I think so -- I think that it is better than introducing a new keyword

1532223781
kristate
and allows the test system to be more extensible

1532223854
kristate
Hejsil: How soon do you think that we can get this PR landed? I want to start using it in my other PRs

1532223955
Hejsil
Not sure. andrewrk is the one who tends who merge these as he has the final say

1532223978
kristate
Hejsil: Okay, cool.

1532224029
Hejsil
I'm a member because I am decently active and have contributed an above average amout to the zig code base

1532224037
Hejsil
I think

1532224066
kristate
Hejsil: I hope to get there. I write a lot of networking code and hope to support networking

1532224127
Hejsil
With enough good PR, andrewrk will probably consider it

1532224152
Hejsil
don't know if his "inner standards" have raised since I joined

1532224292
kristate
yes

1532224335
GitHub194
[zig] kristate opened pull request #1278: README: include link to channel logs (master...patch-1)

1532224344
kristate
need to get to a meeting -- thanks for the chat, Hejsil!

1532230025
GitHub161
[zig] andrewrk pushed 1 new commit to master:

1532230025
GitHub161
zig/master bb1b796 kristopher tate: README: include link to channel logs (#1278)

1532230026
GitHub53
[zig] andrewrk closed pull request #1278: README: include link to channel logs (master...patch-1)

1532231253
GitHub126
[zig] andrewrk pushed 6 new commits to master:

1532231253
GitHub126
zig/master c5c053b kristopher tate: std.event.tcp: add switch statement in preparation for building-out abstractions;...

1532231253
GitHub126
zig/master bc411af kristopher tate: std.event.tcp: SKIP test instead of OKing test;...

1532231253
GitHub126
zig/master df574cc kristopher tate: std.special.test_runner.zig: make tests skippable;...

1532231253
GitHub105
[zig] andrewrk closed pull request #1275: Allow tests to be marked as SKIPPED. (master...skippable-tests-issue1274)

1532232570
GitHub14
[zig] andrewrk closed pull request #1272: More Socket Defines for Darwin (master...posix-darwin-issue1271)

1532232571
GitHub181
zig/master 460c266 kristopher tate: std.os.posix: Add SOCK_* for darwin;...

1532232571
GitHub181
zig/master 8062afc kristopher tate: std.os.posix: Add SYSPROTO_* for darwin;...

1532232571
GitHub181
zig/master 7ef110b kristopher tate: std.os.posix: Add AF_* for darwin;...

1532232571
GitHub181
[zig] andrewrk pushed 7 new commits to master:

1532238492
GitHub106
[zig] tiehuis closed pull request #1273: Tighten Int.to bounds and add twos-complement bitcount (master...bigint-twos-comp)

1532238496
GitHub162
[zig] tiehuis pushed 1 new commit to master:

1532238496
GitHub162
zig/master 07b6a3d Marc Tiehuis: Tighten Int.to bounds and add twos-complement bitcount

1532239359
GitHub18
[zig] tiehuis opened pull request #1279: Add big int fits function (master...bigint-fits)

1532268703
GitHub127
[zig] andrewrk closed pull request #1279: Add big int fits function (master...bigint-fits)

1532268705
GitHub108
[zig] andrewrk pushed 1 new commit to master:

1532268706
GitHub108
zig/master d53fae3 Marc Tiehuis: Add big int fits function (#1279)...

1532271438
GitHub59
[zig] andrewrk closed pull request #1262: docs: Highlight reader's position in table of contents (master...show-place-in-toc)

1532271600
GitHub98
[zig] andrewrk pushed 1 new commit to master:

1532271600
GitHub98
zig/master 99153ac Andrew Kelley: add std.math.big.Int.fitsInTwosComp...

1532281154
Bas_
We don't have do while or anything, right?

1532281235
andrewrk
Bas_, correct.   while (true) {      if (cond) break; }

1532281242
Bas_
D=

1532281274
Bas_
while(true) is generally horrible if you ask me. Though I can see it's sometimes unavoidable.

1532281297
andrewrk
that's interesting that you say that, because I usually reach for while (true) before anything else

1532281303
andrewrk
only sometimes does it end up being while (condition)

1532281314
Bas_
really?

1532281335
DuClare
I usually start with a while (1) but then find a nice way to express the condition outside the loop bodyu.

1532281452
Bas_
In my opinion it's often hard to see the control flow if there's breaks inside the loop.

1532281481
Bas_
It depends a bit obviously. If there's not too much happening inside the loop it's fine.

1532281559
DuClare
That's why I (try to) move the condition to where it belongs.  But it's not always obvious and I sometimes it's easier to work it out in the loop body first.

1532281586
DuClare
It also depends on the complexity of the condition.  If it gets complex, I don't cram it up there

1532281610
DuClare
Multiple if statements in the loop body will be clearer than a big expression that tries to cover all the logic

