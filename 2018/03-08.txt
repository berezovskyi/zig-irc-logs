1520468471
MajorLag
andrewrk: this is what I imagine for a @TypeInfo struct:

1520469109
MajorLag
Of course this from the perspective of having no idea about compiler internals.

1520485902
aiwakura
@andrewrk what was .setBuildMode(b.standardReleaseOptions()) all about?

1520485979
aiwakura
I'm trying to build that mixed 32/64 bit executable

1520487730
aiwakura
I think I found a good solution

1520487762
aiwakura
I can ask GRUB to load a 32-bit module which switches to 64-bit mode and then jumps to the kernel

1520487766
aiwakura
which is loaded as a module

1520491399
andrewrk
aiwakura: it adds release fast and release safe build options to zig build. You can see them with zig build --help

1520491446
andrewrk
MajorLag: thanks for putting that together. I'll have a look tomorrow. I think somebody made an issue for this at some point. Look for the text "reify"

1520491759
aiwakura
cool

1520492032
jacobdufault
andrewrk: for

1520492056
jacobdufault


1520493684
aiwakura
run into a lld bug

1520493700
aiwakura
so annoying

1520497173
jacobdufault
going through codegen->import_table seems to get it

1520498693
jacobdufault
(though, it is registered as a TldIdVar, but the `var` structure in `TldVar` is null, which seems to imply I cannot get any information about it)

1520501402
GitHub32
[zig] Hejsil pushed 2 new commits to master:

1520501403
GitHub32
zig/master 689e241 Jimmi Holst Christensen: Merge branch 'master' of github.com:zig-lang/zig

1520501403
GitHub32
zig/master 51b2f1b Jimmi Holst Christensen: Translate C can now translate switch statements again

1520502692
hoppetosse
Hejsil: thanks for the translate-c switch fix XD

1520511369
GitHub116
[zig] Hejsil pushed 1 new commit to master:

1520511370
GitHub116
zig/master b288762 Jimmi Holst Christensen: Translate C will now handle ignored return values

1520514201
MajorLag
@andrewrk, I added the example to the issue.

1520519661
GitHub78
[zig] Hejsil pushed 1 new commit to master:

1520519661
GitHub78
zig/master 2e010c6 Jimmi Holst Christensen: Translate C now correctly converts ints, floats, ptrs and enums to bools...

1520523484
andrewrk
jacobdufault, in the TypeTableEntry for the struct, the name field

1520523513
andrewrk
oh I understand your question. yes the import table is the correct way to find it

1520524352
andrewrk
thanks MajorLag

1520524693
andrewrk
I'm merging llvm6 branch into master

1520524953
GitHub170
[zig] andrewrk pushed 2 new commits to master:

1520524953
GitHub170
zig/master 3200ebc Andrew Kelley: Merge branch 'llvm6'...

1520524953
GitHub170
zig/master b57cb04 Andrew Kelley: Merge remote-tracking branch 'origin/master' into llvm6

1520525866
jacobdufault
andrewrk: okay, I'll probably upload a WIP PR tonight, as I've been having trouble getting data from the import table as certain useful fields are null, maybe something obvious I'm missing

1520525904
andrewrk
jacobdufault, I look forward to seeing that. I'll help you figure out the missing parts

1520526085
andrewrk
alright, llvm 6 branch is merged into master. Now it's a 1 week bug squashing palooza and then zig 0.2.0 is released March 15

1520526253
hoppetosse
andrewrk: awesome!

1520526448
hoppetosse
if you were to name the next 3 milestones, what would you call them?

1520526492
andrewrk
and I'm not allowed to use semver? :P

1520526520
hoppetosse
That's a copout!

1520526536
hoppetosse
I mean like if they were chapters of the development book

1520526541
hoppetosse
or the main focus for each one

1520526587
hoppetosse
"The Stability Update", "The Concurrency Update"

1520526642
hoppetosse
0.2.0 might have been the async update

1520526679
hoppetosse
Though I realise how that takes the focus out of all the other stuff that happens

1520526688
andrewrk
0.2.0 is error redesign and coroutines

1520526717
andrewrk
0.3.0 is the self hosted compiler update

1520526723
andrewrk
0.4.0 is the documentation update

1520526815
hoppetosse
self hosted is exciting!

1520526835
hoppetosse
documentation, less so, but fundamentally important

1520526836
andrewrk
a bunch of bugs and features are only going to exist in the self hosted compiler, such as auto generated documentation

1520526852
andrewrk
*bug fixes, sorry :)

1520527042
jacobdufault
oh, self hosting compiler is targeting 0.3.0? that's a lot sooner than I expected :)

1520527067
andrewrk
jacobdufault, don't worry. we're not getting rid of the c++ compiler ever

1520527092
jacobdufault
actually I find it kind of strange you want to maintain both, seems like a lot of work for a stretched team :P

1520527206
jacobdufault
Any idea when you're aiming to release 0.3.0? ie, this year, next year, etc?

1520527243
andrewrk
I'm thinking, at least for pre-1.0.0 releases, I'm going to release each minor version 1 week after the major llvm release

1520527250
andrewrk
their release cycle is 6 months

1520527426
jacobdufault
ah, I'll be really impressed if you manage to land the self hosting compiler in 6 months :)

1520527459
hoppetosse
He's a machine XD

1520527651
GitHub62
[zig] andrewrk pushed 2 new commits to master:

1520527651
GitHub62
zig/master 2db28ea Andrew Kelley: travis ci: update ubuntu llvm repo and CC,CXX env vars to 6

1520527651
GitHub62
zig/master aa9902b Andrew Kelley: translate-c: add missing case labels

1520527727
andrewrk
I have travis linux and appveyor (windows) building master branch with llvm6 successfully

1520527750
andrewrk
macos build is gonna fail until either I try to build it and upload a tarball or homebrew adds llvm 6

1520527972
andrewrk
I think maybe 0.4.0 for the self hosted compiler update. 0.3.0 is the "implement everything that breaks the language" update

1520527982
andrewrk
so that we can stabilize

1520531286
Hejsil
Uuuh, llvm6 on master. That's exciting!

1520531407
andrewrk
Hejsil, yep. now I'll spend 1 week fixing bugs, and then release 0.2.0 on Mar 15

1520533969
dtz
is there expected to be a zig release for use w/llvm 6? :D

1520538604
andrewrk
dtz, next thursday

1520538613
andrewrk
I'm taking 1 week to fix bugs

1520539537
dtz
\o/ good plan

1520540627
GitHub111
[zig] andrewrk pushed 1 new commit to master:

1520540628
GitHub111
zig/master 028ec0f Andrew Kelley: enums with 1 field and explicit tag type still get the tag type...

1520542303
MajorLag2
andrewrk: I can't `@import("folder_local_to_source_file");`? That only works for folders in zig/lib?

1520542371
andrewrk
@import accepts filenames, or package names

1520542384
andrewrk
you can pass packages to the compiler with --pkg-begin command line arg, or you can use the zig build API

1520542402
andrewrk


1520542452
MajorLag2
what defines a package? It looked to me like it was just a folder with an index.zig

1520542458
andrewrk
index.zig is not special

1520542477
andrewrk
a package is just a mapping from a name to a file

1520542497
MajorLag2
ok, so the std lib mapping is just known to the compiler

1520542517
andrewrk
correct, all zig packages get "std" and "builtin" package dependencies

1520542529
andrewrk
s/dependencies/mappings

1520542535
MajorLag2
got it

1520547433
GitHub120
[zig] andrewrk pushed 1 new commit to master:

1520547433
GitHub120
zig/master aaf2230 Andrew Kelley: fix partial inlining of binary math operator using old value...

