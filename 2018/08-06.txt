1533513666
scientes
how do i build the testcase so i can use gdb on it?

1533513749
kristate
last test case is compiled to ./zig-cache/test so you can use lldb ./zig-cache/test

1533514282
scientes
ok there is a basic test

1533514710
scientes
hmm I think there is something wrong

1533518887
scientes
whever i program it up i get something wrong :(

1533523903
scientes
k got it fixed

1533523910
kristate
scientes: cool

1533524737
andrewrk
unique_id, slicing asserts that start < len and end <= len

1533524761
andrewrk
if you want just the pointer of a slice you can access it with the ptr field - and if you slice that pointer there is no safety

1533524785
andrewrk
btw unique_id I'm trying to run a hello world vulkan example and it's segfaulting in libc, do you know anything about this?

1533524922
andrewrk


1533524938
andrewrk
the segfault is in ____longjmp_chk () in libc.so, with no stack trace above that

1533525686
andrewrk
Dirkson, coroutines can be concurrent if you use std.event.Loop.initMultithreaded

1533525695
andrewrk
you can see some std lib tests for example and the self hosted compiler

1533527785
kristate
back

1533527802
kristate
andrewrk: online? :)

1533527809
andrewrk
hi kristate

1533527815
kristate
yay

1533527828
andrewrk
nice work

1533527830
kristate
let me push what I have

1533527899
kristate
andrewrk: pushed

1533527941
kristate
debating on what to use on macos for futexes -- lots of implementations use pthread API

1533528187
kristate
hmm got disconnected for a bit

1533528610
kristate


1533529055
andrewrk
kristate, probably kqueue

1533529172
kristate
andrewrk: we are using kqueue for event notification in place of epoll on linux, but how should we sync threads

1533529180
kristate
you are using futex on linux

1533529208
kristate
but the equivalent doesn't exist on osx -- lots of people are rolling their own

1533529227
kristate
we could use a named pipe and send a single character to it

1533529253
kristate
and use kqueue to poll on it

1533529483
andrewrk
kristate, when you say how to sync threads, what do you mean?

1533529499
andrewrk
I already implemented a solution to sync threads using kqueue for M:N threading in std.event.Loop

1533529510
andrewrk
are you referring to how to implement std.Mutex?

1533529518
andrewrk
(which is right now a spinlock with a TODO comment)

1533529543
kristate


1533529588
kristate
for the FS thread

1533529678
andrewrk
does darwin need an FS thread?

1533529724
kristate
yes, same as linux -- libuv and other bittorrent libraries are all creating threads

1533529741
kristate
we can use kqueue for file watching and directory watching will require another thread

1533529770
kristate
dir watching will use the FSEvents API

1533529843
andrewrk
really? another thread for dir watching?

1533529950
kristate


1533529971
andrewrk
ahh

1533529972
kristate
FSEvents uses Apple's CFLoop API for event handling

1533530055
kristate
I wonder if we can back the FS thread of CFLoop on mac

1533530076
kristate
and then just use CFLoop primitives to signal the thread....

1533530116
kristate
that is, replace the futex with CFRunLoopRun

1533530391
kristate
it looks like we can wake-up the loop with pCFRunLoopWakeUp

1533530522
kristate


1533535493
tiehuis
Dirkson: updated the zig benchmarks game repo

1533535509
Dirkson
tiehuis: Neat! I'll see if I can't look into that soon.

1533535516
tiehuis
All the examples now work and are accurate and ive added a test script to compare all against each other

1533535534
tiehuis
There are 3 programs left to implement

1533535901
Dirkson
Neat!

1533536137
Dirkson
tiehuis: So far, so good. Running it on the laptop since I'm in bed already.

1533536229
Dirkson
The zig version of fasta is actually faster than C on my machine, by like 25%

1533536274
tiehuis
I havent rally looked in depth at optimizing anywhere yet so most are just a rough translation

1533536319
Dirkson
The C should be pre-optimized, no?

1533536334
Dirkson
tiehuis: You've got two sets of identical "Fasta" tests in the run file

1533536399
Dirkson
And on my computer, both the C and Zig version of Reverse Compliment returned "command terminated by signal 11". Not sure if that's worth chasing

1533536510
Dirkson
tiehuis: "libgomp" appears to be a dependency of the C portion of this stuff as well, but isn't mentioned in the readme

1533536552
tiehuis
Ah yes will add that to readme pcre too

1533536891
Dirkson
Hey, what units is "maxresident" in? Because zig appears to be

1533536917
Dirkson
Well, at least 5

1533537479
tiehuis
Zig startup code is proabably lighter than c for the examples that dont allocate much

1533537510
tiehuis
Might be that would need to check

1533553269
unique_id
andrewrk: I've got no clue. I ran your example with 09_shader_base.vert/.frag and it ran for me. The only time I've had issues running code that should work is when I've accidentally had the nouveau drivers running instead of the nvidia one.

1533553959
unique_id
to understand how glsl is changed for vulkan, read GL_KHR_vulkan_glsl.txt

1533554015
unique_id
maybe ask on ##vulkan

1533559543
unique_id
It turns out that vulkan uses stdcc on windows. We have stdcallcc but is there any way to do this conditionally? I had the idea of conditionally importing a different file for windows (as preferrably a temporary solution) but I'm getting syntax errors. This is for my vk.xml conversion projection, there's no rush.

1533559563
unique_id
project*

1533559676
unique_id
Ehem, stdcall not stdcc

1533574019
MajorLag
andrewrk, compiler still doesn't do any caching between builds right?

1533574033
MajorLag
as of 0.2.0+1f4c7d5e?

1533576272
unique_id
Is there no way to @import() from the root of the project so paths do not look like this: "../../foo.zig"?

1533576407
bheads
does --isystem work for zig files ir just .h files?

1533577764
MajorLag
I think I've discovered a new defer bug. Could be my fault and I don't see how yet. Looking in to it.

1533578050
MajorLag
Nevermind, this one's on me.

1533579753
andrewrk
MajorLag, correct - stage1 does no caching

1533580274
andrewrk
unique_id, it used to work that way, but I changed it to be relative to the current path

1533581162
unique_id
Alright. Both have their benefits and downsides

1533581635
unique_id
andrewrk, did you see my issue with vulkan's usage of stdcall on windows?  What on earth could solve this issue?

1533582180
andrewrk
unique_id, I think that I was trying to send shader source to the driver rather than SPIR-V, but for some reason the validation layer wasn't catching it, and it was crashing instead of giving an error message

1533582235
andrewrk
unique_id, sorry I meant to add a tidbit to the last message - one strategy you can do is to have a file that references everything else in your library. for example std does this - std/index.zig references everything else and all the files in std do const std = @import("../../index.zig");

1533582252
andrewrk
so then it's only 1 weird path and everything else is referenced through the std variable

1533582271
andrewrk
another option is to map packages into your package namespace so that @import("foo") references whatever file you want

1533582304
andrewrk
alright I need to get through these pull requests

1533584562
unique_id
andrewrk: Oh okay. Btw glslc is the glsl to spirv compiler I use. It's intuitive and great. It comes with the vulkan sdk.

1533584789
andrewrk
thanks! I was trying to find something to do that

1533584936
andrewrk
unique_id,

1533584946
unique_id
There it is :)

1533585057
andrewrk
if I'm going to do any real work I'll need to make sure this validation layer thing is working

1533585297
unique_id
andrewrk: Change VkInstanceCreateInfo's sType to something else. VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO

1533585398
andrewrk
unique_id, I get a shaded triangle same as before

1533585440
unique_id
no message in the terminal?

1533585447
andrewrk
correct

1533585630
unique_id
that's odd. I get an error

1533585766
unique_id
using your demo

1533586166
andrewrk
it's just this:

1533586199
andrewrk
(+ your change)

1533586213
andrewrk
I'm guessing that the validation layers aren't working for me

1533586230
andrewrk
which is why I was getting a segfault instead of an error message for sending source instead of SPIR-V

1533589400
unique_id
andrewrk, did you see my issue with vulkan using the stdcall calling convention only on windows? I don't know of a way to represent that in Zig.

1533589468
andrewrk
unique_id, oh I'm sorry, you mentioned this earlier and I didn't understand

1533589476
andrewrk
looking now

1533589501
andrewrk
ah

1533589552
andrewrk
we can talk about a way to improve this, but here's how to do it right now

1533589574
andrewrk
vulkan/windows.zig: put all the extern definitions there that have stdcallcc

1533589590
andrewrk
vulkan/other.zig: put all the extern definitions there without stdcallcc

1533589597
andrewrk
(sorry I mean fn prototypes not definitions)

1533589746
andrewrk
vulkan.zig: pub use switch(builtin.os) {builtin.os.windows => @import("vulkan/windows.zig"), else => @import("vulkan/other.zig"), };

1533589768
unique_id
ok I'll try that again, for some reason I was getting syntax errors

1533589773
unique_id
I couldn't figure it out

1533589794
andrewrk
oh, here's the issue that will make this way way simpler:

1533589802
andrewrk
I can prioritize this if it would unblock you

1533589820
unique_id
no the use switch will work fine

1533590178
unique_id
doh. The syntax error I was getting was in a different file, the one I was importing.

1533590204
andrewrk
#661 is definitely a nicer way to solve this

1533590223
unique_id
and the line number was the same line number that I was editing

1533590229
andrewrk
ha  wow

1533599813
scientes
why can't i "comptime if ()" ?

