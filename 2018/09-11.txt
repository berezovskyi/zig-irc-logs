1536629805
unique_id
I just submitted another bug report. Feel free to ignore them and keep them as tests for stage 2! These aren't exactly pressing.

1536630174
andrewrk
thanks unique_id

1536630184
andrewrk
that's definitely the plan - to use this corpus of tests for stage2

1536673429
porky11
hi

1536673624
andrewrk
hi porky11

1536674011
porky11
I'm currently installing zig and want to try it

1536674083
porky11
is there already some geometric algebra lib written in zig?

1536674105
andrewrk
I don't think so

1536674113
andrewrk
you could use a C library

1536674185
porky11
no, it's not possible to implement geometric algebra in C in a generic way

1536674195
andrewrk
ah I see

1536674217
porky11
I talk about something like this

1536674282
porky11
I was only able to implement it in scopes yet, which has pretty similar semantics to zig

1536674329
porky11
there also is not a list of packages or even a package manager yet?

1536674674
andrewrk
porky11, not yet. here's the issue to track for that:

1536676260
porky11
can I see some example usage of the zig build system?

1536676266
porky11
the documentation is still missing

1536676279
andrewrk
porky11, yes, here are some examples:

1536676290
andrewrk


1536676297
andrewrk


1536676321
andrewrk


1536676325
andrewrk
oops.

1536676404
andrewrk
the build system is still at proof of concept stage - it works but it's missing some important things like caching, good documentation, and some ergonomic features

1536676740
porky11
andrewrk, since I'm still using just make, it's likely to be an improvement

1536677639
andrewrk
it does have the benefit that you remove a dependency on make - so you're probably making the build process easier for cross-platform applications

1536679693
greglefox
hello

1536679954
greglefox
any zigger here ?

1536680052
andrewrk
hi greglefox

1536680082
greglefox
hi andrew

1536680093
greglefox
nice video on the memory

1536680118
andrewrk
thank you

1536680336
greglefox
is there any forum outside of redit ?'

1536680360
greglefox
to ask 'basic' questions ?

1536680465
andrewrk
you can ask basic questions here

1536680473
greglefox
ok ...

1536680481
andrewrk
there's also stack overflow

1536680503
andrewrk
so far 100% of zig tag questions have accepted answers :)

1536680505
greglefox
just installed comiled llvm + VS2015 update3 + CMAKE

1536680513
greglefox
git clone zig

1536680514
andrewrk


1536680529
greglefox
achieved to compile zig

1536680543
greglefox
but zig build test failed

1536680579
andrewrk
greglefox, I am sorry, I have a flakey test in master right now.

1536680822
andrewrk
I will disable the stage2 tests on all targets until this issue is fixed

1536680888
greglefox
I see

1536681219
andrewrk
greglefox, I pushed a commit to disable stage2 tests. I am focusing on stage1 until 0.3.0 which is scheduled for sept 21

1536681374
andrewrk
now I would expect all the tests to pass for you

1536681411
greglefox
btw I get the feeling build.zig was not even starting at all and failing on an assert

1536681431
andrewrk
I can help if you show me the output

1536681723
greglefox
Build failed. The following command failed: C:\Zig\zig\zig-cache\build bin\zig C:\Zig\zig C:\Zig\zig\zig-cache test

1536681749
greglefox
and before an incomplete stacktrace with a failure on an assert

1536681853
andrewrk
I'm going to need more than that. Can you link me to a paste of all the output?

1536681892
andrewrk
by the way there's an ongoing build you can watch, how it's supposed to look:

1536681893
greglefox


1536681933
andrewrk
oh this is very interesting, thank you

1536682027
greglefox
very clear thank you for the CI

1536682071
andrewrk
greglefox, it's still going, but when it's done you can download a zip file with a working build

1536682096
greglefox
sure I will do

1536682142
andrewrk
that's very strange that microsoft's CloseHandle returned an error. that's undocumented

1536682228
andrewrk
I think we should probably just remove the assert

1536682234
andrewrk
greglefox, if I send you a diff can you try it?

1536682236
greglefox
PS: another small issue: I use visual code (windows 10 64bits) and when file are saved, zig will complain about carriage return and not compile

1536682237
greglefox
C:\Zig\test\test.zig:2:61: error: invalid carriage return, only '\n' line endings are supported

1536682272
andrewrk
I think there is a little icon in the bottom right and you can change the line ending style

1536682283
greglefox
indeed

1536682391
greglefox
(did not get issued on NIM or C/C++, should have pay attention)

1536682497
greglefox
Sorry I have to logoff (I am in HK, it is late here), but I can try diff tomorrow

1536682555
andrewrk
thanks for stopping by, cheers

1536682589
greglefox
thanks for your time, on my way to learn more on zig

1536682678
MajorLag
andrewrk, did you happen to fix that problem where the wrong line number/carrot position is shown in COFF traces?

1536682700
andrewrk
MajorLag, no, I haven't figured it out yet

1536682737
andrewrk
it also doesn't seem to be a consistent pattern

1536682751
andrewrk
in the above stack trace it seems like it's pointing to an address too early

1536682756
andrewrk
but in some places it seems late

1536682828
andrewrk
I'll fiddle with it and see if I can get better results

1536682901
MajorLag
yeah, I've noticed the same thing. sometimes it is even correct.

1536683198
andrewrk
MajorLag, one thing I can do to sanity check, is have a program manually print its @returnAddress for every fn call, and then do a stack trace, and make sure RtlCaptureStackBackTrace is getting the correct addresses

1536683226
andrewrk
once that is verified then we know it's an issue with the line/col mapping

1536683294
andrewrk
even off by a little though, wow, that was incredibly helpful to get that stack trace just now

1536695993
cgag
andrewrk: what's the memory video greglefox mentioned?

1536696052
andrewrk
cgag,

1536697899
cgag
oh nice, sounds useful, i've just been poking around src-self-hosted and mem.zig to figure things out

1536702764
wink_
I run into a little problem, I've got a `fn next` which returns `?(error![]u8)`, see:

1536703630
andrewrk
wink_,  your next function has to return an error union

1536703637
andrewrk
because you're using `try`

1536703731
andrewrk
more specifically zig has to be able to implicitly cast the error set of mem.dupe to your return value, which is ?(error![]u8) and this is not an allowed implicit cast

1536703781
andrewrk
you could do this: mem.dupe(pAllocator, u8, s.?) catch |err| return (error![]u8)(err);

1536703798
andrewrk
but I would recommend that if your function can fail, that it is an error union return type

1536704962
wink_
Thanks, BTW I had to change `return n;` to `return (error![]u8)(n);`When you say "error union return type" what do you mean?

1536705187
andrewrk


1536705411
wink_
Yeah, I normally would use `![]u8`, but I got the idea of returning "null" plus an error union return type from ArgIteratorWindows and ArgIterator in std/os/index.zig. Definitely didn't come up with that myself :)

