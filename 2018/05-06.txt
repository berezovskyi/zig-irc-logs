1525577354
tiehuis
in the process of revisting a big number library, should be finished in a week or so

1525587966
alpha1220
Does zig support multi-methods? Or is there any example of visitor pattern in zig? I was planning to do `Crafting Interpreters` in zig.

1525588784
alpha1220
Also, are there macos master builds available for download? The download page lists only homebrew which I believe is the  stable build?

1525602289
Hejsil
alpha1220, no multi methods. Dispatching based on types in Zig is explicit:

1525602339
Hejsil
Though, you can do some tricks to make it less verbose:

1525603017
alpha1220
Hejsil: Thank you.

1525609869
alpha1220
Can zig compile to android? If yes, how? I tried `--target-environ android --target-arch armv7`. Then adb'ed the binary to the device. And I get a segmentation fault.

1525614947
alexnask
$1 = {items = 0x2363000 "armebv8m_mainline", {heap_data = {length = 7021767589229589587, capacity = 792633534417233251}, bytes = "StackTrace\000\000\000\000\000\v"}, static LastByte = 15, static SmallBufferMaxItems = 15}

1525614951
alexnask
>.>

1525619587
perfwill
hey

1525620443
alexnask
hi

1525625268
perfwill
how am I supposed to do ref count in zig?

1525625310
perfwill
like an ArrayList that automatically gets deallocated when it goes out of scope

1525625692
alexnask
There is currently no RAII capability

1525625706
alexnask
I think there are proposals for some simple form

1525625745
alexnask
What people usually do is: var resource = get_resource(); defer free_resource(resource); // Do stuff with resource...

1525626544
perfwill
got it

1525626586
perfwill
But how are we supposed to structure allocators in zig?

1525626594
perfwill
I see it being required everywhere

1525626666
perfwill
should we pass it down to functions or should we put it in a common import or something?

1525627888
alexnask_
Perfwill, in your own code thats your decision to make

1525627901
alexnask_
Personally i take it as a func argument

1525627917
alexnask_
And store it in structs that own mem on the heap

1525627943
alexnask_
A global is ok but i like making it explicit what can allocate and what cannot

1525628082
alexnask_
Plus it makes it easier to switch parts of the code tp use another allocator if you want to test it out

