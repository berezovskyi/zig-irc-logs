1529198006
GitHub197
[zig] andrewrk closed pull request #1109: allow passing by non-copying value (master...pass-by-non-copying-value)

1529198007
GitHub134
[zig] andrewrk pushed 1 new commit to master:

1529198007
GitHub134
zig/master 7515187 Andrew Kelley: Merge pull request #1109 from ziglang/pass-by-non-copying-value...

1529198808
diefroggy242


1529198862
diefroggy242
I'm getting a build error about the TargetMachine and the type of file it emits. I found the relevant error string in zig_llvm.cpp but it's not obvious to me what I'm doing wrong.

1529199103
andrewrk
hmm let me see if I can reproduce it

1529199218
diefroggy242
Thank you

1529199291
andrewrk
ok I get the same thing, let me check something...

1529199310
andrewrk
I'm wondering if msp430 is an experimental target of LLVM (not enabled by default)

1529199348
diefroggy242
I think it might be

1529199398
andrewrk
hm looks like a normal target

1529199421
andrewrk
I'm going to go ask #llvm

1529199653
andrewrk
diefroggy242, I get this when I try to use clang with msp430 target:

1529199670
andrewrk
this is why we don't have msp430 in the support table in the readme

1529199692
andrewrk
I think it's not fully working in LLVM. I'll send a message to the mailing list to find out what's going on.

1529199806
diefroggy242
hmmm... why would llvm say that msp430 was a target if it didn't work even that much?

1529199864
diefroggy242
what is the msp430-unknown? specifically the unknown part?

1529199898
diefroggy242
is that the environment? I wasn't sure what setting to use for that. I've tried code16 and unknown in my build.zig file. Neither worked.

1529199934
andrewrk
diefroggy242, "unknown" in the target triple to clang means "freestanding"

1529200010
diefroggy242
It looks like clang can at least get to the part where it turns the c file into assembly instructions, even if the assembler can't do anything with them? Is there an option in zig to emit assembly? I could then use the gcc assembler that TI provides.

1529200122
andrewrk
diefroggy242, yeah, try this: zig build-obj yourfile.zig --target-arch msp430 --target-os freestanding  --emit asm

1529200146
andrewrk
I don't think we have a build API for this yet

1529200151
andrewrk
but you can run this command directly

1529200182
diefroggy242
perfect thanks

1529200242
diefroggy242
andrewrk, excuse my ignorance, but by build API you mean within the build.zig file? I would have to switch to a Makefile for this, right?

1529200308
andrewrk
yes that 's what I meant

1529200336
andrewrk
I can add it, just haven't yet

1529200365
andrewrk
build.zig is a bit experimental right now

1529200566
diefroggy242
Thanks for your help. I haven't gotten very far with Zig yet, but I really like what I've seen. I do embedded software for high reliability systems at work only in C, and am searching for something better. Thanks for sharing your work with the world. Goodnight

1529200583
andrewrk
goodnight, come back any time

1529203965
dbandstra
andrewrk, how can i call c.SDL_GL_SetAttribute? its first param is a `typedef enum {...} SDL_GLattr;`

1529203995
dbandstra
if i pass e.g. c.SDL_GL_STENCIL_SIZE, i get the error integer value 7 cannot be implicitly casted to type 'SDL_GLattr'

1529204074
andrewrk
hmmm, C lets you implicitly cast integers to enums, doesn't it

1529204100
andrewrk
try this: c.SDL_GLattr(c.SDL_GL_STENCIL_SIZE)

1529205753
dbandstra
that says 'expression value is ignored' for some reason

1529205778
dbandstra
that says 'expression value is ignored' for some reason

1529205780
dbandstra
oops

1529205804
dbandstra
nevermind that was because SDL_GL_SetAttribute returns an int, thanks

1529206606
andrewrk
dbandstra, you know about `_ = foo()` ?

1529206614
andrewrk
to throw away a return value

1529206705
dbandstra
yeah

1529206771
dbandstra
i was just thrown off for a moment by the '^' in the error message(points to the end of SDL_GL_SetAttribute token so i intuitively thought something was wrong with the argument)

1529207069
andrewrk
ah, yeah that could be much better

1529210066
dbandstra
has anyone started to make a game in zig? other than tetris, and the mysterious wolf3d thing on tgschultz's site?

1529210103
andrewrk
i'm not aware of any projects

1529210143
andrewrk
my game projects are progressing very slowly because I'm insisting in one project to not have an operating system (boot into the game), and in the other project not depend on libc

1529210269
dbandstra
i'm trying to come up with an idea that would be technically useful/interesting (zig-wise), and also quick to make

1529210307
dbandstra
if only to help get some basic libraries built (image loading, 3d math, whatever)

1529210396
dbandstra
maybe just a FPS.. that's always a good fallback if you have no original ideas i guess

1529210422
dbandstra
except it needs art assets

1529210550
dbandstra
something with non-animated actors (tanks? ships?) ... arcade gameplay ... multiplayer possibilities

1529210597
dbandstra
basic physics

1529210755
andrewrk
opengameart.org is pretty good

1529218836
GitHub51
[zig] andrewrk opened pull request #1123: Remove number casting syntax (master...remove-number-casting-syntax)

1529239484
bodie_
I want to get the fd for the executable file of the calling process in C++ so I can patch the macOS relative path bug.

1529239488
bodie_
how should I do this?

1529239511
bodie_
i.e., without /proc

1529240798
bodie_
it looks like the usual way is to read argv[0], which is kinda disappointing

1529244112
diefroggy242
I think the compiler is treating my target as 32 bit. See

1529244351
diefroggy242
I am using the include files provided by TI and intended for gcc. They use int for 16 bits, etc. Maybe I should just modify the header to use stdint types? I'm not sure what other problems could come up from the compiler having the wrong int size though

1529244665
Hejsil
I think that is Zig giving c_int the wrong size for the target:

1529244908
diefroggy242
Ah I see maybe. I guess for freestanding, there should be another switch inside there per architecture? I tried building the compiler from source but got an error about missing CLANG even though I think I have everything installed. I didn't try very long though.

1529244988
diefroggy242
I've never filed an issue on Github before. I've only used subversion at work. Would this count as an issue?

1529245016
diefroggy242
It would be pretty easy to just modify my include files to take that into account.

1529245056
Hejsil
It sounds like a bug to me

1529245073
Hejsil
If Zig can compile to your target, everything really should just work

1529245077
Hejsil
c_int and all

1529245098
diefroggy242
By the logic currently, a long on msp430 is shorter than an int

1529245211
diefroggy242
Thanks for your help.

1529245218
Hejsil
I think this is releated, but I can't find an issue for c_<type> in general:

1529245223
Hejsil
So post your issue :)

1529247325
diefroggy242
Sweet first issue posted on github!

1529253311
andrewrk
bodie_, like this?

1529254117
GitHub102
[zig] andrewrk pushed 1 new commit to master:

1529254118
GitHub102
zig/master e5956f2 Andrew Kelley: add target C int type information for msp430 target...

1529259699
andrewrk
I'm not able to reproduce the travis failure on my mac

1529260822
GitHub41
[zig] andrewrk pushed 1 new commit to master:

1529260822
GitHub41
zig/master 431fda4 Andrew Kelley: Merge pull request #1123 from ziglang/remove-number-casting-syntax...

1529260825
GitHub154
[zig] andrewrk closed pull request #1123: Remove number casting syntax (master...remove-number-casting-syntax)

1529261302
GitHub27
[zig] binary132 opened pull request #1127: Fix 1117: Use realpath in stage1 Darwin os_self_exe_path (master...fix-1117-macos-realpath)

1529261633
bodie_
andrewrk, well I was hoping to use getpid() and then somehow map that to the fd so I could look up the real path by fd instead of by path

1529261642
bodie_
but this patch should do the trick

1529267668
vegecode
andrewrk, did you ever get a response from llvm about the status of msp430? I would enquire, but I'm not entirely sure what  to ask

