1543630073
emekoi
what is the purpose of lines like

1543630302
andrewrk
emekoi, it's a workaround for a coroutine bug that will be fixed with the rewrite

1543630376
emekoi
is there a way to get the handle of an async function without calling and suspending from inside it?

1543632143
daurnimator
andrewrk: hey :)

1543632272
StateOff
Hi there.

1543648192
reductum
Just starting to get acquainted with the stdlib. I would like to pass a *std.unicode.Utf8Iterator to a function, but that struct is private. Is there a reason for that?

1543648382
reductum
I ask because right below Utf8Iterator, Utf16LeIterator is defined, and that's public.

1543648400
andrewrk
reductum, generally, if something is private but seems like it should be public, it was an oversight

1543648489
reductum
andrewrk: Got it. I shall submit the most trivial of PRs.

1543648502
andrewrk
reductum, apologies, I already pushed to master

1543648563
reductum
Even better! Now I can pull it down and continue with this (zig) advent of code.

1543648628
andrewrk
wow you're doing unicode stuff?

1543648632
andrewrk
why is that?

1543648644
andrewrk
I ask because I just finished mine

1543648702
reductum
Well I'm taking this advent of code as an opportunity to familiarize myself with various bits of the stdlib, so I decided to treat the "input" for the first puzzle as utf8 code points, even though it's all the ascii subset.

1543648755
andrewrk
interesting

1543648788
andrewrk
that goes against something I've come to the conclusion of about utf8, which is that, the beauty of it is that you can almost always leave it encoded

1543648788
reductum
I've watched zig from afar for a while, but decided I should finally get used to actually programming with it.

1543648838
andrewrk
(can, and should)

1543648917
reductum
Yes that's the way I usually do it. I think I've drifted toward this approach due to unfamiliarity with the language and the stdlib. I guess I should poke around more.

1543649392
reductum
Yes. It was helpful to look at std/zig/tokenizer.zig

1543651049
bcdfgh
Are there plans for os.File to support io.readLineSliceFrom() ? I got an error readByte() not defined for os.File (IIRC).

1543651189
bcdfgh
Another thing regarding

1543653121
daurnimator
andrewrk: oh? what did you do with unicode?

1543669682
Hejsil
bcdfgh, if you do const stream = &file.inStream().stream; then you get all these functions:

1543669907
daurnimator
Hejsil: is that safe?

1543669938
daurnimator
I thought file.inStream() may return a struct-by-value. then .stream may have methods that use @fieldParentPointer or something.

1543669983
Hejsil
Im taking the adress of the stream so its ok, as Zig stores the result of file.inStream() in memory on for me

1543670383
ft3
Hi

1543670393
ft3
How's networking in Zig?

1543670423
ft3
I tried looking through the std lib and only found net.zig and not much in it unfortunately

1543671674
Hejsil
Thats about all there is. Related issues:

1543671715
ft3
Thanks a lot!

1543673971
daurnimator
ft3: essentially I would wait for #1778 before writing any networking code

1543686191
sjums
I need some professional help on why I'm getting a compile error so I can understand it and do it right! >.<

1543686193
sjums


1543688077
basro
hello, does zig target or have plans to target to webassembly in the future?

1543688103
j`ey
zig uses LLVM, so I guess it's possible

1543692340
andrewrk
basro, yes

1543692379
andrewrk
if you look at the readme, webassembly is Tier 4 support, which is not great. after llvm 8 comes out, it will be Tier 3, and we can work on making it 2 and then 1

1543692445
andrewrk
sjums, pass your input as a pointer, so that it as mutatable

1543692709
basro
andrewrk, so there's at least a plan to have it be tier 1 in the future?

1543692724
andrewrk
basro, yes

1543692728
basro
ok, very nice

1543692739
andrewrk
the main blocker right now is that LLVM 7 (current release) has it as an experimental target

1543692759
andrewrk
so it's not even guaranteed to be available

1543692767
andrewrk
but that is changed in trunk

1543692778
andrewrk
so zig 0.4.0 will have the wasm target guaranteed

1543692819
basro
do you have a rough estimate on how long that will take from now? just so I can remind myself to come back and check zig for this purpose in after such time passed

1543693128
andrewrk
basro, 0.4.0 is scheduled for March 15 2019

1543693153
andrewrk
it's coordinated to be 1 week after LLVM 8 is released, so if they have a delayed release, zig does too

1543693200
basro
ok, thanks andrewrk, I'll definitely be checking out zig with the goal of using it for wasm by then

1543693213
andrewrk
basro, great, see you then :)

1543698214
emekoi
i was working on added network to support for windows and i was wondering if functions like ntohl and friends.

1543698265
emekoi
i'm guessing no because we have functions like std.mem.endianSwapIfLe

1543700774
emekoi
do we have a memmove implementation anywhere

1543701361
seedofonan
Is zig.exe expected to crash with the dialog box "Windows will close the program ..." anytime it reports an error?

1543701697
seedofonan
how does one ask a question here? My first time...

1543701972
hryx
seedofonan: the compiler shouldn't ever crash, so if you see that, it's probably a bug

1543702028
hryx
what command were you running (e.g. `zig build-exe`)? Does the crash happen every time?

1543702098
hryx
I'm not too familiar with windows, so I'm not totally sure what that dialogue means

1543702490
seedofonan
I just downloaded zig-windows-x86_64-0.3.0.zip and unzipped it. Seems to crashes every time it reports an error w/ stacktrace. And the stacktrace never has words, is always like ???:?:?: 0x7ff7e6d6167f in ??? (???).

1543702782
hryx
Oh, as for those question marks, I believe stack traces were broken on windows until recently

1543702853
hryx
I'm not sure why you'd be seeing that dialogue though. Maybe someone with more windows experience would know what details to ask you

1543703061
seedofonan
Now I just tried the last nightly. Stacktrace has words okay, but still crashes out. Also now working is "zig build" following a "zig init-exe". That was also crashing with the 3.0 release version.

1543703125
benjikun
I'm pretty certain the question marks are intentional in some cases, gdb displays stuff similarly

1543703196
benjikun
Weird to see that windows dialog box popup though

1543703414
benjikun
seedofonan: What are you building?

1543703423
benjikun
I loaded up my windows laptop with 0.3.0

1543703577
seedofonan
Literally anything. Like in the top of the 0.3 release notes, there's a screenshot of "test "stack traces"" for "fn addOne" and then I do a "zig.exe test test.zig".

1543703681
suirad
seedofonan: what version of windows are you running?

1543703708
andrewrk
seedofonan, that's what windows does when a program crashes. that's expected behavior

1543703730
andrewrk
if you have a debugger installed it would open it up for you to debug

1543703752
andrewrk
seedofonan, we had an unfortunate regression with stack traces that happened right before 0.3.0 was released

1543703843
hryx
just so I understand, you mean this dialogue should appear any time something exits non-zero? Or crash as in get e.g. segfault?

1543703984
andrewrk
exit(1) should not trigger the pop up, but crashing with @panic or a segfault yes

1543703997
andrewrk
it's configurable in windows how windows should respond to this

1543704028
hryx
I see. what does @panic do that would make this happen?

1543704031
hryx
some kind of signal?

1543704044
andrewrk


1543704059
andrewrk
in debug mode it's an actual trap instruction, intentionally, to trigger a debugger

1543704067
andrewrk
in release mode it's just exit(3)

1543704083
hryx
awesome, I see

1543704139
andrewrk
this is std.os.abort(). @panic calls the panic handler, which you can override in your root source file, but the default is here:

1543704152
andrewrk
the default panic handler dumps a stack trace and then calls abort()

1543704202
andrewrk
seedofonan, if you have a suggestion for different behavior, please do share. this was the best I came up with when I looked at the APIs and experimented with different behaviors

1543705556
seedofonan
Okay, thanks all for your attention. The behavior is supprising for an operation like "zig build ...", but rational for zig, I imagine. And as you mention, configurable in Windows.

1543705644
andrewrk
seedofonan, I think there could be a good argument that `zig build` should not abort() when the build fails. That should probably be a normal exit(1)

1543705751
andrewrk
we have reached GitHub's popularity requirements for them to add zig syntax highlighting

1543705764
andrewrk
Happy December everyone

1543705783
hryx
oh hell yes

1543705874
suirad
awesome

1543705892
reductum
Yes!!

1543705910
suirad
that sort of recognition will add credibility to the name

1543706037
Hejsil
The repo list is on the liguest issue is cool. I should go through as see if people have made something cool

1543706054
Hejsil
Also 17 zig repos with nearly a 100 zig files from me!

1543706106
andrewrk
Hejsil, I enjoyed reading your advent of code code

1543706111
andrewrk
I see you bothered to handle stdin :)

1543706175
Hejsil
I was considering whether to just have an int array, a long string

1543706187
andrewrk
did you see mine?

1543706191
Hejsil
But then decided that those where boring and just did the stdin

1543706194
Hejsil
Ye

1543706196
andrewrk
haha

1543706210
andrewrk
I think my hashing strategy for AutoHashMap isn't amazing

1543706298
Hejsil
I'm using them a lot in my randomizer refactor:

1543706311
Hejsil
So hopefully there good enough

1543706334
andrewrk
the point is that they're good enough in theory, so we can always improve the implementation and not change the API

1543706344
Hejsil
Indeed

1543706363
Hejsil
Also, did a demo:

1543706389
andrewrk
oh cool!

1543706437
Hejsil
I'm really happy with how this is turning out. Idk if anyone cares for terminal based rom hacking though :)

1543706524
andrewrk
this is exciting, I haven't seen any demos from you until this one

1543706641
benjikun
This is in zig?

1543706655
benjikun
very cool hejsil :p

1543706658
Hejsil
Yes

1543706726
seedofonan
andrewrk, I don't have any opinion yet about zig build doing a panic vs an exit. Since the zig build system is compiling and running a user written zig application, perhaps that's why the present behavior makes good sense. More helpful I think would be a few words in the Documentaion at the beginning to set the expectation.

1543706807
andrewrk
Hejsil, I like this unix philosophy thing you have going here. it makes a lot of sense for this use case

1543707146
suirad
Hejsil: thats pretty cool

1543707819
emekoi
if github is going to add syntax highlighting support then we better make sure that the syntax highlighting is working properly.

1543707891
andrewrk
emekoi, it's a little outdated, but I believe once it gets accepted, then we are in control of the repository, and changes roll out on a regular basis

