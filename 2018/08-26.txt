1535247467
moxotter
Hi!

1535248097
andrewrk
hi moxotter

1535248701
kristate
hi moxotter

1535248737
kristate
scientes: hey, let me get that code up re: networking. it has been a busy week for me and I haven't gotten a chance to push the code

1535248753
kristate
andrewrk: please kindly ignore

1535248791
scientes
closed

1535248813
andrewrk
kristate, did you get to use macos stack traces yet? :)

1535248836
kristate
andrewrk: going to pull and make right now. I am excited.

1535248892
scientes
I was trying to think about how go-like async could be added. it is kinda intrusive

1535248897
andrewrk
also now error return traces are going to be beneficial for you

1535248904
scientes
and it would mean libraries couldn't be called as shared libraries

1535248928
andrewrk
scientes, why would we want go-like async when we can have multiplexed async/await?

1535248948
scientes
yeah that works

1535248952
andrewrk
what we have prototyped right now is more natural to parallelize

1535248965
scientes
with promises

1535248966
andrewrk
with go's model you have to choose where to parallelize things and it's difficult to be optimal

1535249020
moxotter
andrewrk, I'm an AI developer specializing in neural networks. I was wondering if Zig makes use of the FMA instruction set?

1535249054
andrewrk
moxotter, are you talking about the fused multiply-add operation?

1535249065
moxotter
andrewrk, yes

1535249097
andrewrk
moxotter, here's the issue to track for that:

1535249113
andrewrk
it's scheduled for 0.4.0 (note that 0.3.0 is to be released sept 12)

1535249151
andrewrk
it will probably be implemented as a builtin function, like these:

1535249194
andrewrk
and then also I'm guessing you will want to keep an eye on the SIMD issue as well:

1535249302
scientes
kristate, i'm just running into the same problems experimenting with tcp

1535249325
moxotter
andrewrk, so they are planned features, awesome.

1535249327
kristate
scientes: yeah -- I have udp and tcp

1535249437
kristate
conference room:

1535249744
kristate
scientes: what platform are you on? mac?

1535249762
scientes
I use ubuntu and debian

1535249782
kristate
okay

1535250178
kristate
scientes: your video is stalled -- framerate 1

1535250184
scientes
i can see that

1535250249
scientes
upload speed is only 10 mbps

1535250641
scientes
screen share only works for x11 windows

1535250644
scientes
not wayland

1535250688
kristate
scientes: okay

1535252167
kristate
scientes: CPU runs hot with screen sharing :-)

1535252561
kristate
ryanmtate: hi ryan

1535252567
kristate
ryanmtate: conference room:

1535252628
scientes
?

1535252684
scientes
is my sound working?

1535252693
scientes
i can hear you

1535258360
kristate
scientes: thanks for the conference call

1535258396
scientes
:)

1535269486
kristate


1535269818
kristate
andrewrk: are you awake?

1535269827
kristate
saw a commit 1 hour ago

1535279402
DutchGh0st
what do you think of this:

1535279433
DutchGh0st
it's goal is to kind of mimmic 'Traits' or 'Interfaces', or how you want to call it

1535279482
DutchGh0st
maybe require itself should @compileError if it fails to find the functions the 'Trait' specifies

1535285037
kristate
haha, just got a taste of stack traces on macos

1535285391
DutchGh0s
I have a struct, it has a function taking '*this',

1535285413
DutchGh0s
but whenever I call that function, it complains I call it with *const this, instead of *this

1535287705
kristate
DutchGh0s: got a gist or pastebin?

1535287715
DutchGh0s
2 seconds

1535287922
DutchGh0s
var nxt = self.iter.next() ?? return null; <-- does not work anymore?

1535288089
DutchGh0s
kristate: , check the 'repro' function:

1535288108
DutchGh0s
'var ptr = item.as_mut();' does not work there

1535288210
kristate
taking a look

1535288375
kristate
DutchGh0s: what version of zig are you working with?

1535288381
DutchGh0s
uhh

1535288393
DutchGh0s
zig-0.2.0+ad3af97d

1535288404
kristate
is that from git master ?

1535288409
DutchGh0s
not that old I believe

1535288430
DutchGh0s
its from the website that builds on each commit

1535288445
DutchGh0s
it was the newest build of like 3 weeks ago or something?

1535288507
kristate
I'm getting an assert from within the compiler

1535288538
DutchGh0s
now the thing is,

1535288546
DutchGh0s
if you copy the argument into a new variable

1535288550
DutchGh0s
and then call .as_mut()

1535288551
DutchGh0s
it works

1535288566
DutchGh0s
but that is a copy, I dont like copies

1535288649
kristate
Assertion failed: (const_val->special == ConstValSpecialStatic), function hash_const_val, file /Users/cfkk/Source/zig2/src/analyze.cpp, line 4686.

1535288689
kristate


1535288750
kristate
that is an old issue though

1535288769
kristate
DutchGh0s: you are not getting any sort of assert error on your build of zig?

1535288873
kristate
DutchGh0s: I don't think we have the logic inside of the compiler right now to do that sort of transformation in comptime -- but maybe you could use a builtin intrinsic

1535288914
DutchGh0s
error: expected type '*thingy', found '*const thingy'

1535288924
DutchGh0s
var ptr = item.as_mut();

1535288972
kristate
DutchGh0s: is that with repro ?

1535288980
kristate
On my build, I don't get an error :-)

1535288999
kristate
rather, I get a nasty assert, but the error is different

1535289062
DutchGh0s
yes, with repro

1535289094
kristate
DutchGh0s: what are you trying to accomplish?

1535289226
DutchGh0s
invent some kind of 'Trait' system, but without allocation and fully checked at comptime

1535289324
kristate
DutchGh0s: hmm, might be better to do these sort of things inside of the compiler

1535289335
DutchGh0s
but Im not a compiler hacker xD

1535289354
DutchGh0s
and maybe there are people who not like it

1535289423
kristate
DutchGh0s: it's not too hard :-) the world needs more compiler hackers

1535289460
kristate
DutchGh0s: you can learn a lot by looking at pull requests

1535290413
DutchGh0s
how do I unwrap a nullable

1535290951
DutchGh0s
oh, .?

1535290968
DutchGh0s
but how do I unwrap, or if null, return null ?

1535290978
DutchGh0s
that used to be 'something ?? return null'

1535291397
scientes
if (maybe_something) |something| { } else return null

1535291423
kristate
if (abc) |a| { //do something with `a` }

1535291479
kristate


1535292352
bodie_
fwiw, I figured out what I was doing wrong with LZ4.

1535292353
MajorLag
DutchGh0s: the `??` operator was replaced with `orelse`. `something orelese return null;`

1535292375
bodie_
The lz4.h interface doesn't support the streaming frame protocol, only the one in lz4_frame.h does.

1535292876
scientes
I still think its a bad idea to but so much extra data in a file that is mmap()ed

1535293254
kristate
scientes: morning

1535293265
rohlem
hiho

1535293318
rohlem
DutchGh0s: I think you're looking for 'orelse', shown in

1535293339
rohlem
const something = maybe_something orelse return null;

1535293668
rohlem
Someone else must have thought of this already, but how would #1403 / #1418 interoperate with `continue` statements?

1535293789
rohlem
Specifically identifiers declared after a `continue`, will using those be disallowed, or tracked as undefined behaviour?

1535293872
rohlem
(referring to

1535297838
DutchGh0s
mhhh

1535297842
DutchGh0s
okey this is weird

1535297852
DutchGh0s
I run build-exe

1535297858
DutchGh0s
but I dont get an exe xD

1535297932
kristate
DutchGh0s: not in ./zig-cache/ ?

1535297975
DutchGh0s
no

1535298152
DutchGh0s


1535298155
DutchGh0s
try it

1535298196
kristate
DutchGh0s: what's the command you are using, btw?

1535298253
kristate
DutchGh0s: I am getting a segfault

1535298303
kristate
DutchGh0s: you're like a natural fuzzer :)

1535298486
DutchGh0s
a segfault o.O

1535298501
DutchGh0s
..\zig-nightly2\zig-0.2.0+ad3af97d\zig.exe build-exe .\decorator.zig

1535298516
DutchGh0s
thats all

1535298578
kristate
DutchGh0s: hang on -- I am trying to push updates to

1535298629
DutchGh0s
maybe it does not like that .enumerate() takes any type by value

1535298688
kristate
DutchGh0s: I haven't looked at all of your code, but I did a backtrace on the compiler code and found a bug, so maybe we can fix that

1535298720
DutchGh0s
\o/

1535298765
DutchGh0s
but on windows it does not segfault, it just does...something, but doesnt create an executable

1535298932
kristate
okay, pushed it up:

1535298938
kristate
DutchGh0s: let me take a look

1535299036
DutchGh0s
mhh, another weird thing: when create a comptime range, and then calling .next() in a loop and printing the returned value, does not print

1535299341
DutchGh0s
comptime var enumer = Iterator(range(), usize).enumerate(r); while (r.foo()) |item| {             sum += item;         }<--- compiles

1535299353
DutchGh0s
but there is no .foo() method

1535300156
andrewrk
kristate, wow, just got the email about sponsorship!

1535300175
kristate
andrewrk: yeah man -- let's launch all the zig

1535300198
andrewrk
lets get your logo on ziglang.org

1535300222
kristate
andrewrk: we can talk about that later -- let's do something when we launch 0.3.0

1535300229
andrewrk
ok, deal

1535300240
kristate
I offered scientes a job to hack on zig and I want to support all of the zig guys.

1535300291
andrewrk
that's very exciting, congrats scientes

1535300310
kristate
andrewrk: the offer also stands to anyone hacking on zig

1535300328
kristate
filter is probably if they have commits in master

1535300335
DutchGh0s
is there a job as 'compiler breaker' ?

1535300357
andrewrk
DutchGh0s, that job becomes more valuable with the passing of time

1535300375
andrewrk
in other news, llvm7 branch passed all tests with llvm 7.0.0rc2 in debug mode

1535300428
kristate
andrewrk: got another patch to fix the bug that DutchGh0s just found

1535300572
DutchGh0s
what was the fault of it?

1535300604
kristate
/Users/cfkk/Source/zig2/build/ddd.zig:18:13: error: 'enumerate' depends on itself

1535300605
kristate
pub fn enumerate(self: SELF) Enumerate(SELF, Item) {

1535300624
DutchGh0s
because playing around a bit more, I can call 'comptime { require(Iterator(Iter, Iter), Iter) }', and it compiles fine

1535300658
DutchGh0s
aka, Iter would be a type that has a next function, that returns maybe itself ?

1535300665
DutchGh0s
which is totally not the case

1535300688
kristate


1535300705
DutchGh0s
enumerate depends on itself? huh?

1535300826
DutchGh0s
how does it depend on itself?

1535300905
kristate
DutchGh0s: can you clarify how you think it does not?

1535300929
DutchGh0s
well I have a function, Iterator, that returns a struct with 3 methods,

1535300965
DutchGh0s
.REQUIRE_next(), which you can see as a function that should be implemented to be an Iterator,

1535301005
DutchGh0s
a .enumerate() function, which returns whatever Enumerate() returns,

1535301030
kristate
DutchGh0s: if you can, best thing to try would be to pull-down my repo and checkout the const_ptr_pointee-deref-fix branch

1535301092
DutchGh0s
Enumerate() takes 2 comptimes, one to determine the type it calls .next() on, and another to know what the actual item type is

1535301111
DutchGh0s
where the item type is the type returned by .next()

1535301136
DutchGh0s
Ill download it once it's build

1535301262
DutchGh0s
its really just the normal Iterator-like stuff

1535301383
DutchGh0s
oh I see

1535301389
DutchGh0s
maybe its a problem with 'this',

1535304300
kristate
andrewrk:

1535304665
MajorLag
andrewrk, did you see rohlem's question about #1403 and `continue`? I am also curious about this.

1535305067
andrewrk
kristate, 68e279 should trip the assert for the bug. do we have a test case?

1535305106
kristate
andrewrk: the test case was/is a somewhat long file from DutchGh0s

1535305117
kristate
I will post it in its entirety

1535305242
kristate
andrewrk: posted

1535305456
andrewrk
kristate, here's the steps to fix it: 1. start with DutchGh0s big file and reproduce it. 2. delete stuff from it until you have a minimal test case 3. fix the root cause, which is causing the value to be null 4. add test case to test/behavior.zig

1535305483
andrewrk
no worries if that's too much work, I'll take it on

1535305501
kristate
andrewrk: yes, I agree with you -- but it is hard to get your head around :-)

1535305506
kristate
what to cut

1535305524
kristate
andrewrk: if you can take care of it, that would be great

1535305531
kristate
I am working on #1223

1535305546
DutchGh0st
Ill try and reduce

1535305558
DutchGh0st
if that helps

1535305564
andrewrk
DutchGh0st, that would help a lot. if you can't do that, that's ok too, I would accept a bug report with your big test case too

1535305579
kristate
DutchGh0st: andrewrk that would be hard for you/him

1535305590
kristate
andrewrk: he is on windows and doesn't have a master build

1535305604
DutchGh0st
I could download the latest succedfull build

1535305608
DutchGh0st
and I have the 2.0 build

1535305629
DutchGh0st
I can at least try and reduce the Zig source :)

1535305692
andrewrk
I'm going to do social activities today, might be around later

1535305696
andrewrk
bye

1535305730
wink_
I tried to compile examples/hello_libc.zig and had to make some changes to do so. I had to remove the parameters, change return to u8 and return a positive value. Want me to create a PR or is it supposed to work as it and I've done something wrong?

1535306426
DutchGh0st
okey I got it to a minimal repro

1535306439
kristate
DutchGh0st: cool -- post it for me please

1535306443
DutchGh0st
but when removing a comptime block, it doesnt compile

1535306497
DutchGh0st


1535306519
DutchGh0st
removing the comptime { require(....) } from the Enumerate() function, does not compile

1535306524
kristate
DutchGh0st: hmm, can you get it down to <= 10 lines?

1535306531
DutchGh0st
10!

1535306532
DutchGh0st
uf

1535306546
DutchGh0st
maybe xD

1535306555
DutchGh0st
let met check something really quickly

1535306579
kristate
thanks

1535306605
DutchGh0st
10 lines is verry little

1535306670
kristate
it needs to fit in our test suite

1535307002
DutchGh0st
nope

1535307006
DutchGh0st
cant really make it shorter

1535307693
DutchGh0st
actually

1535307697
DutchGh0st
hehehe

1535308177
DutchGh0st
almost 10

1535308256
kristate
cool

1535308318
DutchGh0st
18

1535308320
DutchGh0st
is that fine?

1535308344
DutchGh0st


1535308347
kristate
let me see them -- maybe we can shorten it

1535308400
kristate
not bad

1535308417
DutchGh0st
line 6 should fail actuallyt

1535308440
DutchGh0st
I do not call the function Wrapper() there

1535308454
DutchGh0st
while the return type is 'Wrapper()', which is some type

1535308726
DutchGh0st
I dont know how to make it shorter :3

1535309068
kristate
going to take a break

1535309078
kristate
3:44 am in Japan

1535309309
DutchGh0st
I made it 13 lines

1535309314
DutchGh0st
Oh!

1535309315
DutchGh0st
wow

1535309323
DutchGh0st
thats the other side of the world....

1535310372
DutchGh0st


1535313094
DutchGh0st
kristate: , 5 lines , well...8 if you count the main function

1535314806
scientes


1535315058
scientes
I think its a bug in strip

1535315071
scientes
strip removes all the symbols

1535326479
wink_
I found my problem compiling hello_libc.zig, I needed to compile using --library c like so: "$ zig build-exe --library c example/hello_world/hello_libc.zig".

