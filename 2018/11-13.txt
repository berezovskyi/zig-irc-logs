1542067936
benjikun
I wish there was more learning materials for zig

1542068051
benjikun
I mean, I can clearly see why there isn't; that would be a lot of work and sorta pointless at this stage where everything is changing

1542069165
hryx
The latest published VS Code extension is behind the current on GitHub -- I'd love if someone could publish the more recent changes (`orelse` and @ function coloring)

1542069199
hryx
Anyone here in charge of it? According to the extension metadata, that's tiehuis

1542082481
tiehuis
hryx: sorry i've been a bit out of action, just updated the repository and will try keep it more up to date

1542082535
tiehuis
also, probably will be back in a few more weeks with more time, bit tired of programming lately but if anyone makes any PR's on my repos i'll try get to them quickly anyway

1542087821
hryx
Wonderful, thanks tiehuis!

1542091249
daurnimator
Ronja: why would you ever need to slice a string by unicode character offset (serious question)

1542091285
daurnimator
I'd argue that it's a primitive almost no one needs (exceptions are locale conversion utilities)

1542091466
Ronja
maybe I'm writing a library to conjugate Finnish verbs

1542091935
daurnimator
Ronja: then you'll want to work in graphemes, not codepoints

1542095125
Ronja
technically yes, but in the case of Finnish I am fortunate in the sense that graphemes == codepoints :)

1542095205
Ronja
and I do recognize that is ultimately the same bias that English speakers have in being able to get pretty far with just ASCII

1542105472
Hejsil
Grammar branch done!

1542106035
hryx
\o/

1542115145
MajorLag
Hejsil, is there a summary of the grammar changes somewhere?

1542115169
Hejsil
All that changed from 0.3.0 is error->anyerror

1542115177
Hejsil
Expect for error sets and error.Name

1542115241
MajorLag
ok, so other than that, it was just formalizing the need for parans to disambiguate certain expressions?

1542115245
Hejsil
This new grammar allows fn a() if (something) A else B { } to be parsed as expected without any notable changes to the current syntax

1542115293
Hejsil
The grammar seperates Exprs and TypeExprs in a way that allows this to work

1542115486
Hejsil
Ooh, just found a mistake somewhere. This parses, which it shouldn't fn a() {}

1542115587
Hejsil
It's a bug in the impl somewhere it seems

1542120841
bheads
Hejsil, nice!!!  did you switch it to PEG?

1542121124
Hejsil
I did

1542121283
Hejsil
Everyone can be productive again, now that the evil villain "Hejsil" is not gonna break their code (for a while)

1542121536
bheads
lol, dont worry we all love you :)

1542122669
bheads
Looks like the docs need to be updated again

1542123495
oats
does andrewrk ever hang out in here?

1542123814
oats
just out of curiosity

1542124745
nbjoerg
yes

1542124768
nbjoerg
he should be waking up nowish too :)

1542124907
mattdavies
Hi.  I am messing with Zig to try and see if it is usable for me.  I am having difficulty finding any documentation for it.  Even looking at the source code is not giving up its secrets.

1542124914
mattdavies
For example: std.fmt.format

1542124919
mattdavies
I am not sure how to use it

1542124932
mattdavies
Some of its parameters are a mystery to me

1542124945
mattdavies
Is there any documentation, or library of examples?

1542125095
Hejsil
mattdavies, have you seen std.debug.warn. This is a simpler interface for printing to stderr

1542125125
Hejsil
std.fmt.format is a generic function for formatting

1542125151
Hejsil
it doesn't know what it's printing to, which is why you need to provide a write fn as an argument

1542125152
mattdavies
I have seen warn but it outputs to stderr

1542125158
Hejsil
std.debug.warn wraps this function

1542125180
Hejsil
Sec, i'll find an example for stdout

1542125187
mattdavies
So you're suggesting I should look at the source for warn

1542125191
mattdavies
That seems like a good idea

1542125227
mattdavies
I've seen "std.io.getStdOut().write", but I want to pass a formatted string to it

1542125501
Hejsil
If you use master, then you can do std.io.getStdOut().outStream().stream.print("{}", "Hello World")

1542125517
mattdavies
wow lol

1542125527
mattdavies
any chance for a std.out :)?

1542125533
Hejsil
You should probably split it up :)

1542125629
Hejsil
std.debug.warn is brief because you probably don't care if you're verbose output failes to print

1542125633
mattdavies
I am getting an error that WindowsGetStdHandleErrs!File does not support field access on the outStream call

1542125647
Hejsil
Sorry, mine was a shortende version, lol

1542125676
Hejsil
Here is how you'd probably do it

1542125676
Hejsil


1542125837
Hejsil
bheads, I think the docs are outdated because the windows build fails

1542125853
mattdavies
ok, got it working

1542125857
mattdavies
Settled on this:

1542125860
mattdavies
fn out(comptime fmt: []const u8, args: ...) !void {     var stdout_file = try std.io.getStdOut();     var stdout_out_stream = stdout_file.outStream();     var stdout = &stdout_out_stream.stream;      _ = stdout.print(fmt, args); }

1542125871
mattdavies
fn out(comptime fmt: []const u8, args: ...) !void {     var stdout_file = try std.io.getStdOut();     var stdout_out_stream = stdout_file.outStream();     var stdout = &stdout_out_stream.stream;      _ = stdout.print(fmt, args); }

1542125885
mattdavies
Not sure how to show code in IRC (never use it)

1542125912
mattdavies
So I was able to do this: try out("Hello {}", "World!");

1542125963
Hejsil
I see, yea you can do that. Idk if there is a cost assosiated with getting the handle every single time :)

1542126034
Hejsil
The reason we don't have such an out fn, is because on windows getStdOut can fail, and we don't want to have every call to print have that error in its signature

1542126042
Hejsil
But feel free to have your own helper :)

1542126164
mattdavies
But isn't that the same for debug.warn?

1542126175
mattdavies
surely getStdErr can fail too?

1542126182
mattdavies
Maybe a std.debug.out?

1542126243
mattdavies
Anyway... my helper will be just fine.  The problem I see is that others trying to get to grips with Zig will hit the same issues

1542126272
mattdavies
I hope the documentation comes soon though, for Zig's sake

1542126311
mattdavies
I am porting a windows OpenGL application to try to get to grips with it

1542126348
mattdavies
So far, the win32 api coverage is good.

1542126359
mattdavies
I've yet to attempt to try OpenGL yet

1542126361
mattdavies
I will get there

1542126384
mattdavies
BTW, I am a profession video game developer, so I am evaluating it at this point

1542126475
bheads
nice, I think Andrew's plan is to have the stage 2 compiler create the stdlib docs.

1542126486
bheads
plus the stdlib is far from final

1542126656
bheads
mattdavies, are you one of the FTL devs?

1542126965
Hejsil
mattdavies, true, but std.debug.warn can't fail at all, so there is that :)

1542126979
Hejsil
Maybe we could have std.debug.out, which is the same for stdout

1542127032
Hejsil
But if you'r program can't output its results, then it probably should handle that somehow (exit with 1, at least)

1542127036
Hejsil
your*

1542127043
mattdavies
No I don't work on FTL

1542127073
mattdavies
Oh I agree that a out function outside std.debug should handle all errors

1542127103
mattdavies
but an equivalent of std.debug.warn for stdout would be nice.

1542127112
Hejsil
Hmmm, maybe

1542127131
mattdavies
By using std.debug, you're saying I don't care if this fails

1542127155
mattdavies
I don't have strong opinions either way tbh

1542127162
mattdavies
I have my helper and that's good enough

1542127163
bheads
+1 on std.debug.out

1542127163
Hejsil
True, but stderr is not really meant to be used for output anyways, so it matters less

1542127172
mattdavies
that's true

1542127184
Hejsil
Idk, I'm sure andrewrk have more on this

1542127186
Hejsil
I don'

1542127187
mattdavies
Some IDEs can grab stdout

1542127192
mattdavies
and not stderr

1542127205
Hejsil
t think i'd be to bad to std.debug.out

1542127221
bheads
maybe have std.debug be a nop in release mode

1542127222
mattdavies
:)

1542127223
Hejsil
Oooh, really

1542127236
Hejsil
And terminal can do it all!

1542127303
Hejsil
Hmmm, I don't think we want std.debug.out because some IDEs have bugs :)

1542127318
Hejsil
Sound like a bad reason to have a fn in the standard lib

1542127330
bheads
very true

1542127337
bheads
that should be an external lib

1542127584
bheads
Hejsil, do you think the new parser will support if statments without parans?

1542127622
Hejsil
No

1542127728
bheads
oh well, not really a big loss

1542132041
MajorLag
Wow, align really doesn't work the way I would expect it to. It's very limited.

1542132228
MajorLag
I feel like I should be able to do something like `cosnt X = align(16) u32;` and get a type 'X' that is always guaranteed to be aligned to 16, but even if I could express that to the compiler it just silently rounds alignment down to @sizeOf(T) anyway.

1542132302
MajorLag
So dealing with SIMD types requires ugly hacks, like using an allocator to ensure alignment, or the casting that DutchGh0st was doing.

1542142978
oconnor0
What is the motivation for changing `struct.{ }` to `struct { }`? I kind of liked the dot version, not that you should care what I think. :)

1542143112
benjikun
IIRC he originally changed it to the dot version because of some parsing problem but never liked the way it looked

1542143130
benjikun
I think I heard Andrew say that in one of the livestreams

1542143845
oats
oconnor0: I don't think your opinion is the one most people had :P

1542143879
Hejsil
I think most people want to type less, when more typing is not more readable

1542143904
benjikun
Isn't that the same amount of typing?

1542143913
oats
I still don't like the .* deref op, but I see why it's necessary :<

1542143951
Hejsil
Well, for initializers it's one more stroke (if you follow the recommended styling)

1542143963
Hejsil
Anyways, no one likes it, we changed it back

1542144016
Hejsil
Or, we changed the grammar so that we could change it back

1542144161
benjikun
Is there a way to use unions like how they are in C

1542144175
benjikun
where it isn't just 1 active field

1542144195
Hejsil
Use and extern union

1542144220
oconnor0
Isn't space vs dot the same amount of typing? ;)

1542144237
Hejsil
Shhhh~

1542144250
Hejsil
I'm just a little stupid right now

1542144277
benjikun
lol

1542144531
benjikun
Why does extern work the way it does with `extern union`

1542144613
Hejsil
All externs follow the C abi, so they'll have the same layout and safety as those types

1542144670
benjikun
hm

1542145337
MajorLag
I like the .* deref op myself. Unambiguous, and the postfix notations makes multiple derefs easer to both write and read.

1542145450
MajorLag
struct.{ was annoying at first because I use Allman bracing, but once I realized whitespace was insignificant I didn't mind it at all.

1542147032
benjikun
does anyone know of a zig program that uses arraylists so I could learn about using them from it?

1542147378
oats
MajorLag: so are multiple derefs like this: foo.*.*

1542147427
presiden
looks like an emoji

1542150038
benjikun
I'm really looking forward to having the html doc generated for the std lib

